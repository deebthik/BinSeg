address|type|disassembly|bytes
32768|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
32772|data|DCB 1; File class: 32-bit|1
32773|data|DCB 1; Data encoding: little-endian|1
32774|data|DCB 1; File version|1
32775|data|DCB 0; OS/ABI: UNIX System V ABI|0
32776|data|DCB 0; ABI Version|0
32777|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
32784|data|DCW 2; File type: Executable|2-0
32786|data|DCW 0x28; Machine: ARM|40-0
32788|data|DCD 1; File version|1-0-0-0
32792|data|DCD start+1; Entry point|193-149-0-0
32796|data|DCD 0x34; PHT file offset|52-0-0-0
32800|data|DCD 0x75F0; SHT file offset|240-117-0-0
32804|data|DCD 0x5000002; Processor-specific flags|2-0-0-5
32808|data|DCW 0x34; ELF header size|52-0
32810|data|DCW 0x20; PHT entry size|32-0
32812|data|DCW 8; Number of entries in PHT|8-0
32814|data|DCW 0x28; SHT entry size|40-0
32816|data|DCW 0x1C; Number of entries in SHT|28-0
32818|data|DCW 0x1B; SHT entry index for string table|27-0
32820|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
32824|data|DCD 0x7274; File offset|116-114-0-0
32828|data|DCD unk_F274; Virtual address|116-242-0-0
32832|data|DCD 0xF274; Physical address|116-242-0-0
32836|data|DCD 8; Size in file image|8-0-0-0
32840|data|DCD 8; Size in memory image|8-0-0-0
32844|data|DCD 4; Flags|4-0-0-0
32848|data|DCD 4; Alignment|4-0-0-0
32852|data|DCD 6; Type: PHDR|6-0-0-0
32856|data|DCD 0x34; File offset|52-0-0-0
32860|data|DCD dword_8034; Virtual address|52-128-0-0
32864|data|DCD 0x8034; Physical address|52-128-0-0
32868|data|DCD 0x100; Size in file image|0-1-0-0
32872|data|DCD 0x100; Size in memory image|0-1-0-0
32876|data|DCD 5; Flags|5-0-0-0
32880|data|DCD 4; Alignment|4-0-0-0
32884|data|DCD 3; Type: INTERP|3-0-0-0
32888|data|DCD 0x134; File offset|52-1-0-0
32892|data|DCD aLibArmLinuxGnu; Virtual address|52-129-0-0
32896|data|DCD 0x8134; Physical address|52-129-0-0
32900|data|DCD 0x27; Size in file image|39-0-0-0
32904|data|DCD 0x27; Size in memory image|39-0-0-0
32908|data|DCD 4; Flags|4-0-0-0
32912|data|DCD 1; Alignment|1-0-0-0
32916|data|DCD 1; Type: LOAD|1-0-0-0
32920|data|DCD 0; File offset|0-0-0-0
32924|data|DCD dword_8000; Virtual address|0-128-0-0
32928|data|DCD 0x8000; Physical address|0-128-0-0
32932|data|DCD 0x7280; Size in file image|128-114-0-0
32936|data|DCD 0x7280; Size in memory image|128-114-0-0
32940|data|DCD 5; Flags|5-0-0-0
32944|data|DCD 0x8000; Alignment|0-128-0-0
32948|data|DCD 1; Type: LOAD|1-0-0-0
32952|data|DCD 0x7280; File offset|128-114-0-0
32956|data|DCD off_17280; Virtual address|128-114-1-0
32960|data|DCD 0x17280; Physical address|128-114-1-0
32964|data|DCD 0x24C; Size in file image|76-2-0-0
32968|data|DCD 0x394; Size in memory image|148-3-0-0
32972|data|DCD 6; Flags|6-0-0-0
32976|data|DCD 0x8000; Alignment|0-128-0-0
32980|data|DCD 2; Type: DYNAMIC|2-0-0-0
32984|data|DCD 0x728C; File offset|140-114-0-0
32988|data|DCD stru_1728C; Virtual address|140-114-1-0
32992|data|DCD 0x1728C; Physical address|140-114-1-0
32996|data|DCD 0x108; Size in file image|8-1-0-0
33000|data|DCD 0x108; Size in memory image|8-1-0-0
33004|data|DCD 6; Flags|6-0-0-0
33008|data|DCD 4; Alignment|4-0-0-0
33012|data|DCD 4; Type: NOTE|4-0-0-0
33016|data|DCD 0x15C; File offset|92-1-0-0
33020|data|DCD dword_815C; Virtual address|92-129-0-0
33024|data|DCD 0x815C; Physical address|92-129-0-0
33028|data|DCD 0x44; Size in file image|68-0-0-0
33032|data|DCD 0x44; Size in memory image|68-0-0-0
33036|data|DCD 4; Flags|4-0-0-0
33040|data|DCD 4; Alignment|4-0-0-0
33044|data|DCD 0x6474E551; Type: STACK|81-229-116-100
33048|data|DCD 0; File offset|0-0-0-0
33052|data|DCD 0; Virtual address|0-0-0-0
33056|data|DCD 0; Physical address|0-0-0-0
33060|data|DCD 0; Size in file image|0-0-0-0
33064|data|DCD 0; Size in memory image|0-0-0-0
33068|data|DCD 6; Flags|6-0-0-0
33072|data|DCD 4; Alignment|4-0-0-0
33076|data|DCB "/lib/arm-linux-gnueabihf/ld-linux.so.3",0|47-108-105-98-47-97-114-109-45-108-105-110-117-120-45-103-110-117-101-97-98-105-104-102-47-108-100-45-108-105-110-117-120-46-115-111-46-51-0
33115|data|DCB 0|0
33116|data|DCD 4; Name Size|4-0-0-0
33120|data|DCD 0x10; Desc Size|16-0-0-0
33124|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
33128|data|DCB "GNU",0; Name|71-78-85-0
33132|data|DCD 0, 2, 6, 0x1A; ABI: Linux 2.6.26|0-0-0-0-2-0-0-0-6-0-0-0-26-0-0-0
33148|data|DCD 4; Name Size|4-0-0-0
33152|data|DCD 0x14; Desc Size|20-0-0-0
33156|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
33160|data|DCB "GNU",0; Name|71-78-85-0
33164|data|DCB 0xCF, 0xCA, 0xCE, 0x85, 0x7D, 0x5A, 0x8F, 0xE5, 0x61; Desc|207-202-206-133-125-90-143-229-97-66-131-201-69-33-136-46-97-211-198-115
33184|data|DCD 0x43|67-0-0-0
33188|data|DCD 0x50|80-0-0-0
33192|data|DCD 0, 0x30, 0, 0x23, 5, 0x4B, 0x15, 0x26, 0, 0x10, 0x3C|0-0-0-0-48-0-0-0-0-0-0-0-35-0-0-0-5-0-0-0-75-0-0-0-21-0-0-0-38-0-0-0-0-0-0-0-16-0-0-0-60-0-0-0-14-0-0-0-0-0-0-0-0-0-0-0-6-0-0-0-32-0-0-0-0-0-0-0-0-0-0-0-62-0-0-0-29-0-0-0-0-0-0-0-19-0-0-0-24-0-0-0-71-0-0-0-0-0-0-0-9-0-0-0-36-0-0-0-0-0-0-0-43-0-0-0-64-0-0-0-79-0-0-0-0-0-0-0-17-0-0-0-59-0-0-0-39-0-0-0-51-0-0-0-61-0-0-0-11-0-0-0-65-0-0-0-58-0-0-0-0-0-0-0-0-0-0-0-52-0-0-0-66-0-0-0-0-0-0-0-12-0-0-0-0-0-0-0-0-0-0-0-4-0-0-0-78-0-0-0-0-0-0-0-22-0-0-0-0-0-0-0-0-0-0-0-40-0-0-0-23-0-0-0-54-0-0-0-57-0-0-0-10-0-0-0-55-0-0-0-3-0-0-0-44-0-0-0-13-0-0-0-0-0-0-0-63-0-0-0-0-0-0-0-56-0-0-0
33460|data|DCD 0, 0, 0, 0x2A, 0, 0x43, 7, 0, 0, 0, 0, 0, 0x31, 0x45|0-0-0-0-0-0-0-0-0-0-0-0-42-0-0-0-0-0-0-0-67-0-0-0-7-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-49-0-0-0-69-0-0-0-33-0-0-0-0-0-0-0-50-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-77-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-37-0-0-0-27-0-0-0-0-0-0-0-26-0-0-0-0-0-0-0-31-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-76-0-0-0-0-0-0-0-15-0-0-0-47-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-20-0-0-0-30-0-0-0-0-0-0-0-73-0-0-0-0-0-0-0-2-0-0-0-0-0-0-0-46-0-0-0-1-0-0-0-0-0-0-0-28-0-0-0-53-0-0-0-45-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-25-0-0-0-0-0-0-0-68-0-0-0-0-0-0-0-72-0-0-0-0-0-0-0-8-0-0-0-70-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-34-0-0-0-0-0-0-0-0-0-0-0-74-0-0-0-41-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33780|data|DCD 0x43|67-0-0-0
33784|data|DCD 3|3-0-0-0
33788|data|DCD 0x10|16-0-0-0
33792|data|DCD 9|9-0-0-0
33796|data|DCD 0xE081A4, 0x970B6085, 0x51001840, 0x90410408, 0x55100082|164-129-224-0-133-96-11-151-64-24-0-81-8-4-65-144-130-0-16-85-32-32-7-129-128-12-64-0-16-33-68-194-131-136-130-40-16-69-64-116-78-34-129-5-208-4-64-32-160-0-1-100-72-68-162-9-98-2-128-145-72-6-24-65
33860|data|DCD 0, 0, 3, 0, 0, 0, 4, 5, 7, 8, 0xD, 0, 0xF, 0x11, 0x13|0-0-0-0-0-0-0-0-3-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-4-0-0-0-5-0-0-0-7-0-0-0-8-0-0-0-13-0-0-0-0-0-0-0-15-0-0-0-17-0-0-0-19-0-0-0-20-0-0-0-0-0-0-0-0-0-0-0-22-0-0-0-24-0-0-0-26-0-0-0-27-0-0-0-30-0-0-0-33-0-0-0-34-0-0-0-0-0-0-0-36-0-0-0-37-0-0-0-39-0-0-0-40-0-0-0-41-0-0-0-0-0-0-0-43-0-0-0-44-0-0-0-0-0-0-0-45-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-46-0-0-0-47-0-0-0-0-0-0-0-48-0-0-0-49-0-0-0-0-0-0-0-52-0-0-0-0-0-0-0-56-0-0-0-57-0-0-0-58-0-0-0-59-0-0-0-61-0-0-0-0-0-0-0-0-0-0-0-62-0-0-0-63-0-0-0-64-0-0-0-65-0-0-0-66-0-0-0-68-0-0-0-70-0-0-0-73-0-0-0-74-0-0-0-75-0-0-0-76-0-0-0-77-0-0-0-0-0-0-0
34128|data|DCD 0x3E48FCE9, 0xF11ED7D, 0xFE76EA16, 0x1C8BF239, 0x4A6D357|233-252-72-62-125-237-17-15-22-234-118-254-57-242-139-28-87-211-166-4-98-62-180-100-44-50-64-253-242-190-71-62-102-85-97-16-5-108-178-205-60-173-57-13-41-29-140-28-172-112-14-175-1-35-249-164-80-181-168-16-243-77-36-43-149-120-158-124-46-78-61-246-23-227-63-15-178-162-247-18-129-116-130-13-50-196-247-18-35-190-15-175-235-211-239-14-144-117-130-13-174-111-136-11-33-98-100-7-134-240-150-124-88-239-151-121-95-150-147-28-177-74-69-75-8-172-249-143-27-159-214-189-185-141-241-14-198-195-238-28-185-43-107-21-17-123-156-124-191-218-87-27-254-199-60-16-103-73-73-34-215-148-147-28-135-75-133-230-65-77-157-124-99-172-97-160-119-84-60-148-71-88-55-15-156-187-147-28-92-240-108-15-199-14-224-61-222-205-185-251-62-249-255-188-248-44-88-190-63-126-150-124-37-117-130-13-237-136-101-7-57-64-12-175-42-125-27-232-67-69-213-236-167-71-115-4-159-252-154-156-201-57-64-31-187-227-146-124-125-96-156-124-244-241-171-186-87-219-147-28-48-184-130-13-7-174-213-39-186-149-147-28-246-228-16-209-1-175-52-232-197-111-73-62-45-180-56-82-203-150-147-28-159-251-110-15-14-132-29-230-216-113-88-28-11-15-181-165
34436|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
34452|data|Elf32_Sym <aGmonStart - byte_8B84, 0, 0, 0x20, 0, 0>; "__gmon_start__"|21-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
34468|data|Elf32_Sym <aJvRegisterclas - byte_8B84, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|36-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
34484|data|Elf32_Sym <aRegexec - byte_8B84, regexec, 0, 0x12, 0, 0>; "regexec"|229-0-0-0-28-148-0-0-0-0-0-0-18-0-0-0
34500|data|Elf32_Sym <aAbort - byte_8B84, abort, 0, 0x12, 0, 0>; "abort"|46-1-0-0-24-146-0-0-0-0-0-0-18-0-0-0
34516|data|Elf32_Sym <aFwrite - byte_8B84, fwrite, 0, 0x12, 0, 0>; "fwrite"|22-2-0-0-164-147-0-0-0-0-0-0-18-0-0-0
34532|data|Elf32_Sym <aStderr - byte_8B84, stderr, 4, 0x11, 0, 0x19>; "stderr"|3-2-0-0-232-116-1-0-4-0-0-0-17-0-25-0
34548|data|Elf32_Sym <aTcgetattr - byte_8B84, tcgetattr, 0, 0x12, 0, 0>; "tcgetattr"|73-2-0-0-20-147-0-0-0-0-0-0-18-0-0-0
34564|data|Elf32_Sym <aSigemptyset - byte_8B84, sigemptyset, 0, 0x12, 0, 0>; "sigemptyset"|99-1-0-0-244-145-0-0-0-0-0-0-18-0-0-0
34580|data|Elf32_Sym <aFflush - byte_8B84, fflush, 0, 0x12, 0, 0>; "fflush"|187-0-0-0-32-147-0-0-0-0-0-0-18-0-0-0
34596|data|Elf32_Sym <aRegcomp - byte_8B84, regcomp, 0, 0x12, 0, 0>; "regcomp"|244-1-0-0-44-147-0-0-0-0-0-0-18-0-0-0
34612|data|Elf32_Sym <aStdin - byte_8B84, stdin, 4, 0x11, 0, 0x19>; "stdin"|52-1-0-0-224-116-1-0-4-0-0-0-17-0-25-0
34628|data|Elf32_Sym <aStrdup - byte_8B84, __strdup, 0, 0x12, 0, 0>; "__strdup"|237-0-0-0-152-148-0-0-0-0-0-0-18-0-0-0
34644|data|Elf32_Sym <aMalloc - byte_8B84, malloc, 0, 0x12, 0, 0>; "malloc"|216-1-0-0-236-147-0-0-0-0-0-0-18-0-0-0
34660|data|Elf32_Sym <aStdout - byte_8B84, stdout, 4, 0x11, 0, 0x19>; "stdout"|185-1-0-0-228-116-1-0-4-0-0-0-17-0-25-0
34676|data|Elf32_Sym <aStrrchr - byte_8B84, strrchr, 0, 0x12, 0, 0>; "strrchr"|221-0-0-0-148-146-0-0-0-0-0-0-18-0-0-0
34692|data|Elf32_Sym <aErrnoLocation - byte_8B84, __errno_location, 0, 0x12, 0, \; "__errno_location"|125-1-0-0-200-148-0-0-0-0-0-0-18-0-0-0
34708|data|Elf32_Sym <aFwrite+1 - byte_8B84, write, 0, 0x12, 0, 0>; "write"|23-2-0-0-228-146-0-0-0-0-0-0-18-0-0-0
34724|data|Elf32_Sym <aCurlEasyCleanu - byte_8B84, curl_easy_cleanup, 0, 0x12, 0,\; "curl_easy_cleanup"|90-0-0-0-212-147-0-0-0-0-0-0-18-0-0-0
34740|data|Elf32_Sym <aCtime+1 - byte_8B84, time, 0, 0x12, 0, 0>; "time"|180-1-0-0-176-147-0-0-0-0-0-0-18-0-0-0
34756|data|Elf32_Sym <aLibcStartMain - byte_8B84, __libc_start_main, 0, 0x12, 0, \; "__libc_start_main"|113-2-0-0-60-146-0-0-0-0-0-0-18-0-0-0
34772|data|Elf32_Sym <aCtime - byte_8B84, ctime, 0, 0x12, 0, 0>; "ctime"|179-1-0-0-128-147-0-0-0-0-0-0-18-0-0-0
34788|data|Elf32_Sym <aOptarg - byte_8B84, optarg, 4, 0x11, 0, 0x19>; "optarg"|252-1-0-0-236-116-1-0-4-0-0-0-17-0-25-0
34804|data|Elf32_Sym <aMemchr - byte_8B84, memchr, 0, 0x12, 0, 0>; "memchr"|58-1-0-0-164-148-0-0-0-0-0-0-18-0-0-0
34820|data|Elf32_Sym <aOptind - byte_8B84, optind, 4, 0x11, 0, 0x19>; "optind"|214-0-0-0-208-116-1-0-4-0-0-0-17-0-25-0
34836|data|Elf32_Sym <aStrtoul - byte_8B84, strtoul, 0, 0x12, 0, 0>; "strtoul"|208-1-0-0-68-147-0-0-0-0-0-0-18-0-0-0
34852|data|Elf32_Sym <aFini - byte_8B84, .term_proc+1, 0, 0x12, 0, 0xF>; "_fini"|163-2-0-0-1-226-0-0-0-0-0-0-18-0-15-0
34868|data|Elf32_Sym <aMemcpy - byte_8B84, memcpy, 0, 0x12, 0, 0>; "memcpy"|201-1-0-0-92-147-0-0-0-0-0-0-18-0-0-0
34884|data|Elf32_Sym <aStderr+3 - byte_8B84, err+1, 0x1C, 0x12, 0, 0xE>; "err"|6-2-0-0-213-156-0-0-28-0-0-0-18-0-14-0
34900|data|Elf32_Sym <aStackChkGuard - byte_8B84, __stack_chk_guard, 4, 0x11, 0, \; "__stack_chk_guard"|145-2-0-0-216-116-1-0-4-0-0-0-17-0-25-0
34916|data|Elf32_Sym <aRegfree+3 - byte_8B84, free, 0, 0x12, 0, 0>; "free"|16-1-0-0-204-146-0-0-0-0-0-0-18-0-0-0
34932|data|Elf32_Sym <aEnd - byte_8B84, _end_0, 0, 0x10, 0, 0xFFF1>; "__end__"|214-2-0-0-20-118-1-0-0-0-0-0-16-0-241-255
34948|data|Elf32_Sym <aStrcmp - byte_8B84, strcmp, 0, 0x12, 0, 0>; "strcmp"|97-2-0-0-176-148-0-0-0-0-0-0-18-0-0-0
34964|data|Elf32_Sym <aAssertFail - byte_8B84, __assert_fail, 0, 0x12, 0, 0>; "__assert_fail"|65-1-0-0-160-146-0-0-0-0-0-0-18-0-0-0
34980|data|Elf32_Sym <aStrerror - byte_8B84, strerror, 0, 0x12, 0, 0>; "strerror"|104-2-0-0-0-146-0-0-0-0-0-0-18-0-0-0
34996|data|Elf32_Sym <aMemmove - byte_8B84, memmove, 0, 0x12, 0, 0>; "memmove"|89-2-0-0-52-148-0-0-0-0-0-0-18-0-0-0
35012|data|Elf32_Sym <aCurlGlobalInit+0xB - byte_8B84, .init_proc+1, 0, 0x12, 0, \; "_init"|67-0-0-0-201-145-0-0-0-0-0-0-18-0-12-0
35028|data|Elf32_Sym <aSyslog - byte_8B84, syslog, 0, 0x12, 0, 0>; "syslog"|79-1-0-0-48-146-0-0-0-0-0-0-18-0-0-0
35044|data|Elf32_Sym <aFprintf+1 - byte_8B84, printf, 0, 0x12, 0, 0>; "printf"|60-2-0-0-116-147-0-0-0-0-0-0-18-0-0-0
35060|data|Elf32_Sym <aPuts - byte_8B84, puts, 0, 0x12, 0, 0>; "puts"|8-1-0-0-68-148-0-0-0-0-0-0-18-0-0-0
35076|data|Elf32_Sym <aBssEnd - byte_8B84, _end_0, 0, 0x10, 0, 0xFFF1>; "__bss_end__"|202-2-0-0-20-118-1-0-0-0-0-0-16-0-241-255
35092|data|Elf32_Sym <aQsort - byte_8B84, qsort, 0, 0x12, 0, 0>; "qsort"|67-2-0-0-232-145-0-0-0-0-0-0-18-0-0-0
35108|data|Elf32_Sym <aCtypeBLoc - byte_8B84, __ctype_b_loc, 0, 0x12, 0, 0>; "__ctype_b_loc"|230-1-0-0-200-147-0-0-0-0-0-0-18-0-0-0
35124|data|Elf32_Sym <aStrcat - byte_8B84, strcat, 0, 0x12, 0, 0>; "strcat"|223-1-0-0-40-148-0-0-0-0-0-0-18-0-0-0
35140|data|Elf32_Sym <aGettimeofday - byte_8B84, gettimeofday, 0, 0x12, 0, 0>; "gettimeofday"|29-2-0-0-8-147-0-0-0-0-0-0-18-0-0-0
35156|data|Elf32_Sym <aRead - byte_8B84, read, 0, 0x12, 0, 0>; "read"|152-1-0-0-216-146-0-0-0-0-0-0-18-0-0-0
35172|data|Elf32_Sym <aTcsetattr - byte_8B84, tcsetattr, 0, 0x12, 0, 0>; "tcsetattr"|142-1-0-0-92-148-0-0-0-0-0-0-18-0-0-0
35188|data|Elf32_Sym <aBssStart_0 - byte_8B84, unk_174CC, 0, 0x10, 0, 0xFFF1>; "__bss_start__"|188-2-0-0-204-116-1-0-0-0-0-0-16-0-241-255
35204|data|Elf32_Sym <aSigaction - byte_8B84, sigaction, 0, 0x12, 0, 0>; "sigaction"|42-2-0-0-4-148-0-0-0-0-0-0-18-0-0-0
35220|data|Elf32_Sym <aStrlen - byte_8B84, strlen, 0, 0x12, 0, 0>; "strlen"|92-1-0-0-56-147-0-0-0-0-0-0-18-0-0-0
35236|data|Elf32_Sym <aFcntl - byte_8B84, fcntl, 0, 0x12, 0, 0>; "fcntl"|83-2-0-0-104-148-0-0-0-0-0-0-18-0-0-0
35252|data|Elf32_Sym <aRealloc - byte_8B84, realloc, 0, 0x12, 0, 0>; "realloc"|38-1-0-0-140-148-0-0-0-0-0-0-18-0-0-0
35268|data|Elf32_Sym <aCurlEasyInit - byte_8B84, curl_easy_init, 0, 0x12, 0, 0>; "curl_easy_init"|108-0-0-0-188-147-0-0-0-0-0-0-18-0-0-0
35284|data|Elf32_Sym <aFprintf - byte_8B84, fprintf, 0, 0x12, 0, 0>; "fprintf"|59-2-0-0-224-147-0-0-0-0-0-0-18-0-0-0
35300|data|Elf32_Sym <aVsnprintf+1 - byte_8B84, snprintf, 0, 0x12, 0, 0>; "snprintf"|165-1-0-0-128-148-0-0-0-0-0-0-18-0-0-0
35316|data|Elf32_Sym <aExit - byte_8B84, exit, 0, 0x12, 0, 0>; "exit"|201-0-0-0-188-148-0-0-0-0-0-0-18-0-0-0
35332|data|Elf32_Sym <aMemcmp - byte_8B84, memcmp, 0, 0x12, 0, 0>; "memcmp"|157-1-0-0-36-146-0-0-0-0-0-0-18-0-0-0
35348|data|Elf32_Sym <aRegerror - byte_8B84, regerror, 0, 0x12, 0, 0>; "regerror"|192-1-0-0-252-146-0-0-0-0-0-0-18-0-0-0
35364|data|Elf32_Sym <aStrncpy - byte_8B84, strncpy, 0, 0x12, 0, 0>; "strncpy"|0-1-0-0-100-146-0-0-0-0-0-0-18-0-0-0
35380|data|Elf32_Sym <aCurlEasySetopt - byte_8B84, curl_easy_setopt, 0, 0x12, 0, \; "curl_easy_setopt"|73-0-0-0-176-146-0-0-0-0-0-0-18-0-0-0
35396|data|Elf32_Sym <aEdata - byte_8B84, unk_174CC, 0, 0x10, 0, 0xFFF1>; "_edata"|169-2-0-0-204-116-1-0-0-0-0-0-16-0-241-255
35412|data|Elf32_Sym <aCurlEasyPerfor - byte_8B84, curl_easy_perform, 0, 0x12, 0,\; "curl_easy_perform"|123-0-0-0-80-148-0-0-0-0-0-0-18-0-0-0
35428|data|Elf32_Sym <aCurlGlobalInit - byte_8B84, curl_global_init, 0, 0x12, 0, \; "curl_global_init"|56-0-0-0-116-148-0-0-0-0-0-0-18-0-0-0
35444|data|Elf32_Sym <aStackChkFail - byte_8B84, __stack_chk_fail, 0, 0x12, 0, 0>; "__stack_chk_fail"|21-1-0-0-248-147-0-0-0-0-0-0-18-0-0-0
35460|data|Elf32_Sym <aEnd_0 - byte_8B84, _end_0, 0, 0x10, 0, 0xFFF1>; "_end"|222-2-0-0-20-118-1-0-0-0-0-0-16-0-241-255
35476|data|Elf32_Sym <aPoll - byte_8B84, poll, 0, 0x12, 0, 0>; "poll"|174-1-0-0-16-148-0-0-0-0-0-0-18-0-0-0
35492|data|Elf32_Sym <aForkpty - byte_8B84, forkpty, 0, 0x12, 0, 0>; "forkpty"|154-0-0-0-140-147-0-0-0-0-0-0-18-0-0-0
35508|data|Elf32_Sym <aStrstr - byte_8B84, strstr, 0, 0x12, 0, 0>; "strstr"|118-1-0-0-152-147-0-0-0-0-0-0-18-0-0-0
35524|data|Elf32_Sym <aMemset - byte_8B84, memset, 0, 0x12, 0, 0>; "memset"|111-1-0-0-136-146-0-0-0-0-0-0-18-0-0-0
35540|data|Elf32_Sym <aGetoptLong - byte_8B84, getopt_long, 0, 0x12, 0, 0>; "getopt_long"|10-2-0-0-240-146-0-0-0-0-0-0-18-0-0-0
35556|data|Elf32_Sym <aStrchr - byte_8B84, strchr, 0, 0x12, 0, 0>; "strchr"|52-2-0-0-124-146-0-0-0-0-0-0-18-0-0-0
35572|data|Elf32_Sym <aCfmakeraw - byte_8B84, cfmakeraw, 0, 0x12, 0, 0>; "cfmakeraw"|246-0-0-0-188-146-0-0-0-0-0-0-18-0-0-0
35588|data|Elf32_Sym <aBssEnd+1 - byte_8B84, _end_0, 0, 0x10, 0, 0xFFF1>; "_bss_end__"|203-2-0-0-20-118-1-0-0-0-0-0-16-0-241-255
35604|data|Elf32_Sym <aRegfree - byte_8B84, regfree, 0, 0x12, 0, 0>; "regfree"|13-1-0-0-12-146-0-0-0-0-0-0-18-0-0-0
35620|data|Elf32_Sym <aXpgBasename - byte_8B84, __xpg_basename, 0, 0x12, 0, 0>; "__xpg_basename"|172-0-0-0-80-147-0-0-0-0-0-0-18-0-0-0
35636|data|Elf32_Sym <aStrcpy - byte_8B84, strcpy, 0, 0x12, 0, 0>; "strcpy"|194-0-0-0-104-147-0-0-0-0-0-0-18-0-0-0
35652|data|Elf32_Sym <aFgets - byte_8B84, fgets, 0, 0x12, 0, 0>; "fgets"|86-1-0-0-112-146-0-0-0-0-0-0-18-0-0-0
35668|data|Elf32_Sym <aVsnprintf - byte_8B84, vsnprintf, 0, 0x12, 0, 0>; "vsnprintf"|164-1-0-0-88-146-0-0-0-0-0-0-18-0-0-0
35684|data|Elf32_Sym <aBssStart - byte_8B84, unk_174CC, 0, 0x10, 0, 0xFFF1>; "__bss_start"|176-2-0-0-204-116-1-0-0-0-0-0-16-0-241-255
35700|data|Elf32_Sym <aSprintf - byte_8B84, sprintf, 0, 0x12, 0, 0>; "sprintf"|206-0-0-0-212-148-0-0-0-0-0-0-18-0-0-0
35716|data|DCB 0|0
35717|data|DCB "libcurl-gnutls.so.4",0|108-105-98-99-117-114-108-45-103-110-117-116-108-115-46-115-111-46-52-0
35737|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
35752|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
35772|data|DCB "curl_global_init",0|99-117-114-108-95-103-108-111-98-97-108-95-105-110-105-116-0
35789|data|DCB "curl_easy_setopt",0|99-117-114-108-95-101-97-115-121-95-115-101-116-111-112-116-0
35806|data|DCB "curl_easy_cleanup",0|99-117-114-108-95-101-97-115-121-95-99-108-101-97-110-117-112-0
35824|data|DCB "curl_easy_init",0|99-117-114-108-95-101-97-115-121-95-105-110-105-116-0
35839|data|DCB "curl_easy_perform",0|99-117-114-108-95-101-97-115-121-95-112-101-114-102-111-114-109-0
35857|data|DCB "libutil.so.1",0|108-105-98-117-116-105-108-46-115-111-46-49-0
35870|data|DCB "forkpty",0|102-111-114-107-112-116-121-0
35878|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
35888|data|DCB "__xpg_basename",0|95-95-120-112-103-95-98-97-115-101-110-97-109-101-0
35903|data|DCB "fflush",0|102-102-108-117-115-104-0
35910|data|DCB "strcpy",0|115-116-114-99-112-121-0
35917|data|DCB "exit",0|101-120-105-116-0
35922|data|DCB "sprintf",0|115-112-114-105-110-116-102-0
35930|data|DCB "optind",0|111-112-116-105-110-100-0
35937|data|DCB "strrchr",0|115-116-114-114-99-104-114-0
35945|data|DCB "regexec",0|114-101-103-101-120-101-99-0
35953|data|DCB "__strdup",0|95-95-115-116-114-100-117-112-0
35962|data|DCB "cfmakeraw",0|99-102-109-97-107-101-114-97-119-0
35972|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
35980|data|DCB "puts",0|112-117-116-115-0
35985|data|DCB "regfree",0|114-101-103-102-114-101-101-0
35993|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
36010|data|DCB "realloc",0|114-101-97-108-108-111-99-0
36018|data|DCB "abort",0|97-98-111-114-116-0
36024|data|DCB "stdin",0|115-116-100-105-110-0
36030|data|DCB "memchr",0|109-101-109-99-104-114-0
36037|data|DCB "__assert_fail",0|95-95-97-115-115-101-114-116-95-102-97-105-108-0
36051|data|DCB "syslog",0|115-121-115-108-111-103-0
36058|data|DCB "fgets",0|102-103-101-116-115-0
36064|data|DCB "strlen",0|115-116-114-108-101-110-0
36071|data|DCB "sigemptyset",0|115-105-103-101-109-112-116-121-115-101-116-0
36083|data|DCB "memset",0|109-101-109-115-101-116-0
36090|data|DCB "strstr",0|115-116-114-115-116-114-0
36097|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
36114|data|DCB "tcsetattr",0|116-99-115-101-116-97-116-116-114-0
36124|data|DCB "read",0|114-101-97-100-0
36129|data|DCB "memcmp",0|109-101-109-99-109-112-0
36136|data|DCB "vsnprintf",0|118-115-110-112-114-105-110-116-102-0
36146|data|DCB "poll",0|112-111-108-108-0
36151|data|DCB "ctime",0|99-116-105-109-101-0
36157|data|DCB "stdout",0|115-116-100-111-117-116-0
36164|data|DCB "regerror",0|114-101-103-101-114-114-111-114-0
36173|data|DCB "memcpy",0|109-101-109-99-112-121-0
36180|data|DCB "strtoul",0|115-116-114-116-111-117-108-0
36188|data|DCB "malloc",0|109-97-108-108-111-99-0
36195|data|DCB "strcat",0|115-116-114-99-97-116-0
36202|data|DCB "__ctype_b_loc",0|95-95-99-116-121-112-101-95-98-95-108-111-99-0
36216|data|DCB "regcomp",0|114-101-103-99-111-109-112-0
36224|data|DCB "optarg",0|111-112-116-97-114-103-0
36231|data|DCB "stderr",0|115-116-100-101-114-114-0
36238|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
36250|data|DCB "fwrite",0|102-119-114-105-116-101-0
36257|data|DCB "gettimeofday",0|103-101-116-116-105-109-101-111-102-100-97-121-0
36270|data|DCB "sigaction",0|115-105-103-97-99-116-105-111-110-0
36280|data|DCB "strchr",0|115-116-114-99-104-114-0
36287|data|DCB "fprintf",0|102-112-114-105-110-116-102-0
36295|data|DCB "qsort",0|113-115-111-114-116-0
36301|data|DCB "tcgetattr",0|116-99-103-101-116-97-116-116-114-0
36311|data|DCB "fcntl",0|102-99-110-116-108-0
36317|data|DCB "memmove",0|109-101-109-109-111-118-101-0
36325|data|DCB "strcmp",0|115-116-114-99-109-112-0
36332|data|DCB "strerror",0|115-116-114-101-114-114-111-114-0
36341|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
36359|data|DCB "ld-linux.so.3",0|108-100-45-108-105-110-117-120-46-115-111-46-51-0
36373|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
36391|data|DCB "_fini",0|95-102-105-110-105-0
36397|data|DCB "_edata",0|95-101-100-97-116-97-0
36404|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
36416|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
36430|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
36442|data|DCB "__end__",0|95-95-101-110-100-95-95-0
36450|data|DCB "_end",0|95-101-110-100-0
36455|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
36465|data|DCB "CURL_GNUTLS_3",0|67-85-82-76-95-71-78-85-84-76-83-95-51-0
36479|data|DCB 0|0
36480|data|DCW 0|0-0
36482|data|DCW 0; local  symbol: __gmon_start__|0-0
36484|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
36486|data|DCW 2; regexec@@GLIBC_2.4|2-0
36488|data|DCW 2; abort@@GLIBC_2.4|2-0
36490|data|DCW 2; fwrite@@GLIBC_2.4|2-0
36492|data|DCW 2; stderr@@GLIBC_2.4|2-0
36494|data|DCW 2; tcgetattr@@GLIBC_2.4|2-0
36496|data|DCW 2; sigemptyset@@GLIBC_2.4|2-0
36498|data|DCW 2; fflush@@GLIBC_2.4|2-0
36500|data|DCW 2; regcomp@@GLIBC_2.4|2-0
36502|data|DCW 2; stdin@@GLIBC_2.4|2-0
36504|data|DCW 2; __strdup@@GLIBC_2.4|2-0
36506|data|DCW 2; malloc@@GLIBC_2.4|2-0
36508|data|DCW 2; stdout@@GLIBC_2.4|2-0
36510|data|DCW 2; strrchr@@GLIBC_2.4|2-0
36512|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
36514|data|DCW 2; write@@GLIBC_2.4|2-0
36516|data|DCW 3; curl_easy_cleanup@@CURL_GNUTLS_3|3-0
36518|data|DCW 2; time@@GLIBC_2.4|2-0
36520|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
36522|data|DCW 2; ctime@@GLIBC_2.4|2-0
36524|data|DCW 2; optarg@@GLIBC_2.4|2-0
36526|data|DCW 2; memchr@@GLIBC_2.4|2-0
36528|data|DCW 2; optind@@GLIBC_2.4|2-0
36530|data|DCW 2; strtoul@@GLIBC_2.4|2-0
36532|data|DCW 1; global symbol: _fini|1-0
36534|data|DCW 2; memcpy@@GLIBC_2.4|2-0
36536|data|DCW 1; global symbol: err|1-0
36538|data|DCW 4; __stack_chk_guard@@GLIBC_2.4|4-0
36540|data|DCW 2; free@@GLIBC_2.4|2-0
36542|data|DCW 1; global symbol: __end__|1-0
36544|data|DCW 2; strcmp@@GLIBC_2.4|2-0
36546|data|DCW 2; __assert_fail@@GLIBC_2.4|2-0
36548|data|DCW 2; strerror@@GLIBC_2.4|2-0
36550|data|DCW 2; memmove@@GLIBC_2.4|2-0
36552|data|DCW 1; global symbol: _init|1-0
36554|data|DCW 2; syslog@@GLIBC_2.4|2-0
36556|data|DCW 2; printf@@GLIBC_2.4|2-0
36558|data|DCW 2; puts@@GLIBC_2.4|2-0
36560|data|DCW 1; global symbol: __bss_end__|1-0
36562|data|DCW 2; qsort@@GLIBC_2.4|2-0
36564|data|DCW 2; __ctype_b_loc@@GLIBC_2.4|2-0
36566|data|DCW 2; strcat@@GLIBC_2.4|2-0
36568|data|DCW 2; gettimeofday@@GLIBC_2.4|2-0
36570|data|DCW 2; read@@GLIBC_2.4|2-0
36572|data|DCW 2; tcsetattr@@GLIBC_2.4|2-0
36574|data|DCW 1; global symbol: __bss_start__|1-0
36576|data|DCW 2; sigaction@@GLIBC_2.4|2-0
36578|data|DCW 2; strlen@@GLIBC_2.4|2-0
36580|data|DCW 2; fcntl@@GLIBC_2.4|2-0
36582|data|DCW 2; realloc@@GLIBC_2.4|2-0
36584|data|DCW 3; curl_easy_init@@CURL_GNUTLS_3|3-0
36586|data|DCW 2; fprintf@@GLIBC_2.4|2-0
36588|data|DCW 2; snprintf@@GLIBC_2.4|2-0
36590|data|DCW 2; exit@@GLIBC_2.4|2-0
36592|data|DCW 2; memcmp@@GLIBC_2.4|2-0
36594|data|DCW 2; regerror@@GLIBC_2.4|2-0
36596|data|DCW 2; strncpy@@GLIBC_2.4|2-0
36598|data|DCW 3; curl_easy_setopt@@CURL_GNUTLS_3|3-0
36600|data|DCW 1; global symbol: _edata|1-0
36602|data|DCW 3; curl_easy_perform@@CURL_GNUTLS_3|3-0
36604|data|DCW 3; curl_global_init@@CURL_GNUTLS_3|3-0
36606|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
36608|data|DCW 1; global symbol: _end|1-0
36610|data|DCW 2; poll@@GLIBC_2.4|2-0
36612|data|DCW 5; forkpty@@GLIBC_2.4|5-0
36614|data|DCW 2; strstr@@GLIBC_2.4|2-0
36616|data|DCW 2; memset@@GLIBC_2.4|2-0
36618|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
36620|data|DCW 2; strchr@@GLIBC_2.4|2-0
36622|data|DCW 2; cfmakeraw@@GLIBC_2.4|2-0
36624|data|DCW 1; global symbol: _bss_end__|1-0
36626|data|DCW 2; regfree@@GLIBC_2.4|2-0
36628|data|DCW 2; __xpg_basename@@GLIBC_2.4|2-0
36630|data|DCW 2; strcpy@@GLIBC_2.4|2-0
36632|data|DCW 2; fgets@@GLIBC_2.4|2-0
36634|data|DCW 2; vsnprintf@@GLIBC_2.4|2-0
36636|data|DCW 1; global symbol: __bss_start|1-0
36638|data|DCW 2; sprintf@@GLIBC_2.4|2-0
36640|data|Elf32_Verneed <1, 1, aLibutilSo1 - byte_8B84, 0x10, 0x20>; "libutil.so.1"|1-0-1-0-141-0-0-0-16-0-0-0-32-0-0-0
36656|data|Elf32_Vernaux <0xD696914, 0, 5, aGlibc24 - byte_8B84, 0>; "GLIBC_2.4"|20-105-105-13-0-0-5-0-227-2-0-0-0-0-0-0
36672|data|Elf32_Verneed <1, 1, aLdLinuxSo3 - byte_8B84, 0x10, 0x20>; "ld-linux.so.3"|1-0-1-0-131-2-0-0-16-0-0-0-32-0-0-0
36688|data|Elf32_Vernaux <0xD696914, 0, 4, aGlibc24 - byte_8B84, 0>; "GLIBC_2.4"|20-105-105-13-0-0-4-0-227-2-0-0-0-0-0-0
36704|data|Elf32_Verneed <1, 1, aLibcurlGnutlsS - byte_8B84, 0x10, 0x20>; "libcurl-gnutls.so.4"|1-0-1-0-1-0-0-0-16-0-0-0-32-0-0-0
36720|data|Elf32_Vernaux <0xB103D23, 0, 3, aCurlGnutls3 - byte_8B84, 0>; "CURL_GNUTLS_3"|35-61-16-11-0-0-3-0-237-2-0-0-0-0-0-0
36736|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_8B84, 0x10, 0>; "libc.so.6"|1-0-1-0-162-0-0-0-16-0-0-0-0-0-0-0
36752|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_8B84, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-227-2-0-0-0-0-0-0
36768|data|Elf32_Rel <0x17498, 0x115>; R_ARM_GLOB_DAT __gmon_start__|152-116-1-0-21-1-0-0
36776|data|Elf32_Rel <0x174D0, 0x1814>; R_ARM_COPY optind|208-116-1-0-20-24-0-0
36784|data|Elf32_Rel <0x174D8, 0x1D14>; R_ARM_COPY __stack_chk_guard|216-116-1-0-20-29-0-0
36792|data|Elf32_Rel <0x174E0, 0xB14>; R_ARM_COPY stdin|224-116-1-0-20-11-0-0
36800|data|Elf32_Rel <0x174E4, 0xE14>; R_ARM_COPY stdout|228-116-1-0-20-14-0-0
36808|data|Elf32_Rel <0x174E8, 0x614>; R_ARM_COPY stderr|232-116-1-0-20-6-0-0
36816|data|Elf32_Rel <0x174EC, 0x1614>; R_ARM_COPY optarg|236-116-1-0-20-22-0-0
36824|data|Elf32_Rel <0x173A0, 0x2916>; R_ARM_JUMP_SLOT qsort|160-115-1-0-22-41-0-0
36832|data|Elf32_Rel <0x173A4, 0x816>; R_ARM_JUMP_SLOT sigemptyset|164-115-1-0-22-8-0-0
36840|data|Elf32_Rel <0x173A8, 0x2216>; R_ARM_JUMP_SLOT strerror|168-115-1-0-22-34-0-0
36848|data|Elf32_Rel <0x173AC, 0x4916>; R_ARM_JUMP_SLOT regfree|172-115-1-0-22-73-0-0
36856|data|Elf32_Rel <0x173B0, 0x416>; R_ARM_JUMP_SLOT abort|176-115-1-0-22-4-0-0
36864|data|Elf32_Rel <0x173B4, 0x3816>; R_ARM_JUMP_SLOT memcmp|180-115-1-0-22-56-0-0
36872|data|Elf32_Rel <0x173B8, 0x2516>; R_ARM_JUMP_SLOT syslog|184-115-1-0-22-37-0-0
36880|data|Elf32_Rel <0x173BC, 0x1416>; R_ARM_JUMP_SLOT __libc_start_main|188-115-1-0-22-20-0-0
36888|data|Elf32_Rel <0x173C0, 0x116>; R_ARM_JUMP_SLOT __gmon_start__|192-115-1-0-22-1-0-0
36896|data|Elf32_Rel <0x173C4, 0x4D16>; R_ARM_JUMP_SLOT vsnprintf|196-115-1-0-22-77-0-0
36904|data|Elf32_Rel <0x173C8, 0x3A16>; R_ARM_JUMP_SLOT strncpy|200-115-1-0-22-58-0-0
36912|data|Elf32_Rel <0x173CC, 0x4C16>; R_ARM_JUMP_SLOT fgets|204-115-1-0-22-76-0-0
36920|data|Elf32_Rel <0x173D0, 0x4616>; R_ARM_JUMP_SLOT strchr|208-115-1-0-22-70-0-0
36928|data|Elf32_Rel <0x173D4, 0x4416>; R_ARM_JUMP_SLOT memset|212-115-1-0-22-68-0-0
36936|data|Elf32_Rel <0x173D8, 0xF16>; R_ARM_JUMP_SLOT strrchr|216-115-1-0-22-15-0-0
36944|data|Elf32_Rel <0x173DC, 0x2116>; R_ARM_JUMP_SLOT __assert_fail|220-115-1-0-22-33-0-0
36952|data|Elf32_Rel <0x173E0, 0x3B16>; R_ARM_JUMP_SLOT curl_easy_setopt|224-115-1-0-22-59-0-0
36960|data|Elf32_Rel <0x173E4, 0x4716>; R_ARM_JUMP_SLOT cfmakeraw|228-115-1-0-22-71-0-0
36968|data|Elf32_Rel <0x173E8, 0x1E16>; R_ARM_JUMP_SLOT free|232-115-1-0-22-30-0-0
36976|data|Elf32_Rel <0x173EC, 0x2D16>; R_ARM_JUMP_SLOT read|236-115-1-0-22-45-0-0
36984|data|Elf32_Rel <0x173F0, 0x1116>; R_ARM_JUMP_SLOT write|240-115-1-0-22-17-0-0
36992|data|Elf32_Rel <0x173F4, 0x4516>; R_ARM_JUMP_SLOT getopt_long|244-115-1-0-22-69-0-0
37000|data|Elf32_Rel <0x173F8, 0x3916>; R_ARM_JUMP_SLOT regerror|248-115-1-0-22-57-0-0
37008|data|Elf32_Rel <0x173FC, 0x2C16>; R_ARM_JUMP_SLOT gettimeofday|252-115-1-0-22-44-0-0
37016|data|Elf32_Rel <0x17400, 0x716>; R_ARM_JUMP_SLOT tcgetattr|0-116-1-0-22-7-0-0
37024|data|Elf32_Rel <0x17404, 0x916>; R_ARM_JUMP_SLOT fflush|4-116-1-0-22-9-0-0
37032|data|Elf32_Rel <0x17408, 0xA16>; R_ARM_JUMP_SLOT regcomp|8-116-1-0-22-10-0-0
37040|data|Elf32_Rel <0x1740C, 0x3116>; R_ARM_JUMP_SLOT strlen|12-116-1-0-22-49-0-0
37048|data|Elf32_Rel <0x17410, 0x1916>; R_ARM_JUMP_SLOT strtoul|16-116-1-0-22-25-0-0
37056|data|Elf32_Rel <0x17414, 0x4A16>; R_ARM_JUMP_SLOT __xpg_basename|20-116-1-0-22-74-0-0
37064|data|Elf32_Rel <0x17418, 0x1B16>; R_ARM_JUMP_SLOT memcpy|24-116-1-0-22-27-0-0
37072|data|Elf32_Rel <0x1741C, 0x4B16>; R_ARM_JUMP_SLOT strcpy|28-116-1-0-22-75-0-0
37080|data|Elf32_Rel <0x17420, 0x2616>; R_ARM_JUMP_SLOT printf|32-116-1-0-22-38-0-0
37088|data|Elf32_Rel <0x17424, 0x1516>; R_ARM_JUMP_SLOT ctime|36-116-1-0-22-21-0-0
37096|data|Elf32_Rel <0x17428, 0x4216>; R_ARM_JUMP_SLOT forkpty|40-116-1-0-22-66-0-0
37104|data|Elf32_Rel <0x1742C, 0x4316>; R_ARM_JUMP_SLOT strstr|44-116-1-0-22-67-0-0
37112|data|Elf32_Rel <0x17430, 0x516>; R_ARM_JUMP_SLOT fwrite|48-116-1-0-22-5-0-0
37120|data|Elf32_Rel <0x17434, 0x1316>; R_ARM_JUMP_SLOT time|52-116-1-0-22-19-0-0
37128|data|Elf32_Rel <0x17438, 0x3416>; R_ARM_JUMP_SLOT curl_easy_init|56-116-1-0-22-52-0-0
37136|data|Elf32_Rel <0x1743C, 0x2A16>; R_ARM_JUMP_SLOT __ctype_b_loc|60-116-1-0-22-42-0-0
37144|data|Elf32_Rel <0x17440, 0x1216>; R_ARM_JUMP_SLOT curl_easy_cleanup|64-116-1-0-22-18-0-0
37152|data|Elf32_Rel <0x17444, 0x3516>; R_ARM_JUMP_SLOT fprintf|68-116-1-0-22-53-0-0
37160|data|Elf32_Rel <0x17448, 0xD16>; R_ARM_JUMP_SLOT malloc|72-116-1-0-22-13-0-0
37168|data|Elf32_Rel <0x1744C, 0x3F16>; R_ARM_JUMP_SLOT __stack_chk_fail|76-116-1-0-22-63-0-0
37176|data|Elf32_Rel <0x17450, 0x3016>; R_ARM_JUMP_SLOT sigaction|80-116-1-0-22-48-0-0
37184|data|Elf32_Rel <0x17454, 0x4116>; R_ARM_JUMP_SLOT poll|84-116-1-0-22-65-0-0
37192|data|Elf32_Rel <0x17458, 0x316>; R_ARM_JUMP_SLOT regexec|88-116-1-0-22-3-0-0
37200|data|Elf32_Rel <0x1745C, 0x2B16>; R_ARM_JUMP_SLOT strcat|92-116-1-0-22-43-0-0
37208|data|Elf32_Rel <0x17460, 0x2316>; R_ARM_JUMP_SLOT memmove|96-116-1-0-22-35-0-0
37216|data|Elf32_Rel <0x17464, 0x2716>; R_ARM_JUMP_SLOT puts|100-116-1-0-22-39-0-0
37224|data|Elf32_Rel <0x17468, 0x3D16>; R_ARM_JUMP_SLOT curl_easy_perform|104-116-1-0-22-61-0-0
37232|data|Elf32_Rel <0x1746C, 0x2E16>; R_ARM_JUMP_SLOT tcsetattr|108-116-1-0-22-46-0-0
37240|data|Elf32_Rel <0x17470, 0x3216>; R_ARM_JUMP_SLOT fcntl|112-116-1-0-22-50-0-0
37248|data|Elf32_Rel <0x17474, 0x3E16>; R_ARM_JUMP_SLOT curl_global_init|116-116-1-0-22-62-0-0
37256|data|Elf32_Rel <0x17478, 0x3616>; R_ARM_JUMP_SLOT snprintf|120-116-1-0-22-54-0-0
37264|data|Elf32_Rel <0x1747C, 0x3316>; R_ARM_JUMP_SLOT realloc|124-116-1-0-22-51-0-0
37272|data|Elf32_Rel <0x17480, 0xC16>; R_ARM_JUMP_SLOT __strdup|128-116-1-0-22-12-0-0
37280|data|Elf32_Rel <0x17484, 0x1716>; R_ARM_JUMP_SLOT memchr|132-116-1-0-22-23-0-0
37288|data|Elf32_Rel <0x17488, 0x2016>; R_ARM_JUMP_SLOT strcmp|136-116-1-0-22-32-0-0
37296|data|Elf32_Rel <0x1748C, 0x3716>; R_ARM_JUMP_SLOT exit|140-116-1-0-22-55-0-0
37304|data|Elf32_Rel <0x17490, 0x1016>; R_ARM_JUMP_SLOT __errno_location|144-116-1-0-22-16-0-0
37312|data|Elf32_Rel <0x17494, 0x4F16>; R_ARM_JUMP_SLOT sprintf|148-116-1-0-22-79-0-0
37320|code|PUSH            {R3,LR}; _init|8-181
37322|code|BL              sub_95F8|0-240-21-250
37326|code|NOP|0-191
37328|code|POP             {R3,PC}|8-189
37330|data|DCW 0|0-0
37332|code|PUSH            {LR}|4-224-45-229
37336|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x91E4)|4-224-159-229
37340|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
37344|code|LDR             PC, [LR,#8]!|8-240-190-229
37348|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x91E4|176-225-0-0
37352|code|ADR             R12, 0x91F0|0-198-143-226
37356|code|ADD             R12, R12, #0xE000|14-202-140-226
37360|code|LDR             PC, [R12,#(qsort_ptr - 0x171F0)]!; __imp_qsort|176-241-188-229
37364|code|ADR             R12, 0x91FC|0-198-143-226
37368|code|ADD             R12, R12, #0xE000|14-202-140-226
37372|code|LDR             PC, [R12,#(sigemptyset_ptr - 0x171FC)]!; __imp_sigemptyset|168-241-188-229
37376|code|ADR             R12, 0x9208|0-198-143-226
37380|code|ADD             R12, R12, #0xE000|14-202-140-226
37384|code|LDR             PC, [R12,#(strerror_ptr - 0x17208)]!; __imp_strerror|160-241-188-229
37388|code|ADR             R12, 0x9214|0-198-143-226
37392|code|ADD             R12, R12, #0xE000|14-202-140-226
37396|code|LDR             PC, [R12,#(regfree_ptr - 0x17214)]!; __imp_regfree|152-241-188-229
37400|code|ADR             R12, 0x9220|0-198-143-226
37404|code|ADD             R12, R12, #0xE000|14-202-140-226
37408|code|LDR             PC, [R12,#(abort_ptr - 0x17220)]!; __imp_abort|144-241-188-229
37412|code|ADR             R12, 0x922C|0-198-143-226
37416|code|ADD             R12, R12, #0xE000|14-202-140-226
37420|code|LDR             PC, [R12,#(memcmp_ptr - 0x1722C)]!; __imp_memcmp|136-241-188-229
37424|code|ADR             R12, 0x9238|0-198-143-226
37428|code|ADD             R12, R12, #0xE000|14-202-140-226
37432|code|LDR             PC, [R12,#(syslog_ptr - 0x17238)]!; __imp_syslog|128-241-188-229
37436|code|ADR             R12, 0x9244|0-198-143-226
37440|code|ADD             R12, R12, #0xE000|14-202-140-226
37444|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x17244)]!; __imp___libc_start_main|120-241-188-229
37448|code|BX              PC|120-71
37450|data|ALIGN 4|192-70
37452|code|ADR             R12, 0x9254|0-198-143-226
37456|code|ADD             R12, R12, #0xE000|14-202-140-226
37460|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x17254)]!; __imp___gmon_start__|108-241-188-229
37464|code|ADR             R12, 0x9260|0-198-143-226
37468|code|ADD             R12, R12, #0xE000|14-202-140-226
37472|code|LDR             PC, [R12,#(vsnprintf_ptr - 0x17260)]!; __imp_vsnprintf|100-241-188-229
37476|code|ADR             R12, 0x926C|0-198-143-226
37480|code|ADD             R12, R12, #0xE000|14-202-140-226
37484|code|LDR             PC, [R12,#(strncpy_ptr - 0x1726C)]!; __imp_strncpy|92-241-188-229
37488|code|ADR             R12, 0x9278|0-198-143-226
37492|code|ADD             R12, R12, #0xE000|14-202-140-226
37496|code|LDR             PC, [R12,#(fgets_ptr - 0x17278)]!; __imp_fgets|84-241-188-229
37500|code|ADRL            R12, 0x17284|0-198-143-226-14-202-140-226
37508|code|LDR             PC, [R12,#(strchr_ptr - 0x17284)]!; __imp_strchr|76-241-188-229
37512|code|ADRL            R12, 0x17290|0-198-143-226-14-202-140-226
37520|code|LDR             PC, [R12,#(memset_ptr - 0x17290)]!; __imp_memset|68-241-188-229
37524|code|ADRL            R12, 0x1729C|0-198-143-226-14-202-140-226
37532|code|LDR             PC, [R12,#(strrchr_ptr - 0x1729C)]!; __imp_strrchr|60-241-188-229
37536|code|ADRL            R12, 0x172A8|0-198-143-226-14-202-140-226
37544|code|LDR             PC, [R12,#(__assert_fail_ptr - 0x172A8)]!; __imp___assert_fail|52-241-188-229
37548|code|BX              PC|120-71
37550|data|ALIGN 0x10|192-70
37552|code|ADRL            R12, 0x172B8|0-198-143-226-14-202-140-226
37560|code|LDR             PC, [R12,#(curl_easy_setopt_ptr - 0x172B8)]!; __imp_curl_easy_setopt|40-241-188-229
37564|code|ADRL            R12, 0x172C4|0-198-143-226-14-202-140-226
37572|code|LDR             PC, [R12,#(cfmakeraw_ptr - 0x172C4)]!; __imp_cfmakeraw|32-241-188-229
37576|code|BX              PC|120-71
37578|data|ALIGN 4|192-70
37580|code|ADRL            R12, 0x172D4|0-198-143-226-14-202-140-226
37588|code|LDR             PC, [R12,#(free_ptr - 0x172D4)]!; __imp_free|20-241-188-229
37592|code|ADRL            R12, 0x172E0|0-198-143-226-14-202-140-226
37600|code|LDR             PC, [R12,#(read_ptr - 0x172E0)]!; __imp_read|12-241-188-229
37604|code|ADRL            R12, 0x172EC|0-198-143-226-14-202-140-226
37612|code|LDR             PC, [R12,#(write_ptr - 0x172EC)]!; __imp_write|4-241-188-229
37616|code|ADRL            R12, 0x172F8|0-198-143-226-14-202-140-226
37624|code|LDR             PC, [R12,#(getopt_long_ptr - 0x172F8)]!; __imp_getopt_long|252-240-188-229
37628|code|ADRL            R12, 0x17304|0-198-143-226-14-202-140-226
37636|code|LDR             PC, [R12,#(regerror_ptr - 0x17304)]!; __imp_regerror|244-240-188-229
37640|code|ADRL            R12, 0x17310|0-198-143-226-14-202-140-226
37648|code|LDR             PC, [R12,#(gettimeofday_ptr - 0x17310)]!; __imp_gettimeofday|236-240-188-229
37652|code|ADRL            R12, 0x1731C|0-198-143-226-14-202-140-226
37660|code|LDR             PC, [R12,#(tcgetattr_ptr - 0x1731C)]!; __imp_tcgetattr|228-240-188-229
37664|code|ADRL            R12, 0x17328|0-198-143-226-14-202-140-226
37672|code|LDR             PC, [R12,#(fflush_ptr - 0x17328)]!; __imp_fflush|220-240-188-229
37676|code|ADRL            R12, 0x17334|0-198-143-226-14-202-140-226
37684|code|LDR             PC, [R12,#(regcomp_ptr - 0x17334)]!; __imp_regcomp|212-240-188-229
37688|code|ADRL            R12, 0x17340|0-198-143-226-14-202-140-226
37696|code|LDR             PC, [R12,#(strlen_ptr - 0x17340)]!; __imp_strlen|204-240-188-229
37700|code|ADRL            R12, 0x1734C|0-198-143-226-14-202-140-226
37708|code|LDR             PC, [R12,#(strtoul_ptr - 0x1734C)]!; __imp_strtoul|196-240-188-229
37712|code|ADRL            R12, 0x17358|0-198-143-226-14-202-140-226
37720|code|LDR             PC, [R12,#(__xpg_basename_ptr - 0x17358)]!; __imp___xpg_basename|188-240-188-229
37724|code|ADRL            R12, 0x17364|0-198-143-226-14-202-140-226
37732|code|LDR             PC, [R12,#(memcpy_ptr - 0x17364)]!; __imp_memcpy|180-240-188-229
37736|code|ADRL            R12, 0x17370|0-198-143-226-14-202-140-226
37744|code|LDR             PC, [R12,#(strcpy_ptr - 0x17370)]!; __imp_strcpy|172-240-188-229
37748|code|ADRL            R12, 0x1737C|0-198-143-226-14-202-140-226
37756|code|LDR             PC, [R12,#(printf_ptr - 0x1737C)]!; __imp_printf|164-240-188-229
37760|code|ADRL            R12, 0x17388|0-198-143-226-14-202-140-226
37768|code|LDR             PC, [R12,#(ctime_ptr - 0x17388)]!; __imp_ctime|156-240-188-229
37772|code|ADRL            R12, 0x17394|0-198-143-226-14-202-140-226
37780|code|LDR             PC, [R12,#(forkpty_ptr - 0x17394)]!; __imp_forkpty|148-240-188-229
37784|code|ADRL            R12, 0x173A0|0-198-143-226-14-202-140-226
37792|code|LDR             PC, [R12,#(strstr_ptr - 0x173A0)]!; __imp_strstr|140-240-188-229
37796|code|ADRL            R12, 0x173AC|0-198-143-226-14-202-140-226
37804|code|LDR             PC, [R12,#(fwrite_ptr - 0x173AC)]!; __imp_fwrite|132-240-188-229
37808|code|ADRL            R12, 0x173B8|0-198-143-226-14-202-140-226
37816|code|LDR             PC, [R12,#(time_ptr - 0x173B8)]!; __imp_time|124-240-188-229
37820|code|ADRL            R12, 0x173C4|0-198-143-226-14-202-140-226
37828|code|LDR             PC, [R12,#(curl_easy_init_ptr - 0x173C4)]!; __imp_curl_easy_init|116-240-188-229
37832|code|ADRL            R12, 0x173D0|0-198-143-226-14-202-140-226
37840|code|LDR             PC, [R12,#(__ctype_b_loc_ptr - 0x173D0)]!; __imp___ctype_b_loc|108-240-188-229
37844|code|ADRL            R12, 0x173DC|0-198-143-226-14-202-140-226
37852|code|LDR             PC, [R12,#(curl_easy_cleanup_ptr - 0x173DC)]!; __imp_curl_easy_cleanup|100-240-188-229
37856|code|ADRL            R12, 0x173E8|0-198-143-226-14-202-140-226
37864|code|LDR             PC, [R12,#(fprintf_ptr - 0x173E8)]!; __imp_fprintf|92-240-188-229
37868|code|ADRL            R12, 0x173F4|0-198-143-226-14-202-140-226
37876|code|LDR             PC, [R12,#(malloc_ptr - 0x173F4)]!; __imp_malloc|84-240-188-229
37880|code|ADRL            R12, 0x17400|0-198-143-226-14-202-140-226
37888|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x17400)]!; __imp___stack_chk_fail|76-240-188-229
37892|code|ADRL            R12, 0x1740C|0-198-143-226-14-202-140-226
37900|code|LDR             PC, [R12,#(sigaction_ptr - 0x1740C)]!; __imp_sigaction|68-240-188-229
37904|code|ADRL            R12, 0x17418|0-198-143-226-14-202-140-226
37912|code|LDR             PC, [R12,#(poll_ptr - 0x17418)]!; __imp_poll|60-240-188-229
37916|code|ADRL            R12, 0x17424|0-198-143-226-14-202-140-226
37924|code|LDR             PC, [R12,#(regexec_ptr - 0x17424)]!; __imp_regexec|52-240-188-229
37928|code|ADRL            R12, 0x17430|0-198-143-226-14-202-140-226
37936|code|LDR             PC, [R12,#(strcat_ptr - 0x17430)]!; __imp_strcat|44-240-188-229
37940|code|ADRL            R12, 0x1743C|0-198-143-226-14-202-140-226
37948|code|LDR             PC, [R12,#(memmove_ptr - 0x1743C)]!; __imp_memmove|36-240-188-229
37952|code|BX              PC|120-71
37954|data|ALIGN 4|192-70
37956|code|ADRL            R12, 0x1744C|0-198-143-226-14-202-140-226
37964|code|LDR             PC, [R12,#(puts_ptr - 0x1744C)]!; __imp_puts|24-240-188-229
37968|code|ADRL            R12, 0x17458|0-198-143-226-14-202-140-226
37976|code|LDR             PC, [R12,#(curl_easy_perform_ptr - 0x17458)]!; __imp_curl_easy_perform|16-240-188-229
37980|code|ADRL            R12, 0x17464|0-198-143-226-14-202-140-226
37988|code|LDR             PC, [R12,#(tcsetattr_ptr - 0x17464)]!; __imp_tcsetattr|8-240-188-229
37992|code|ADRL            R12, 0x17470|0-198-143-226-14-202-140-226
38000|code|LDR             PC, [R12]!; __imp_fcntl|0-240-188-229
38004|code|ADR             R12, 0x947C|0-198-143-226
38008|code|ADD             R12, R12, #0xD000|13-202-140-226
38012|code|LDR             PC, [R12,#(curl_global_init_ptr - 0x1647C)]!; __imp_curl_global_init|248-255-188-229
38016|code|ADR             R12, 0x9488|0-198-143-226
38020|code|ADD             R12, R12, #0xD000|13-202-140-226
38024|code|LDR             PC, [R12,#(snprintf_ptr - 0x16488)]!; __imp_snprintf|240-255-188-229
38028|code|ADR             R12, 0x9494|0-198-143-226
38032|code|ADD             R12, R12, #0xD000|13-202-140-226
38036|code|LDR             PC, [R12,#(realloc_ptr - 0x16494)]!; __imp_realloc|232-255-188-229
38040|code|ADR             R12, 0x94A0|0-198-143-226
38044|code|ADD             R12, R12, #0xD000|13-202-140-226
38048|code|LDR             PC, [R12,#(__strdup_ptr - 0x164A0)]!; __imp___strdup|224-255-188-229
38052|code|ADR             R12, 0x94AC|0-198-143-226
38056|code|ADD             R12, R12, #0xD000|13-202-140-226
38060|code|LDR             PC, [R12,#(memchr_ptr - 0x164AC)]!; __imp_memchr|216-255-188-229
38064|code|ADR             R12, 0x94B8|0-198-143-226
38068|code|ADD             R12, R12, #0xD000|13-202-140-226
38072|code|LDR             PC, [R12,#(strcmp_ptr - 0x164B8)]!; __imp_strcmp|208-255-188-229
38076|code|ADR             R12, 0x94C4|0-198-143-226
38080|code|ADD             R12, R12, #0xD000|13-202-140-226
38084|code|LDR             PC, [R12,#(exit_ptr - 0x164C4)]!; __imp_exit|200-255-188-229
38088|code|ADR             R12, 0x94D0|0-198-143-226
38092|code|ADD             R12, R12, #0xD000|13-202-140-226
38096|code|LDR             PC, [R12,#(__errno_location_ptr - 0x164D0)]!; __imp___errno_location|192-255-188-229
38100|code|ADR             R12, 0x94DC|0-198-143-226
38104|code|ADD             R12, R12, #0xD000|13-202-140-226
38108|code|LDR             PC, [R12,#(sprintf_ptr - 0x164DC)]!; __imp_sprintf|184-255-188-229
38112|code|MVNSMI          LR, SP,LSR#18|45-233-240-65
38116|code|ADDLT           R4, R2, R5,LSL#12|5-70-130-176
38120|code|STRMI           R6, [R12],-R8,LSL#16|8-104-12-70
38124|code|SVC             0x30F7FF|255-247-48-239
38128|code|BLX             0xFF1454FA|0-240-196-251
38132|code|STRTMI          R4, [R8],-R11,LSR#22|43-75-40-70
38136|code|BMI             0xADAD84|33-70-43-74
38140|code|STRLS           R2, [R0],-R0,LSL#12|0-38-0-150
38144|code|MRC             p7, 7, PC,c6,c15, 7|255-247-246-238
38148|data|DCD 0xF8DF4F29, 0x1C4380AC, 0x2875D011, 0xF000D001, 0x6838FA43|41-79-223-248-172-128-67-28-17-208-117-40-1-208-0-240-67-250-56-104-4-240-222-250-33-75-33-70-33-74-0-150-200-248-0-0-40-70-255-247-226-238-67-28-237-209-31-75-27-104-157-66-235-220-3-32-255-247-154-239-48-187-255-247-60-239-4-70-56-179-26-77-13-33-5-34-32-70-255-247-174-238-66-242-26-113-42-29-32-70-255-247-168-238-45-33-1-34-32-70-255-247-162-238-32-70-0-240-219-249-32-70-255-247-46-239-213-248-4-1-8-177-4-240-109-250-40-104-8-177-4-240-105-250-0-32-255-247-150-239-0-32-9-73-0-240-134-251-211-231-8-73-0-240-130-251-211-231-0-191-164-116-1-0-88-227-0-0-236-116-1-0-208-116-1-0-244-116-1-0-92-227-0-0-116-227-0-0
38336|code|MOV.W           R11, #0|79-240-0-11
38340|code|MOV.W           LR, #0|79-240-0-14
38344|code|POP.W           {R1}; argc|93-248-4-27
38348|code|MOV             R2, SP; ubp_av|106-70
38350|code|PUSH.W          {R2}; stack_end|77-248-4-45
38354|code|PUSH.W          {R0}; rtld_fini|77-248-4-13
38358|code|LDR.W           R12, =(nullsub_1+1)|223-248-20-192
38362|code|PUSH.W          {R12}; fini|77-248-4-205
38366|code|LDR             R0, =(loc_94E0+1); main|4-72
38368|code|LDR             R3, =(sub_E1B8+1); init|4-75
38370|code|BLX             __libc_start_main|255-247-44-238
38374|code|BLX             abort|255-247-24-238
38378|data|ALIGN 4|0-0
38380|data|DCD nullsub_1+1|253-225-0-0
38384|data|DCD loc_94E0+1|225-148-0-0
38388|data|DCD sub_E1B8+1|185-225-0-0
38392|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9600)|3-75
38394|code|LDR             R2, =(__gmon_start___ptr_0 - 0x17394)|4-74
38396|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
38398|code|LDR             R3, [R3,R2]; __imp___gmon_start__|155-88
38400|code|CBZ             R3, locret_9606|11-177
38402|code|B.W             j___gmon_start__|255-247-33-190
38406|code|BX              LR|112-71
38408|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9600|148-221-0-0
38412|data|DCD __gmon_start___ptr_0 - 0x17394|4-1-0-0
38416|code|LDR             R3, =byte_174F0|2-75
38418|code|LDRB            R2, [R3]|26-120
38420|code|CBNZ            R2, locret_961A|10-185
38422|code|MOVS            R2, #1|1-34
38424|code|STRB            R2, [R3]|26-112
38426|code|BX              LR|112-71
38428|data|DCD byte_174F0|240-116-1-0
38432|code|LDR             R0, =dword_17288|3-72
38434|code|PUSH            {R3,LR}|8-181
38436|code|LDR             R3, [R0]|3-104
38438|code|CBZ             R3, locret_962E|19-177
38440|code|LDR             R3, =0|2-75
38442|code|CBZ             R3, locret_962E|3-177
38444|code|BLX             R3|152-71
38446|code|POP             {R3,PC}|8-189
38448|data|DCD dword_17288|136-114-1-0
38452|data|DCD 0|0-0-0-0
38456|code|PUSH            {R3,LR}|8-181
38458|code|MOV             R0, #aValidCommandsA; s|78-242-12-32-192-242-0-0
38466|code|BLX             puts|255-247-0-239
38470|code|MOV             R0, #aAuthUserPasswd; s|78-242-32-32-192-242-0-0
38478|code|BLX             puts|255-247-250-238
38482|code|MOV             R0, #aSeturlUrl; s|78-242-52-32-192-242-0-0
38490|code|BLX             puts|255-247-244-238
38494|code|MOV             R0, #aGetUrl; s|78-242-68-32-192-242-0-0
38502|code|BLX             puts|255-247-238-238
38506|code|MOV             R0, #0xE250|78-242-80-32-192-242-0-0
38514|code|POP.W           {R3,LR}|189-232-8-64
38518|code|B.W             j_puts|255-247-227-190
38522|data|ALIGN 4|0-191
38524|code|PUSH            {R4-R6,LR}|112-181
38526|code|MOV             R5, R0|5-70
38528|code|CBZ             R0, loc_96AC|160-177
38530|code|LDR             R6, =dword_174F4|17-78
38532|code|LDR             R0, [R6]; s|48-104
38534|code|CBZ             R0, loc_96BA|192-177
38536|code|BLX             strlen|255-247-86-238
38540|code|MOV             R4, R0|4-70
38542|code|MOV             R0, R5; s|40-70
38544|code|BLX             strlen|255-247-82-238
38548|code|ADDS            R0, R4, R0|32-24
38550|code|ADDS            R0, #2|2-48
38552|code|BL              sub_D910|4-240-58-249
38556|code|LDR             R2, [R6]|50-104
38558|code|LDR             R1, =aSS_0; "%s/%s"|11-73
38560|code|MOV             R3, R5|43-70
38562|code|MOV             R4, R0|4-70
38564|code|BLX             sprintf|255-247-22-239
38568|code|MOV             R0, R4|32-70
38570|code|POP             {R4-R6,PC}|112-189
38572|code|LDR             R3, =dword_174F4|6-75
38574|code|LDR             R0, [R3]|24-104
38576|code|CBZ             R0, loc_96C4|64-177
38578|code|POP.W           {R4-R6,LR}|189-232-112-64
38582|code|B.W             sub_DAD8|4-240-15-186
38586|code|MOV             R0, R5|40-70
38588|code|POP.W           {R4-R6,LR}|189-232-112-64
38592|code|B.W             sub_DAD8|4-240-10-186
38596|code|MOV             R4, R0|4-70
38598|code|B               loc_96A8|239-231
38600|data|DCD dword_174F4|244-116-1-0
38604|data|DCD aSS_0; "%s/%s"|116-226-0-0
38608|code|PUSH            {R4-R6,LR}|112-181
38610|code|MOV             R6, R0|6-70
38612|code|LDR             R0, [R1]|8-104
38614|code|MOV             R4, R1|12-70
38616|code|BL              sub_967C|255-247-208-255
38620|code|MOV             R5, R0|5-70
38622|code|LDR             R0, [R4,#4]|96-104
38624|code|CMP             R0, #0|0-40
38626|code|BEQ             loc_974A|50-208
38628|code|BL              sub_DAD8|4-240-248-249
38632|code|MOVS            R3, R5|43-28
38634|code|IT NE|24-191
38636|code|MOVNE           R3, #1|1-35
38638|code|CMP             R0, #0|0-40
38640|code|ITE EQ|12-191
38642|code|MOVEQ           R3, #0|0-35
38644|code|ANDNE.W         R3, R3, #1|3-240-1-3
38648|code|MOV             R4, R0|4-70
38650|code|CMP             R3, #0|0-43
38652|code|BEQ             loc_974C|38-208
38654|code|MOVW            R1, #0x2712|66-242-18-113
38658|code|MOV             R2, R5|42-70
38660|code|MOV             R0, R6|48-70
38662|code|BLX             curl_easy_setopt|255-247-212-237
38666|code|MOV             R0, R6|48-70
38668|code|MOVW            R1, #0x271F|66-242-31-113
38672|code|MOV             R2, R4|34-70
38674|code|BLX             curl_easy_setopt|255-247-206-237
38678|code|MOV             R0, R6|48-70
38680|code|BLX             curl_easy_perform|255-247-154-238
38684|code|CBNZ            R0, loc_9756|216-185
38686|code|MOVW            R1, #0x2712|66-242-18-113
38690|code|LDR             R2, =(aNothingToPost+0x10); ""|21-74
38692|code|MOV             R0, R6|48-70
38694|code|BLX             curl_easy_setopt|255-247-196-237
38698|code|MOV             R0, R6|48-70
38700|code|MOVW            R1, #0x271F|66-242-31-113
38704|code|LDR             R2, =(aNothingToPost+0x10); ""|17-74
38706|code|BLX             curl_easy_setopt|255-247-190-237
38710|code|CBZ             R5, loc_973E|21-177
38712|code|MOV             R0, R5|40-70
38714|code|BL              sub_DA5C|4-240-143-249
38718|code|CBZ             R4, locret_9754|76-177
38720|code|MOV             R0, R4|32-70
38722|code|POP.W           {R4-R6,LR}|189-232-112-64
38726|code|B.W             sub_DA5C|4-240-137-185
38730|code|MOV             R4, R0|4-70
38732|code|LDR             R0, =aNothingToPost; "Nothing to post!"|11-72
38734|code|BLX             puts|255-247-122-238
38738|code|B               loc_9736|240-231
38740|code|POP             {R4-R6,PC}|112-189
38742|code|LDR             R1, =unk_174F8|10-73
38744|code|LDR             R0, =aErrorS; "Error: %s\n"|10-72
38746|code|BLX             printf|255-247-12-238
38750|code|MOV             R0, R6|48-70
38752|code|MOVW            R1, #0x2712|66-242-18-113
38756|code|LDR             R2, =(aNothingToPost+0x10); ""|4-74
38758|code|BLX             curl_easy_setopt|255-247-164-237
38762|code|MOV             R0, R6|48-70
38764|code|MOVW            R1, #0x271F|66-242-31-113
38768|code|LDR             R2, =(aNothingToPost+0x10); ""|1-74
38770|code|BLX             curl_easy_setopt|255-247-158-237
38774|code|B               loc_9736|222-231
38776|data|DCD aNothingToPost+0x10; ""|152-226-0-0
38780|data|DCD aNothingToPost; "Nothing to post!"|136-226-0-0
38784|data|DCD unk_174F8|248-116-1-0
38788|data|DCD aErrorS; "Error: %s\n"|124-226-0-0
38792|code|PUSH            {R3-R5,LR}|56-181
38794|code|MOV             R5, R0|5-70
38796|code|LDR             R0, [R1]|8-104
38798|code|BL              sub_967C|255-247-117-255
38802|code|MOV             R4, R0|4-70
38804|code|CBZ             R0, loc_97CA|200-177
38806|code|MOV             R2, R0|2-70
38808|code|MOVW            R1, #0x2712|66-242-18-113
38812|code|MOV             R0, R5|40-70
38814|code|BLX             curl_easy_setopt|255-247-136-237
38818|code|MOV             R0, R5|40-70
38820|code|BLX             curl_easy_perform|255-247-84-238
38824|code|CBNZ            R0, loc_97C0|80-185
38826|code|MOV             R0, R5|40-70
38828|code|MOVW            R1, #0x2712|66-242-18-113
38832|code|LDR             R2, =(aNothingToPost+0x10); ""|8-74
38834|code|BLX             curl_easy_setopt|255-247-126-237
38838|code|MOV             R0, R4|32-70
38840|code|POP.W           {R3-R5,LR}|189-232-56-64
38844|code|B.W             sub_DA5C|4-240-78-185
38848|code|LDR             R1, =unk_174F8|5-73
38850|code|LDR             R0, =aErrorS; "Error: %s\n"|6-72
38852|code|BLX             printf|255-247-214-237
38856|code|B               loc_97AA|239-231
38858|code|LDR             R0, =aNothingToGet; "Nothing to get!"|5-72
38860|code|POP.W           {R3-R5,LR}|189-232-56-64
38864|code|B.W             j_puts|255-247-54-190
38868|data|DCD aNothingToPost+0x10; ""|152-226-0-0
38872|data|DCD unk_174F8|248-116-1-0
38876|data|DCD aErrorS; "Error: %s\n"|124-226-0-0
38880|data|DCD aNothingToGet; "Nothing to get!"|156-226-0-0
38884|code|LDR             R0, [R1]|8-104
38886|code|PUSH            {R3-R5,LR}|56-181
38888|code|MOV             R5, R1|13-70
38890|code|CBZ             R0, loc_9802|80-177
38892|code|LDR             R4, =dword_174F4|7-76
38894|code|LDR             R3, [R4]|35-104
38896|code|CBZ             R3, loc_97FA|27-177
38898|code|MOV             R0, R3|24-70
38900|code|BL              sub_DA5C|4-240-50-249
38904|code|LDR             R0, [R5]|40-104
38906|code|BL              sub_DAD8|4-240-109-249
38910|code|STR             R0, [R4]|32-96
38912|code|POP             {R3-R5,PC}|56-189
38914|code|LDR             R0, =aUsageSeturlHtt; "Usage: seturl http://..."|3-72
38916|code|POP.W           {R3-R5,LR}|189-232-56-64
38920|code|B.W             j_puts|255-247-26-190
38924|data|DCD dword_174F4|244-116-1-0
38928|data|DCD aUsageSeturlHtt; "Usage: seturl http://..."|172-226-0-0
38932|code|PUSH            {R4-R6,LR}|112-181
38934|code|MOV             R4, R0|4-70
38936|code|LDR             R0, [R1]|8-104
38938|code|MOV             R6, R1|14-70
38940|code|CBZ             R0, loc_9850|192-177
38942|code|LDR             R5, =dword_174F4|15-77
38944|code|LDR.W           R3, [R5,#(dword_175F8 - 0x174F4)]|213-248-4-49
38948|code|CBZ             R3, loc_982E|27-177
38950|code|MOV             R0, R3|24-70
38952|code|BL              sub_DA5C|4-240-24-249
38956|code|LDR             R0, [R6]|48-104
38958|code|BL              sub_DAD8|4-240-83-249
38962|code|MOVW            R1, #0x2715|66-242-21-113
38966|code|MOV             R2, R0|2-70
38968|code|STR.W           R0, [R5,#(dword_175F8 - 0x174F4)]|197-248-4-1
38972|code|MOV             R0, R4|32-70
38974|code|BLX             curl_easy_setopt|255-247-56-237
38978|code|MOV             R0, R4|32-70
38980|code|MOVS            R1, #0x6B ; 'k'|107-33
38982|code|MOVS            R2, #1|1-34
38984|code|POP.W           {R4-R6,LR}|189-232-112-64
38988|code|B.W             j_curl_easy_setopt|255-247-46-189
38992|code|LDR             R0, =aUsageAuthUserP; "Usage: auth user:passwd"|3-72
38994|code|POP.W           {R4-R6,LR}|189-232-112-64
38998|code|B.W             j_puts|255-247-243-189
39002|data|ALIGN 4|0-191
39004|data|DCD dword_174F4|244-116-1-0
39008|data|DCD aUsageAuthUserP; "Usage: auth user:passwd"|200-226-0-0
39012|code|PUSH            {R3-R7,LR}|248-181
39014|code|MOV             R6, R0|6-70
39016|code|LDR             R4, [R1]|12-104
39018|code|MOV             R5, R1|13-70
39020|code|MOV             R0, R4; s1|32-70
39022|code|CMP             R4, #0|0-44
39024|code|BEQ             locret_98F4|64-208
39026|code|LDR             R1, =aHelp; "help"|39-73
39028|code|BLX             strcmp|255-247-28-238
39032|code|MOV             R7, R0|7-70
39034|code|CMP             R0, #0|0-40
39036|code|BEQ             loc_98EC|54-208
39038|code|MOV             R0, R4; s1|32-70
39040|code|LDR             R1, =aQuit; "quit"|36-73
39042|code|BLX             strcmp|255-247-22-238
39046|code|CBZ             R0, loc_98C6|240-177
39048|code|MOV             R0, R4; s1|32-70
39050|code|LDR             R1, =aAuth; "auth"|35-73
39052|code|BLX             strcmp|255-247-16-238
39056|code|MOV             R7, R0|7-70
39058|code|CMP             R0, #0|0-40
39060|code|BEQ             loc_98F6|47-208
39062|code|MOV             R0, R4; s1|32-70
39064|code|LDR             R1, =aSeturl; "seturl"|32-73
39066|code|BLX             strcmp|255-247-10-238
39070|code|MOV             R7, R0|7-70
39072|code|CMP             R0, #0|0-40
39074|code|BEQ             loc_9902|46-208
39076|code|LDRB            R3, [R4]|35-120
39078|code|CMP             R3, #0x67 ; 'g'|103-43
39080|code|BNE             loc_98CA|15-209
39082|code|LDRB            R3, [R4,#1]|99-120
39084|code|CMP             R3, #0x65 ; 'e'|101-43
39086|code|BNE             loc_98CA|12-209
39088|code|LDRB            R3, [R4,#2]|163-120
39090|code|CMP             R3, #0x74 ; 't'|116-43
39092|code|BNE             loc_98CA|9-209
39094|code|LDRB            R7, [R4,#3]|231-120
39096|code|CBNZ            R7, loc_98CA|63-185
39098|code|MOV             R0, R6|48-70
39100|code|ADDS            R1, R5, #4|41-29
39102|code|BL              sub_9788|255-247-99-255
39106|code|MOV             R0, R7|56-70
39108|code|POP             {R3-R7,PC}|248-189
39110|code|MOVS            R0, #1|1-32
39112|code|POP             {R3-R7,PC}|248-189
39114|code|MOV             R0, R4; s1|32-70
39116|code|LDR             R1, =aPost; "post"|20-73
39118|code|BLX             strcmp|255-247-240-237
39122|code|MOV             R7, R0|7-70
39124|code|CBZ             R0, loc_98E0|32-177
39126|code|LDR             R0, =aTypeHelpForALi; "type \"help\" for a list of commands"|19-72
39128|code|BLX             puts|255-247-180-237
39132|code|MOVS            R0, #0|0-32
39134|code|POP             {R3-R7,PC}|248-189
39136|code|MOV             R0, R6|48-70
39138|code|ADDS            R1, R5, #4|41-29
39140|code|BL              sub_96D0|255-247-244-254
39144|code|MOV             R0, R7|56-70
39146|code|POP             {R3-R7,PC}|248-189
39148|code|BL              sub_9638|255-247-164-254
39152|code|MOV             R0, R7|56-70
39154|code|POP             {R3-R7,PC}|248-189
39156|code|POP             {R3-R7,PC}|248-189
39158|code|MOV             R0, R6|48-70
39160|code|ADDS            R1, R5, #4|41-29
39162|code|BL              sub_9814|255-247-139-255
39166|code|MOV             R0, R7|56-70
39168|code|POP             {R3-R7,PC}|248-189
39170|code|MOV             R0, R6|48-70
39172|code|ADDS            R1, R5, #4|41-29
39174|code|BL              sub_97E4|255-247-109-255
39178|code|MOV             R0, R7|56-70
39180|code|POP             {R3-R7,PC}|248-189
39182|data|ALIGN 0x10|0-191
39184|data|DCD aHelp; "help"|224-226-0-0
39188|data|DCD aQuit; "quit"|232-226-0-0
39192|data|DCD aAuth; "auth"|240-226-0-0
39196|data|DCD aSeturl; "seturl"|248-226-0-0
39200|data|DCD aPost; "post"|0-227-0-0
39204|data|DCD aTypeHelpForALi; "type \"help\" for a list of commands"|8-227-0-0
39208|code|PUSH.W          {R4-R9,LR}|45-233-240-67
39212|code|SUB             SP, SP, #0x8C|163-176
39214|code|LDR             R6, =__stack_chk_guard|22-78
39216|code|MOV             R7, R0|7-70
39218|code|LDR             R5, =stdout|22-77
39220|code|LDR             R4, =stdin|22-76
39222|code|LDR             R3, [R6]|51-104
39224|code|STR             R3, [SP,#0x84]|33-147
39226|code|LDR             R0, =aHttppower; "httppower> "|22-72
39228|code|BLX             printf|255-247-26-237
39232|code|LDR             R0, [R5]|40-104
39234|code|BLX             fflush|255-247-238-236
39238|code|LDR             R2, [R4]|34-104
39240|code|ADD             R0, SP, #4|1-168
39242|code|MOVS            R1, #0x80|128-33
39244|code|BLX             fgets|255-247-144-236
39248|code|CBNZ            R0, loc_9960|48-185
39250|code|LDR             R2, [SP,#0x84]|33-154
39252|code|LDR             R3, [R6]|51-104
39254|code|CMP             R2, R3|154-66
39256|code|BNE             loc_9982|19-209
39258|code|ADD             SP, SP, #0x8C|35-176
39260|code|POP.W           {R4-R9,PC}|189-232-240-131
39264|code|LDR             R1, =(aNothingToPost+0x10); ""|13-73
39266|code|ADD             R0, SP, #4|1-168
39268|code|BL              sub_D26C|3-240-130-252
39272|code|MOV             R8, R0|128-70
39274|code|MOV             R0, R7|56-70
39276|code|MOV             R1, R8|65-70
39278|code|BL              sub_9864|255-247-121-255
39282|code|MOV             R9, R0|129-70
39284|code|MOV             R0, R8|64-70
39286|code|BL              sub_D3AC|3-240-25-253
39290|code|CMP.W           R9, #0|185-241-0-15
39294|code|BEQ             loc_993A|220-208
39296|code|B               loc_9952|231-231
39298|code|BLX             __stack_chk_fail|255-247-58-237
39302|data|ALIGN 4|0-191
39304|data|DCD __stack_chk_guard|216-116-1-0
39308|data|DCD stdout|228-116-1-0
39312|data|DCD stdin|224-116-1-0
39316|data|DCD aHttppower; "httppower> "|44-227-0-0
39320|data|DCD aNothingToPost+0x10; ""|152-226-0-0
39324|code|PUSH            {R3,LR}|8-181
39326|code|MOV             R3, #0x174E8|71-242-232-67-192-242-1-3
39334|code|MOVW            R0, #0xE338|78-242-56-48
39338|code|MOVS            R1, #1|1-33
39340|code|MOVT.W          R0, #0|192-242-0-0
39344|code|LDR             R3, [R3]|27-104
39346|code|MOVS            R2, #0x1D|29-34
39348|code|BLX             fwrite|255-247-246-236
39352|code|MOVS            R0, #1|1-32
39354|code|BLX             exit|255-247-128-237
39358|data|ALIGN 0x10|0-191
39360|code|MOV             R3, #0x174C4|71-242-196-67-192-242-1-3
39368|code|MOVS            R2, #0|0-34
39370|code|STR             R2, [R3]|26-96
39372|code|BX              LR|112-71
39374|data|ALIGN 0x10|0-191
39376|code|MOV             R3, #0x175FC|71-242-252-83-192-242-1-3
39384|code|STR             R0, [R3]|24-96
39386|code|BX              LR|112-71
39388|code|PUSH            {R1-R3}|14-180
39390|code|LDR             R1, =dword_175FC|54-73
39392|code|PUSH            {R4-R7,LR}|240-181
39394|code|SUB.W           SP, SP, #0x418|173-245-131-109
39398|code|LDR             R5, =__stack_chk_guard|53-77
39400|code|LDR             R4, [R1]|12-104
39402|code|LDR.W           R2, [SP,#0x438+varg_r1]; format|221-248-44-36
39406|code|LDR             R3, [R5]|43-104
39408|code|ANDS            R4, R0|4-64
39410|code|CMP             R4, R0|132-66
39412|code|STR.W           R3, [SP,#0x438+var_24]|205-248-20-52
39416|code|BEQ             loc_9A12|11-208
39418|code|LDR.W           R2, [SP,#0x438+var_24]|221-248-20-36
39422|code|LDR             R3, [R5]|43-104
39424|code|CMP             R2, R3|154-66
39426|code|BNE             loc_9AB4|87-209
39428|code|ADD             SP, SP, #0x18|6-176
39430|code|ADD.W           SP, SP, #0x400|13-245-128-109
39434|code|POP.W           {R4-R7,LR}|189-232-240-64
39438|code|ADD             SP, SP, #0xC|3-176
39440|code|BX              LR|112-71
39442|code|ADD.W           R6, SP, #0x438+varg_r2|13-245-134-102
39446|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
39450|code|ADD             R0, SP, #0x438+s; s|5-168
39452|code|STR             R6, [SP,#0x438+var_42C]|3-150
39454|code|MOV             R3, R6; arg|51-70
39456|code|BLX             vsnprintf|255-247-26-236
39460|code|LDR             R3, =dword_174C4|38-75
39462|code|LDR             R1, [R3]|25-104
39464|code|CBNZ            R1, loc_9A5C|193-185
39466|code|LDR.W           LR, =unk_E390|223-248-168-224
39470|code|CMP             R4, #1|1-44
39472|code|IT NE|24-191
39474|code|MOVNE           R3, LR|115-70
39476|code|BNE             loc_9A3E|3-209
39478|code|B               loc_9A54|13-224
39480|code|ADDS            R3, #8|8-51
39482|code|CMP             R4, R2|148-66
39484|code|BEQ             loc_9A54|10-208
39486|code|LDR             R2, [R3,#8]|154-104
39488|code|ADDS            R1, #1|1-49
39490|code|CMP             R2, #0|0-42
39492|code|BNE             loc_9A38|248-209
39494|code|LDR             R2, =aUnknown; "<unknown>"|31-74
39496|code|MOVS            R0, #7; pri|7-32
39498|code|LDR             R1, =aSS; "%s: %s"|31-73
39500|code|ADD             R3, SP, #0x438+s|5-171
39502|code|BLX             syslog|255-247-240-235
39506|code|B               loc_99FA|210-231
39508|code|ADD.W           R1, LR, R1,LSL#3|14-235-193-1
39512|code|LDR             R2, [R1,#4]|74-104
39514|code|B               loc_9A48|245-231
39516|code|LDR             R3, =stderr|27-75
39518|code|MOVS            R0, #0; timer|0-32
39520|code|LDR             R7, [R3]|31-104
39522|code|BLX             time|255-247-166-236
39526|code|MOV             R3, R0|3-70
39528|code|ADD             R0, SP, #0x438+timer; timer|4-168
39530|code|STR             R3, [SP,#0x438+timer]|4-147
39532|code|BLX             ctime|255-247-136-236
39536|code|MOV             R6, R0|6-70
39538|code|BLX             strlen|255-247-98-236
39542|code|LDR.W           LR, =unk_E390|223-248-92-224
39546|code|ADDS            R3, R6, R0|51-24
39548|code|MOVS            R0, #0|0-32
39550|code|CMP             R4, #1|1-44
39552|code|STRB.W          R0, [R3,#-1]|3-248-1-12
39556|code|IT NE|24-191
39558|code|MOVNE           R3, LR|115-70
39560|code|BNE             loc_9A92|3-209
39562|code|B               loc_9AAC|15-224
39564|code|ADDS            R3, #8|8-51
39566|code|CMP             R4, R2|148-66
39568|code|BEQ             loc_9AAC|12-208
39570|code|LDR             R2, [R3,#8]|154-104
39572|code|ADDS            R0, #1|1-48
39574|code|CMP             R2, #0|0-42
39576|code|BNE             loc_9A8C|248-209
39578|code|LDR             R3, =aUnknown; "<unknown>"|10-75
39580|code|ADD             R2, SP, #0x438+s|5-170
39582|code|MOV             R0, R7; stream|56-70
39584|code|STR             R2, [SP,#0x438+var_438]|0-146
39586|code|MOV             R2, R6|50-70
39588|code|LDR             R1, =aSSS_0; "%s %s: %s\n"|10-73
39590|code|BLX             fprintf|255-247-156-236
39594|code|B               loc_99FA|166-231
39596|code|ADD.W           R0, LR, R0,LSL#3|14-235-192-0
39600|code|LDR             R3, [R0,#4]|67-104
39602|code|B               loc_9A9C|243-231
39604|code|BLX             __stack_chk_fail|255-247-160-236
39608|data|DCD dword_175FC|252-117-1-0
39612|data|DCD __stack_chk_guard|216-116-1-0
39616|data|DCD dword_174C4|196-116-1-0
39620|data|DCD aUnknown; "<unknown>"|212-227-0-0
39624|data|DCD aSS; "%s: %s"|236-227-0-0
39628|data|DCD stderr|232-116-1-0
39632|data|DCD aSSS_0; "%s %s: %s\n"|224-227-0-0
39636|data|DCD unk_E390|144-227-0-0
39640|code|PUSH.W          {R4-R10,LR}|45-233-240-71
39644|code|MOV.W           R8, R1,LSL#2|79-234-129-8
39648|code|MOV             R9, R0|129-70
39650|code|ADD.W           R0, R8, #1|8-241-1-0
39654|code|MOV             R6, R1|14-70
39656|code|BL              sub_D910|3-240-18-255
39660|code|MOVS            R5, #0|0-37
39662|code|CMP             R6, #0|0-46
39664|code|MOV             R7, R0|7-70
39666|code|BLE             loc_9B72|62-221
39668|code|MOV             R4, R5|44-70
39670|code|B               loc_9B30|27-224
39672|code|CMP.W           R10, #0xD|186-241-13-15
39676|code|BEQ             loc_9B56|43-208
39678|code|CMP.W           R10, #9|186-241-9-15
39682|code|BEQ             loc_9B48|33-208
39684|code|BLX             __ctype_b_loc|255-247-96-236
39688|code|LDR             R3, [R0]|3-104
39690|code|LDRH.W          R3, [R3,R10,LSL#1]|51-248-26-48
39694|code|LSLS            R3, R3, #0x11|91-4
39696|code|BPL             loc_9B64|40-213
39698|code|STRB.W          R10, [R7,R5]|7-248-5-160
39702|code|ADDS            R5, #1|1-53
39704|code|SUBS            R3, R4, R6|163-27
39706|code|IT NE|24-191
39708|code|MOVNE           R3, #1|1-35
39710|code|CMP             R5, R8|69-69
39712|code|ITE LE|212-191
39714|code|MOVLE           R3, #0|0-35
39716|code|ANDGT.W         R3, R3, #1|3-240-1-3
39720|code|CBNZ            R3, loc_9B7C|67-187
39722|code|ADDS            R4, #1|1-52
39724|code|CMP             R4, R6|180-66
39726|code|BEQ             loc_9B72|32-208
39728|code|LDRB.W          R10, [R9,R4]|25-248-4-160
39732|code|CMP.W           R10, #0xA|186-241-10-15
39736|code|BNE             loc_9AF8|222-209
39738|code|ADDS            R0, R7, R5|120-25
39740|code|LDR             R1, =aN; "\\n"|18-73
39742|code|MOVS            R2, #3|3-34
39744|code|ADDS            R5, #2|2-53
39746|code|BLX             memcpy|255-247-12-236
39750|code|B               loc_9B18|231-231
39752|code|ADDS            R0, R7, R5|120-25
39754|code|LDR             R1, =aT; "\\t"|16-73
39756|code|MOVS            R2, #3|3-34
39758|code|ADDS            R5, #2|2-53
39760|code|BLX             memcpy|255-247-4-236
39764|code|B               loc_9B18|224-231
39766|code|ADDS            R0, R7, R5|120-25
39768|code|LDR             R1, =aR; "\\r"|13-73
39770|code|MOVS            R2, #3|3-34
39772|code|ADDS            R5, #2|2-53
39774|code|BLX             memcpy|255-247-254-235
39778|code|B               loc_9B18|217-231
39780|code|ADDS            R0, R7, R5|120-25
39782|code|LDR             R1, =a3o; "\\%.3o"|11-73
39784|code|MOV             R2, R10|82-70
39786|code|ADDS            R5, #4|4-53
39788|code|BLX             sprintf|255-247-178-236
39792|code|B               loc_9B18|210-231
39794|code|MOVS            R3, #0|0-35
39796|code|MOV             R0, R7|56-70
39798|code|STRB            R3, [R7,R5]|123-85
39800|code|POP.W           {R4-R10,PC}|189-232-240-135
39804|code|LDR             R0, =aJStrsizeILen; "j <= strsize || i == len"|6-72
39806|code|MOVS            R2, #0x91|145-34
39808|code|LDR             R1, =aDebugC; "debug.c"|6-73
39810|code|LDR             R3, =aDbgMemstr; "dbg_memstr"|7-75
39812|code|BLX             __assert_fail|255-247-140-235
39816|data|DCD aN; "\\n"|248-227-0-0
39820|data|DCD aT; "\\t"|252-227-0-0
39824|data|DCD aR; "\\r"|244-227-0-0
39828|data|DCD a3o; "\\%.3o"|0-228-0-0
39832|data|DCD aJStrsizeILen; "j <= strsize || i == len"|8-228-0-0
39836|data|DCD aDebugC; "debug.c"|36-228-0-0
39840|data|DCD aDbgMemstr; "dbg_memstr"|200-227-0-0
39844|code|PUSH.W          {R4-R9,LR}|45-233-240-67
39848|code|SUB.W           SP, SP, #0x410|173-245-130-109
39852|code|LDR             R4, =__stack_chk_guard|40-76
39854|code|SUB             SP, SP, #4|129-176
39856|code|MOV             R6, R0|6-70
39858|code|MOV             R9, R1|137-70
39860|code|MOV             R8, R2|144-70
39862|code|LDR             R5, =dword_17600|39-77
39864|code|LDR             R3, [R4]|35-104
39866|code|STR.W           R3, [SP,#0x430+var_24]|205-248-12-52
39870|code|BLX             __errno_location|255-247-132-236
39874|code|LDR             R3, [R5]|43-104
39876|code|LDR             R7, [R0]|7-104
39878|code|CMP             R3, #0|0-43
39880|code|BEQ             loc_9C40|58-208
39882|code|MOV             R3, R8; arg|67-70
39884|code|ADD             R0, SP, #0x430+s; s|3-168
39886|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
39890|code|MOV             R2, R9; format|74-70
39892|code|BLX             vsnprintf|255-247-64-235
39896|code|LDR             R3, =dword_174C8|31-75
39898|code|LDR             R3, [R3]|27-104
39900|code|CBNZ            R6, loc_9C00|134-185
39902|code|CMP             R3, #0|0-43
39904|code|BNE             loc_9C30|38-209
39906|code|MOVS            R0, #3; pri|3-32
39908|code|LDR             R1, =(aRegcompFailedS+0x10); fmt|29-73
39910|code|ADD             R2, SP, #0x430+s|3-170
39912|code|BLX             syslog|255-247-34-235
39916|code|LDR.W           R2, [SP,#0x430+var_24]|221-248-12-36
39920|code|LDR             R3, [R4]|35-104
39922|code|CMP             R2, R3|154-66
39924|code|BNE             loc_9C4C|42-209
39926|code|ADD             SP, SP, #0x14|5-176
39928|code|ADD.W           SP, SP, #0x400|13-245-128-109
39932|code|POP.W           {R4-R9,PC}|189-232-240-131
39936|code|MOV             R0, R7; errnum|56-70
39938|code|CBZ             R3, loc_9C1E|99-177
39940|code|LDR             R3, =stderr|22-75
39942|code|LDR             R5, [R5]|45-104
39944|code|LDR             R6, [R3]|30-104
39946|code|BLX             strerror|255-247-250-234
39950|code|LDR             R1, =aSSS; "%s: %s: %s\n"|21-73
39952|code|MOV             R2, R5|42-70
39954|code|ADD             R3, SP, #0x430+s|3-171
39956|code|STR             R0, [SP,#0x430+var_430]|0-144
39958|code|MOV             R0, R6; stream|48-70
39960|code|BLX             fprintf|255-247-226-235
39964|code|B               loc_9BEC|230-231
39966|code|BLX             strerror|255-247-240-234
39970|code|LDR             R1, =aSS; "%s: %s"|17-73
39972|code|ADD             R2, SP, #0x430+s|3-170
39974|code|MOV             R3, R0|3-70
39976|code|MOVS            R0, #3; pri|3-32
39978|code|BLX             syslog|255-247-2-235
39982|code|B               loc_9BEC|221-231
39984|code|LDR             R3, =stderr|11-75
39986|code|LDR             R2, [R5]|42-104
39988|code|LDR             R1, =(aSSS+4); format|13-73
39990|code|LDR             R0, [R3]; stream|24-104
39992|code|ADD             R3, SP, #0x430+s|3-171
39994|code|BLX             fprintf|255-247-210-235
39998|code|B               loc_9BEC|213-231
40000|code|LDR             R0, =aErrProgVoid0; "err_prog != ((void *)0)"|11-72
40002|code|MOVS            R2, #0x49 ; 'I'; line|73-34
40004|code|LDR             R1, =aErrorC; "error.c"|11-73
40006|code|LDR             R3, =aVerr; "_verr"|12-75
40008|code|BLX             __assert_fail|255-247-42-235
40012|code|BLX             __stack_chk_fail|255-247-212-235
40016|data|DCD __stack_chk_guard|216-116-1-0
40020|data|DCD dword_17600|0-118-1-0
40024|data|DCD dword_174C8|200-116-1-0
40028|data|DCD aRegcompFailedS+0x10; "%s"|84-241-0-0
40032|data|DCD stderr|232-116-1-0
40036|data|DCD aSSS; "%s: %s: %s\n"|132-228-0-0
40040|data|DCD aSS; "%s: %s"|236-227-0-0
40044|data|DCD aSSS+4; "%s: %s\n"|136-228-0-0
40048|data|DCD aErrProgVoid0; "err_prog != ((void *)0)"|100-228-0-0
40052|data|DCD aErrorC; "error.c"|124-228-0-0
40056|data|DCD aVerr; "_verr"|92-228-0-0
40060|code|PUSH            {R4,LR}|16-181
40062|code|MOVS            R1, #0x2F ; '/'|47-33
40064|code|MOV             R4, R0|4-70
40066|code|BLX             strrchr|255-247-8-235
40070|code|CBZ             R0, loc_9C8A|0-177
40072|code|ADDS            R4, R0, #1|68-28
40074|code|LDR             R3, =dword_17600|1-75
40076|code|STR             R4, [R3]|28-96
40078|code|POP             {R4,PC}|16-189
40080|data|DCD dword_17600|0-118-1-0
40084|code|MOV             R3, #0x174C8|71-242-200-67-192-242-1-3
40092|code|MOVS            R2, #0|0-34
40094|code|STR             R2, [R3]|26-96
40096|code|BX              LR|112-71
40098|data|ALIGN 4|0-191
40100|code|PUSH            {R1-R3}|14-180
40102|code|PUSH            {LR}|0-181
40104|code|SUB             SP, SP, #8|130-176
40106|code|ADD             R3, SP, #0x18+varg_r1|3-171
40108|code|LDR.W           R1, [R3],#4|83-248-4-27
40112|code|MOV             R2, R3|26-70
40114|code|STR             R3, [SP,#0x18+var_14]|1-147
40116|code|BL              sub_9BA4|255-247-118-255
40120|code|BL              sub_D904|3-240-36-254
40124|code|MOV             R1, #0xE490|78-242-144-65-192-242-0-1
40132|code|MOV             R2, R0|2-70
40134|code|MOVS            R0, #0x10|16-32
40136|code|BL              sub_99DC|255-247-136-254
40140|code|MOVS            R0, #1; status|1-32
40142|code|BLX             exit|255-247-246-235
40146|data|ALIGN 4|0-191
40148|code|PUSH            {R1-R3}|14-180
40150|code|PUSH            {LR}|0-181
40152|code|SUB             SP, SP, #8|130-176
40154|code|ADD             R2, SP, #0x18+varg_r1|3-170
40156|code|LDR.W           R1, [R2],#4|82-248-4-27
40160|code|STR             R2, [SP,#0x18+var_14]|1-146
40162|code|BL              sub_9BA4|255-247-95-255
40166|code|ADD             SP, SP, #8|2-176
40168|code|POP.W           {LR}|93-248-4-235
40172|code|ADD             SP, SP, #0xC|3-176
40174|code|BX              LR|112-71
40176|code|MOVW            R1, #0xF154|79-242-84-17
40180|code|MOVS            R0, #1|1-32
40182|code|PUSH            {R3,LR}|8-181
40184|code|MOVT.W          R1, #0|192-242-0-1
40188|code|BL              sub_9CA4|255-247-210-255
40192|code|MOVW            R1, #0xE4B4|78-242-180-65
40196|code|MOVS            R0, #0|0-32
40198|code|PUSH            {R3,LR}|8-181
40200|code|MOVT.W          R1, #0|192-242-0-1
40204|code|BL              sub_9CA4|255-247-202-255
40208|code|CMP             R1, R3|153-66
40210|code|PUSH.W          {R4-R9}|45-233-240-3
40214|code|BEQ             loc_9DE2|100-208
40216|code|MOV             R7, #0xCCCCCCCD|76-246-205-71-204-246-204-71
40224|code|LDR             R5, [R1]|13-104
40226|code|UMULL.W         R4, R0, R7, R0|167-251-0-64
40230|code|LSRS            R0, R0, #3|192-8
40232|code|BEQ             loc_9DE6|93-208
40234|code|MOVS            R6, #1|1-38
40236|code|MOV             R4, R0|4-70
40238|code|UMULL.W         R8, R4, R7, R4|167-251-4-132
40242|code|ADDS            R6, #1|1-54
40244|code|LSRS            R4, R4, #3|228-8
40246|code|BNE             loc_9D2E|250-209
40248|code|CMP             R5, R6|181-66
40250|code|LDR             R4, [R3]|28-104
40252|code|ITE GT|204-191
40254|code|RSBGT.W         R6, R6, R5|198-235-5-6
40258|code|MOVLE           R6, #0|0-38
40260|code|MOVS            R7, #1|1-39
40262|code|CBZ             R0, loc_9D5C|72-177
40264|code|MOVW            R12, #0xCCCD|76-246-205-76
40268|code|MOVS            R7, #1|1-39
40270|code|MOVT.W          R12, #0xCCCC|204-246-204-76
40274|code|UMULL.W         R9, R0, R12, R0|172-251-0-144
40278|code|ADDS            R7, #1|1-55
40280|code|LSRS            R0, R0, #3|192-8
40282|code|BNE             loc_9D52|250-209
40284|code|MOV             R8, #0xCCCCCCCD|76-246-205-72-204-246-204-72
40292|code|CMP             R4, R7|188-66
40294|code|UMULL.W         R0, R2, R8, R2|168-251-2-2
40298|code|ITE GT|204-191
40300|code|RSBGT.W         R12, R7, R4|199-235-4-12
40304|code|MOVLE.W         R12, #0|79-240-0-12
40308|code|LSRS            R2, R2, #3|210-8
40310|code|BEQ             loc_9DEA|56-208
40312|code|MOVS            R7, #1|1-39
40314|code|MOV             R0, R2|16-70
40316|code|UMULL.W         R9, R0, R8, R0|168-251-0-144
40320|code|ADDS            R7, #1|1-55
40322|code|LSRS            R0, R0, #3|192-8
40324|code|BNE             loc_9D7C|250-209
40326|code|CMP             R4, R7|188-66
40328|code|ITE GT|204-191
40330|code|RSBGT.W         R7, R7, R4|199-235-4-7
40334|code|MOVLE           R7, #0|0-39
40336|code|MOVS            R0, #1|1-32
40338|code|CBZ             R2, loc_9DA8|74-177
40340|code|MOVW            R8, #0xCCCD|76-246-205-72
40344|code|MOVS            R0, #1|1-32
40346|code|MOVT.W          R8, #0xCCCC|204-246-204-72
40350|code|UMULL.W         R9, R2, R8, R2|168-251-2-146
40354|code|ADDS            R0, #1|1-48
40356|code|LSRS            R2, R2, #3|210-8
40358|code|BNE             loc_9D9E|250-209
40360|code|CMP             R5, R0|133-66
40362|code|ITE GT|204-191
40364|code|RSBGT.W         R2, R0, R5|192-235-5-2
40368|code|MOVLE           R2, #0|0-34
40370|code|SUBS.W          R6, R6, R12|182-235-12-6
40374|code|IT NE|24-191
40376|code|MOVNE           R6, #1|1-38
40378|code|CMP             R7, R2|151-66
40380|code|ITE EQ|12-191
40382|code|MOVEQ           R0, #0|0-32
40384|code|ANDNE.W         R0, R6, #1|6-240-1-0
40388|code|CBNZ            R0, loc_9DD2|40-185
40390|code|CBZ             R6, loc_9DD6|54-177
40392|code|CMP             R7, R2|151-66
40394|code|BEQ             loc_9DDC|7-208
40396|code|POP.W           {R4-R9}|189-232-240-3
40400|code|BX              LR|112-71
40402|code|MOVS            R0, #0|0-32
40404|code|B               loc_9DCC|250-231
40406|code|STR             R4, [R1]|12-96
40408|code|MOVS            R0, #1|1-32
40410|code|B               loc_9DCC|247-231
40412|code|STR             R5, [R3]|29-96
40414|code|MOVS            R0, #1|1-32
40416|code|B               loc_9DCC|244-231
40418|code|MOVS            R0, #1|1-32
40420|code|B               loc_9DCC|242-231
40422|code|MOVS            R6, #1|1-38
40424|code|B               loc_9D38|166-231
40426|code|MOVS            R7, #1|1-39
40428|code|B               loc_9D86|203-231
40430|data|ALIGN 0x10|0-191
40432|code|PUSH            {R4,LR}|16-181
40434|code|MOV             R4, R0|4-70
40436|code|CBZ             R0, locret_9E14|112-177
40438|code|LDR             R0, [R0]; ptr|0-104
40440|code|MOVS            R3, #0|0-35
40442|code|STR             R3, [R4,#0xC]|227-96
40444|code|CBZ             R0, loc_9E02|8-177
40446|code|BLX             free|255-247-102-234
40450|code|LDR             R0, [R4,#4]; ptr|96-104
40452|code|CBZ             R0, loc_9E0A|8-177
40454|code|BLX             free|255-247-98-234
40458|code|MOV             R0, R4|32-70
40460|code|POP.W           {R4,LR}|189-232-16-64
40464|code|B.W             j_free|255-247-90-186
40468|code|POP             {R4,PC}|16-189
40470|data|ALIGN 4|0-191
40472|code|PUSH            {R4,LR}|16-181
40474|code|MOV             R4, R0|4-70
40476|code|CBZ             R0, locret_9E30|64-177
40478|code|LDR             R0, [R0]; ptr|0-104
40480|code|CBZ             R0, loc_9E26|8-177
40482|code|BLX             free|255-247-84-234
40486|code|MOV             R0, R4|32-70
40488|code|POP.W           {R4,LR}|189-232-16-64
40492|code|B.W             j_free|255-247-76-186
40496|code|POP             {R4,PC}|16-189
40498|data|ALIGN 4|0-191
40500|code|PUSH.W          {R4-R8,LR}|45-233-240-65
40504|code|SUB             SP, SP, #8|130-176
40506|code|MOVS            R3, #0|0-35
40508|code|MOV             R5, R0|5-70
40510|code|STR             R3, [SP,#0x20+endptr]|1-147
40512|code|CMP             R0, #0|0-40
40514|code|BEQ.W           loc_9F92|0-240-166-128
40518|code|MOVS            R0, #0x10; size|16-32
40520|code|BLX             malloc|255-247-208-234
40524|code|MOV             R6, R0|6-70
40526|code|CMP             R0, #0|0-40
40528|code|BEQ             loc_9F18|98-208
40530|code|MOV             R0, R5; s|40-70
40532|code|BLX             strlen|255-247-112-234
40536|code|SUBS            R4, R0, #1|68-30
40538|code|BMI             loc_9E72|10-212
40540|code|BLX             __ctype_b_loc|255-247-180-234
40544|code|LDR             R2, [R0]|2-104
40546|code|B               loc_9E68|1-224
40548|code|SUBS            R4, #1|1-60
40550|code|BMI             loc_9E72|4-212
40552|code|LDRB            R3, [R5,R4]|43-93
40554|code|LDRH.W          R3, [R2,R3,LSL#1]|50-248-19-48
40558|code|LSLS            R3, R3, #0x14|27-5
40560|code|BMI             loc_9E64|248-212
40562|code|MOV             R0, R5|40-70
40564|code|BLX             __strdup|255-247-16-235
40568|code|MOV             R8, R0|128-70
40570|code|STR             R0, [R6]|48-96
40572|code|CMP             R0, #0|0-40
40574|code|BEQ             loc_9F32|88-208
40576|code|MOVS            R3, #0|0-35
40578|code|MOV             R0, R5; s|40-70
40580|code|STR             R3, [R6,#8]|179-96
40582|code|STR             R3, [R6,#4]|115-96
40584|code|STR             R3, [R6,#0xC]|243-96
40586|code|BLX             strlen|255-247-86-234
40590|code|SUBS            R0, #1|1-56
40592|code|CMP             R4, R0|132-66
40594|code|BEQ             loc_9ED0|29-208
40596|code|ADDS            R7, R4, #1|103-28
40598|code|MOVS            R2, #0xA; base|10-34
40600|code|ADD.W           R0, R8, R7; nptr|8-235-7-0
40604|code|ADD             R1, SP, #0x20+endptr; endptr|1-169
40606|code|STR             R0, [R6,#0xC]|240-96
40608|code|BLX             strtoul|255-247-80-234
40612|code|LDR             R3, [SP,#0x20+endptr]|1-155
40614|code|STR             R0, [R6,#8]|176-96
40616|code|LDRB.W          R8, [R3]|147-248-0-128
40620|code|CMP.W           R8, #0|184-241-0-15
40624|code|BNE             loc_9EB8|2-209
40626|code|CMP.W           R0, #0x2000000|176-241-0-127
40630|code|BLS             loc_9EFC|33-217
40632|code|MOV             R0, R5|40-70
40634|code|BLX             __strdup|255-247-238-234
40638|code|STR             R0, [R6,#4]|112-96
40640|code|CMP             R0, #0|0-40
40642|code|BEQ             loc_9F52|70-208
40644|code|MOVS            R3, #0|0-35
40646|code|STR             R3, [R6,#0xC]|243-96
40648|code|MOV             R0, R6|48-70
40650|code|ADD             SP, SP, #8|2-176
40652|code|POP.W           {R4-R8,PC}|189-232-240-129
40656|code|MOV             R0, R5|40-70
40658|code|BLX             __strdup|255-247-226-234
40662|code|STR             R0, [R6,#4]|112-96
40664|code|CMP             R0, #0|0-40
40666|code|BNE             loc_9EC8|245-209
40668|code|MOV             R0, R6|48-70
40670|code|BL              sub_9DF0|255-247-135-255
40674|code|BLX             __errno_location|255-247-242-234
40678|code|MOVS            R2, #0xC|12-34
40680|code|MOV.W           R1, #0x1FE|79-244-255-113
40684|code|MOV             R3, R0|3-70
40686|code|LDR             R0, =aHostlistC; "hostlist.c"|44-72
40688|code|STR             R2, [R3]|26-96
40690|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|44-74
40692|code|BL              sub_9D00|255-247-4-255
40696|code|MOV             R6, R0|6-70
40698|code|B               loc_9EC8|229-231
40700|code|ADDS            R0, R4, #2; size|160-28
40702|code|BLX             malloc|255-247-118-234
40706|code|MOV             R4, R0|4-70
40708|code|STR             R0, [R6,#4]|112-96
40710|code|CMP             R0, #0|0-40
40712|code|BEQ             loc_9F72|51-208
40714|code|MOV             R1, R5; src|41-70
40716|code|MOV             R2, R7; n|58-70
40718|code|BLX             memcpy|255-247-38-234
40722|code|STRB.W          R8, [R4,R7]|4-248-7-128
40726|code|B               loc_9EC8|215-231
40728|code|BLX             __errno_location|255-247-214-234
40732|code|MOVS            R2, #0xC|12-34
40734|code|MOV.W           R1, #0x1EE|79-244-247-113
40738|code|MOV             R3, R0|3-70
40740|code|LDR             R0, =aHostlistC; "hostlist.c"|30-72
40742|code|STR             R2, [R3]|26-96
40744|code|LDR             R2, =aHostnameCreate; "hostname create"|31-74
40746|code|BL              sub_9D00|255-247-233-254
40750|code|MOV             R6, R0|6-70
40752|code|B               loc_9EC8|202-231
40754|code|MOV             R0, R6; ptr|48-70
40756|code|BLX             free|255-247-202-233
40760|code|BLX             __errno_location|255-247-198-234
40764|code|MOVS            R2, #0xC|12-34
40766|code|MOV.W           R1, #0x1F4|79-244-250-113
40770|code|MOV             R3, R0|3-70
40772|code|LDR             R0, =aHostlistC; "hostlist.c"|22-72
40774|code|STR             R2, [R3]|26-96
40776|code|LDR             R2, =aHostnameCreate; "hostname create"|23-74
40778|code|BL              sub_9D00|255-247-217-254
40782|code|MOV             R6, R0|6-70
40784|code|B               loc_9EC8|186-231
40786|code|MOV             R0, R6|48-70
40788|code|BL              sub_9DF0|255-247-76-255
40792|code|BLX             __errno_location|255-247-182-234
40796|code|MOVS            R2, #0xC|12-34
40798|code|MOV.W           R1, #0x210|79-244-4-113
40802|code|MOV             R3, R0|3-70
40804|code|LDR             R0, =aHostlistC; "hostlist.c"|14-72
40806|code|STR             R2, [R3]|26-96
40808|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|14-74
40810|code|BL              sub_9D00|255-247-201-254
40814|code|MOV             R6, R0|6-70
40816|code|B               loc_9EC8|170-231
40818|code|MOV             R0, R6|48-70
40820|code|BL              sub_9DF0|255-247-60-255
40824|code|BLX             __errno_location|255-247-166-234
40828|code|MOVS            R2, #0xC|12-34
40830|code|MOVW            R1, #0x209|64-242-9-33
40834|code|MOV             R3, R0|3-70
40836|code|LDR             R0, =aHostlistC; "hostlist.c"|6-72
40838|code|STR             R2, [R3]|26-96
40840|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|6-74
40842|code|BL              sub_9D00|255-247-185-254
40846|code|MOV             R6, R0|6-70
40848|code|B               loc_9EC8|154-231
40850|code|LDR             R0, =aHostnameVoid0; "hostname != ((void *)0)"|6-72
40852|code|MOVW            R2, #0x1EB; line|64-242-235-18
40856|code|LDR             R1, =aHostlistC; "hostlist.c"|1-73
40858|code|LDR             R3, =aHostnameCreate_0; "hostname_create"|5-75
40860|code|BLX             __assert_fail|255-247-128-233
40864|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
40868|data|DCD aHostnamePrefix; "hostname prefix create"|100-232-0-0
40872|data|DCD aHostnameCreate; "hostname create"|84-232-0-0
40876|data|DCD aHostnameVoid0; "hostname != ((void *)0)"|48-232-0-0
40880|data|DCD aHostnameCreate_0; "hostname_create"|200-228-0-0
40884|code|PUSH            {R4-R7,LR}|240-181
40886|code|MOV             R4, R0|4-70
40888|code|LDRB            R7, [R0,#0x10]|7-124
40890|code|SUB             SP, SP, #0xC|131-176
40892|code|MOV             R5, R1|13-70
40894|code|LDR             R6, [R0]|6-104
40896|code|ANDS.W          R7, R7, #1|23-240-1-7
40900|code|BEQ             loc_9FD2|5-208
40902|code|LDR             R0, [R1]; s1|8-104
40904|code|MOV             R1, R6; s2|49-70
40906|code|BLX             strcmp|255-247-114-234
40910|code|CMP             R0, #0|0-40
40912|code|BEQ             loc_A00E|29-208
40914|code|LDR             R1, [R5,#4]; s2|105-104
40916|code|MOV             R0, R6; s1|48-70
40918|code|BLX             strcmp|255-247-108-234
40922|code|CBNZ            R0, loc_A008|168-185
40924|code|LDR             R3, [R5,#0xC]|235-104
40926|code|CBZ             R3, loc_A012|195-177
40928|code|LDR             R5, [R5,#8]|173-104
40930|code|LDR             R2, [R4,#8]|162-104
40932|code|CMP             R5, R2|149-66
40934|code|BHI             loc_A00A|16-216
40936|code|LDR             R6, [R4,#4]|102-104
40938|code|CMP             R5, R6|181-66
40940|code|BCC             loc_A00A|13-211
40942|code|MOV             R0, R3; s|24-70
40944|code|BLX             strlen|255-247-162-233
40948|code|ADD             R3, SP, #0x20+var_18|2-171
40950|code|ADD.W           R1, R4, #0xC|4-241-12-1
40954|code|MOV             R2, R5|42-70
40956|code|STR.W           R0, [R3,#-4]!|67-248-4-13
40960|code|MOV             R0, R6|48-70
40962|code|BL              sub_9D10|255-247-133-254
40966|code|B               loc_A00A|0-224
40968|code|MOVS            R0, #0|0-32
40970|code|ADD             SP, SP, #0xC|3-176
40972|code|POP             {R4-R7,PC}|240-189
40974|code|MOVS            R0, #1|1-32
40976|code|B               loc_A00A|251-231
40978|code|MOV             R0, R7|56-70
40980|code|B               loc_A00A|249-231
40982|data|ALIGN 4|0-191
40984|code|PUSH            {R3-R5,LR}|56-181
40986|code|MOV             R4, R0|4-70
40988|code|MOV             R5, R1|13-70
40990|code|CBZ             R0, loc_A042|128-177
40992|code|CBZ             R1, loc_A03C|97-177
40994|code|LDR             R0, [R0]; s1|0-104
40996|code|LDR             R1, [R1]; s2|9-104
40998|code|BLX             strcmp|255-247-68-234
41002|code|CBNZ            R0, locret_A040|72-185
41004|code|LDRB            R0, [R5,#0x10]|40-124
41006|code|LDRB            R3, [R4,#0x10]|35-124
41008|code|AND.W           R0, R0, #1|0-240-1-0
41012|code|AND.W           R3, R3, #1|3-240-1-3
41016|code|SUBS            R0, R0, R3|192-26
41018|code|POP             {R3-R5,PC}|56-189
41020|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
41024|code|POP             {R3-R5,PC}|56-189
41026|code|MOVS            R0, #1|1-32
41028|code|POP             {R3-R5,PC}|56-189
41030|data|ALIGN 4|0-191
41032|code|PUSH            {R2,R3}|12-180
41034|code|PUSH            {R4-R7,LR}|240-181
41036|code|SUB.W           SP, SP, #0x400|173-245-128-109
41040|code|SUB             SP, SP, #0xC|131-176
41042|code|LDR             R4, =__stack_chk_guard|21-76
41044|code|ADD.W           R7, SP, #0x428+varg_r2|13-245-132-103
41048|code|MOV             R6, R0|6-70
41050|code|MOV             R5, R1|13-70
41052|code|ADD             R0, SP, #0x428+s; s|1-168
41054|code|LDR.W           R2, [R7],#4; format|87-248-4-43
41058|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
41062|code|LDR.W           LR, [R4]|212-248-0-224
41066|code|MOV             R3, R7; arg|59-70
41068|code|STR             R7, [SP,#0x428+var_428]|0-151
41070|code|STR.W           LR, [SP,#0x428+var_24]|205-248-4-228
41074|code|BLX             vsnprintf|255-247-242-232
41078|code|CMP.W           R0, #0x400|176-245-128-111
41082|code|BLS             loc_A082|2-217
41084|code|MOVS            R3, #0|0-35
41086|code|STRB.W          R3, [SP,#0x428+var_25]|141-248-3-52
41090|code|ADD             R2, SP, #0x428+s|1-170
41092|code|MOV             R0, R6|48-70
41094|code|MOV             R1, R5|41-70
41096|code|BL              sub_9CF0|255-247-50-254
41100|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
41104|code|LDR             R3, [R4]|35-104
41106|code|CMP             R2, R3|154-66
41108|code|BNE             loc_A0A4|6-209
41110|code|ADD             SP, SP, #0xC|3-176
41112|code|ADD.W           SP, SP, #0x400|13-245-128-109
41116|code|POP.W           {R4-R7,LR}|189-232-240-64
41120|code|ADD             SP, SP, #8|2-176
41122|code|BX              LR|112-71
41124|code|BLX             __stack_chk_fail|255-247-168-233
41128|data|DCD __stack_chk_guard|216-116-1-0
41132|code|PUSH            {R3,LR}|8-181
41134|code|CBZ             R0, loc_A0C4|72-177
41136|code|LDRB            R3, [R0,#0x10]|3-124
41138|code|LSLS            R2, R3, #0x1F|218-7
41140|code|BMI             loc_A0C0|4-212
41142|code|LDR             R2, [R0,#8]|130-104
41144|code|LDR             R3, [R0,#4]|67-104
41146|code|ADDS            R0, R2, #1|80-28
41148|code|SUBS            R0, R0, R3|192-26
41150|code|POP             {R3,PC}|8-189
41152|code|MOVS            R0, #1|1-32
41154|code|POP             {R3,PC}|8-189
41156|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
41158|code|MOVW            R2, #0x281; line|64-242-129-34
41162|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
41164|code|LDR             R3, =aHostrangeCount; "hostrange_count"|3-75
41166|code|BLX             __assert_fail|255-247-232-232
41170|data|ALIGN 4|0-191
41172|data|DCD aHrVoid0; "hr != ((void *)0)"|124-232-0-0
41176|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
41180|data|DCD aHostrangeCount; "hostrange_count"|216-228-0-0
41184|code|PUSH            {R4,LR}|16-181
41186|code|CBZ             R0, loc_A0FC|88-177
41188|code|CBZ             R1, loc_A10A|137-177
41190|code|ADD.W           R4, R0, #0xC|0-241-12-4
41194|code|LDR             R2, [R1,#4]|74-104
41196|code|ADD.W           R3, R1, #0xC|1-241-12-3
41200|code|LDR             R0, [R0,#4]|64-104
41202|code|MOV             R1, R4|33-70
41204|code|POP.W           {R4,LR}|189-232-16-64
41208|code|B.W             sub_9D10|255-247-10-190
41212|code|LDR             R0, =aH0Void0; "h0 != ((void *)0)"|6-72
41214|code|MOVW            R2, #0x2FF; line|64-242-255-34
41218|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
41220|code|LDR             R3, =aHostrangeWidth; "hostrange_width_combine"|6-75
41222|code|BLX             __assert_fail|255-247-204-232
41226|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|6-72
41228|code|MOV.W           R2, #0x300; line|79-244-64-114
41232|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
41234|code|LDR             R3, =aHostrangeWidth; "hostrange_width_combine"|3-75
41236|code|BLX             __assert_fail|255-247-196-232
41240|data|DCD aH0Void0; "h0 != ((void *)0)"|144-232-0-0
41244|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
41248|data|DCD aHostrangeWidth; "hostrange_width_combine"|232-228-0-0
41252|data|DCD aH1Void0; "h1 != ((void *)0)"|164-232-0-0
41256|code|PUSH            {R3,LR}|8-181
41258|code|CBZ             R0, loc_A144|88-177
41260|code|LDR             R3, [R0,#8]|131-104
41262|code|LDR             R2, [R0,#4]|66-104
41264|code|CMP             R3, R2|147-66
41266|code|BCC             loc_A140|5-211
41268|code|SUB.W           R1, R3, #0xFFFFFFFF|163-241-255-49
41272|code|NEGS            R0, R1|72-66
41274|code|ADC.W           R0, R0, R1|64-235-1-0
41278|code|POP             {R3,PC}|8-189
41280|code|MOVS            R0, #1|1-32
41282|code|POP             {R3,PC}|8-189
41284|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
41286|code|MOVW            R2, #0x30A; line|64-242-10-50
41290|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
41292|code|LDR             R3, =aHostrangeEmpty; "hostrange_empty"|3-75
41294|code|BLX             __assert_fail|255-247-168-232
41298|data|ALIGN 4|0-191
41300|data|DCD aHrVoid0; "hr != ((void *)0)"|124-232-0-0
41304|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
41308|data|DCD aHostrangeEmpty; "hostrange_empty"|0-229-0-0
41312|code|PUSH            {R3,LR}|8-181
41314|code|BLX             __errno_location|255-247-178-233
41318|code|MOV             R3, #0xE848|78-246-72-3-192-242-0-3
41326|code|MOVS            R1, #0xC|12-33
41328|code|MOV             R2, #0xE8B8|78-246-184-2-192-242-0-2
41336|code|STR             R1, [R0]|1-96
41338|code|MOV             R0, R3|24-70
41340|code|MOVW            R1, #0x23E|64-242-62-33
41344|code|POP.W           {R3,LR}|189-232-8-64
41348|code|B.W             sub_9D00|255-247-188-189
41352|code|PUSH            {R4,LR}|16-181
41354|code|MOVS            R0, #0x18; size|24-32
41356|code|BLX             malloc|255-247-46-233
41360|code|MOV             R4, R0|4-70
41362|code|CBZ             R0, loc_A1CA|208-177
41364|code|MOVS            R0, #0x40 ; '@'; size|64-32
41366|code|MOVW            R3, #0xDEAD|77-246-173-99
41370|code|STR             R3, [R4]|35-96
41372|code|BLX             malloc|255-247-38-233
41376|code|STR             R0, [R4,#0x10]|32-97
41378|code|CBZ             R0, loc_A1C4|120-177
41380|code|MOVS            R3, #0|0-35
41382|code|MOV             R1, R3|25-70
41384|code|B               loc_A1AC|0-224
41386|code|LDR             R0, [R4,#0x10]|32-105
41388|code|STR             R1, [R0,R3]|193-80
41390|code|ADDS            R3, #4|4-51
41392|code|MOVS            R2, #0|0-34
41394|code|CMP             R3, #0x40 ; '@'|64-43
41396|code|BNE             loc_A1AA|249-209
41398|code|MOVS            R3, #0x10|16-35
41400|code|STR             R2, [R4,#8]|162-96
41402|code|STR             R3, [R4,#4]|99-96
41404|code|MOV             R0, R4|32-70
41406|code|STR             R2, [R4,#0xC]|226-96
41408|code|STR             R2, [R4,#0x14]|98-97
41410|code|POP             {R4,PC}|16-189
41412|code|MOV             R0, R4; ptr|32-70
41414|code|BLX             free|255-247-130-232
41418|code|BLX             __errno_location|255-247-126-233
41422|code|MOVS            R3, #0xC|12-35
41424|code|MOVW            R1, #0x402|64-242-2-65
41428|code|LDR             R2, =aHostlistCreate; "hostlist_create"|3-74
41430|code|STR             R3, [R0]|3-96
41432|code|LDR             R0, =aHostlistC; "hostlist.c"|3-72
41434|code|POP.W           {R4,LR}|189-232-16-64
41438|code|B.W             sub_9D00|255-247-143-189
41442|data|ALIGN 4|0-191
41444|data|DCD aHostlistCreate; "hostlist_create"|204-232-0-0
41448|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
41452|code|PUSH            {R3-R5,LR}|56-181
41454|code|MOV             R5, R0|5-70
41456|code|CMP             R0, #0|0-40
41458|code|BEQ             loc_A248|41-208
41460|code|MOVS            R0, #0x14; size|20-32
41462|code|BLX             malloc|255-247-250-232
41466|code|MOV             R4, R0|4-70
41468|code|CMP             R0, #0|0-40
41470|code|BEQ             loc_A23C|29-208
41472|code|MOV             R0, R5|40-70
41474|code|BLX             __strdup|255-247-74-233
41478|code|STR             R0, [R4]|32-96
41480|code|CBZ             R0, loc_A21E|72-177
41482|code|LDRB            R2, [R4,#0x10]|34-124
41484|code|MOVS            R3, #0|0-35
41486|code|MOV             R0, R4|32-70
41488|code|STR             R3, [R4,#4]|99-96
41490|code|ORR.W           R2, R2, #1|66-240-1-2
41494|code|STR             R3, [R4,#8]|163-96
41496|code|STRB            R2, [R4,#0x10]|34-116
41498|code|STR             R3, [R4,#0xC]|227-96
41500|code|POP             {R3-R5,PC}|56-189
41502|code|MOV             R0, R4; ptr|32-70
41504|code|BLX             free|255-247-84-232
41508|code|BLX             __errno_location|255-247-80-233
41512|code|MOVS            R3, #0xC|12-35
41514|code|MOVW            R1, #0x25B|64-242-91-33
41518|code|LDR             R2, =aHostrangeCreat; "hostrange create single"|10-74
41520|code|STR             R3, [R0]|3-96
41522|code|LDR             R0, =aHostlistC; "hostlist.c"|10-72
41524|code|POP.W           {R3-R5,LR}|189-232-56-64
41528|code|B.W             sub_9D00|255-247-98-189
41532|code|BL              sub_A160|255-247-144-255
41536|code|MOV             R4, R0|4-70
41538|code|CMP             R0, #0|0-40
41540|code|BEQ             loc_A224|238-208
41542|code|B               loc_A200|219-231
41544|code|LDR             R0, =aPrefixVoid0; "prefix != ((void *)0)"|5-72
41546|code|MOVW            R2, #0x249; line|64-242-73-34
41550|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
41552|code|LDR             R3, =aHostrangeCreat_0; "hostrange_create_single"|4-75
41554|code|BLX             __assert_fail|255-247-38-232
41558|data|ALIGN 4|0-191
41560|data|DCD aHostrangeCreat; "hostrange create single"|244-232-0-0
41564|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
41568|data|DCD aPrefixVoid0; "prefix != ((void *)0)"|220-232-0-0
41572|data|DCD aHostrangeCreat_0; "hostrange_create_single"|16-229-0-0
41576|code|PUSH.W          {R4-R8,LR}|45-233-240-65
41580|code|MOV             R4, R0|4-70
41582|code|MOV             R5, R1|13-70
41584|code|MOV             R6, R2|22-70
41586|code|MOV             R8, R3|152-70
41588|code|CMP             R0, #0|0-40
41590|code|BEQ             loc_A2CE|42-208
41592|code|MOVS            R0, #0x14; size|20-32
41594|code|BLX             malloc|255-247-184-232
41598|code|MOV             R7, R0|7-70
41600|code|CMP             R0, #0|0-40
41602|code|BEQ             loc_A2C2|30-208
41604|code|MOV             R0, R4|32-70
41606|code|BLX             __strdup|255-247-8-233
41610|code|STR             R0, [R7]|56-96
41612|code|CBZ             R0, loc_A2A4|80-177
41614|code|LDRB            R3, [R7,#0x10]|59-124
41616|code|MOV             R0, R7|56-70
41618|code|STR             R5, [R7,#4]|125-96
41620|code|BFC.W           R3, #0, #1|111-243-0-3
41624|code|STR             R6, [R7,#8]|190-96
41626|code|STR.W           R8, [R7,#0xC]|199-248-12-128
41630|code|STRB            R3, [R7,#0x10]|59-116
41632|code|POP.W           {R4-R8,PC}|189-232-240-129
41636|code|MOV             R0, R7; ptr|56-70
41638|code|BLX             free|255-247-18-232
41642|code|BLX             __errno_location|255-247-14-233
41646|code|MOVS            R3, #0xC|12-35
41648|code|MOVW            R1, #0x279|64-242-121-33
41652|code|LDR             R2, =aHostrangeCreat_1; "hostrange create"|9-74
41654|code|STR             R3, [R0]|3-96
41656|code|LDR             R0, =aHostlistC; "hostlist.c"|9-72
41658|code|POP.W           {R4-R8,LR}|189-232-240-65
41662|code|B.W             sub_9D00|255-247-31-189
41666|code|BL              sub_A160|255-247-77-255
41670|code|MOV             R7, R0|7-70
41672|code|CMP             R0, #0|0-40
41674|code|BEQ             loc_A2AA|238-208
41676|code|B               loc_A284|218-231
41678|code|LDR             R0, =aPrefixVoid0; "prefix != ((void *)0)"|5-72
41680|code|MOVW            R2, #0x266; line|64-242-102-34
41684|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
41686|code|LDR             R3, =aHostrangeCreat_2; "hostrange_create"|4-75
41688|code|BLX             __assert_fail|254-247-226-239
41692|data|DCD aHostrangeCreat_1; "hostrange create"|184-232-0-0
41696|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
41700|data|DCD aPrefixVoid0; "prefix != ((void *)0)"|220-232-0-0
41704|data|DCD aHostrangeCreat_2; "hostrange_create"|40-229-0-0
41708|code|PUSH            {R4,LR}|16-181
41710|code|CBZ             R0, loc_A30A|96-177
41712|code|LDRB            R3, [R0,#0x10]|3-124
41714|code|LSLS            R3, R3, #0x1F|219-7
41716|code|BMI             loc_A300|4-212
41718|code|LDM             R0, {R0-R3}|15-200
41720|code|POP.W           {R4,LR}|189-232-16-64
41724|code|B.W             sub_A268|255-247-180-191
41728|code|LDR             R0, [R0]|0-104
41730|code|POP.W           {R4,LR}|189-232-16-64
41734|code|B.W             sub_A1EC|255-247-113-191
41738|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
41740|code|MOV.W           R2, #0x28C; line|79-244-35-114
41744|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
41746|code|LDR             R3, =aHostrangeCopy; "hostrange_copy"|3-75
41748|code|BLX             __assert_fail|254-247-196-239
41752|data|DCD aHrVoid0; "hr != ((void *)0)"|124-232-0-0
41756|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
41760|data|DCD aHostrangeCopy; "hostrange_copy"|60-229-0-0
41764|code|PUSH            {R3-R5,LR}|56-181
41766|code|MOV             R4, R0|4-70
41768|code|MOV             R5, R1|13-70
41770|code|CMP             R0, #0|0-40
41772|code|BEQ             loc_A388|44-208
41774|code|LDR             R3, [R0,#4]|67-104
41776|code|CMP             R3, R1|139-66
41778|code|BHI             loc_A37A|34-216
41780|code|LDR             R2, [R0,#8]|130-104
41782|code|CMP             R1, R2|145-66
41784|code|BHI             loc_A37A|31-216
41786|code|CMP             R3, R1|139-66
41788|code|BEQ             loc_A35A|13-208
41790|code|CMP             R1, R2|145-66
41792|code|BEQ             loc_A352|7-208
41794|code|BL              sub_A2EC|255-247-211-255
41798|code|CBZ             R0, loc_A362|96-177
41800|code|SUBS            R3, R5, #1|107-30
41802|code|ADDS            R5, #1|1-53
41804|code|STR             R3, [R4,#8]|163-96
41806|code|STR             R5, [R0,#4]|69-96
41808|code|POP             {R3-R5,PC}|56-189
41810|code|SUBS            R5, R1, #1|77-30
41812|code|MOVS            R0, #0|0-32
41814|code|STR             R5, [R4,#8]|165-96
41816|code|POP             {R3-R5,PC}|56-189
41818|code|ADDS            R3, #1|1-51
41820|code|MOVS            R0, #0|0-32
41822|code|STR             R3, [R4,#4]|99-96
41824|code|POP             {R3-R5,PC}|56-189
41826|code|BLX             __errno_location|255-247-178-232
41830|code|MOVS            R3, #0xC|12-35
41832|code|MOV.W           R1, #0x2B4|79-244-45-113
41836|code|LDR             R2, =aHostrangeCopy_0; "hostrange copy"|10-74
41838|code|STR             R3, [R0]|3-96
41840|code|LDR             R0, =aHostlistC; "hostlist.c"|10-72
41842|code|POP.W           {R3-R5,LR}|189-232-56-64
41846|code|B.W             sub_9D00|255-247-195-188
41850|code|LDR             R0, =aNHrLoNHrHi; "n >= hr->lo && n <= hr->hi"|9-72
41852|code|MOV.W           R2, #0x2AC; line|79-244-43-114
41856|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
41858|code|LDR             R3, =aHostrangeDelet; "hostrange_delete_host"|8-75
41860|code|BLX             __assert_fail|254-247-140-239
41864|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|7-72
41866|code|MOVW            R2, #0x2AB; line|64-242-171-34
41870|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
41872|code|LDR             R3, =aHostrangeDelet; "hostrange_delete_host"|4-75
41874|code|BLX             __assert_fail|254-247-134-239
41878|data|ALIGN 4|0-191
41880|data|DCD aHostrangeCopy_0; "hostrange copy"|40-233-0-0
41884|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
41888|data|DCD aNHrLoNHrHi; "n >= hr->lo && n <= hr->hi"|12-233-0-0
41892|data|DCD aHostrangeDelet; "hostrange_delete_host"|76-229-0-0
41896|data|DCD aHrVoid0; "hr != ((void *)0)"|124-232-0-0
41900|code|PUSH            {R3-R5,LR}|56-181
41902|code|MOV             R4, R0|4-70
41904|code|MOV             R5, R1|13-70
41906|code|CBZ             R0, loc_A3D8|136-177
41908|code|CBZ             R1, loc_A3E6|185-177
41910|code|BL              sub_A018|255-247-47-254
41914|code|CBZ             R0, loc_A3BE|0-177
41916|code|POP             {R3-R5,PC}|56-189
41918|code|MOV             R0, R4|32-70
41920|code|MOV             R1, R5|41-70
41922|code|BL              sub_A0E0|255-247-141-254
41926|code|CBZ             R0, loc_A3D0|24-177
41928|code|LDR             R0, [R4,#4]|96-104
41930|code|LDR             R3, [R5,#4]|107-104
41932|code|SUBS            R0, R0, R3|192-26
41934|code|POP             {R3-R5,PC}|56-189
41936|code|LDR             R0, [R4,#0xC]|224-104
41938|code|LDR             R3, [R5,#0xC]|235-104
41940|code|SUBS            R0, R0, R3|192-26
41942|code|POP             {R3-R5,PC}|56-189
41944|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|6-72
41946|code|MOVW            R2, #0x2C7; line|64-242-199-34
41950|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
41952|code|LDR             R3, =aHostrangeCmp; "hostrange_cmp"|6-75
41954|code|BLX             __assert_fail|254-247-94-239
41958|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|6-72
41960|code|MOV.W           R2, #0x2C8; line|79-244-50-114
41964|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
41966|code|LDR             R3, =aHostrangeCmp; "hostrange_cmp"|3-75
41968|code|BLX             __assert_fail|254-247-86-239
41972|data|DCD aH1Void0; "h1 != ((void *)0)"|164-232-0-0
41976|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
41980|data|DCD aHostrangeCmp; "hostrange_cmp"|100-229-0-0
41984|data|DCD aH2Void0; "h2 != ((void *)0)"|56-233-0-0
41988|code|LDR             R1, [R1]|9-104
41990|code|LDR             R0, [R0]|0-104
41992|code|B.W             sub_A3AC|255-247-208-191
41996|code|PUSH            {R3-R5,LR}|56-181
41998|code|MOV             R4, R0|4-70
42000|code|MOV             R5, R1|13-70
42002|code|CMP             R0, #0|0-40
42004|code|BEQ             loc_A492|61-208
42006|code|CMP             R1, #0|0-41
42008|code|BEQ             loc_A484|52-208
42010|code|BL              sub_A3AC|255-247-199-255
42014|code|CMP             R0, #0|0-40
42016|code|BGT             loc_A4A0|62-220
42018|code|MOV             R0, R4|32-70
42020|code|MOV             R1, R5|41-70
42022|code|BL              sub_A018|255-247-247-253
42026|code|CMP             R0, #0|0-40
42028|code|BNE             loc_A478|36-209
42030|code|MOV             R0, R4|32-70
42032|code|MOV             R1, R5|41-70
42034|code|BL              sub_A0E0|255-247-85-254
42038|code|CMP             R0, #0|0-40
42040|code|BEQ             loc_A478|30-208
42042|code|LDRB            R3, [R4,#0x10]|35-124
42044|code|LSLS            R1, R3, #0x1F|217-7
42046|code|BMI             loc_A45C|13-212
42048|code|LDR             R2, [R5,#4]|106-104
42050|code|LDR             R3, [R4,#8]|163-104
42052|code|SUBS            R1, R2, #1|81-30
42054|code|CMP             R3, R1|139-66
42056|code|BEQ             loc_A470|18-208
42058|code|CMP             R3, R2|147-66
42060|code|BCC             loc_A47E|23-211
42062|code|LDR             R1, [R5,#8]|169-104
42064|code|CMP             R3, R1|139-66
42066|code|BCS             loc_A466|8-210
42068|code|ADDS            R3, #1|1-51
42070|code|STR             R1, [R4,#8]|161-96
42072|code|SUBS            R0, R3, R2|152-26
42074|code|POP             {R3-R5,PC}|56-189
42076|code|LDRB            R3, [R5,#0x10]|43-124
42078|code|LSLS            R2, R3, #0x1F|218-7
42080|code|BPL             loc_A440|238-213
42082|code|MOVS            R0, #1|1-32
42084|code|POP             {R3-R5,PC}|56-189
42086|code|MOV             R0, R5|40-70
42088|code|POP.W           {R3-R5,LR}|189-232-56-64
42092|code|B.W             sub_A0AC|255-247-30-190
42096|code|LDR             R3, [R5,#8]|171-104
42098|code|MOVS            R0, #0|0-32
42100|code|STR             R3, [R4,#8]|163-96
42102|code|POP             {R3-R5,PC}|56-189
42104|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
42108|code|POP             {R3-R5,PC}|56-189
42110|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
42114|code|POP             {R3-R5,PC}|56-189
42116|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|10-72
42118|code|MOVW            R2, #0x352; line|64-242-82-50
42122|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
42124|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|10-75
42126|code|BLX             __assert_fail|254-247-8-239
42130|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|10-72
42132|code|MOVW            R2, #0x351; line|64-242-81-50
42136|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
42138|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|7-75
42140|code|BLX             __assert_fail|254-247-0-239
42144|code|LDR             R0, =aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|7-72
42146|code|MOVW            R2, #0x353; line|64-242-83-50
42150|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
42152|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|3-75
42154|code|BLX             __assert_fail|254-247-250-238
42158|data|ALIGN 0x10|0-191
42160|data|DCD aH2Void0; "h2 != ((void *)0)"|56-233-0-0
42164|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
42168|data|DCD aHostrangeJoin; "hostrange_join"|116-229-0-0
42172|data|DCD aH1Void0; "h1 != ((void *)0)"|164-232-0-0
42176|data|DCD aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|76-233-0-0
42180|code|PUSH            {R3-R5,LR}|56-181
42182|code|MOV             R4, R0|4-70
42184|code|MOV             R5, R1|13-70
42186|code|BL              sub_A018|255-247-165-253
42190|code|CBNZ            R0, loc_A4E4|72-185
42192|code|LDRB            R3, [R4,#0x10]|35-124
42194|code|LSLS            R3, R3, #0x1F|219-7
42196|code|BMI             locret_A4E6|7-212
42198|code|LDRB            R3, [R5,#0x10]|43-124
42200|code|TST.W           R3, #1|19-240-1-15
42204|code|ITE NE|20-191
42206|code|MOVNE           R0, #0|0-32
42208|code|MOVEQ           R0, #1|1-32
42210|code|POP             {R3-R5,PC}|56-189
42212|code|MOVS            R0, #0|0-32
42214|code|POP             {R3-R5,PC}|56-189
42216|code|PUSH.W          {R4-R11,LR}|45-233-240-79
42220|code|SUB             SP, SP, #0x24|137-176
42222|code|LDR             R6, [R1]|14-104
42224|code|MOV             R8, R0|128-70
42226|code|STR             R3, [SP,#0x48+s]|4-147
42228|code|MOV             R5, R2|21-70
42230|code|LDR             R3, [R0,#8]|131-104
42232|code|LDR             R7, [R0,#0x10]|7-105
42234|code|MOV.W           R9, R6,LSL#2|79-234-134-9
42238|code|SUBS            R3, #1|1-59
42240|code|STR             R1, [SP,#0x48+var_30]|6-145
42242|code|CMP             R6, R3|158-66
42244|code|ADD.W           R10, R7, R9|7-235-9-10
42248|code|LDR.W           R4, [R7,R6,LSL#2]|87-248-38-64
42252|code|IT GE|168-191
42254|code|MOVGE.W         R11, #0|79-240-0-11
42258|code|BGE             loc_A51A|2-218
42260|code|ADDS            R3, R6, #1|115-28
42262|code|LDR.W           R11, [R7,R3,LSL#2]|87-248-35-176
42266|code|MOV             R0, R4|32-70
42268|code|BL              sub_A0AC|255-247-198-253
42272|code|CMP             R0, #1|1-40
42274|code|BLS.W           loc_A664|64-242-159-128
42278|code|MOVS            R1, #1|1-33
42280|code|STR             R1, [SP,#0x48+var_34]|5-145
42282|code|LDR             R3, [R4]|35-104
42284|code|MOV             R1, R5; maxlen|41-70
42286|code|LDR             R0, [SP,#0x48+s]; s|4-152
42288|code|LDR             R2, =(aRegcompFailedS+0x10); format|87-74
42290|code|BLX             snprintf|254-247-166-239
42294|code|CMP             R0, R5|168-66
42296|code|MOV             R4, R0|4-70
42298|code|ITE LS|148-191
42300|code|MOVLS           R3, #0|0-35
42302|code|MOVHI           R3, #1|1-35
42304|code|ORRS.W          R3, R3, R0,LSR#31|83-234-208-115
42308|code|IT NE|24-191
42310|code|MOVNE           R4, R5|44-70
42312|code|BNE             loc_A63E|121-209
42314|code|LDR             R2, [SP,#0x48+var_34]|5-154
42316|code|UXTB            R2, R2|210-178
42318|code|STR             R2, [SP,#0x48+var_2C]|7-146
42320|code|MOV             R3, R2|19-70
42322|code|CMP             R5, R4|165-66
42324|code|ITE LS|148-191
42326|code|MOVLS           R3, #0|0-35
42328|code|ANDHI.W         R3, R3, #1|3-240-1-3
42332|code|CMP             R3, #0|0-43
42334|code|BNE             loc_A65A|124-209
42336|code|LDR.W           R7, [R7,R9]|87-248-9-112
42340|code|MOV             R11, R8|195-70
42342|code|B               loc_A596|22-224
42344|code|ADD             R4, R8|68-68
42346|code|CMP             R5, R4|165-66
42348|code|BLS             loc_A61A|85-217
42350|code|LDR             R3, [SP,#0x48+var_34]|5-155
42352|code|CBZ             R3, loc_A57A|27-177
42354|code|LDR             R2, [SP,#0x48+s]|4-154
42356|code|MOVS            R1, #0x2C ; ','|44-33
42358|code|STRB            R1, [R2,R4]|17-85
42360|code|ADDS            R4, #1|1-52
42362|code|LDR.W           R3, [R11,#8]|219-248-8-48
42366|code|ADDS            R6, #1|1-54
42368|code|CMP             R6, R3|158-66
42370|code|BGE             loc_A61A|74-218
42372|code|LDR.W           R7, [R10,#4]|218-248-4-112
42376|code|LDR.W           R1, [R10],#4|90-248-4-27
42380|code|MOV             R0, R7|56-70
42382|code|BL              sub_A4C4|255-247-153-255
42386|code|CMP             R0, #0|0-40
42388|code|BEQ             loc_A61A|65-208
42390|code|LDR             R2, [SP,#0x48+s]|4-154
42392|code|RSB.W           R9, R4, R5|196-235-5-9
42396|code|CMP             R5, R9|77-69
42398|code|IT CC|56-191
42400|code|MOVCC.W         R9, #0|79-240-0-9
42404|code|ADDS.W          R12, R2, R4|18-235-4-12
42408|code|BEQ             loc_A682|107-208
42410|code|LDRB            R3, [R7,#0x10]|59-124
42412|code|MOV.W           R8, #0|79-240-0-8
42416|code|AND.W           R3, R3, #1|3-240-1-3
42420|code|CMP.W           R9, #0|185-241-0-15
42424|code|IT EQ|8-191
42426|code|ORREQ.W         R3, R3, #1|67-240-1-3
42430|code|CMP             R3, #0|0-43
42432|code|BNE             loc_A568|210-209
42434|code|LDR.W           LR, [R7,#4]|215-248-4-224
42438|code|MOV             R0, R12; s|96-70
42440|code|LDR             R3, [R7,#0xC]|251-104
42442|code|MOV             R1, R9; maxlen|73-70
42444|code|LDR             R2, =a0Lu; "%0*lu"|49-74
42446|code|STR.W           R12, [SP,#0x48+var_3C]|205-248-12-192
42450|code|STR.W           LR, [SP,#0x48+var_48]|205-248-0-224
42454|code|BLX             snprintf|254-247-84-239
42458|code|LDR.W           R12, [SP,#0x48+var_3C]|221-248-12-192
42462|code|MVN.W           R3, R0|111-234-0-3
42466|code|MOV             R8, R0|128-70
42468|code|LSRS            R3, R3, #0x1F|219-15
42470|code|CMP             R0, R9|72-69
42472|code|ITE CS|44-191
42474|code|MOVCS           R3, #0|0-35
42476|code|ANDCC.W         R3, R3, #1|3-240-1-3
42480|code|CMP             R3, #0|0-43
42482|code|BEQ             loc_A568|185-208
42484|code|LDR             R1, [R7,#8]|185-104
42486|code|LDR             R3, [R7,#4]|123-104
42488|code|CMP             R3, R1|139-66
42490|code|BCS             loc_A568|181-210
42492|code|RSB.W           R9, R8, R9|200-235-9-9
42496|code|LDR             R3, [R7,#0xC]|251-104
42498|code|ADD             R0, R12; s|96-68
42500|code|STR             R1, [SP,#0x48+var_48]|0-145
42502|code|LDR             R2, =a0Lu_0; "-%0*lu"|36-74
42504|code|MOV             R1, R9; maxlen|73-70
42506|code|BLX             snprintf|254-247-58-239
42510|code|CMP             R0, #0|0-40
42512|code|ITE GE|172-191
42514|code|ADDGE           R8, R0|128-68
42516|code|MOVLT.W         R8, #0xFFFFFFFF|79-240-255-56
42520|code|B               loc_A568|166-231
42522|code|LDR             R3, [SP,#0x48+var_2C]|7-155
42524|code|CMP             R4, R5|172-66
42526|code|ITE CS|44-191
42528|code|MOVCS           R3, #0|0-35
42530|code|ANDCC.W         R3, R3, #1|3-240-1-3
42534|code|CBZ             R3, loc_A646|115-177
42536|code|CMP             R4, #0|0-44
42538|code|BLE             loc_A646|12-221
42540|code|LDR             R1, [SP,#0x48+s]|4-153
42542|code|MOVS            R2, #0x5D ; ']'|93-34
42544|code|ADDS            R3, R1, R4|11-25
42546|code|STRB.W          R2, [R3,#-1]|3-248-1-44
42550|code|MOVS            R3, #0|0-35
42552|code|STRB            R3, [R1,R4]|11-85
42554|code|LDR             R2, [SP,#0x48+var_30]|6-154
42556|code|STR             R6, [R2]|22-96
42558|code|MOV             R0, R4|32-70
42560|code|ADD             SP, SP, #0x24 ; '$'|9-176
42562|code|POP.W           {R4-R11,PC}|189-232-240-143
42566|code|CMP             R5, R4|165-66
42568|code|BHI             loc_A676|21-216
42570|code|CMP             R5, #0|0-45
42572|code|BEQ             loc_A63A|245-208
42574|code|LDR             R2, [SP,#0x48+s]|4-154
42576|code|MOVS            R3, #0|0-35
42578|code|ADDS            R5, R2, R5|85-25
42580|code|STRB.W          R3, [R5,#-1]|5-248-1-60
42584|code|B               loc_A63A|239-231
42586|code|LDR             R1, [SP,#0x48+s]|4-153
42588|code|MOVS            R3, #0x5B ; '['|91-35
42590|code|STRB            R3, [R1,R4]|11-85
42592|code|ADDS            R4, #1|1-52
42594|code|B               loc_A560|125-231
42596|code|MOV             R0, R4|32-70
42598|code|MOV             R1, R11|89-70
42600|code|BL              sub_A4C4|255-247-44-255
42604|code|ADDS            R0, #0|0-48
42606|code|IT NE|24-191
42608|code|MOVNE           R0, #1|1-32
42610|code|STR             R0, [SP,#0x48+var_34]|5-144
42612|code|B               loc_A52A|89-231
42614|code|LDR             R1, [SP,#0x48+s]|4-153
42616|code|BIC.W           R3, R4, R4,ASR#31|36-234-228-115
42620|code|MOVS            R2, #0|0-34
42622|code|STRB            R2, [R1,R3]|202-84
42624|code|B               loc_A63A|219-231
42626|code|LDR             R0, =aBufVoid0; "buf != ((void *)0)"|6-72
42628|code|MOVW            R2, #0x3CF; line|64-242-207-50
42632|code|LDR             R1, =aHostlistC; "hostlist.c"|5-73
42634|code|LDR             R3, =aHostrangeNumst; "hostrange_numstr"|6-75
42636|code|BLX             __assert_fail|254-247-8-238
42640|data|DCD aRegcompFailedS+0x10; "%s"|84-241-0-0
42644|data|DCD a0Lu; "%0*lu"|124-233-0-0
42648|data|DCD a0Lu_0; "-%0*lu"|132-233-0-0
42652|data|DCD aBufVoid0; "buf != ((void *)0)"|104-233-0-0
42656|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
42660|data|DCD aHostrangeNumst; "hostrange_numstr"|132-229-0-0
42664|code|PUSH            {R4-R6,LR}|112-181
42666|code|MOV             R5, R0|5-70
42668|code|MOV             R6, R1|14-70
42670|code|CBZ             R0, loc_A6E6|208-177
42672|code|LDR             R2, [R0]|2-104
42674|code|MOVW            R3, #0xDEAD|77-246-173-99
42678|code|CMP             R2, R3|154-66
42680|code|BNE             loc_A6F4|28-209
42682|code|LDR             R4, [R5,#4]|108-104
42684|code|LSLS            R1, R1, #2; size|137-0
42686|code|LDR             R0, [R0,#0x10]; ptr|0-105
42688|code|STR             R6, [R5,#4]|110-96
42690|code|BLX             realloc|254-247-228-238
42694|code|STR             R0, [R5,#0x10]|40-97
42696|code|CBZ             R0, locret_A6E0|80-177
42698|code|CMP             R6, R4|166-66
42700|code|BLS             loc_A6E2|9-217
42702|code|MOVS            R3, #0|0-35
42704|code|B               loc_A6D4|0-224
42706|code|LDR             R0, [R5,#0x10]|40-105
42708|code|STR.W           R3, [R0,R4,LSL#2]|64-248-36-48
42712|code|ADDS            R4, #1|1-52
42714|code|CMP             R6, R4|166-66
42716|code|BHI             loc_A6D2|249-216
42718|code|MOVS            R0, #1|1-32
42720|code|POP             {R4-R6,PC}|112-189
42722|code|MOVS            R0, #1|1-32
42724|code|POP             {R4-R6,PC}|112-189
42726|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
42728|code|MOVW            R2, #0x411; line|64-242-17-66
42732|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
42734|code|LDR             R3, =aHostlistResize; "hostlist_resize"|7-75
42736|code|BLX             __assert_fail|254-247-214-237
42740|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|6-72
42742|code|MOVW            R2, #0x412; line|64-242-18-66
42746|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
42748|code|LDR             R3, =aHostlistResize; "hostlist_resize"|3-75
42750|code|BLX             __assert_fail|254-247-208-237
42754|data|ALIGN 4|0-191
42756|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
42760|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
42764|data|DCD aHostlistResize; "hostlist_resize"|152-229-0-0
42768|data|DCD aHlMagic57005; "hl->magic == 57005"|160-233-0-0
42772|code|LDR             R1, [R0,#4]|65-104
42774|code|PUSH            {R3,LR}|8-181
42776|code|ADDS            R1, #0x10|16-49
42778|code|BL              sub_A6A8|255-247-197-255
42782|code|ADDS            R0, #0|0-48
42784|code|IT NE|24-191
42786|code|MOVNE           R0, #1|1-32
42788|code|POP             {R3,PC}|8-189
42790|data|ALIGN 4|0-191
42792|code|PUSH            {R3-R7,LR}|248-181
42794|code|MOV             R4, R0|4-70
42796|code|MOV             R6, R1|14-70
42798|code|CMP             R1, #0|0-41
42800|code|BEQ             loc_A7BC|68-208
42802|code|CMP             R0, #0|0-40
42804|code|BEQ             loc_A7D8|80-208
42806|code|LDR             R2, [R0]|2-104
42808|code|MOVW            R3, #0xDEAD|77-246-173-99
42812|code|CMP             R2, R3|154-66
42814|code|BNE             loc_A7CA|68-209
42816|code|LDR             R5, [R0,#8]|133-104
42818|code|LDR             R3, [R0,#0x10]|3-105
42820|code|CMP             R5, #0|0-45
42822|code|IT LE|216-191
42824|code|LDRLE           R7, [R3]|31-104
42826|code|BLE             loc_A752|2-221
42828|code|SUBS            R2, R5, #1|106-30
42830|code|LDR.W           R7, [R3,R2,LSL#2]|83-248-34-112
42834|code|LDR             R3, [R4,#4]|99-104
42836|code|CMP             R5, R3|157-66
42838|code|BEQ             loc_A7A0|35-208
42840|code|CMP             R5, #0|0-45
42842|code|BLE             loc_A766|4-221
42844|code|MOV             R0, R7|56-70
42846|code|MOV             R1, R6|49-70
42848|code|BL              sub_A018|255-247-90-252
42852|code|CBZ             R0, loc_A786|120-177
42854|code|MOV             R0, R6|48-70
42856|code|LDR             R7, [R4,#0x10]|39-105
42858|code|BL              sub_A2EC|255-247-191-253
42862|code|ADDS            R3, R5, #1|107-28
42864|code|STR.W           R0, [R7,R5,LSL#2]|71-248-37-0
42868|code|STR             R3, [R4,#8]|163-96
42870|code|CBZ             R0, loc_A7B0|216-177
42872|code|MOV             R0, R6|48-70
42874|code|BL              sub_A0AC|255-247-151-252
42878|code|LDR             R3, [R4,#0xC]|227-104
42880|code|ADDS            R0, R0, R3|192-24
42882|code|STR             R0, [R4,#0xC]|224-96
42884|code|POP             {R3-R7,PC}|248-189
42886|code|LDR             R3, [R6,#4]|115-104
42888|code|LDR             R2, [R7,#8]|186-104
42890|code|SUBS            R3, #1|1-59
42892|code|CMP             R2, R3|154-66
42894|code|BNE             loc_A766|234-209
42896|code|MOV             R0, R7|56-70
42898|code|MOV             R1, R6|49-70
42900|code|BL              sub_A0E0|255-247-164-252
42904|code|CBZ             R0, loc_A7AC|64-177
42906|code|LDR             R3, [R6,#8]|179-104
42908|code|STR             R3, [R7,#8]|187-96
42910|code|B               loc_A778|235-231
42912|code|MOV             R0, R4|32-70
42914|code|BL              sub_A714|255-247-183-255
42918|code|CBZ             R0, loc_A7B6|48-177
42920|code|LDR             R5, [R4,#8]|165-104
42922|code|B               loc_A758|213-231
42924|code|LDR             R5, [R4,#8]|165-104
42926|code|B               loc_A766|218-231
42928|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
42932|code|POP             {R3-R7,PC}|248-189
42934|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
42938|code|POP             {R3-R7,PC}|248-189
42940|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|10-72
42942|code|MOVW            R2, #0x433; line|64-242-51-66
42946|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
42948|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|10-75
42950|code|BLX             __assert_fail|254-247-108-237
42954|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|10-72
42956|code|MOVW            R2, #0x434; line|64-242-52-66
42960|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
42962|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|7-75
42964|code|BLX             __assert_fail|254-247-100-237
42968|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
42970|code|MOVW            R2, #0x434; line|64-242-52-66
42974|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
42976|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|3-75
42978|code|BLX             __assert_fail|254-247-94-237
42982|data|ALIGN 4|0-191
42984|data|DCD aHrVoid0; "hr != ((void *)0)"|124-232-0-0
42988|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
42992|data|DCD aHostlistPushRa; "hostlist_push_range"|168-229-0-0
42996|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
43000|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
43004|code|PUSH.W          {R4-R8,LR}|45-233-240-65
43008|code|MOV             R4, R0|4-70
43010|code|SUB             SP, SP, #8|130-176
43012|code|MOV             R7, R2|23-70
43014|code|CMP             R0, #0|0-40
43016|code|BEQ             loc_A894|68-208
43018|code|LDR             R2, [R0]|2-104
43020|code|MOVW            R3, #0xDEAD|77-246-173-99
43024|code|CMP             R2, R3|154-66
43026|code|BNE             loc_A8B0|77-209
43028|code|CMP             R1, #0|0-41
43030|code|BEQ             loc_A8A2|68-208
43032|code|LDR             R3, [R0,#8]|131-104
43034|code|MOVS            R0, #0|0-32
43036|code|CMP             R3, R7|187-66
43038|code|BLT             loc_A87E|46-219
43040|code|LDR             R2, [R4,#4]|98-104
43042|code|CMP             R3, R2|147-66
43044|code|BEQ             loc_A884|46-208
43046|code|LDR.W           R8, [R4,#0x10]|212-248-16-128
43050|code|MOV             R0, R1|8-70
43052|code|MOV             R5, R7|61-70
43054|code|LDR.W           R6, [R8,R7,LSL#2]|88-248-39-96
43058|code|BL              sub_A2EC|255-247-91-253
43062|code|LDR.W           R12, [R4,#8]|212-248-8-192
43066|code|ADDS            R3, R7, #1|123-28
43068|code|CMP             R12, R3|156-69
43070|code|STR.W           R0, [R8,R7,LSL#2]|72-248-39-0
43074|code|BLT             loc_A858|9-219
43076|code|LSLS            R3, R3, #2|155-0
43078|code|B               loc_A84A|0-224
43080|code|MOV             R6, R1|14-70
43082|code|LDR             R2, [R4,#0x10]|34-105
43084|code|ADDS            R5, #1|1-53
43086|code|LDR             R1, [R2,R3]|209-88
43088|code|STR             R6, [R2,R3]|214-80
43090|code|ADDS            R3, #4|4-51
43092|code|CMP             R5, R12|101-69
43094|code|BNE             loc_A848|247-209
43096|code|LDR             R3, [R4,#0x14]|99-105
43098|code|ADD.W           R2, R12, #1|12-241-1-2
43102|code|STR             R2, [R4,#8]|162-96
43104|code|CBZ             R3, loc_A87C|99-177
43106|code|LDR             R2, [R3,#8]|154-104
43108|code|CMP             R7, R2|151-66
43110|code|BGT             loc_A876|6-220
43112|code|LDR             R1, [R3,#4]|89-104
43114|code|ADDS            R2, #1|1-50
43116|code|LDR             R1, [R1,#0x10]|9-105
43118|code|STR             R2, [R3,#8]|154-96
43120|code|LDR.W           R2, [R1,R2,LSL#2]|81-248-34-32
43124|code|STR             R2, [R3,#0xC]|218-96
43126|code|LDR             R3, [R3,#0x14]|91-105
43128|code|CMP             R3, #0|0-43
43130|code|BNE             loc_A862|242-209
43132|code|MOVS            R0, #1|1-32
43134|code|ADD             SP, SP, #8|2-176
43136|code|POP.W           {R4-R8,PC}|189-232-240-129
43140|code|MOV             R0, R4|32-70
43142|code|STR             R1, [SP,#0x20+var_1C]|1-145
43144|code|BL              sub_A714|255-247-68-255
43148|code|LDR             R1, [SP,#0x20+var_1C]|1-153
43150|code|CMP             R0, #0|0-40
43152|code|BNE             loc_A826|201-209
43154|code|B               loc_A87E|244-231
43156|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
43158|code|MOV.W           R2, #0x468; line|79-244-141-98
43162|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
43164|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|10-75
43166|code|BLX             __assert_fail|254-247-0-237
43170|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|10-72
43172|code|MOVW            R2, #0x46A; line|64-242-106-66
43176|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
43178|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|7-75
43180|code|BLX             __assert_fail|254-247-248-236
43184|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|7-72
43186|code|MOVW            R2, #0x469; line|64-242-105-66
43190|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
43192|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|3-75
43194|code|BLX             __assert_fail|254-247-242-236
43198|data|ALIGN 0x10|0-191
43200|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
43204|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
43208|data|DCD aHostlistInsert; "hostlist_insert_range"|188-229-0-0
43212|data|DCD aHrVoid0; "hr != ((void *)0)"|124-232-0-0
43216|data|DCD aHlMagic57005; "hl->magic == 57005"|160-233-0-0
43220|code|PUSH            {R3-R7,LR}|248-181
43222|code|MOV             R4, R0|4-70
43224|code|CBZ             R0, loc_A924|32-179
43226|code|LDR             R2, [R0]|2-104
43228|code|MOVW            R3, #0xDEAD|77-246-173-99
43232|code|CMP             R2, R3|154-66
43234|code|BNE             loc_A928|33-209
43236|code|BL              sub_A188|255-247-80-252
43240|code|MOV             R5, R0|5-70
43242|code|CBZ             R0, loc_A91A|176-177
43244|code|LDR             R1, [R4,#8]|161-104
43246|code|LDR             R3, [R0,#4]|67-104
43248|code|LDR             R2, [R4,#0xC]|226-104
43250|code|CMP             R1, R3|153-66
43252|code|STR             R1, [R0,#8]|129-96
43254|code|STR             R2, [R0,#0xC]|194-96
43256|code|BGT             loc_A91E|17-220
43258|code|LDR             R3, [R4,#8]|163-104
43260|code|CMP             R3, #0|0-43
43262|code|BLE             loc_A91A|12-221
43264|code|MOVS            R6, #0|0-38
43266|code|LDR             R3, [R4,#0x10]|35-105
43268|code|LDR             R7, [R5,#0x10]|47-105
43270|code|LDR.W           R0, [R3,R6,LSL#2]|83-248-38-0
43274|code|BL              sub_A2EC|255-247-239-252
43278|code|LDR             R3, [R4,#8]|163-104
43280|code|STR.W           R0, [R7,R6,LSL#2]|71-248-38-0
43284|code|ADDS            R6, #1|1-54
43286|code|CMP             R3, R6|179-66
43288|code|BGT             loc_A902|243-220
43290|code|MOV             R0, R5|40-70
43292|code|POP             {R3-R7,PC}|248-189
43294|code|BL              sub_A6A8|255-247-195-254
43298|code|B               loc_A8FA|234-231
43300|code|MOV             R5, R0|5-70
43302|code|B               loc_A91A|248-231
43304|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|3-72
43306|code|MOVW            R2, #0x5E2; line|64-242-226-82
43310|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
43312|code|LDR             R3, =aHostlistCopy; "hostlist_copy"|3-75
43314|code|BLX             __assert_fail|254-247-182-236
43318|data|ALIGN 4|0-191
43320|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
43324|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
43328|data|DCD aHostlistCopy; "hostlist_copy"|212-229-0-0
43332|code|PUSH            {R4-R6,LR}|112-181
43334|code|MOV             R5, R0|5-70
43336|code|MOV             R6, R1|14-70
43338|code|MOV             R0, R1|8-70
43340|code|CBZ             R1, locret_A984|209-177
43342|code|BL              sub_9E34|255-247-113-250
43346|code|MOV             R4, R0|4-70
43348|code|LDR             R0, [R0,#0xC]; s|192-104
43350|code|CBZ             R0, loc_A986|176-177
43352|code|BLX             strlen|254-247-238-236
43356|code|LDR             R6, [R4,#8]|166-104
43358|code|MOV             R1, R6|49-70
43360|code|MOV             R2, R6|50-70
43362|code|MOV             R3, R0|3-70
43364|code|LDR             R0, [R4,#4]|96-104
43366|code|BL              sub_A268|255-247-127-252
43370|code|MOV             R6, R0|6-70
43372|code|MOV             R1, R6|49-70
43374|code|MOV             R0, R5|40-70
43376|code|BL              sub_A728|255-247-218-254
43380|code|MOV             R0, R6|48-70
43382|code|BL              sub_9E18|255-247-79-250
43386|code|MOV             R0, R4|32-70
43388|code|BL              sub_9DF0|255-247-56-250
43392|code|MOVS            R0, #1|1-32
43394|code|POP             {R4-R6,PC}|112-189
43396|code|POP             {R4-R6,PC}|112-189
43398|code|MOV             R0, R6|48-70
43400|code|BL              sub_A1EC|255-247-48-252
43404|code|MOV             R6, R0|6-70
43406|code|B               loc_A96C|237-231
43408|code|PUSH            {R3-R7,LR}|248-181
43410|code|MOV             R7, R0|7-70
43412|code|MOV             R5, R1|13-70
43414|code|CBZ             R1, loc_A9C8|185-177
43416|code|LDR             R2, [R1]|10-104
43418|code|MOVW            R3, #0xDEAD|77-246-173-99
43422|code|CMP             R2, R3|154-66
43424|code|BNE             loc_A9CE|21-209
43426|code|LDR             R3, [R1,#8]|139-104
43428|code|MOVS            R6, #0|0-38
43430|code|CMP             R3, #0|0-43
43432|code|IT GT|200-191
43434|code|MOVGT           R4, R6|52-70
43436|code|BLE             loc_A9C4|10-221
43438|code|LDR             R3, [R5,#0x10]|43-105
43440|code|MOV             R0, R7|56-70
43442|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
43446|code|ADDS            R4, #1|1-52
43448|code|BL              sub_A728|255-247-182-254
43452|code|LDR             R3, [R5,#8]|171-104
43454|code|CMP             R3, R4|163-66
43456|code|ADD             R6, R0|6-68
43458|code|BGT             loc_A9AE|244-220
43460|code|MOV             R0, R6|48-70
43462|code|POP             {R3-R7,PC}|248-189
43464|code|MOV             R6, R1|14-70
43466|code|MOV             R0, R6|48-70
43468|code|POP             {R3-R7,PC}|248-189
43470|code|LDR             R0, =aH2Magic57005; "(h2)->magic == 57005"|3-72
43472|code|MOVW            R2, #0x639; line|64-242-57-98
43476|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
43478|code|LDR             R3, =aHostlistPushLi; "hostlist_push_list"|3-75
43480|code|BLX             __assert_fail|254-247-98-236
43484|data|DCD aH2Magic57005; "(h2)->magic == 57005"|204-233-0-0
43488|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
43492|data|DCD aHostlistPushLi; "hostlist_push_list"|228-229-0-0
43496|code|PUSH.W          {R4-R9,LR}|45-233-240-67
43500|code|MOV             R4, R0|4-70
43502|code|SUB             SP, SP, #0xC|131-176
43504|code|CMP             R0, #0|0-40
43506|code|BEQ             loc_AACA|106-208
43508|code|LDR             R2, [R0]|2-104
43510|code|MOVW            R3, #0xDEAD|77-246-173-99
43514|code|CMP             R2, R3|154-66
43516|code|BNE             loc_AABC|94-209
43518|code|LDR             R7, [R0,#0xC]|199-104
43520|code|CMP             R7, #0|0-47
43522|code|BLE             loc_AA9C|75-221
43524|code|LDR             R2, [R0,#8]|130-104
43526|code|LDR             R3, [R0,#0x10]|3-105
43528|code|SUBS            R2, #1|1-58
43530|code|LDR.W           R5, [R3,R2,LSL#2]|83-248-34-80
43534|code|CMP             R5, #0|0-45
43536|code|BEQ             loc_AAD8|98-208
43538|code|LDRB            R3, [R5,#0x10]|43-124
43540|code|LSLS            R2, R3, #0x1F|218-7
43542|code|BMI             loc_AA50|27-212
43544|code|MOV             R0, R5|40-70
43546|code|BL              sub_A0AC|255-247-71-251
43550|code|MOV             R6, R0|6-70
43552|code|CBNZ            R0, loc_AA62|248-185
43554|code|SUBS            R7, #1|1-63
43556|code|MOV             R0, R5|40-70
43558|code|STR             R7, [R4,#0xC]|231-96
43560|code|BL              sub_A128|255-247-126-251
43564|code|CBZ             R0, loc_AA48|96-177
43566|code|LDR             R3, [R4,#8]|163-104
43568|code|LDR             R2, [R4,#0x10]|34-105
43570|code|SUBS            R3, #1|1-59
43572|code|STR             R3, [R4,#8]|163-96
43574|code|LDR.W           R0, [R2,R3,LSL#2]|82-248-35-0
43578|code|BL              sub_9E18|255-247-237-249
43582|code|LDR             R2, [R4,#8]|162-104
43584|code|LDR             R3, [R4,#0x10]|35-105
43586|code|MOVS            R1, #0|0-33
43588|code|STR.W           R1, [R3,R2,LSL#2]|67-248-34-16
43592|code|MOV             R0, R6|48-70
43594|code|ADD             SP, SP, #0xC|3-176
43596|code|POP.W           {R4-R9,PC}|189-232-240-131
43600|code|LDM.W           R5, {R0,R3}|149-232-9-0
43604|code|ADDS            R3, #1|1-51
43606|code|STR             R3, [R5,#4]|107-96
43608|code|BLX             __strdup|254-247-30-237
43612|code|LDR             R7, [R4,#0xC]|231-104
43614|code|MOV             R6, R0|6-70
43616|code|B               loc_AA22|223-231
43618|code|LDR             R7, [R5]|47-104
43620|code|MOV             R0, R7; s|56-70
43622|code|BLX             strlen|254-247-104-236
43626|code|LDR.W           R8, [R5,#0xC]|213-248-12-128
43630|code|ADD.W           R9, R8, #0x10|8-241-16-9
43634|code|ADD             R9, R0|129-68
43636|code|MOV             R0, R9; size|72-70
43638|code|BLX             malloc|254-247-186-236
43642|code|MOV             R6, R0|6-70
43644|code|CBZ             R0, loc_AAA0|128-177
43646|code|LDR.W           LR, [R5,#8]|213-248-8-224
43650|code|MOV             R3, R7|59-70
43652|code|MOV             R1, R9; maxlen|73-70
43654|code|LDR             R2, =aS0Lu; "%s%0*lu"|24-74
43656|code|ADD.W           R12, LR, #0xFFFFFFFF|14-241-255-60
43660|code|STR.W           R12, [R5,#8]|197-248-8-192
43664|code|STMEA.W         SP, {R8,LR}|141-232-0-65
43668|code|BLX             snprintf|254-247-244-236
43672|code|LDR             R7, [R4,#0xC]|231-104
43674|code|B               loc_AA22|194-231
43676|code|MOVS            R6, #0|0-38
43678|code|B               loc_AA48|211-231
43680|code|BLX             __errno_location|254-247-18-237
43684|code|MOVS            R2, #0xC|12-34
43686|code|MOV.W           R1, #0x320|79-244-72-113
43690|code|MOV             R3, R0|3-70
43692|code|LDR             R0, =aHostlistC; "hostlist.c"|15-72
43694|code|STR             R2, [R3]|26-96
43696|code|LDR             R2, =aHostrangePop; "hostrange pop"|15-74
43698|code|BL              sub_9D00|255-247-37-249
43702|code|LDR             R7, [R4,#0xC]|231-104
43704|code|MOV             R6, R0|6-70
43706|code|B               loc_AA22|178-231
43708|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|13-72
43710|code|MOV.W           R2, #0x648; line|79-244-201-98
43714|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
43716|code|LDR             R3, =aHostlistPop; "hostlist_pop"|12-75
43718|code|BLX             __assert_fail|254-247-236-235
43722|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|12-72
43724|code|MOV.W           R2, #0x648; line|79-244-201-98
43728|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
43730|code|LDR             R3, =aHostlistPop; "hostlist_pop"|9-75
43732|code|BLX             __assert_fail|254-247-228-235
43736|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|9-72
43738|code|MOV.W           R2, #0x318; line|79-244-70-114
43742|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
43744|code|LDR             R3, =aHostrangePop_0; "hostrange_pop"|8-75
43746|code|BLX             __assert_fail|254-247-222-235
43750|data|ALIGN 4|0-191
43752|data|DCD aS0Lu; "%s%0*lu"|244-233-0-0
43756|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
43760|data|DCD aHostrangePop; "hostrange pop"|228-233-0-0
43764|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
43768|data|DCD aHostlistPop; "hostlist_pop"|248-229-0-0
43772|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
43776|data|DCD aHrVoid0; "hr != ((void *)0)"|124-232-0-0
43780|data|DCD aHostrangePop_0; "hostrange_pop"|8-230-0-0
43784|code|PUSH.W          {R4-R10,LR}|45-233-240-71
43788|code|SUB             SP, SP, #0x60 ; '`'|152-176
43790|code|LDR             R7, =__stack_chk_guard|42-79
43792|code|MOV             R6, R1|14-70
43794|code|LDR             R3, [R7]|59-104
43796|code|STR             R3, [SP,#0x5C]|23-147
43798|code|CMP             R0, #0|0-40
43800|code|BEQ             loc_ABA8|70-208
43802|code|LDR             R2, [R0]|2-104
43804|code|MOVW            R3, #0xDEAD|77-246-173-99
43808|code|CMP             R2, R3|154-66
43810|code|BNE             loc_AB9A|58-209
43812|code|LDR.W           R10, [R0,#8]|208-248-8-160
43816|code|CMP.W           R10, #0|186-241-0-15
43820|code|BLE             loc_AB86|43-221
43822|code|MOVS            R4, #0|0-36
43824|code|LDR.W           R9, [R0,#0x10]|208-248-16-144
43828|code|MOV             R8, R4|160-70
43830|code|B               loc_AB42|4-224
43832|code|ADD.W           R8, R8, #1|8-241-1-8
43836|code|ADDS            R4, R4, R0|36-24
43838|code|CMP             R8, R10|208-69
43840|code|BEQ             loc_AB86|33-208
43842|code|LDR.W           R5, [R9],#4|89-248-4-91
43846|code|MOV             R0, R5|40-70
43848|code|BL              sub_A0AC|255-247-176-250
43852|code|SUBS            R3, R0, #1|67-30
43854|code|ADDS            R3, R3, R4|27-25
43856|code|CMP             R3, R6|179-66
43858|code|BLT             loc_AB38|241-219
43860|code|LDR             R3, [R5]|43-104
43862|code|MOVS            R1, #0x4F ; 'O'|79-33
43864|code|LDR             R2, =(aRegcompFailedS+0x10); "%s"|24-74
43866|code|ADD             R0, SP, #0xC|3-168
43868|code|BLX             snprintf|254-247-144-236
43872|code|LDRB            R3, [R5,#0x10]|43-124
43874|code|LSLS            R1, R3, #0x1F|217-7
43876|code|BMI             loc_AB7E|11-212
43878|code|LDR             R2, [R5,#4]|106-104
43880|code|SUBS            R4, R6, R4|52-27
43882|code|LDR             R3, [R5,#0xC]|235-104
43884|code|ADD             R5, SP, #0xC|3-173
43886|code|ADDS            R4, R4, R2|164-24
43888|code|RSB.W           R1, R0, #0x4F ; 'O'|192-241-79-1
43892|code|LDR             R2, =a0Lu; "%0*lu"|18-74
43894|code|ADDS            R0, R5, R0|40-24
43896|code|STR             R4, [SP]|0-148
43898|code|BLX             snprintf|254-247-130-236
43902|code|ADD             R0, SP, #0xC|3-168
43904|code|BLX             __strdup|254-247-138-236
43908|code|B               loc_AB88|0-224
43910|code|MOVS            R0, #0|0-32
43912|code|LDR             R2, [SP,#0x5C]|23-154
43914|code|LDR             R3, [R7]|59-104
43916|code|CMP             R2, R3|154-66
43918|code|BNE             loc_AB96|2-209
43920|code|ADD             SP, SP, #0x60 ; '`'|24-176
43922|code|POP.W           {R4-R10,PC}|189-232-240-135
43926|code|BLX             __stack_chk_fail|254-247-48-236
43930|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|10-72
43932|code|MOVW            R2, #0x6FD|64-242-253-98
43936|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
43938|code|LDR             R3, =aHostlistNth; "hostlist_nth"|10-75
43940|code|BLX             __assert_fail|254-247-124-235
43944|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
43946|code|MOVW            R2, #0x6FD|64-242-253-98
43950|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
43952|code|LDR             R3, =aHostlistNth; "hostlist_nth"|6-75
43954|code|BLX             __assert_fail|254-247-118-235
43958|data|ALIGN 4|0-191
43960|data|DCD __stack_chk_guard|216-116-1-0
43964|data|DCD aRegcompFailedS+0x10; "%s"|84-241-0-0
43968|data|DCD a0Lu; "%0*lu"|124-233-0-0
43972|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
43976|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
43980|data|DCD aHostlistNth; "hostlist_nth"|24-230-0-0
43984|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
43988|code|PUSH            {R3,LR}|8-181
43990|code|CBZ             R0, loc_ABE6|48-177
43992|code|LDR             R2, [R0]|2-104
43994|code|MOVW            R3, #0xDEAD|77-246-173-99
43998|code|CMP             R2, R3|154-66
44000|code|BNE             loc_ABF4|8-209
44002|code|LDR             R0, [R0,#0xC]|192-104
44004|code|POP             {R3,PC}|8-189
44006|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
44008|code|MOVW            R2, #0x737; line|64-242-55-114
44012|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
44014|code|LDR             R3, =aHostlistCount; "hostlist_count"|7-75
44016|code|BLX             __assert_fail|254-247-86-235
44020|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|6-72
44022|code|MOVW            R2, #0x737; line|64-242-55-114
44026|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
44028|code|LDR             R3, =aHostlistCount; "hostlist_count"|3-75
44030|code|BLX             __assert_fail|254-247-80-235
44034|data|ALIGN 4|0-191
44036|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
44040|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
44044|data|DCD aHostlistCount; "hostlist_count"|40-230-0-0
44048|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
44052|code|PUSH.W          {R4-R8,LR}|45-233-240-65
44056|code|MOV             R5, R0|5-70
44058|code|CMP             R1, #0|0-41
44060|code|BEQ             loc_AC96|59-208
44062|code|MOV             R0, R1|8-70
44064|code|BL              sub_9E34|255-247-8-249
44068|code|MOV             R7, R0|7-70
44070|code|CMP             R5, #0|0-45
44072|code|BEQ             loc_ACAA|63-208
44074|code|LDR             R2, [R5]|42-104
44076|code|MOVW            R3, #0xDEAD|77-246-173-99
44080|code|CMP             R2, R3|154-66
44082|code|BNE             loc_AC9C|51-209
44084|code|LDR             R3, [R5,#8]|171-104
44086|code|CMP             R3, #0|0-43
44088|code|BLE             loc_AC86|37-221
44090|code|MOVS            R6, #0|0-38
44092|code|LDR.W           R8, [R5,#0x10]|213-248-16-128
44096|code|MOV             R4, R6|52-70
44098|code|B               loc_AC5A|10-224
44100|code|LDR.W           R8, [R5,#0x10]|213-248-16-128
44104|code|LDR.W           R0, [R8,R4,LSL#2]|88-248-36-0
44108|code|ADDS            R4, #1|1-52
44110|code|BL              sub_A0AC|255-247-45-250
44114|code|LDR             R3, [R5,#8]|171-104
44116|code|CMP             R3, R4|163-66
44118|code|ADD             R6, R0|6-68
44120|code|BLE             loc_AC86|21-221
44122|code|LDR.W           R0, [R8,R4,LSL#2]|88-248-36-0
44126|code|MOV             R1, R7|57-70
44128|code|MOV.W           R8, R4,LSL#2|79-234-132-8
44132|code|BL              sub_9FB4|255-247-166-249
44136|code|CMP             R0, #0|0-40
44138|code|BEQ             loc_AC44|235-208
44140|code|LDR             R3, [R7,#0xC]|251-104
44142|code|CBZ             R3, loc_AC8A|99-177
44144|code|LDR             R3, [R5,#0x10]|43-105
44146|code|LDR.W           R3, [R3,R8]|83-248-8-48
44150|code|LDRB            R2, [R3,#0x10]|26-124
44152|code|LSLS            R0, R2, #0x1F|208-7
44154|code|BMI             loc_AC8A|6-212
44156|code|LDR             R2, [R7,#8]|186-104
44158|code|LDR             R3, [R3,#4]|91-104
44160|code|SUBS            R3, R2, R3|211-26
44162|code|ADDS            R6, R3, R6|158-25
44164|code|B               loc_AC8A|1-224
44166|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
44170|code|MOV             R0, R7|56-70
44172|code|BL              sub_9DF0|255-247-176-248
44176|code|MOV             R0, R6|48-70
44178|code|POP.W           {R4-R8,PC}|189-232-240-129
44182|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
44186|code|B               loc_AC90|249-231
44188|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|6-72
44190|code|MOVW            R2, #0x747; line|64-242-71-114
44194|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
44196|code|LDR             R3, =aHostlistFind; "hostlist_find"|6-75
44198|code|BLX             __assert_fail|254-247-252-234
44202|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|6-72
44204|code|MOVW            R2, #0x747; line|64-242-71-114
44208|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
44210|code|LDR             R3, =aHostlistFind; "hostlist_find"|3-75
44212|code|BLX             __assert_fail|254-247-244-234
44216|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
44220|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
44224|data|DCD aHostlistFind; "hostlist_find"|56-230-0-0
44228|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
44232|code|PUSH.W          {R4-R11,LR}|45-233-240-79
44236|code|SUB             SP, SP, #0x1C|135-176
44238|code|STR             R0, [SP,#0x10]|4-144
44240|code|STR             R1, [SP,#0xC]|3-145
44242|code|STR             R2, [SP,#0x14]|5-146
44244|code|CMP             R0, #0|0-40
44246|code|BEQ.W           loc_AE28|0-240-167-128
44250|code|LDR             R4, [SP,#0x10]|4-156
44252|code|MOVW            R3, #0xDEAD|77-246-173-99
44256|code|LDR             R2, [R4]|34-104
44258|code|CMP             R2, R3|154-66
44260|code|BNE.W           loc_AE3A|64-240-169-128
44264|code|LDR             R3, [R4,#8]|163-104
44266|code|CMP             R3, #0|0-43
44268|code|ITT GT|196-191
44270|code|MOVGT.W         R11, #0|79-240-0-11
44274|code|STRGT.W         R11, [SP,#8]|205-248-8-176
44278|code|BLE.W           loc_AE1E|64-243-146-128
44282|code|LDR             R4, [SP,#0xC]|3-156
44284|code|MOVS            R3, #0|0-35
44286|code|RSB.W           R8, R11, R4|203-235-4-8
44290|code|CMP             R4, R8|68-69
44292|code|BCC             loc_AD92|69-211
44294|code|LDR             R4, [SP,#0x10]|4-156
44296|code|LDR             R3, [R4,#0x10]|35-105
44298|code|LDR             R4, [SP,#8]|2-156
44300|code|LDR.W           R7, [R3,R4,LSL#2]|83-248-36-112
44304|code|CMP.W           R8, #0|184-241-0-15
44308|code|BEQ.W           loc_AE36|0-240-143-128
44312|code|LDRB            R6, [R7,#0x10]|62-124
44314|code|LDR             R4, [SP,#0x14]|5-156
44316|code|ANDS.W          R6, R6, #1|22-240-1-6
44320|code|ADD.W           R9, R4, R11|4-235-11-9
44324|code|BNE             loc_AE02|109-209
44326|code|LDR             R5, [R7,#4]|125-104
44328|code|LDR             R3, [R7,#8]|187-104
44330|code|CMP             R5, R3|157-66
44332|code|BHI             loc_AE14|114-216
44334|code|MOV.W           R10, #0x2C ; ','|79-240-44-10
44338|code|B               loc_AD44|7-224
44340|code|ADDS            R0, R6, R0|48-24
44342|code|ADDS            R5, #1|1-53
44344|code|ADDS            R6, R0, #1|70-28
44346|code|STRB.W          R10, [R9,R0]|9-248-0-160
44350|code|LDR             R3, [R7,#8]|187-104
44352|code|CMP             R5, R3|157-66
44354|code|BHI             loc_ADE2|78-216
44356|code|RSB.W           R4, R6, R8|198-235-8-4
44360|code|LDR.W           LR, [R7,#0xC]|215-248-12-224
44364|code|CMP             R8, R4|160-69
44366|code|IT CC|56-191
44368|code|MOVCC           R4, #0|0-36
44370|code|LDR             R3, [R7]|59-104
44372|code|ADD.W           R0, R9, R6|9-235-6-0
44376|code|LDR             R2, =aS0Lu; "%s%0*lu"|59-74
44378|code|MOV             R1, R4|33-70
44380|code|STR.W           LR, [SP]|205-248-0-224
44384|code|STR             R5, [SP,#4]|1-149
44386|code|BLX             snprintf|254-247-142-235
44390|code|CMP             R4, R0|132-66
44392|code|ITE HI|140-191
44394|code|MOVHI           R4, #0|0-36
44396|code|MOVLS           R4, #1|1-36
44398|code|ORRS.W          R4, R4, R0,LSR#31|84-234-208-116
44402|code|BEQ             loc_AD34|223-208
44404|code|ADD             R9, R8|193-68
44406|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
44410|code|MOVS            R2, #1|1-34
44412|code|MOV             R0, R3|24-70
44414|code|MOVS            R1, #0|0-33
44416|code|STRB.W          R1, [R9,#-1]|9-248-1-28
44420|code|CMP             R8, R0|128-69
44422|code|ITE CS|44-191
44424|code|MOVCS           R0, R2|16-70
44426|code|ORRCC.W         R0, R2, #1|66-240-1-0
44430|code|CMP             R0, #0|0-40
44432|code|BNE             loc_ADFA|51-209
44434|code|LDR             R4, [SP,#8]|2-156
44436|code|ADD             R3, R11|91-68
44438|code|MOVS            R2, #0x2C ; ','|44-34
44440|code|ADD.W           R11, R3, #1|3-241-1-11
44444|code|ADDS            R4, #1|1-52
44446|code|STR             R4, [SP,#8]|2-148
44448|code|LDR             R4, [SP,#0x14]|5-156
44450|code|STRB            R2, [R4,R3]|226-84
44452|code|LDR             R4, [SP,#0x10]|4-156
44454|code|LDR             R3, [R4,#8]|163-104
44456|code|LDR             R4, [SP,#8]|2-156
44458|code|CMP             R3, R4|163-66
44460|code|BGT             loc_ACFA|165-220
44462|code|MOVS            R0, #0|0-32
44464|code|MOVS            R2, #0|0-34
44466|code|CMP.W           R11, #0|187-241-0-15
44470|code|MOV             R3, R11|91-70
44472|code|ITTT GT|194-191
44474|code|ADDGT.W         R11, R11, #0xFFFFFFFF|11-241-255-59
44478|code|MOVGT           R2, R11|90-70
44480|code|MOVGT           R3, R11|91-70
44482|code|LDR             R4, [SP,#0x14]|5-156
44484|code|MOVS            R1, #0|0-33
44486|code|CMP             R0, R1|136-66
44488|code|IT NE|24-191
44490|code|MOVNE.W         R11, #0xFFFFFFFF|79-240-255-59
44494|code|STRB            R1, [R4,R2]|161-84
44496|code|LDR             R4, [SP,#0xC]|3-156
44498|code|CMP             R4, R3|156-66
44500|code|IT EQ|8-191
44502|code|MOVEQ.W         R11, #0xFFFFFFFF|79-240-255-59
44506|code|MOV             R0, R11|88-70
44508|code|ADD             SP, SP, #0x1C|7-176
44510|code|POP.W           {R4-R11,PC}|189-232-240-143
44514|code|LSRS            R2, R0, #0x1F|194-15
44516|code|MOV             R3, R0|3-70
44518|code|MOVS            R1, #0|0-33
44520|code|STRB.W          R1, [R9,R0]|9-248-0-16
44524|code|CMP             R8, R0|128-69
44526|code|ITE CS|44-191
44528|code|MOVCS           R0, R2|16-70
44530|code|ORRCC.W         R0, R2, #1|66-240-1-0
44534|code|CMP             R0, #0|0-40
44536|code|BEQ             loc_AD92|203-208
44538|code|LDR.W           R11, [SP,#0xC]|221-248-12-176
44542|code|MOVS            R0, #1|1-32
44544|code|B               loc_ADB0|214-231
44546|code|LDR             R3, [R7]|59-104
44548|code|MOV             R0, R9|72-70
44550|code|LDR             R2, =(aRegcompFailedS+0x10); "%s"|17-74
44552|code|MOV             R1, R8|65-70
44554|code|BLX             snprintf|254-247-58-235
44558|code|MOV             R3, R0|3-70
44560|code|LSRS            R2, R0, #0x1F|194-15
44562|code|B               loc_AD84|183-231
44564|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
44568|code|MOVS            R2, #1|1-34
44570|code|MOV             R0, R3|24-70
44572|code|B               loc_ADE6|227-231
44574|code|MOVS            R3, #0|0-35
44576|code|MOV             R0, R3|24-70
44578|code|MOV             R2, R3|26-70
44580|code|MOV             R11, R3|155-70
44582|code|B               loc_ADC2|204-231
44584|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
44586|code|MOV.W           R2, #0x7F8|79-244-255-98
44590|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
44592|code|LDR             R3, =aHostlistDerang; "hostlist_deranged_string"|9-75
44594|code|BLX             __assert_fail|254-247-54-234
44598|code|MOV             R3, R8|67-70
44600|code|B               loc_AD92|171-231
44602|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|8-72
44604|code|MOV.W           R2, #0x7F8|79-244-255-98
44608|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
44610|code|LDR             R3, =aHostlistDerang; "hostlist_deranged_string"|5-75
44612|code|BLX             __assert_fail|254-247-44-234
44616|data|DCD aS0Lu; "%s%0*lu"|244-233-0-0
44620|data|DCD aRegcompFailedS+0x10; "%s"|84-241-0-0
44624|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
44628|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
44632|data|DCD aHostlistDerang; "hostlist_deranged_string"|72-230-0-0
44636|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
44640|code|PUSH.W          {R4-R8,LR}|45-233-240-65
44644|code|SUB             SP, SP, #8|130-176
44646|code|MOVS            R3, #0|0-35
44648|code|MOV             R6, R0|6-70
44650|code|MOV             R5, R1|13-70
44652|code|MOV             R7, R2|23-70
44654|code|STR             R3, [SP,#0x20+var_1C]|1-147
44656|code|CMP             R0, #0|0-40
44658|code|BEQ             loc_AF18|81-208
44660|code|LDR             R1, [R0]|1-104
44662|code|MOVW            R2, #0xDEAD|77-246-173-98
44666|code|CMP             R1, R2|145-66
44668|code|BNE             loc_AF0A|69-209
44670|code|LDR             R2, [R0,#8]|130-104
44672|code|MOV             R4, R3|28-70
44674|code|MOV.W           R8, #0x2C ; ','|79-240-44-8
44678|code|CMP             R3, R2|147-66
44680|code|ITE GE|172-191
44682|code|MOVGE           R3, #0|0-35
44684|code|MOVLT           R3, #1|1-35
44686|code|CMP             R4, R5|172-66
44688|code|ITE CS|44-191
44690|code|MOVCS           R3, #0|0-35
44692|code|ANDCC.W         R3, R3, #1|3-240-1-3
44696|code|CBZ             R3, loc_AED6|235-177
44698|code|ADDS            R3, R7, R4|59-25
44700|code|SUBS            R2, R5, R4|42-27
44702|code|MOV             R0, R6|48-70
44704|code|ADD             R1, SP, #0x20+var_1C|1-169
44706|code|BL              sub_A4E8|255-247-33-251
44710|code|LDR             R2, [R6,#8]|178-104
44712|code|ADDS            R4, R4, R0|36-24
44714|code|CMP             R4, #0|0-44
44716|code|ITE LE|212-191
44718|code|MOVLE           R3, #0|0-35
44720|code|MOVGT           R3, #1|1-35
44722|code|CMP             R4, R5|172-66
44724|code|ITE CS|44-191
44726|code|MOVCS           R3, #0|0-35
44728|code|ANDCC.W         R3, R3, #1|3-240-1-3
44732|code|CBNZ            R3, loc_AEFA|235-185
44734|code|LDR             R3, [SP,#0x20+var_1C]|1-155
44736|code|CMP             R3, R2|147-66
44738|code|ITE GE|172-191
44740|code|MOVGE           R3, #0|0-35
44742|code|MOVLT           R3, #1|1-35
44744|code|CMP             R4, R5|172-66
44746|code|ITE CS|44-191
44748|code|MOVCS           R3, #0|0-35
44750|code|ANDCC.W         R3, R3, #1|3-240-1-3
44754|code|CMP             R3, #0|0-43
44756|code|BNE             loc_AE9A|225-209
44758|code|CMP             R5, R4|165-66
44760|code|ITT HI|132-191
44762|code|BICHI.W         R2, R4, R4,ASR#31|36-234-228-114
44766|code|STRBHI          R3, [R7,R2]|187-84
44768|code|BHI             loc_AEF2|7-216
44770|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
44774|code|CBZ             R5, loc_AEF2|37-177
44776|code|ADDS            R5, R7, R5|125-25
44778|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
44782|code|STRB.W          R3, [R5,#-1]|5-248-1-60
44786|code|MOV             R0, R4|32-70
44788|code|ADD             SP, SP, #8|2-176
44790|code|POP.W           {R4-R8,PC}|189-232-240-129
44794|code|LDR             R3, [SP,#0x20+var_1C]|1-155
44796|code|CMP             R2, R3|154-66
44798|code|BLE             loc_AE86|194-221
44800|code|STRB.W          R8, [R7,R4]|7-248-4-128
44804|code|ADDS            R4, #1|1-52
44806|code|LDR             R2, [R6,#8]|178-104
44808|code|B               loc_AE86|189-231
44810|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
44812|code|MOVW            R2, #0x851; line|64-246-81-2
44816|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
44818|code|LDR             R3, =aHostlistRanged; "hostlist_ranged_string"|7-75
44820|code|BLX             __assert_fail|254-247-196-233
44824|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|6-72
44826|code|MOVW            R2, #0x851; line|64-246-81-2
44830|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
44832|code|LDR             R3, =aHostlistRanged; "hostlist_ranged_string"|3-75
44834|code|BLX             __assert_fail|254-247-190-233
44838|data|ALIGN 4|0-191
44840|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
44844|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
44848|data|DCD aHostlistRanged; "hostlist_ranged_string"|100-230-0-0
44852|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
44856|code|PUSH            {R4,LR}|16-181
44858|code|MOV             R4, R0|4-70
44860|code|MOVS            R0, #0x18|24-32
44862|code|BLX             malloc|254-247-86-234
44866|code|CBZ             R0, loc_AF72|176-177
44868|code|MOVS            R3, #0|0-35
44870|code|MOVW            R2, #0xDEAD|77-246-173-98
44874|code|STR             R3, [R0,#4]|67-96
44876|code|STR             R3, [R0,#0xC]|195-96
44878|code|STR             R3, [R0,#8]|131-96
44880|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
44884|code|STR             R0, [R0,#0x14]|64-97
44886|code|STR             R3, [R0,#0x10]|3-97
44888|code|STR             R2, [R0]|2-96
44890|code|CBZ             R4, loc_AF8A|180-177
44892|code|LDR             R3, [R4]|35-104
44894|code|CMP             R3, R2|147-66
44896|code|BNE             loc_AF98|26-209
44898|code|LDR             R3, [R4,#0x10]|35-105
44900|code|LDR             R2, [R4,#0x14]|98-105
44902|code|STR             R4, [R0,#4]|68-96
44904|code|LDR             R3, [R3]|27-104
44906|code|STR             R2, [R0,#0x14]|66-97
44908|code|STR             R0, [R4,#0x14]|96-97
44910|code|STR             R3, [R0,#0xC]|195-96
44912|code|POP             {R4,PC}|16-189
44914|code|BLX             __errno_location|254-247-170-234
44918|code|MOVS            R3, #0xC|12-35
44920|code|MOVW            R1, #0x879|64-246-121-1
44924|code|LDR             R2, =aHostlistIterat; "hostlist_iterator_create"|10-74
44926|code|STR             R3, [R0]|3-96
44928|code|LDR             R0, =aHostlistC; "hostlist.c"|10-72
44930|code|POP.W           {R4,LR}|189-232-16-64
44934|code|B.W             sub_9D00|254-247-187-190
44938|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
44940|code|MOVW            R2, #0x87B|64-246-123-2
44944|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
44946|code|LDR             R3, =aHostlistIterat_0; "hostlist_iterator_create"|8-75
44948|code|BLX             __assert_fail|254-247-132-233
44952|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
44954|code|MOVW            R2, #0x87B|64-246-123-2
44958|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
44960|code|LDR             R3, =aHostlistIterat_0; "hostlist_iterator_create"|4-75
44962|code|BLX             __assert_fail|254-247-126-233
44966|data|ALIGN 4|0-191
44968|data|DCD aHostlistIterat; "hostlist_iterator_create"|252-233-0-0
44972|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
44976|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
44980|data|DCD aHostlistIterat_0; "hostlist_iterator_create"|124-230-0-0
44984|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
44988|code|LDR             R0, [R0]|0-104
44990|code|B.W             loc_AF38|255-247-187-191
44994|data|ALIGN 4|0-191
44996|code|PUSH            {R3,LR}|8-181
44998|code|CBZ             R0, loc_AFE6|112-177
45000|code|LDR             R2, [R0]|2-104
45002|code|MOVW            R3, #0xDEAD|77-246-173-99
45006|code|CMP             R2, R3|154-66
45008|code|BNE             loc_AFF4|16-209
45010|code|LDR             R3, [R0,#4]|67-104
45012|code|MOVS            R2, #0|0-34
45014|code|STR             R2, [R0,#8]|130-96
45016|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
45020|code|LDR             R3, [R3,#0x10]|27-105
45022|code|LDR             R3, [R3]|27-104
45024|code|STR             R2, [R0,#0x10]|2-97
45026|code|STR             R3, [R0,#0xC]|195-96
45028|code|POP             {R3,PC}|8-189
45030|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
45032|code|MOVW            R2, #0x88B; line|64-246-139-2
45036|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
45038|code|LDR             R3, =aHostlistIterat_1; "hostlist_iterator_reset"|7-75
45040|code|BLX             __assert_fail|254-247-86-233
45044|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|6-72
45046|code|MOVW            R2, #0x88C; line|64-246-140-2
45050|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
45052|code|LDR             R3, =aHostlistIterat_1; "hostlist_iterator_reset"|3-75
45054|code|BLX             __assert_fail|254-247-80-233
45058|data|ALIGN 4|0-191
45060|data|DCD aIVoid0; "i != ((void *)0)"|24-234-0-0
45064|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
45068|data|DCD aHostlistIterat_1; "hostlist_iterator_reset"|152-230-0-0
45072|data|DCD aIMagic57005; "i->magic == 57005"|44-234-0-0
45076|code|PUSH            {R4-R6,LR}|112-181
45078|code|MOV             R5, R1|13-70
45080|code|LDR             R4, [R0,#0x14]|68-105
45082|code|MOV             R6, R2|22-70
45084|code|CBNZ            R4, loc_B028|36-185
45086|code|B               locret_B04C|21-224
45088|code|CMP             R3, R5|171-66
45090|code|BEQ             loc_B04E|20-208
45092|code|LDR             R4, [R4,#0x14]|100-105
45094|code|CBZ             R4, locret_B04C|140-177
45096|code|LDR             R3, [R4,#8]|163-104
45098|code|CMP             R6, #0|0-46
45100|code|BEQ             loc_B020|248-208
45102|code|CMP             R5, R3|157-66
45104|code|RSB.W           R2, R6, R3|198-235-3-2
45108|code|BGT             loc_B024|246-220
45110|code|CMP             R2, #0|0-42
45112|code|STR             R2, [R4,#8]|162-96
45114|code|BLT             loc_B05C|15-219
45116|code|LDR             R3, [R4,#4]|99-104
45118|code|LDR             R3, [R3,#0x10]|27-105
45120|code|LDR.W           R3, [R3,R2,LSL#2]|83-248-34-48
45124|code|STR             R3, [R4,#0xC]|227-96
45126|code|LDR             R4, [R4,#0x14]|100-105
45128|code|CMP             R4, #0|0-44
45130|code|BNE             loc_B028|237-209
45132|code|POP             {R4-R6,PC}|112-189
45134|code|LDR             R3, [R4,#0x10]|35-105
45136|code|CMP             R3, #0|0-43
45138|code|ADD.W           R3, R3, #0xFFFFFFFF|3-241-255-51
45142|code|IT GE|168-191
45144|code|STRGE           R3, [R4,#0x10]|35-97
45146|code|B               loc_B024|227-231
45148|code|MOV             R0, R4|32-70
45150|code|BL              sub_AFC4|255-247-177-255
45154|code|B               loc_B024|223-231
45156|code|PUSH            {R3-R7,LR}|248-181
45158|code|CMP             R0, #0|0-40
45160|code|BEQ             loc_B0C2|43-208
45162|code|LDR             R2, [R0]|2-104
45164|code|MOVW            R3, #0xDEAD|77-246-173-99
45168|code|CMP             R2, R3|154-66
45170|code|BNE             loc_B0DE|52-209
45172|code|LDR             R7, [R0,#8]|135-104
45174|code|CMP             R7, R1|143-66
45176|code|ITE GT|204-191
45178|code|MOVGT           R3, #0|0-35
45180|code|MOVLE           R3, #1|1-35
45182|code|ORRS.W          R3, R3, R1,LSR#31|83-234-209-115
45186|code|BNE             loc_B0D0|37-209
45188|code|LDR             R2, [R0,#0x10]|2-105
45190|code|SUBS            R7, #1|1-63
45192|code|LSLS            R3, R1, #2|139-0
45194|code|CMP             R1, R7|185-66
45196|code|MOV             R5, R2|21-70
45198|code|LDR.W           R4, [R2,R1,LSL#2]|82-248-33-64
45202|code|BGE             loc_B0AA|10-218
45204|code|MOV             R5, R1|13-70
45206|code|B               loc_B09A|0-224
45208|code|LDR             R2, [R0,#0x10]|2-105
45210|code|ADDS            R6, R2, R3|214-24
45212|code|ADDS            R3, #4|4-51
45214|code|ADDS            R5, #1|1-53
45216|code|LDR             R2, [R2,R3]|210-88
45218|code|CMP             R5, R7|189-66
45220|code|STR             R2, [R6]|50-96
45222|code|BLT             loc_B098|247-219
45224|code|LDR             R5, [R0,#0x10]|5-105
45226|code|STR             R7, [R0,#8]|135-96
45228|code|MOVS            R3, #0|0-35
45230|code|MOVS            R2, #1|1-34
45232|code|STR.W           R3, [R5,R7,LSL#2]|69-248-39-48
45236|code|BL              sub_B014|255-247-174-255
45240|code|MOV             R0, R4|32-70
45242|code|POP.W           {R3-R7,LR}|189-232-248-64
45246|code|B.W             sub_9E18|254-247-171-190
45250|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
45252|code|MOVW            R2, #0x48F; line|64-242-143-66
45256|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
45258|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|10-75
45260|code|BLX             __assert_fail|254-247-232-232
45264|code|LDR             R0, =aNHlNrangesN0; "n < hl->nranges && n >= 0"|9-72
45266|code|MOVW            R2, #0x491; line|64-242-145-66
45270|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
45272|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|6-75
45274|code|BLX             __assert_fail|254-247-226-232
45278|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|7-72
45280|code|MOV.W           R2, #0x490; line|79-244-146-98
45284|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
45286|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|3-75
45288|code|BLX             __assert_fail|254-247-218-232
45292|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
45296|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
45300|data|DCD aHostlistDelete; "hostlist_delete_range"|176-230-0-0
45304|data|DCD aNHlNrangesN0; "n < hl->nranges && n >= 0"|64-234-0-0
45308|data|DCD aHlMagic57005; "hl->magic == 57005"|160-233-0-0
45312|code|PUSH            {R4-R6,LR}|112-181
45314|code|MOV             R4, R0|4-70
45316|code|MOV             R5, R1|13-70
45318|code|CBZ             R0, loc_B144|232-177
45320|code|LDR             R2, [R0]|2-104
45322|code|MOVW            R3, #0xDEAD|77-246-173-99
45326|code|CMP             R2, R3|154-66
45328|code|BNE             loc_B16E|45-209
45330|code|CMP             R1, #0|0-41
45332|code|BLE             loc_B160|36-221
45334|code|LDR             R3, [R0,#8]|131-104
45336|code|CMP             R1, R3|153-66
45338|code|BGE             loc_B152|26-218
45340|code|LDR             R3, [R0,#0x10]|3-105
45342|code|SUBS            R2, R1, #1|74-30
45344|code|LDR.W           R1, [R3,R1,LSL#2]|83-248-33-16
45348|code|LDR.W           R0, [R3,R2,LSL#2]|83-248-34-0
45352|code|BL              sub_A40C|255-247-112-249
45356|code|CMP             R0, #0|0-40
45358|code|MOV             R6, R0|6-70
45360|code|BLT             loc_B140|6-219
45362|code|MOV             R0, R4|32-70
45364|code|MOV             R1, R5|41-70
45366|code|BL              sub_B064|255-247-149-255
45370|code|LDR             R3, [R4,#0xC]|227-104
45372|code|SUBS            R3, R3, R6|155-27
45374|code|STR             R3, [R4,#0xC]|227-96
45376|code|MOV             R0, R6|48-70
45378|code|POP             {R4-R6,PC}|112-189
45380|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|13-72
45382|code|MOVW            R2, #0x7CE; line|64-242-206-114
45386|code|LDR             R1, =aHostlistC; "hostlist.c"|13-73
45388|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|13-75
45390|code|BLX             __assert_fail|254-247-168-232
45394|code|LDR             R0, =aLocHlNranges; "loc < hl->nranges"|13-72
45396|code|MOVW            R2, #0x7D1; line|64-242-209-114
45400|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
45402|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|10-75
45404|code|BLX             __assert_fail|254-247-160-232
45408|code|LDR             R0, =aLoc0; "loc > 0"|10-72
45410|code|MOV.W           R2, #0x7D0; line|79-244-250-98
45414|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
45416|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|6-75
45418|code|BLX             __assert_fail|254-247-154-232
45422|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|8-72
45424|code|MOVW            R2, #0x7CF; line|64-242-207-114
45428|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
45430|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|3-75
45432|code|BLX             __assert_fail|254-247-146-232
45436|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
45440|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
45444|data|DCD aAttemptRangeJo; "_attempt_range_join"|200-230-0-0
45448|data|DCD aLocHlNranges; "loc < hl->nranges"|100-234-0-0
45452|data|DCD aLoc0; "loc > 0"|92-234-0-0
45456|data|DCD aHlMagic57005; "hl->magic == 57005"|160-233-0-0
45460|code|PUSH            {R3-R5,LR}|56-181
45462|code|MOV             R4, R0|4-70
45464|code|CBZ             R0, loc_B1DE|8-179
45466|code|LDR             R2, [R0]|2-104
45468|code|MOVW            R3, #0xDEAD|77-246-173-99
45472|code|CMP             R2, R3|154-66
45474|code|BNE             loc_B1EC|35-209
45476|code|LDR             R1, [R0,#8]; nmemb|129-104
45478|code|CMP             R1, #1|1-41
45480|code|BLE             locret_B1DC|24-221
45482|code|LDR             R0, [R0,#0x10]; base|0-105
45484|code|MOVS            R2, #4; size|4-34
45486|code|LDR             R3, =(sub_A404+1); compar|19-75
45488|code|MOVS            R5, #1|1-37
45490|code|BLX             qsort|254-247-26-232
45494|code|B               loc_B1C6|6-224
45496|code|MOV             R1, R5|41-70
45498|code|MOV             R0, R4|32-70
45500|code|BL              sub_B100|255-247-160-255
45504|code|CMP             R0, #0|0-40
45506|code|IT LT|184-191
45508|code|ADDLT           R5, #1|1-53
45510|code|LDR             R3, [R4,#8]|163-104
45512|code|CMP             R5, R3|157-66
45514|code|BLT             loc_B1B8|245-219
45516|code|LDR             R4, [R4,#0x14]|100-105
45518|code|CBZ             R4, locret_B1DC|44-177
45520|code|MOV             R0, R4|32-70
45522|code|BL              sub_AFC4|255-247-247-254
45526|code|LDR             R4, [R4,#0x14]|100-105
45528|code|CMP             R4, #0|0-44
45530|code|BNE             loc_B1D0|249-209
45532|code|POP             {R3-R5,PC}|56-189
45534|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|8-72
45536|code|MOVW            R2, #0x7DE; line|64-242-222-114
45540|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
45542|code|LDR             R3, =aHostlistUniq; "hostlist_uniq"|8-75
45544|code|BLX             __assert_fail|254-247-90-232
45548|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
45550|code|MOVW            R2, #0x7DE; line|64-242-222-114
45554|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
45556|code|LDR             R3, =aHostlistUniq; "hostlist_uniq"|4-75
45558|code|BLX             __assert_fail|254-247-84-232
45562|data|ALIGN 4|0-191
45564|data|DCD sub_A404+1|5-164-0-0
45568|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
45572|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
45576|data|DCD aHostlistUniq; "hostlist_uniq"|220-230-0-0
45580|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
45584|code|PUSH.W          {R3-R11,LR}|45-233-248-79
45588|code|MOV             R8, R0|128-70
45590|code|CMP             R0, #0|0-40
45592|code|BEQ.W           loc_B446|0-240-21-129
45596|code|LDR             R2, [R0]|2-104
45598|code|MOVW            R3, #0xDEAD|77-246-173-99
45602|code|CMP             R2, R3|154-66
45604|code|BNE.W           loc_B400|64-240-236-128
45608|code|LDR             R1, [R0,#8]|129-104
45610|code|CMP             R1, #1|1-41
45612|code|BLE.W           locret_B3E2|64-243-217-128
45616|code|LDR             R0, [R0,#0x10]|0-105
45618|code|MOVS            R2, #4|4-34
45620|code|LDR             R3, =(sub_A404+1)|140-75
45622|code|BLX             qsort|253-247-216-239
45626|code|LDR.W           R4, [R8,#0x14]|216-248-20-64
45630|code|CBZ             R4, loc_B24C|44-177
45632|code|MOV             R0, R4|32-70
45634|code|BL              sub_AFC4|255-247-191-254
45638|code|LDR             R4, [R4,#0x14]|100-105
45640|code|CMP             R4, #0|0-44
45642|code|BNE             loc_B240|249-209
45644|code|LDR.W           R2, [R8]|216-248-0-32
45648|code|MOVW            R3, #0xDEAD|77-246-173-99
45652|code|CMP             R2, R3|154-66
45654|code|BNE.W           loc_B438|64-240-239-128
45658|code|LDR.W           R5, [R8,#8]|216-248-8-80
45662|code|SUBS            R5, #1|1-61
45664|code|CMP             R5, #0|0-45
45666|code|BLE.W           locret_B3E2|64-243-190-128
45670|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
45674|code|SUBS            R6, R5, #1|110-30
45676|code|B               loc_B27C|6-224
45678|code|CMP             R6, #0|0-46
45680|code|MOV             R5, R6|53-70
45682|code|BLE.W           loc_B3A4|64-243-151-128
45686|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
45690|code|SUBS            R6, #1|1-62
45692|code|LDR.W           R7, [R3,R6,LSL#2]|83-248-38-112
45696|code|MOV.W           R10, R5,LSL#2|79-234-133-10
45700|code|MOV.W           R11, R6,LSL#2|79-234-134-11
45704|code|LDR.W           R9, [R3,R5,LSL#2]|83-248-37-144
45708|code|CMP             R7, #0|0-47
45710|code|BEQ.W           loc_B42A|0-240-204-128
45714|code|CMP.W           R9, #0|185-241-0-15
45718|code|BEQ.W           loc_B41C|0-240-193-128
45722|code|LDRB            R3, [R7,#0x10]|59-124
45724|code|LSLS            R2, R3, #0x1F|218-7
45726|code|BMI             loc_B26E|230-212
45728|code|LDRB.W          R3, [R9,#0x10]|153-248-16-48
45732|code|LSLS            R3, R3, #0x1F|219-7
45734|code|BMI             loc_B26E|226-212
45736|code|MOV             R0, R7|56-70
45738|code|MOV             R1, R9|73-70
45740|code|BL              sub_A3AC|255-247-126-248
45744|code|CMP             R0, #0|0-40
45746|code|BGT.W           loc_B458|0-243-209-128
45750|code|MOV             R0, R7|56-70
45752|code|MOV             R1, R9|73-70
45754|code|BL              sub_A018|254-247-173-254
45758|code|CMP             R0, #0|0-40
45760|code|BNE             loc_B26E|213-209
45762|code|LDR             R2, [R7,#8]|186-104
45764|code|LDR.W           R3, [R9,#4]|217-248-4-48
45768|code|CMP             R2, R3|154-66
45770|code|BLS             loc_B26E|208-217
45772|code|MOV             R0, R7|56-70
45774|code|MOV             R1, R9|73-70
45776|code|BL              sub_A0E0|254-247-6-255
45780|code|CMP             R0, #0|0-40
45782|code|BEQ             loc_B26E|202-208
45784|code|MOV             R0, R7|56-70
45786|code|BL              sub_A2EC|255-247-7-248
45790|code|MOV             R4, R0|4-70
45792|code|CMP             R0, #0|0-40
45794|code|BEQ             loc_B26E|196-208
45796|code|LDR.W           R0, [R8,#0x10]|216-248-16-0
45800|code|LDR             R2, [R7,#8]|186-104
45802|code|LDR.W           R1, [R9,#8]|217-248-8-16
45806|code|LDR.W           R6, [R0,R11]|80-248-11-96
45810|code|LDR.W           R3, [R9,#4]|217-248-4-48
45814|code|CMP             R1, R2|145-66
45816|code|IT CS|40-191
45818|code|MOVCS           R1, R2|17-70
45820|code|LDR.W           R7, [R0,R10]|80-248-10-112
45824|code|STR             R1, [R4,#8]|161-96
45826|code|MOV             R0, R6|48-70
45828|code|LDR             R2, [R6,#8]|178-104
45830|code|STR             R3, [R4,#4]|99-96
45832|code|CMP             R2, R1|138-66
45834|code|IT HI|136-191
45836|code|STRHI           R2, [R7,#8]|186-96
45838|code|STR             R3, [R6,#8]|179-96
45840|code|LDR.W           R9, [R4,#8]|212-248-8-144
45844|code|STR.W           R9, [R7,#4]|199-248-4-144
45848|code|BL              sub_A128|254-247-6-255
45852|code|CBZ             R0, loc_B32A|40-177
45854|code|MOV             R0, R8|64-70
45856|code|MOV             R1, R5|41-70
45858|code|BL              sub_B064|255-247-159-254
45862|code|LDR.W           R9, [R4,#8]|212-248-8-144
45866|code|LDR             R1, [R4,#4]|97-104
45868|code|CMP             R1, R9|73-69
45870|code|BLS             loc_B34A|12-217
45872|code|B               loc_B390|46-224
45874|code|LDR             R2, [R7,#4]|122-104
45876|code|CMP             R2, R3|154-66
45878|code|BHI             loc_B372|28-216
45880|code|MOV             R0, R9|72-70
45882|code|BL              sub_9E18|254-247-109-253
45886|code|LDR             R1, [R4,#4]|97-104
45888|code|LDR             R3, [R4,#8]|163-104
45890|code|ADDS            R1, #1|1-49
45892|code|STR             R1, [R4,#4]|97-96
45894|code|CMP             R1, R3|153-66
45896|code|BHI             loc_B390|34-216
45898|code|LDR             R3, [R4,#0xC]|227-104
45900|code|MOV             R2, R1|10-70
45902|code|LDR             R0, [R4]|32-104
45904|code|BL              sub_A268|254-247-138-255
45908|code|LDR             R3, [R4,#4]|99-104
45910|code|LDR             R2, [R6,#8]|178-104
45912|code|CMP             R3, R2|147-66
45914|code|MOV             R9, R0|129-70
45916|code|BLS             loc_B332|233-217
45918|code|MOV             R2, R5|42-70
45920|code|MOV             R0, R8|64-70
45922|code|MOV             R1, R9|73-70
45924|code|ADDS            R5, #1|1-53
45926|code|BL              sub_A7FC|255-247-73-250
45930|code|LDR             R3, [R4,#4]|99-104
45932|code|LDR             R2, [R7,#4]|122-104
45934|code|CMP             R2, R3|154-66
45936|code|BLS             loc_B338|226-217
45938|code|MOV             R2, R5|42-70
45940|code|MOV             R1, R9|73-70
45942|code|MOV             R0, R8|64-70
45944|code|ADDS            R5, #1|1-53
45946|code|BL              sub_A7FC|255-247-63-250
45950|code|MOV             R0, R9|72-70
45952|code|BL              sub_9E18|254-247-74-253
45956|code|LDR             R1, [R4,#4]|97-104
45958|code|LDR             R3, [R4,#8]|163-104
45960|code|ADDS            R1, #1|1-49
45962|code|STR             R1, [R4,#4]|97-96
45964|code|CMP             R1, R3|153-66
45966|code|BLS             loc_B34A|220-217
45968|code|LDR.W           R5, [R8,#8]|216-248-8-80
45972|code|MOV             R0, R4|32-70
45974|code|BL              sub_9E18|254-247-63-253
45978|code|SUBS            R6, R5, #1|110-30
45980|code|CMP             R6, #0|0-46
45982|code|MOV             R5, R6|53-70
45984|code|BGT.W           loc_B276|63-247-105-175
45988|code|LDR.W           R2, [R8]|216-248-0-32
45992|code|MOVW            R3, #0xDEAD|77-246-173-99
45996|code|CMP             R2, R3|154-66
45998|code|BNE             loc_B40E|46-209
46000|code|LDR.W           R5, [R8,#8]|216-248-8-80
46004|code|SUBS            R5, #1|1-61
46006|code|CMP             R5, #0|0-45
46008|code|BLE             locret_B454|76-221
46010|code|LSLS            R4, R5, #2|172-0
46012|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
46016|code|ADDS            R2, R3, R4|26-25
46018|code|LDR             R7, [R3,R4]|31-89
46020|code|LDR.W           R6, [R2,#-4]|82-248-4-108
46024|code|MOV             R1, R7|57-70
46026|code|MOV             R0, R6|48-70
46028|code|BL              sub_A018|254-247-36-254
46032|code|CBNZ            R0, loc_B3DC|32-185
46034|code|LDR             R3, [R7,#4]|123-104
46036|code|LDR             R2, [R6,#8]|178-104
46038|code|SUBS            R3, #1|1-59
46040|code|CMP             R2, R3|154-66
46042|code|BEQ             loc_B3E6|4-208
46044|code|SUBS            R4, #4|4-60
46046|code|SUBS            R5, #1|1-61
46048|code|BNE             loc_B3BC|236-209
46050|code|POP.W           {R3-R11,PC}|189-232-248-143
46054|code|MOV             R0, R6|48-70
46056|code|MOV             R1, R7|57-70
46058|code|BL              sub_A0E0|254-247-121-254
46062|code|CMP             R0, #0|0-40
46064|code|BEQ             loc_B3DC|244-208
46066|code|LDR             R3, [R7,#8]|187-104
46068|code|MOV             R0, R8|64-70
46070|code|MOV             R1, R5|41-70
46072|code|STR             R3, [R6,#8]|179-96
46074|code|BL              sub_B064|255-247-51-254
46078|code|B               loc_B3DC|237-231
46080|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|26-72
46082|code|MOV.W           R2, #0x768|79-244-237-98
46086|code|LDR             R1, =aHostlistC; "hostlist.c"|26-73
46088|code|LDR             R3, =aHostlistSort; "hostlist_sort"|26-75
46090|code|BLX             __assert_fail|253-247-74-239
46094|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|23-72
46096|code|MOVW            R2, #0x783|64-242-131-114
46100|code|LDR             R1, =aHostlistC; "hostlist.c"|22-73
46102|code|LDR             R3, =aHostlistCollap; "hostlist_collapse"|24-75
46104|code|BLX             __assert_fail|253-247-66-239
46108|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|23-72
46110|code|MOV.W           R2, #0x374|79-244-93-114
46114|code|LDR             R1, =aHostlistC; "hostlist.c"|19-73
46116|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|22-75
46118|code|BLX             __assert_fail|253-247-60-239
46122|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|22-72
46124|code|MOVW            R2, #0x373|64-242-115-50
46128|code|LDR             R1, =aHostlistC; "hostlist.c"|15-73
46130|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|19-75
46132|code|BLX             __assert_fail|253-247-52-239
46136|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|12-72
46138|code|MOVW            R2, #0x79A|64-242-154-114
46142|code|LDR             R1, =aHostlistC; "hostlist.c"|12-73
46144|code|LDR             R3, =aHostlistCoales; "hostlist_coalesce"|17-75
46146|code|BLX             __assert_fail|253-247-46-239
46150|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|17-72
46152|code|MOV.W           R2, #0x768|79-244-237-98
46156|code|LDR             R1, =aHostlistC; "hostlist.c"|8-73
46158|code|LDR             R3, =aHostlistSort; "hostlist_sort"|9-75
46160|code|BLX             __assert_fail|253-247-38-239
46164|code|POP.W           {R3-R11,PC}|189-232-248-143
46168|code|LDR             R0, =aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|13-72
46170|code|MOVW            R2, #0x379|64-242-121-50
46174|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
46176|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|7-75
46178|code|BLX             __assert_fail|253-247-30-239
46182|data|ALIGN 4|0-191
46184|data|DCD sub_A404+1|5-164-0-0
46188|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
46192|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
46196|data|DCD aHostlistSort; "hostlist_sort"|236-230-0-0
46200|data|DCD aHostlistCollap; "hostlist_collapse"|36-231-0-0
46204|data|DCD aH2Void0; "h2 != ((void *)0)"|56-233-0-0
46208|data|DCD aHostrangeInter; "hostrange_intersect"|16-231-0-0
46212|data|DCD aH1Void0; "h1 != ((void *)0)"|164-232-0-0
46216|data|DCD aHostlistCoales; "hostlist_coalesce"|252-230-0-0
46220|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
46224|data|DCD aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|76-233-0-0
46228|code|PUSH.W          {R3-R11,LR}|45-233-248-79
46232|code|MOV             R4, R0|4-70
46234|code|MOV             R9, R1|137-70
46236|code|CMP             R0, #0|0-40
46238|code|BEQ             loc_B556|90-208
46240|code|LDR             R2, [R0]|2-104
46242|code|MOVW            R3, #0xDEAD|77-246-173-99
46246|code|CMP             R2, R3|154-66
46248|code|BNE             loc_B548|78-209
46250|code|CMP             R1, #0|0-41
46252|code|BLT             loc_B53A|69-219
46254|code|LDR.W           R11, [R0,#0xC]|208-248-12-176
46258|code|CMP             R1, R11|89-69
46260|code|BGT             loc_B53A|65-220
46262|code|LDR.W           R10, [R0,#8]|208-248-8-160
46266|code|CMP.W           R10, #0|186-241-0-15
46270|code|BLE             loc_B50E|38-221
46272|code|MOVS            R5, #0|0-37
46274|code|LDR.W           R8, [R0,#0x10]|208-248-16-128
46278|code|MOV             R6, R5|46-70
46280|code|B               loc_B4D2|3-224
46282|code|ADDS            R6, #1|1-54
46284|code|ADDS            R5, R5, R0|45-24
46286|code|CMP             R6, R10|86-69
46288|code|BEQ             loc_B50E|29-208
46290|code|LDR.W           R7, [R8],#4|88-248-4-123
46294|code|MOV             R0, R7|56-70
46296|code|BL              sub_A0AC|254-247-232-253
46300|code|SUBS            R3, R0, #1|67-30
46302|code|ADDS            R3, R3, R5|91-25
46304|code|CMP             R9, R3|153-69
46306|code|BGT             loc_B4CA|242-220
46308|code|LDRB            R3, [R7,#0x10]|59-124
46310|code|LDR             R1, [R7,#4]|121-104
46312|code|LSLS            R0, R3, #0x1F|216-7
46314|code|BMI             loc_B522|26-212
46316|code|ADD             R1, R9|73-68
46318|code|MOV             R0, R7|56-70
46320|code|SUBS            R1, R1, R5|73-27
46322|code|BL              sub_A324|254-247-23-255
46326|code|MOV             R5, R0|5-70
46328|code|CBZ             R0, loc_B51A|120-177
46330|code|MOV             R1, R0|1-70
46332|code|ADDS            R2, R6, #1|114-28
46334|code|MOV             R0, R4|32-70
46336|code|BL              sub_A7FC|255-247-124-249
46340|code|MOV             R0, R5|40-70
46342|code|BL              sub_9E18|254-247-135-252
46346|code|LDR.W           R11, [R4,#0xC]|212-248-12-176
46350|code|ADD.W           R3, R11, #0xFFFFFFFF|11-241-255-51
46354|code|MOVS            R0, #1|1-32
46356|code|STR             R3, [R4,#0xC]|227-96
46358|code|POP.W           {R3-R11,PC}|189-232-248-143
46362|code|MOV             R0, R7|56-70
46364|code|BL              sub_A128|254-247-4-254
46368|code|CBZ             R0, loc_B52A|24-177
46370|code|MOV             R0, R4|32-70
46372|code|MOV             R1, R6|49-70
46374|code|BL              sub_B064|255-247-157-253
46378|code|LDR.W           R11, [R4,#0xC]|212-248-12-176
46382|code|MOVS            R0, #1|1-32
46384|code|ADD.W           R3, R11, #0xFFFFFFFF|11-241-255-51
46388|code|STR             R3, [R4,#0xC]|227-96
46390|code|POP.W           {R3-R11,PC}|189-232-248-143
46394|code|LDR             R0, =aN0NHlNhosts; "n >= 0 && n <= hl->nhosts"|10-72
46396|code|MOVW            R2, #0x714; line|64-242-20-114
46400|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
46402|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|10-75
46404|code|BLX             __assert_fail|253-247-172-238
46408|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|9-72
46410|code|MOVW            R2, #0x713; line|64-242-19-114
46414|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
46416|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|6-75
46418|code|BLX             __assert_fail|253-247-166-238
46422|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
46424|code|MOVW            R2, #0x713; line|64-242-19-114
46428|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
46430|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|3-75
46432|code|BLX             __assert_fail|253-247-158-238
46436|data|DCD aN0NHlNhosts; "n >= 0 && n <= hl->nhosts"|120-234-0-0
46440|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
46444|data|DCD aHostlistDelete_0; "hostlist_delete_nth"|56-231-0-0
46448|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
46452|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
46456|code|PUSH            {R3-R5,LR}|56-181
46458|code|MOV             R5, R0|5-70
46460|code|BL              sub_AC14|255-247-74-251
46464|code|CMP             R0, #0|0-40
46466|code|MOV             R4, R0|4-70
46468|code|BLT             loc_B58E|3-219
46470|code|MOV             R0, R5|40-70
46472|code|MOV             R1, R4|33-70
46474|code|BL              sub_B494|255-247-131-255
46478|code|MVNS            R0, R4|224-67
46480|code|LSRS            R0, R0, #0x1F|192-15
46482|code|POP             {R3-R5,PC}|56-189
46484|code|PUSH.W          {R4-R9,LR}|45-233-240-67
46488|code|MOV             R4, R0|4-70
46490|code|SUB             SP, SP, #0xC|131-176
46492|code|CMP             R0, #0|0-40
46494|code|BEQ.W           loc_B6A8|0-240-131-128
46498|code|LDR             R2, [R0]|2-104
46500|code|MOVW            R3, #0xDEAD|77-246-173-99
46504|code|CMP             R2, R3|154-66
46506|code|BNE             loc_B69A|118-209
46508|code|LDR             R7, [R0,#0xC]|199-104
46510|code|CMP             R7, #0|0-47
46512|code|BLE             loc_B650|78-221
46514|code|LDR             R3, [R0,#0x10]|3-105
46516|code|LDR             R5, [R3]|29-104
46518|code|CMP             R5, #0|0-45
46520|code|BEQ             loc_B68C|104-208
46522|code|LDRB            R3, [R5,#0x10]|43-124
46524|code|LSLS            R6, R3, #0x1F|222-7
46526|code|BMI             loc_B5EA|20-212
46528|code|MOV             R0, R5|40-70
46530|code|BL              sub_A0AC|254-247-115-253
46534|code|MOV             R6, R0|6-70
46536|code|CMP             R0, #0|0-40
46538|code|BNE             loc_B616|36-209
46540|code|SUBS            R7, #1|1-63
46542|code|MOV             R0, R5|40-70
46544|code|STR             R7, [R4,#0xC]|231-96
46546|code|BL              sub_A128|254-247-169-253
46550|code|MOV             R1, R0|1-70
46552|code|MOV             R0, R4|32-70
46554|code|CBNZ            R1, loc_B60E|193-185
46556|code|MOV             R2, R1|10-70
46558|code|BL              sub_B014|255-247-25-253
46562|code|MOV             R0, R6|48-70
46564|code|ADD             SP, SP, #0xC|3-176
46566|code|POP.W           {R4-R9,PC}|189-232-240-131
46570|code|LDM.W           R5, {R0,R3}|149-232-9-0
46574|code|ADDS            R3, #1|1-51
46576|code|STR             R3, [R5,#4]|107-96
46578|code|BLX             __strdup|253-247-82-239
46582|code|MOV             R6, R0|6-70
46584|code|CBZ             R0, loc_B654|96-179
46586|code|LDR             R7, [R4,#0xC]|231-104
46588|code|SUBS            R7, #1|1-63
46590|code|MOV             R0, R5|40-70
46592|code|STR             R7, [R4,#0xC]|231-96
46594|code|BL              sub_A128|254-247-145-253
46598|code|MOV             R1, R0|1-70
46600|code|MOV             R0, R4|32-70
46602|code|CMP             R1, #0|0-41
46604|code|BEQ             loc_B5DC|230-208
46606|code|MOVS            R1, #0|0-33
46608|code|BL              sub_B064|255-247-40-253
46612|code|B               loc_B5E2|229-231
46614|code|LDR             R7, [R5]|47-104
46616|code|MOV             R0, R7|56-70
46618|code|BLX             strlen|253-247-142-238
46622|code|LDR.W           R8, [R5,#0xC]|213-248-12-128
46626|code|ADD.W           R9, R8, #0x10|8-241-16-9
46630|code|ADD             R9, R0|129-68
46632|code|MOV             R0, R9|72-70
46634|code|BLX             malloc|253-247-224-238
46638|code|MOV             R6, R0|6-70
46640|code|CBZ             R0, loc_B670|240-177
46642|code|LDR.W           LR, [R5,#4]|213-248-4-224
46646|code|MOV             R3, R7|59-70
46648|code|MOV             R1, R9|73-70
46650|code|LDR             R2, =aS0Lu; "%s%0*lu"|31-74
46652|code|ADD.W           R12, LR, #1|14-241-1-12
46656|code|STR.W           R12, [R5,#4]|197-248-4-192
46660|code|STMEA.W         SP, {R8,LR}|141-232-0-65
46664|code|BLX             snprintf|253-247-26-239
46668|code|LDR             R7, [R4,#0xC]|231-104
46670|code|B               loc_B5CC|189-231
46672|code|MOVS            R6, #0|0-38
46674|code|B               loc_B5E2|198-231
46676|code|BLX             __errno_location|253-247-56-239
46680|code|MOVS            R2, #0xC|12-34
46682|code|MOVW            R1, #0x333|64-242-51-49
46686|code|MOV             R3, R0|3-70
46688|code|LDR             R0, =aHostlistC; "hostlist.c"|22-72
46690|code|STR             R2, [R3]|26-96
46692|code|LDR             R2, =aHostrangeShift; "hostrange shift"|22-74
46694|code|BL              sub_9D00|254-247-75-251
46698|code|LDR             R7, [R4,#0xC]|231-104
46700|code|MOV             R6, R0|6-70
46702|code|B               loc_B5FC|197-231
46704|code|BLX             __errno_location|253-247-42-239
46708|code|MOVS            R2, #0xC|12-34
46710|code|MOVW            R1, #0x337|64-242-55-49
46714|code|MOV             R3, R0|3-70
46716|code|LDR             R0, =aHostlistC; "hostlist.c"|15-72
46718|code|STR             R2, [R3]|26-96
46720|code|LDR             R2, =aHostrangeShift; "hostrange shift"|15-74
46722|code|BL              sub_9D00|254-247-61-251
46726|code|LDR             R7, [R4,#0xC]|231-104
46728|code|MOV             R6, R0|6-70
46730|code|B               loc_B5CC|159-231
46732|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|13-72
46734|code|MOVW            R2, #0x32E|64-242-46-50
46738|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
46740|code|LDR             R3, =aHostrangeShift_0; "hostrange_shift"|12-75
46742|code|BLX             __assert_fail|253-247-4-238
46746|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|12-72
46748|code|MOVW            R2, #0x66F|64-242-111-98
46752|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
46754|code|LDR             R3, =aHostlistShift; "hostlist_shift"|11-75
46756|code|BLX             __assert_fail|253-247-252-237
46760|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
46762|code|MOVW            R2, #0x66F|64-242-111-98
46766|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
46768|code|LDR             R3, =aHostlistShift; "hostlist_shift"|7-75
46770|code|BLX             __assert_fail|253-247-246-237
46774|data|ALIGN 4|0-191
46776|data|DCD aS0Lu; "%s%0*lu"|244-233-0-0
46780|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
46784|data|DCD aHostrangeShift; "hostrange shift"|148-234-0-0
46788|data|DCD aHrVoid0; "hr != ((void *)0)"|124-232-0-0
46792|data|DCD aHostrangeShift_0; "hostrange_shift"|92-231-0-0
46796|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
46800|data|DCD aHostlistShift; "hostlist_shift"|76-231-0-0
46804|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
46808|code|PUSH            {R4,LR}|16-181
46810|code|CMP             R0, #0|0-40
46812|code|BEQ             locret_B72C|38-208
46814|code|LDR             R3, [R0]|3-104
46816|code|MOVW            R2, #0xDEAD|77-246-173-98
46820|code|CMP             R3, R2|147-66
46822|code|BNE             loc_B758|55-209
46824|code|LDR             R1, [R0,#4]|65-104
46826|code|CMP             R1, #0|0-41
46828|code|BEQ             loc_B74A|45-208
46830|code|LDR             R2, [R1]|10-104
46832|code|CMP             R2, R3|154-66
46834|code|BNE             loc_B73C|35-209
46836|code|LDR             R3, [R1,#0x14]|75-105
46838|code|CBZ             R3, loc_B71A|131-177
46840|code|LDR             R4, [R3]|28-104
46842|code|CMP             R4, R2|148-66
46844|code|BNE             loc_B72E|23-209
46846|code|ADDS            R1, #0x14|20-49
46848|code|CMP             R0, R3|152-66
46850|code|BNE             loc_B710|5-209
46852|code|B               loc_B726|15-224
46854|code|LDR             R2, [R3]|26-104
46856|code|CMP             R2, R4|162-66
46858|code|BNE             loc_B72E|16-209
46860|code|CMP             R0, R3|152-66
46862|code|BEQ             loc_B726|10-208
46864|code|ADD.W           R1, R3, #0x14|3-241-20-1
46868|code|LDR             R3, [R3,#0x14]|91-105
46870|code|CMP             R3, #0|0-43
46872|code|BNE             loc_B706|245-209
46874|code|MOVS            R3, #1|1-35
46876|code|STR             R3, [R0]|3-96
46878|code|POP.W           {R4,LR}|189-232-16-64
46882|code|B.W             j_free|253-247-209-189
46886|code|LDR             R3, [R0,#0x14]|67-105
46888|code|STR             R3, [R1]|11-96
46890|code|B               loc_B71A|246-231
46892|code|POP             {R4,PC}|16-189
46894|code|LDR             R0, =aPiMagic57005; "(*pi)->magic == 57005"|14-72
46896|code|MOVW            R2, #0x89C; line|64-246-156-2
46900|code|LDR             R1, =aHostlistC; "hostlist.c"|13-73
46902|code|LDR             R3, =aHostlistIterat_2; "hostlist_iterator_destroy"|14-75
46904|code|BLX             __assert_fail|253-247-178-237
46908|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|13-72
46910|code|MOVW            R2, #0x89A; line|64-246-154-2
46914|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
46916|code|LDR             R3, =aHostlistIterat_2; "hostlist_iterator_destroy"|10-75
46918|code|BLX             __assert_fail|253-247-172-237
46922|code|LDR             R0, =aIHlVoid0; "i->hl != ((void *)0)"|11-72
46924|code|MOVW            R2, #0x89A; line|64-246-154-2
46928|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
46930|code|LDR             R3, =aHostlistIterat_2; "hostlist_iterator_destroy"|7-75
46932|code|BLX             __assert_fail|253-247-164-237
46936|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|8-72
46938|code|MOVW            R2, #0x899; line|64-246-153-2
46942|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
46944|code|LDR             R3, =aHostlistIterat_2; "hostlist_iterator_destroy"|3-75
46946|code|BLX             __assert_fail|253-247-158-237
46950|data|ALIGN 4|0-191
46952|data|DCD aPiMagic57005; "(*pi)->magic == 57005"|212-234-0-0
46956|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
46960|data|DCD aHostlistIterat_2; "hostlist_iterator_destroy"|108-231-0-0
46964|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|188-234-0-0
46968|data|DCD aIHlVoid0; "i->hl != ((void *)0)"|164-234-0-0
46972|data|DCD aIMagic57005; "i->magic == 57005"|44-234-0-0
46976|code|PUSH            {R3-R5,LR}|56-181
46978|code|MOV             R5, R0|5-70
46980|code|CMP             R0, #0|0-40
46982|code|BEQ             locret_B7CC|33-208
46984|code|LDR             R2, [R0]|2-104
46986|code|MOVW            R3, #0xDEAD|77-246-173-99
46990|code|CMP             R2, R3|154-66
46992|code|BEQ             loc_B798|2-208
46994|code|B               loc_B7CE|28-224
46996|code|BL              sub_B6D8|255-247-160-255
47000|code|LDR             R0, [R5,#0x14]|104-105
47002|code|CMP             R0, #0|0-40
47004|code|BNE             loc_B794|250-209
47006|code|LDR             R3, [R5,#8]|171-104
47008|code|CMP             R3, #0|0-43
47010|code|BLE             loc_B7B8|9-221
47012|code|MOVS            R4, #0|0-36
47014|code|LDR             R3, [R5,#0x10]|43-105
47016|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
47020|code|ADDS            R4, #1|1-52
47022|code|BL              sub_9E18|254-247-51-251
47026|code|LDR             R3, [R5,#8]|171-104
47028|code|CMP             R3, R4|163-66
47030|code|BGT             loc_B7A6|246-220
47032|code|LDR             R0, [R5,#0x10]; ptr|40-105
47034|code|BLX             free|253-247-136-237
47038|code|MOVS            R3, #1|1-35
47040|code|MOV             R0, R5|40-70
47042|code|STR             R3, [R5]|43-96
47044|code|POP.W           {R3-R5,LR}|189-232-56-64
47048|code|B.W             j_free|253-247-126-189
47052|code|POP             {R3-R5,PC}|56-189
47054|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|3-72
47056|code|MOVW            R2, #0x5F9; line|64-242-249-82
47060|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
47062|code|LDR             R3, =aHostlistDestro; "hostlist_destroy"|3-75
47064|code|BLX             __assert_fail|253-247-98-237
47068|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
47072|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
47076|data|DCD aHostlistDestro; "hostlist_destroy"|136-231-0-0
47080|code|PUSH.W          {R4-R9,LR}|45-233-240-67
47084|code|SUB.W           SP, SP, #0x400|173-245-128-109
47088|code|LDR             R7, =__stack_chk_guard|63-79
47090|code|SUB             SP, SP, #0xC|131-176
47092|code|MOV             R5, R0|5-70
47094|code|LDR             R3, [R7]|59-104
47096|code|STR.W           R3, [SP,#0x404]|205-248-4-52
47100|code|BL              sub_A188|254-247-196-252
47104|code|MOV             R6, R0|6-70
47106|code|CMP             R0, #0|0-40
47108|code|BEQ             loc_B8B2|85-208
47110|code|CMP             R5, #0|0-45
47112|code|BEQ             loc_B8E0|106-208
47114|code|LDR             R2, [R5]|42-104
47116|code|MOVW            R3, #0xDEAD|77-246-173-99
47120|code|CMP             R2, R3|154-66
47122|code|BNE             loc_B8D2|94-209
47124|code|LDR             R4, [R5,#8]|172-104
47126|code|CMP             R4, #0|0-44
47128|code|BEQ             loc_B8C6|85-208
47130|code|LDR             R3, [R5,#0x10]|43-105
47132|code|MOVS            R4, #0|0-36
47134|code|LDR.W           R8, [R3]|211-248-0-128
47138|code|MOV             R1, R8|65-70
47140|code|MOV             R0, R6|48-70
47142|code|BL              sub_A728|254-247-127-255
47146|code|LDR             R3, [R5,#0x10]|43-105
47148|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
47152|code|ADDS            R4, #1|1-52
47154|code|BL              sub_9E18|254-247-241-250
47158|code|LDR             R3, [R5,#8]|171-104
47160|code|CMP             R4, R3|156-66
47162|code|BGE             loc_B850|9-218
47164|code|LDR             R2, [R5,#0x10]|42-105
47166|code|LDR             R3, [R6,#0x10]|51-105
47168|code|LDR.W           R8, [R2,R4,LSL#2]|82-248-36-128
47172|code|LDR             R0, [R3]|24-104
47174|code|MOV             R1, R8|65-70
47176|code|BL              sub_A4C4|254-247-60-254
47180|code|CMP             R0, #0|0-40
47182|code|BNE             loc_B822|232-209
47184|code|LDR             R2, [R6,#8]|178-104
47186|code|MOV             R0, R5|40-70
47188|code|MOV             R1, R4|33-70
47190|code|BL              sub_B014|255-247-221-251
47194|code|LDR             R2, [R5,#8]|170-104
47196|code|LDR             R0, [R6,#8]|176-104
47198|code|CMP             R2, R4|162-66
47200|code|BLE             loc_B88E|21-221
47202|code|SUBS            R3, R4, R0|35-26
47204|code|MOV.W           R8, R0,LSL#2|79-234-128-8
47208|code|MOV.W           R9, #0|79-240-0-9
47212|code|LSLS            R3, R3, #2|155-0
47214|code|LDR.W           LR, [R5,#0x10]|213-248-16-224
47218|code|ADD.W           R1, R3, R8|3-235-8-1
47222|code|ADDS            R4, #1|1-52
47224|code|LDR.W           R12, [LR,R1]|94-248-1-192
47228|code|STR.W           R12, [LR,R3]|78-248-3-192
47232|code|ADDS            R3, #4|4-51
47234|code|LDR.W           LR, [R5,#0x10]|213-248-16-224
47238|code|CMP             R4, R2|148-66
47240|code|STR.W           R9, [LR,R1]|78-248-1-144
47244|code|BNE             loc_B86E|239-209
47246|code|LDR             R4, [R5,#0xC]|236-104
47248|code|SUBS            R0, R2, R0|16-26
47250|code|LDR             R3, [R6,#0xC]|243-104
47252|code|MOV.W           R1, #0x400|79-244-128-97
47256|code|ADD             R2, SP, #4|1-170
47258|code|STR             R0, [R5,#8]|168-96
47260|code|SUBS            R3, R4, R3|227-26
47262|code|MOV             R0, R6|48-70
47264|code|STR             R3, [R5,#0xC]|235-96
47266|code|BL              sub_AE60|255-247-221-250
47270|code|MOV             R0, R6|48-70
47272|code|BL              sub_B780|255-247-106-255
47276|code|ADD             R0, SP, #4|1-168
47278|code|BLX             __strdup|253-247-244-237
47282|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
47286|code|LDR             R3, [R7]|59-104
47288|code|CMP             R2, R3|154-66
47290|code|BNE             loc_B8CE|8-209
47292|code|ADD             SP, SP, #0xC|3-176
47294|code|ADD.W           SP, SP, #0x400|13-245-128-109
47298|code|POP.W           {R4-R9,PC}|189-232-240-131
47302|code|BL              sub_B780|255-247-91-255
47306|code|MOV             R0, R4|32-70
47308|code|B               loc_B8B2|241-231
47310|code|BLX             __stack_chk_fail|253-247-148-237
47314|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|8-72
47316|code|MOVW            R2, #0x6AD|64-242-173-98
47320|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
47322|code|LDR             R3, =aHostlistShiftR; "hostlist_shift_range"|8-75
47324|code|BLX             __assert_fail|253-247-224-236
47328|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
47330|code|MOVW            R2, #0x6AD|64-242-173-98
47334|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
47336|code|LDR             R3, =aHostlistShiftR; "hostlist_shift_range"|4-75
47338|code|BLX             __assert_fail|253-247-218-236
47342|data|ALIGN 0x10|0-191
47344|data|DCD __stack_chk_guard|216-116-1-0
47348|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
47352|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
47356|data|DCD aHostlistShiftR; "hostlist_shift_range"|156-231-0-0
47360|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
47364|code|PUSH.W          {R4-R11,LR}|45-233-240-79
47368|code|SUB.W           SP, SP, #0x400|173-245-128-109
47372|code|LDR             R7, =__stack_chk_guard|60-79
47374|code|SUB             SP, SP, #0xC|131-176
47376|code|MOV             R4, R0|4-70
47378|code|LDR             R3, [R7]|59-104
47380|code|STR.W           R3, [SP,#0x404]|205-248-4-52
47384|code|CMP             R0, #0|0-40
47386|code|BEQ             loc_B9F2|106-208
47388|code|LDR             R2, [R0]|2-104
47390|code|MOVW            R3, #0xDEAD|77-246-173-99
47394|code|CMP             R2, R3|154-66
47396|code|BNE             loc_B9E4|94-209
47398|code|LDR             R3, [R0,#8]|131-104
47400|code|MOVS            R0, #0|0-32
47402|code|CMP             R3, #0|0-43
47404|code|BLE             loc_B9CC|78-221
47406|code|BL              sub_A188|254-247-43-252
47410|code|MOV             R6, R0|6-70
47412|code|CMP             R6, #0|0-46
47414|code|BEQ             loc_B9CC|73-208
47416|code|LDR             R5, [R4,#8]|165-104
47418|code|LDR.W           R10, [R4,#0x10]|212-248-16-160
47422|code|SUBS            R3, R5, #1|107-30
47424|code|SUBS.W          R9, R5, #2|181-241-2-9
47428|code|ADD.W           R8, R10, R3,LSL#2|10-235-131-8
47432|code|LDR.W           R11, [R10,R3,LSL#2]|90-248-35-176
47436|code|BPL             loc_B956|3-213
47438|code|B               loc_B964|9-224
47440|code|ADDS.W          R9, R9, #0xFFFFFFFF|25-241-255-57
47444|code|BCC             loc_B964|6-211
47446|code|LDR.W           R1, [R8,#-4]!|88-248-4-29
47450|code|MOV             R0, R11|88-70
47452|code|BL              sub_A4C4|254-247-178-253
47456|code|CMP             R0, #0|0-40
47458|code|BNE             loc_B950|245-209
47460|code|ADD.W           R9, R9, #1|9-241-1-9
47464|code|CMP             R5, R9|77-69
47466|code|BLE             loc_B9A2|26-221
47468|code|MOV.W           R8, R9,LSL#2|79-234-137-8
47472|code|MOV.W           R11, #0|79-240-0-11
47476|code|B               loc_B97A|1-224
47478|code|LDR.W           R10, [R4,#0x10]|212-248-16-160
47482|code|LDR.W           R1, [R10,R8]|90-248-8-16
47486|code|MOV             R0, R6|48-70
47488|code|BL              sub_A728|254-247-210-254
47492|code|LDR             R3, [R4,#0x10]|35-105
47494|code|ADD.W           R9, R9, #1|9-241-1-9
47498|code|LDR.W           R0, [R3,R8]|83-248-8-0
47502|code|BL              sub_9E18|254-247-67-250
47506|code|LDR             R5, [R4,#8]|165-104
47508|code|LDR             R3, [R4,#0x10]|35-105
47510|code|CMP             R5, R9|77-69
47512|code|STR.W           R11, [R3,R8]|67-248-8-176
47516|code|ADD.W           R8, R8, #4|8-241-4-8
47520|code|BGT             loc_B976|233-220
47522|code|LDR             R0, [R4,#0xC]|224-104
47524|code|MOV.W           R1, #0x400|79-244-128-97
47528|code|LDR.W           LR, [R6,#8]|214-248-8-224
47532|code|MOV             R2, SP|106-70
47534|code|LDR             R3, [R6,#0xC]|243-104
47536|code|RSB.W           R5, LR, R5|206-235-5-5
47540|code|STR             R5, [R4,#8]|165-96
47542|code|SUBS            R3, R0, R3|195-26
47544|code|MOV             R0, R6|48-70
47546|code|STR             R3, [R4,#0xC]|227-96
47548|code|BL              sub_AE60|255-247-80-250
47552|code|MOV             R0, R6|48-70
47554|code|BL              sub_B780|255-247-221-254
47558|code|MOV             R0, SP|104-70
47560|code|BLX             __strdup|253-247-102-237
47564|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
47568|code|LDR             R3, [R7]|59-104
47570|code|CMP             R2, R3|154-66
47572|code|BNE             loc_B9E0|4-209
47574|code|ADD             SP, SP, #0xC|3-176
47576|code|ADD.W           SP, SP, #0x400|13-245-128-109
47580|code|POP.W           {R4-R11,PC}|189-232-240-143
47584|code|BLX             __stack_chk_fail|253-247-10-237
47588|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
47590|code|MOVW            R2, #0x68B|64-242-139-98
47594|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
47596|code|LDR             R3, =aHostlistPopRan; "hostlist_pop_range"|7-75
47598|code|BLX             __assert_fail|253-247-88-236
47602|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
47604|code|MOVW            R2, #0x68B|64-242-139-98
47608|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
47610|code|LDR             R3, =aHostlistPopRan; "hostlist_pop_range"|4-75
47612|code|BLX             __assert_fail|253-247-80-236
47616|data|DCD __stack_chk_guard|216-116-1-0
47620|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|180-233-0-0
47624|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
47628|data|DCD aHostlistPopRan; "hostlist_pop_range"|180-231-0-0
47632|data|DCD aHlVoid0; "hl != ((void *)0)"|140-233-0-0
47636|code|PUSH.W          {R4-R11,LR}|45-233-240-79
47640|code|MOVW            R1, #0x74D8|71-242-216-65
47644|code|SUB.W           SP, SP, #0x1F400|173-245-250-61
47648|code|MOVT.W          R1, #1|192-242-1-1
47652|code|SUB             SP, SP, #0x34|141-176
47654|code|MOV             R4, R0|4-70
47656|code|LDR             R3, [R1]|11-104
47658|code|ADD.W           R2, SP, #0x1F458+var_58|13-245-250-50
47662|code|ADDS            R2, #0x2C ; ','|44-50
47664|code|STR             R3, [R2]|19-96
47666|code|BL              sub_A188|254-247-169-251
47670|code|MOV             R8, R0|128-70
47672|code|CBZ             R4, loc_BA68|180-177
47674|code|MOV             R0, R4|32-70
47676|code|BLX             __strdup|253-247-44-237
47680|code|STR             R0, [SP,#0x1F458+ptr]|9-144
47682|code|CMP             R0, #0|0-40
47684|code|BEQ.W           loc_BD84|0-240-158-129
47688|code|ADD             R3, SP, #0x1F458+var_1F430|10-171
47690|code|MOV             R5, R0|5-70
47692|code|STR             R3, [SP,#0x1F458+var_1F440]|6-147
47694|code|B               loc_BA5C|5-224
47696|code|LDR             R0, =asc_EB2C; "\t, "|148-72
47698|code|MOV             R1, R4; c|33-70
47700|code|BLX             strchr|253-247-18-236
47704|code|CBZ             R0, loc_BA8C|192-177
47706|code|ADDS            R5, #1|1-53
47708|code|LDRB            R4, [R5]|44-120
47710|code|CMP             R4, #0|0-44
47712|code|BNE             loc_BA50|246-209
47714|code|LDR             R0, [SP,#0x1F458+ptr]; ptr|9-152
47716|code|BLX             free|253-247-50-236
47720|code|ADD.W           R3, SP, #0x1F458+var_58|13-245-250-51
47724|code|MOVW            R1, #0x74D8|71-242-216-65
47728|code|ADDS            R3, #0x2C ; ','|44-51
47730|code|MOVT.W          R1, #1|192-242-1-1
47734|code|MOV             R0, R8|64-70
47736|code|LDR             R2, [R3]|26-104
47738|code|LDR             R3, [R1]|11-104
47740|code|CMP             R2, R3|154-66
47742|code|BNE.W           loc_BD90|64-240-135-129
47746|code|ADD             SP, SP, #0x34 ; '4'|13-176
47748|code|ADD.W           SP, SP, #0x1F400|13-245-250-61
47752|code|POP.W           {R4-R11,PC}|189-232-240-143
47756|code|MOV             R7, R5|47-70
47758|code|CBZ             R4, loc_BA9E|52-177
47760|code|LDR             R0, =asc_EB2C; "\t, "|132-72
47762|code|MOV             R1, R4; c|33-70
47764|code|BLX             strchr|253-247-242-235
47768|code|CMP             R0, #0|0-40
47770|code|BEQ.W           loc_BC50|0-240-217-128
47774|code|SUBS            R6, R7, R5|126-27
47776|code|MOV             R0, R5; s|40-70
47778|code|MOVS            R1, #0x5B ; '['; c|91-33
47780|code|MOV             R2, R6; n|50-70
47782|code|BLX             memchr|253-247-254-236
47786|code|CBZ             R0, loc_BABC|56-177
47788|code|MOV             R0, R5; s|40-70
47790|code|MOVS            R1, #0x5D ; ']'; c|93-33
47792|code|MOV             R2, R6; n|50-70
47794|code|BLX             memchr|253-247-248-236
47798|code|CMP             R0, #0|0-40
47800|code|BEQ.W           loc_BBEA|0-240-151-128
47804|code|CBZ             R4, loc_BAE2|140-177
47806|code|MOV             R6, R7|62-70
47808|code|MOV.W           R10, #0|79-240-0-10
47812|code|MOV             R9, R7|185-70
47814|code|MOV             R1, R4|33-70
47816|code|B               loc_BAD6|5-224
47818|code|STRB.W          R10, [R6],#1|6-248-1-171
47822|code|MOV             R7, R6|55-70
47824|code|LDRB.W          R1, [R9,#1]!; c|25-248-1-31
47828|code|CBZ             R1, loc_BAE2|41-177
47830|code|LDR             R0, =asc_EB2C; "\t, "|115-72
47832|code|MOV             R7, R6|55-70
47834|code|BLX             strchr|253-247-208-235
47838|code|CMP             R0, #0|0-40
47840|code|BNE             loc_BACA|243-209
47842|code|ADD.W           R0, SP, #0x1F458+var_458|13-245-248-48
47846|code|MOV             R1, R5; src|41-70
47848|code|MOV.W           R2, #0x400; n|79-244-128-98
47852|code|ADDS            R0, #0x2C ; ','; dest|44-48
47854|code|BLX             strncpy|253-247-186-235
47858|code|MOV             R0, R5; s|40-70
47860|code|MOVS            R1, #0x5B ; '['; c|91-33
47862|code|BLX             strchr|253-247-194-235
47866|code|CMP             R0, #0|0-40
47868|code|BEQ.W           loc_BC8A|0-240-197-128
47872|code|MOV             R6, R0|6-70
47874|code|MOVS            R4, #0|0-36
47876|code|MOVS            R1, #0x5D ; ']'; c|93-33
47878|code|STRB.W          R4, [R6],#1|6-248-1-75
47882|code|MOV             R0, R6; s|48-70
47884|code|BLX             strchr|253-247-182-235
47888|code|STR             R0, [SP,#0x1F458+var_1F444]|5-144
47890|code|CMP             R0, #0|0-40
47892|code|BEQ.W           loc_BC8A|0-240-185-128
47896|code|STRB            R4, [R0]|4-112
47898|code|CMP             R6, #0|0-46
47900|code|BEQ.W           loc_BCB4|0-240-202-128
47904|code|STR             R4, [SP,#0x1F458+var_1F448]|4-148
47906|code|STR             R7, [SP,#0x1F458+var_1F43C]|7-151
47908|code|STR             R5, [SP,#0x1F458+var_1F438]|8-149
47910|code|MOV             R0, R6; s|48-70
47912|code|MOVS            R1, #0x2C ; ','; c|44-33
47914|code|BLX             strchr|253-247-168-235
47918|code|MOV             R5, R0|5-70
47920|code|CBZ             R0, loc_BB38|16-177
47922|code|MOVS            R2, #0|0-34
47924|code|STRB.W          R2, [R5],#1|5-248-1-43
47928|code|MOV             R0, R6|48-70
47930|code|BLX             __strdup|253-247-174-236
47934|code|MOV             R7, R0|7-70
47936|code|CMP             R0, #0|0-40
47938|code|BEQ.W           loc_BC56|0-240-136-128
47942|code|MOV             R0, R6; s|48-70
47944|code|MOVS            R1, #0x2D ; '-'; c|45-33
47946|code|BLX             strchr|253-247-152-235
47950|code|MOV             R4, R0|4-70
47952|code|CBZ             R0, loc_BB5E|40-177
47954|code|LDRB            R3, [R0,#1]|67-120
47956|code|MOVS            R1, #0|0-33
47958|code|STRB            R1, [R0]|1-112
47960|code|CMP             R3, #0x2D ; '-'|45-43
47962|code|BEQ             loc_BC2E|104-208
47964|code|ADDS            R4, R0, #1|68-28
47966|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
47968|code|ADD.W           R1, SP, #0x1F458+var_1458|13-245-240-49
47972|code|ADDS            R1, #0x28 ; '('; endptr|40-49
47974|code|MOVS            R2, #0xA; base|10-34
47976|code|MOV             R0, R6; nptr|48-70
47978|code|ADD.W           R9, SP, #0x1F458+var_1458|13-245-240-57
47982|code|ADD.W           R11, R3, R3,LSL#1|3-235-67-11
47986|code|BLX             strtoul|253-247-232-235
47990|code|ADD.W           R9, R9, #0x30 ; '0'|9-241-48-9
47994|code|LDR             R1, [SP,#0x1F458+var_1F440]|6-153
47996|code|LDR.W           R3, [R9,#-8]|89-248-8-60
48000|code|ADD.W           R9, R1, R11,LSL#2|1-235-139-9
48004|code|CMP             R6, R3|158-66
48006|code|MOV             R10, R0|130-70
48008|code|STR.W           R0, [R1,R11,LSL#2]|65-248-43-0
48012|code|BEQ             loc_BC2E|79-208
48014|code|CBZ             R4, loc_BB96|20-177
48016|code|LDRB            R2, [R4]|34-120
48018|code|CMP             R2, #0|0-42
48020|code|BNE             loc_BC10|60-209
48022|code|CMP             R3, R4|163-66
48024|code|MOV             R0, R10|80-70
48026|code|STR.W           R0, [R9,#4]|201-248-4-0
48030|code|BEQ             loc_BC2E|70-208
48032|code|LDRB            R3, [R3]|27-120
48034|code|CMP             R3, #0|0-43
48036|code|BNE             loc_BC2E|67-209
48038|code|CMP             R10, R0|130-69
48040|code|BHI             loc_BC2E|65-216
48042|code|RSB.W           R10, R10, #1|202-241-1-10
48046|code|ADD             R0, R10|80-68
48048|code|CMP.W           R0, #0x4000|176-245-128-79
48052|code|BLS             loc_BC62|85-217
48054|code|MOVW            R1, #0x551|64-242-81-81
48058|code|LDR             R2, =aTooManyHostsIn; "Too many hosts in range `%s'"|59-74
48060|code|MOV             R3, R7|59-70
48062|code|LDR             R0, =aHostlistC; "hostlist.c"|59-72
48064|code|BL              sub_A048|254-247-66-250
48068|code|MOV             R0, R7; ptr|56-70
48070|code|BLX             free|253-247-130-235
48074|code|MOV             R11, R7|187-70
48076|code|BLX             __errno_location|253-247-124-236
48080|code|MOVS            R5, #0x22 ; '"'|34-37
48082|code|MOV             R4, R0|4-70
48084|code|STR             R5, [R0]|5-96
48086|code|MOV             R0, R8|64-70
48088|code|MOV.W           R8, #0|79-240-0-8
48092|code|BL              sub_B780|255-247-208-253
48096|code|LDR             R0, [SP,#0x1F458+ptr]; ptr|9-152
48098|code|BLX             free|253-247-116-235
48102|code|STR             R5, [R4]|37-96
48104|code|B               loc_BA68|62-231
48106|code|MOV             R0, R7; s|56-70
48108|code|MOVS            R1, #0x5D ; ']'; c|93-33
48110|code|BLX             strchr|253-247-70-235
48114|code|MOV             R6, R0|6-70
48116|code|CMP             R0, #0|0-40
48118|code|BEQ.W           loc_BABC|63-244-97-175
48122|code|SUBS            R2, R0, R7; n|194-27
48124|code|MOVS            R1, #0x5B ; '['; c|91-33
48126|code|MOV             R0, R7; s|56-70
48128|code|BLX             memchr|253-247-80-236
48132|code|CMP             R0, #0|0-40
48134|code|BNE.W           loc_BABC|127-244-89-175
48138|code|ADDS            R7, R6, #1|119-28
48140|code|LDRB            R4, [R7]|60-120
48142|code|B               loc_BA8E|62-231
48144|code|ADD.W           R1, SP, #0x1F458+var_1458|13-245-240-49
48148|code|MOVS            R2, #0xA; base|10-34
48150|code|ADDS            R1, #0x28 ; '('; endptr|40-49
48152|code|MOV             R0, R4; nptr|32-70
48154|code|BLX             strtoul|253-247-148-235
48158|code|ADD.W           R2, SP, #0x1F458+var_1458|13-245-240-50
48162|code|ADDS            R2, #0x28 ; '('|40-50
48164|code|LDR             R3, [R2]|19-104
48166|code|CMP             R3, R4|163-66
48168|code|STR.W           R0, [R9,#4]|201-248-4-0
48172|code|BNE             loc_BBA0|184-209
48174|code|MOVW            R1, #0x55B|64-242-91-81
48178|code|LDR             R2, =aInvalidRangeS; "Invalid range: `%s'"|31-74
48180|code|MOV             R3, R7|59-70
48182|code|LDR             R0, =aHostlistC; "hostlist.c"|29-72
48184|code|BL              sub_A048|254-247-6-250
48188|code|MOV             R0, R7; ptr|56-70
48190|code|BLX             free|253-247-70-235
48194|code|MOVS            R5, #0x16|22-37
48196|code|BLX             __errno_location|253-247-64-236
48200|code|MOV             R11, R7|187-70
48202|code|MOV             R4, R0|4-70
48204|code|STR             R5, [R0]|5-96
48206|code|B               loc_BBD6|194-231
48208|code|ADDS            R7, #1|1-55
48210|code|LDRB            R4, [R7]|60-120
48212|code|B               loc_BA8E|27-231
48214|code|BLX             __errno_location|253-247-56-236
48218|code|MOVS            R5, #0xC|12-37
48220|code|MOV             R4, R0|4-70
48222|code|STR             R5, [R0]|5-96
48224|code|B               loc_BBD6|185-231
48226|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
48228|code|MOV             R0, R7; ptr|56-70
48230|code|ADDS            R3, #1|1-51
48232|code|STR             R3, [SP,#0x1F458+var_1F448]|4-147
48234|code|BLX             free|253-247-48-235
48238|code|MOV             R0, R6; s|48-70
48240|code|BLX             strlen|253-247-98-235
48244|code|STR.W           R0, [R9,#8]|201-248-8-0
48248|code|CMP             R5, #0|0-45
48250|code|BEQ.W           loc_BD7E|0-240-128-128
48254|code|LDR             R1, [SP,#0x1F458+var_1F448]|4-153
48256|code|CMP.W           R1, #0x2800|177-245-32-95
48260|code|BEQ             loc_BC9A|9-208
48262|code|MOV             R6, R5|46-70
48264|code|B               loc_BB26|77-231
48266|code|ADD.W           R1, SP, #0x1F458+var_458|13-245-248-49
48270|code|MOV             R0, R8|64-70
48272|code|ADDS            R1, #0x2C ; ','|44-49
48274|code|MOV             R5, R7|61-70
48276|code|BL              sub_A944|254-247-86-254
48280|code|B               loc_BA5C|224-230
48282|code|BLX             __errno_location|253-247-22-236
48286|code|MOV             R4, R0|4-70
48288|code|LDR             R5, [R0]|5-104
48290|code|B               loc_BBD6|152-231
48292|data|DCD asc_EB2C; "\t, "|44-235-0-0
48296|data|DCD aTooManyHostsIn; "Too many hosts in range `%s'"|236-234-0-0
48300|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
48304|data|DCD aInvalidRangeS; "Invalid range: `%s'"|12-235-0-0
48308|code|STR             R6, [SP,#0x1F458+var_1F448]|4-150
48310|code|LDR             R3, [SP,#0x1F458+var_1F444]|5-155
48312|code|ADD.W           R10, R3, #1|3-241-1-10
48316|code|LDRB            R6, [R3,#1]|94-120
48318|code|CBNZ            R6, loc_BCFC|238-185
48320|code|LDR             R1, [SP,#0x1F458+var_1F448]|4-153
48322|code|CMP             R1, #0|0-41
48324|code|BEQ             loc_BD7A|89-208
48326|code|ADD             R4, SP, #0x1F458+var_1F424|13-172
48328|code|MOV             R9, R7|185-70
48330|code|MOV             R7, R1|15-70
48332|code|LDR.W           R2, [R4,#-8]|84-248-8-44
48336|code|MOV             R0, R5|40-70
48338|code|LDR.W           R3, [R4,#-4]|84-248-4-60
48342|code|ADDS            R6, #1|1-54
48344|code|LDR.W           R1, [R4,#-0xC]|84-248-12-28
48348|code|ADDS            R4, #0xC|12-52
48350|code|BL              sub_A268|254-247-195-250
48354|code|MOV             R10, R0|130-70
48356|code|MOV             R0, R8|64-70
48358|code|MOV             R1, R10|81-70
48360|code|BL              sub_A728|254-247-30-253
48364|code|MOV             R0, R10|80-70
48366|code|BL              sub_9E18|254-247-147-248
48370|code|CMP             R6, R7|190-66
48372|code|BNE             loc_BCCC|234-209
48374|code|MOV             R7, R9|79-70
48376|code|MOV             R5, R9|77-70
48378|code|B               loc_BA5C|175-230
48380|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
48382|code|CMP             R3, #0|0-43
48384|code|BEQ             loc_BD7A|59-208
48386|code|ADD.W           R9, SP, #0x1F458+var_1F424|13-241-52-9
48390|code|STR             R7, [SP,#0x1F458+var_1F43C]|7-151
48392|code|MOV             R7, R5|47-70
48394|code|MOVS            R2, #0|0-34
48396|code|STR             R2, [SP,#0x1F458+var_1F444]|5-146
48398|code|LDR.W           R4, [R9,#-0xC]|89-248-12-76
48402|code|LDR.W           R5, [R9,#-8]|89-248-8-92
48406|code|CMP             R5, R4|165-66
48408|code|BCC             loc_BD64|36-211
48410|code|LDR.W           R6, [R9,#-4]|89-248-4-108
48414|code|MOV             R3, R6|51-70
48416|code|MOV             R6, R10|86-70
48418|code|MOV             R10, R9|202-70
48420|code|MOV             R9, R3|153-70
48422|code|ADD.W           R0, SP, #0x1F458+var_1458|13-245-240-48
48426|code|LDR             R2, =aS0LuS; "%s%0*lu%s"|26-74
48428|code|MOV             R3, R7|59-70
48430|code|MOV.W           R1, #0x1000; maxlen|79-244-128-81
48434|code|ADDS            R0, #0x2C ; ','; s|44-48
48436|code|STR             R4, [SP,#0x1F458+var_1F454]|1-148
48438|code|STR.W           R9, [SP,#0x1F458+var_1F458]|205-248-0-144
48442|code|ADDS            R4, #1|1-52
48444|code|STR             R6, [SP,#0x1F458+var_1F450]|2-150
48446|code|BLX             snprintf|253-247-160-235
48450|code|ADD.W           R0, SP, #0x1F458+var_1458|13-245-240-48
48454|code|ADDS            R0, #0x2C ; ','|44-48
48456|code|BL              sub_A1EC|254-247-80-250
48460|code|MOV             R11, R0|131-70
48462|code|MOV             R0, R8|64-70
48464|code|MOV             R1, R11|89-70
48466|code|BL              sub_A728|254-247-233-252
48470|code|MOV             R0, R11|88-70
48472|code|BL              sub_9E18|254-247-94-248
48476|code|CMP             R5, R4|165-66
48478|code|BCS             loc_BD26|226-210
48480|code|MOV             R9, R10|209-70
48482|code|MOV             R10, R6|178-70
48484|code|LDR             R1, [SP,#0x1F458+var_1F444]|5-153
48486|code|ADD.W           R9, R9, #0xC|9-241-12-9
48490|code|LDR             R2, [SP,#0x1F458+var_1F448]|4-154
48492|code|ADDS            R1, #1|1-49
48494|code|STR             R1, [SP,#0x1F458+var_1F444]|5-145
48496|code|CMP             R1, R2|145-66
48498|code|BNE             loc_BD0E|204-209
48500|code|LDR             R7, [SP,#0x1F458+var_1F43C]|7-159
48502|code|MOV             R5, R7|61-70
48504|code|B               loc_BA5C|112-230
48506|code|MOV             R5, R7|61-70
48508|code|B               loc_BA5C|110-230
48510|code|LDR             R7, [SP,#0x1F458+var_1F43C]|7-159
48512|code|LDR             R5, [SP,#0x1F458+var_1F438]|8-157
48514|code|B               loc_BCB6|152-231
48516|code|MOV             R0, R8|64-70
48518|code|LDR.W           R8, [SP,#0x1F458+ptr]|221-248-36-128
48522|code|BL              sub_B780|255-247-249-252
48526|code|B               loc_BA68|107-230
48528|code|BLX             __stack_chk_fail|253-247-50-235
48532|data|DCD aS0LuS; "%s%0*lu%s"|32-235-0-0
48536|code|B.W             sub_BA14|255-247-60-190
48540|code|PUSH            {R3-R7,LR}|248-181
48542|code|MOV             R7, R0|7-70
48544|code|MOV             R0, R1|8-70
48546|code|MOVS            R5, #0|0-37
48548|code|BL              sub_BD98|255-247-248-255
48552|code|MOV             R6, R0|6-70
48554|code|CBNZ            R0, loc_BDBA|48-185
48556|code|B               loc_BDD4|18-224
48558|code|BL              sub_B578|255-247-227-251
48562|code|ADDS            R5, R5, R0|45-24
48564|code|MOV             R0, R4|32-70
48566|code|BLX             free|253-247-138-234
48570|code|MOV             R0, R6|48-70
48572|code|BL              sub_A9E8|254-247-20-254
48576|code|MOV             R4, R0|4-70
48578|code|MOV             R1, R0|1-70
48580|code|MOV             R0, R7|56-70
48582|code|CMP             R4, #0|0-44
48584|code|BNE             loc_BDAE|241-209
48586|code|MOV             R0, R6|48-70
48588|code|BL              sub_B780|255-247-216-252
48592|code|MOV             R0, R5|40-70
48594|code|POP             {R3-R7,PC}|248-189
48596|code|BLX             __errno_location|253-247-120-235
48600|code|MOV             R5, R6|53-70
48602|code|MOVS            R3, #0x16|22-35
48604|code|STR             R3, [R0]|3-96
48606|code|MOV             R0, R5|40-70
48608|code|POP             {R3-R7,PC}|248-189
48610|data|ALIGN 4|0-191
48612|code|PUSH            {R4-R6,LR}|112-181
48614|code|MOV             R6, R0|6-70
48616|code|MOV             R5, R1|13-70
48618|code|CBZ             R1, loc_BE08|105-177
48620|code|MOV             R0, R1|8-70
48622|code|BL              sub_BD98|255-247-211-255
48626|code|MOV             R4, R0|4-70
48628|code|MOV             R5, R0|5-70
48630|code|CBZ             R0, loc_BE08|56-177
48632|code|LDR             R5, [R0,#0xC]|197-104
48634|code|MOV             R1, R4|33-70
48636|code|MOV             R0, R6|48-70
48638|code|BL              sub_A990|254-247-199-253
48642|code|MOV             R0, R4|32-70
48644|code|BL              sub_B780|255-247-188-252
48648|code|MOV             R0, R5|40-70
48650|code|POP             {R4-R6,PC}|112-189
48652|code|PUSH            {R4-R7,LR}|240-181
48654|code|SUB             SP, SP, #0x24 ; '$'|137-176
48656|code|LDR             R5, =__stack_chk_guard|69-77
48658|code|MOV             R4, R0|4-70
48660|code|LDR             R3, [R5]|43-104
48662|code|STR             R3, [SP,#0x1C]|7-147
48664|code|CMP             R0, #0|0-40
48666|code|BEQ             loc_BEEE|104-208
48668|code|LDR             R2, [R0]|2-104
48670|code|MOVW            R3, #0xDEAD|77-246-173-99
48674|code|CMP             R2, R3|154-66
48676|code|BNE             loc_BF18|120-209
48678|code|LDR             R3, [R0,#4]|67-104
48680|code|CMP             R3, #0|0-43
48682|code|BEQ             loc_BEFC|103-208
48684|code|LDR             R1, [R3]|25-104
48686|code|CMP             R1, R2|145-66
48688|code|BNE             loc_BF0A|107-209
48690|code|LDR             R1, [R3,#8]|153-104
48692|code|MOVS            R7, #0|0-39
48694|code|LDR             R0, [R0,#8]|128-104
48696|code|CMP             R1, R0|129-66
48698|code|BLE             loc_BEA6|52-221
48700|code|LDR             R2, [R4,#0xC]|226-104
48702|code|LDR             R6, [R4,#0x10]|38-105
48704|code|LDR.W           R12, [R2,#8]|210-248-8-192
48708|code|ADDS            R6, #1|1-54
48710|code|LDR             R7, [R2,#4]|87-104
48712|code|STR             R6, [R4,#0x10]|38-97
48714|code|RSB.W           R7, R7, R12|199-235-12-7
48718|code|CMP             R6, R7|190-66
48720|code|BLS             loc_BE66|9-217
48722|code|LDR             R3, [R3,#0x10]|27-105
48724|code|ADDS            R0, #1|1-48
48726|code|MOVS            R7, #0|0-39
48728|code|CMP             R1, R0|129-66
48730|code|STR             R0, [R4,#8]|160-96
48732|code|LDR.W           R2, [R3,R0,LSL#2]|83-248-32-32
48736|code|STR             R7, [R4,#0x10]|39-97
48738|code|STR             R2, [R4,#0xC]|226-96
48740|code|BLE             loc_BEA6|31-221
48742|code|MOVS            R3, #0|0-35
48744|code|STRB.W          R3, [SP,#0xC]|141-248-12-48
48748|code|LDRB            R3, [R2,#0x10]|19-124
48750|code|LSLS            R7, R3, #0x1F|223-7
48752|code|IT MI|72-191
48754|code|ADDMI           R6, SP, #0xC|3-174
48756|code|BPL             loc_BEB4|30-213
48758|code|LDR             R0, [R2]|16-104
48760|code|BLX             strlen|253-247-94-234
48764|code|MOV             R7, R0|7-70
48766|code|MOV             R0, R6|48-70
48768|code|BLX             strlen|253-247-90-234
48772|code|ADDS            R0, R7, R0|56-24
48774|code|ADDS            R0, #1|1-48
48776|code|BLX             malloc|253-247-176-234
48780|code|MOV             R7, R0|7-70
48782|code|CMP             R0, #0|0-40
48784|code|BEQ             loc_BED0|30-208
48786|code|MOVS            R3, #0|0-35
48788|code|STRB            R3, [R0]|3-112
48790|code|LDR             R3, [R4,#0xC]|227-104
48792|code|LDR             R1, [R3]|25-104
48794|code|BLX             strcat|253-247-198-234
48798|code|MOV             R0, R7|56-70
48800|code|MOV             R1, R6|49-70
48802|code|BLX             strcat|253-247-194-234
48806|code|LDR             R2, [SP,#0x1C]|7-154
48808|code|MOV             R0, R7|56-70
48810|code|LDR             R3, [R5]|43-104
48812|code|CMP             R2, R3|154-66
48814|code|BNE             loc_BEEA|28-209
48816|code|ADD             SP, SP, #0x24 ; '$'|9-176
48818|code|POP             {R4-R7,PC}|240-189
48820|code|ADD             R6, SP, #0xC|3-174
48822|code|LDR             R7, [R2,#4]|87-104
48824|code|LDR.W           LR, [R4,#0x10]|212-248-16-224
48828|code|MOVS            R1, #0xF|15-33
48830|code|LDR             R3, [R2,#0xC]|211-104
48832|code|MOV             R0, R6|48-70
48834|code|LDR             R2, =a0Lu; "%0*lu"|26-74
48836|code|ADD             R7, LR|119-68
48838|code|STR             R7, [SP]|0-151
48840|code|BLX             snprintf|253-247-218-234
48844|code|LDR             R2, [R4,#0xC]|226-104
48846|code|B               loc_BE76|210-231
48848|code|BLX             __errno_location|253-247-250-234
48852|code|MOVS            R2, #0xC|12-34
48854|code|MOVW            R1, #0x8DF|64-246-223-1
48858|code|MOV             R3, R0|3-70
48860|code|LDR             R0, =aHostlistC; "hostlist.c"|20-72
48862|code|STR             R2, [R3]|26-96
48864|code|LDR             R2, =aHostlistNext; "hostlist_next"|20-74
48866|code|BL              sub_9D00|253-247-13-255
48870|code|MOV             R7, R0|7-70
48872|code|B               loc_BEA6|221-231
48874|code|BLX             __stack_chk_fail|253-247-134-234
48878|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|18-72
48880|code|MOVW            R2, #0x8CE|64-246-206-2
48884|code|LDR             R1, =aHostlistC; "hostlist.c"|14-73
48886|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|17-75
48888|code|BLX             __assert_fail|253-247-210-233
48892|code|LDR             R0, =aIHlVoid0; "i->hl != ((void *)0)"|16-72
48894|code|MOV.W           R2, #0x8D0|79-244-13-98
48898|code|LDR             R1, =aHostlistC; "hostlist.c"|11-73
48900|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|13-75
48902|code|BLX             __assert_fail|253-247-204-233
48906|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|14-72
48908|code|MOV.W           R2, #0x8D0|79-244-13-98
48912|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
48914|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|10-75
48916|code|BLX             __assert_fail|253-247-196-233
48920|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|11-72
48922|code|MOVW            R2, #0x8CF|64-246-207-2
48926|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
48928|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|6-75
48930|code|BLX             __assert_fail|253-247-190-233
48934|data|ALIGN 4|0-191
48936|data|DCD __stack_chk_guard|216-116-1-0
48940|data|DCD a0Lu; "%0*lu"|124-233-0-0
48944|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
48948|data|DCD aHostlistNext; "hostlist_next"|48-235-0-0
48952|data|DCD aIVoid0; "i != ((void *)0)"|24-234-0-0
48956|data|DCD aHostlistNext_0; "hostlist_next"|200-231-0-0
48960|data|DCD aIHlVoid0; "i->hl != ((void *)0)"|164-234-0-0
48964|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|188-234-0-0
48968|data|DCD aIMagic57005; "i->magic == 57005"|44-234-0-0
48972|code|PUSH.W          {R4-R10,LR}|45-233-240-71
48976|code|SUB.W           SP, SP, #0x410|173-245-130-109
48980|code|LDR             R6, =__stack_chk_guard|51-78
48982|code|MOV             R8, R0|128-70
48984|code|LDR             R3, [R6]|51-104
48986|code|STR.W           R3, [SP,#0x40C]|205-248-12-52
48990|code|CMP             R0, #0|0-40
48992|code|BEQ             loc_C014|88-208
48994|code|LDR             R3, [R0]|3-104
48996|code|MOVW            R2, #0xDEAD|77-246-173-98
49000|code|CMP             R3, R2|147-66
49002|code|BNE             loc_C006|76-209
49004|code|LDR             R5, [R0,#4]|69-104
49006|code|CMP             R5, #0|0-45
49008|code|BEQ             loc_BFF8|66-208
49010|code|LDR             R2, [R5]|42-104
49012|code|CMP             R2, R3|154-66
49014|code|BNE             loc_BFEA|56-209
49016|code|LDR             R3, [R0,#0x10]|3-105
49018|code|LDR.W           R9, [R5,#8]|213-248-8-144
49022|code|ADDS            R3, #1|1-51
49024|code|LDR.W           R10, [R5,#0x10]|213-248-16-160
49028|code|CMP             R3, #0|0-43
49030|code|LDR             R4, [R0,#8]|132-104
49032|code|STR             R3, [R0,#0x10]|3-97
49034|code|BLE             loc_BFB8|21-221
49036|code|ADD.W           R7, R10, R4,LSL#2|10-235-132-7
49040|code|B               loc_BFA0|6-224
49042|code|LDR.W           R1, [R7,#4]!|87-248-4-31
49046|code|LDR.W           R0, [R8,#0xC]|216-248-12-0
49050|code|BL              sub_A4C4|254-247-147-250
49054|code|CBZ             R0, loc_BFA6|16-177
49056|code|ADDS            R4, #1|1-52
49058|code|CMP             R9, R4|161-69
49060|code|BGT             loc_BF92|245-220
49062|code|LDR.W           R3, [R10,R4,LSL#2]|90-248-36-48
49066|code|MOVS            R2, #0|0-34
49068|code|STR.W           R4, [R8,#8]|200-248-8-64
49072|code|STR.W           R2, [R8,#0x10]|200-248-16-32
49076|code|STR.W           R3, [R8,#0xC]|200-248-12-48
49080|code|MOVS            R0, #0|0-32
49082|code|CMP             R9, R4|161-69
49084|code|BLE             loc_BFD4|10-221
49086|code|MOV.W           R2, #0x400|79-244-128-98
49090|code|ADD             R3, SP, #8|2-171
49092|code|MOV             R0, R5|40-70
49094|code|ADD             R1, SP, #4|1-169
49096|code|STR             R4, [SP,#4]|1-148
49098|code|BL              sub_A4E8|254-247-141-250
49102|code|ADD             R0, SP, #8|2-168
49104|code|BLX             __strdup|253-247-98-234
49108|code|LDR.W           R2, [SP,#0x40C]|221-248-12-36
49112|code|LDR             R3, [R6]|51-104
49114|code|CMP             R2, R3|154-66
49116|code|BNE             loc_BFE6|3-209
49118|code|ADD.W           SP, SP, #0x410|13-245-130-109
49122|code|POP.W           {R4-R10,PC}|189-232-240-135
49126|code|BLX             __stack_chk_fail|253-247-8-234
49130|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|15-72
49132|code|MOV.W           R2, #0x8F0|79-244-15-98
49136|code|LDR             R1, =aHostlistC; "hostlist.c"|14-73
49138|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|15-75
49140|code|BLX             __assert_fail|253-247-84-233
49144|code|LDR             R0, =aIHlVoid0; "i->hl != ((void *)0)"|14-72
49146|code|MOV.W           R2, #0x8F0|79-244-15-98
49150|code|LDR             R1, =aHostlistC; "hostlist.c"|11-73
49152|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|11-75
49154|code|BLX             __assert_fail|253-247-78-233
49158|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|12-72
49160|code|MOVW            R2, #0x8EF|64-246-239-2
49164|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
49166|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|8-75
49168|code|BLX             __assert_fail|253-247-70-233
49172|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|9-72
49174|code|MOVW            R2, #0x8EE|64-246-238-2
49178|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
49180|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|4-75
49182|code|BLX             __assert_fail|253-247-64-233
49186|data|ALIGN 4|0-191
49188|data|DCD __stack_chk_guard|216-116-1-0
49192|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|188-234-0-0
49196|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
49200|data|DCD aHostlistNextRa; "hostlist_next_range"|216-231-0-0
49204|data|DCD aIHlVoid0; "i->hl != ((void *)0)"|164-234-0-0
49208|data|DCD aIMagic57005; "i->magic == 57005"|44-234-0-0
49212|data|DCD aIVoid0; "i != ((void *)0)"|24-234-0-0
49216|code|PUSH            {R3-R5,LR}|56-181
49218|code|MOV             R4, R0|4-70
49220|code|CMP             R0, #0|0-40
49222|code|BEQ             loc_C0F0|83-208
49224|code|LDR             R3, [R0]|3-104
49226|code|MOVW            R2, #0xDEAD|77-246-173-98
49230|code|CMP             R3, R2|147-66
49232|code|BNE             loc_C0E2|71-209
49234|code|LDR             R2, [R0,#4]|66-104
49236|code|CMP             R2, #0|0-42
49238|code|BEQ             loc_C0D4|61-208
49240|code|LDR             R2, [R2]|18-104
49242|code|CMP             R2, R3|154-66
49244|code|BNE             loc_C0C6|51-209
49246|code|LDR             R0, [R0,#0xC]|192-104
49248|code|LDR             R1, [R4,#0x10]|33-105
49250|code|LDR             R3, [R0,#4]|67-104
49252|code|ADDS            R1, R1, R3|201-24
49254|code|BL              sub_A324|254-247-93-249
49258|code|MOV             R5, R0|5-70
49260|code|CBZ             R0, loc_C0A0|192-177
49262|code|LDR             R2, [R4,#8]|162-104
49264|code|MOV             R1, R0|1-70
49266|code|LDR             R0, [R4,#4]|96-104
49268|code|ADDS            R2, #1|1-50
49270|code|BL              sub_A7FC|254-247-193-251
49274|code|MOV             R0, R5|40-70
49276|code|BL              sub_9E18|253-247-204-254
49280|code|LDR             R3, [R4,#4]|99-104
49282|code|LDR             R2, [R4,#8]|162-104
49284|code|LDR             R1, [R3,#0x10]|25-105
49286|code|ADDS            R2, #1|1-50
49288|code|STR             R2, [R4,#8]|162-96
49290|code|LDR.W           R2, [R1,R2,LSL#2]|81-248-34-32
49294|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
49298|code|STR             R1, [R4,#0x10]|33-97
49300|code|STR             R2, [R4,#0xC]|226-96
49302|code|LDR             R2, [R3,#0xC]|218-104
49304|code|MOVS            R0, #1|1-32
49306|code|SUBS            R2, #1|1-58
49308|code|STR             R2, [R3,#0xC]|218-96
49310|code|POP             {R3-R5,PC}|56-189
49312|code|LDR             R0, [R4,#0xC]|224-104
49314|code|BL              sub_A128|254-247-65-248
49318|code|CBNZ            R0, loc_C0BA|64-185
49320|code|LDR             R3, [R4,#4]|99-104
49322|code|MOVS            R0, #1|1-32
49324|code|LDR             R2, [R4,#0x10]|34-105
49326|code|SUBS            R2, #1|1-58
49328|code|STR             R2, [R4,#0x10]|34-97
49330|code|LDR             R2, [R3,#0xC]|218-104
49332|code|SUBS            R2, #1|1-58
49334|code|STR             R2, [R3,#0xC]|218-96
49336|code|POP             {R3-R5,PC}|56-189
49338|code|LDR             R0, [R4,#4]|96-104
49340|code|LDR             R1, [R4,#8]|161-104
49342|code|BL              sub_B064|254-247-209-255
49346|code|LDR             R3, [R4,#4]|99-104
49348|code|B               loc_C096|231-231
49350|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|14-72
49352|code|MOVW            R2, #0x906|64-246-6-18
49356|code|LDR             R1, =aHostlistC; "hostlist.c"|13-73
49358|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|14-75
49360|code|BLX             __assert_fail|253-247-230-232
49364|code|LDR             R0, =aIHlVoid0; "i->hl != ((void *)0)"|13-72
49366|code|MOVW            R2, #0x906|64-246-6-18
49370|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
49372|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|10-75
49374|code|BLX             __assert_fail|253-247-224-232
49378|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|11-72
49380|code|MOVW            R2, #0x905|64-246-5-18
49384|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
49386|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|7-75
49388|code|BLX             __assert_fail|253-247-216-232
49392|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|8-72
49394|code|MOVW            R2, #0x904|64-246-4-18
49398|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
49400|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|3-75
49402|code|BLX             __assert_fail|253-247-210-232
49406|data|ALIGN 0x10|0-191
49408|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|188-234-0-0
49412|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
49416|data|DCD aHostlistRemove; "hostlist_remove"|236-231-0-0
49420|data|DCD aIHlVoid0; "i->hl != ((void *)0)"|164-234-0-0
49424|data|DCD aIMagic57005; "i->magic == 57005"|44-234-0-0
49428|data|DCD aIVoid0; "i != ((void *)0)"|24-234-0-0
49432|code|PUSH            {R3-R5,LR}|56-181
49434|code|MOV             R5, R0|5-70
49436|code|MOVS            R0, #4|4-32
49438|code|BLX             malloc|253-247-102-233
49442|code|MOV             R4, R0|4-70
49444|code|CBZ             R0, loc_C136|56-177
49446|code|MOV             R0, R5|40-70
49448|code|BL              sub_BD98|255-247-54-254
49452|code|MOV             R3, R0|3-70
49454|code|STR             R0, [R4]|32-96
49456|code|CBZ             R0, loc_C13A|24-177
49458|code|BL              sub_B194|255-247-47-248
49462|code|MOV             R0, R4|32-70
49464|code|POP             {R3-R5,PC}|56-189
49466|code|MOV             R0, R4|32-70
49468|code|MOV             R4, R3|28-70
49470|code|BLX             free|253-247-198-232
49474|code|B               loc_C136|248-231
49476|code|PUSH            {R3-R5,LR}|56-181
49478|code|MOV             R5, R0|5-70
49480|code|MOVS            R0, #4|4-32
49482|code|BLX             malloc|253-247-80-233
49486|code|MOV             R4, R0|4-70
49488|code|CBZ             R0, loc_C15E|40-177
49490|code|LDR             R0, [R5]|40-104
49492|code|BL              sub_A8D4|254-247-190-251
49496|code|MOV             R3, R0|3-70
49498|code|STR             R0, [R4]|32-96
49500|code|CBZ             R0, loc_C162|8-177
49502|code|MOV             R0, R4|32-70
49504|code|POP             {R3-R5,PC}|56-189
49506|code|MOV             R0, R4|32-70
49508|code|MOV             R4, R3|28-70
49510|code|BLX             free|253-247-178-232
49514|code|B               loc_C15E|248-231
49516|code|PUSH            {R4,LR}|16-181
49518|code|MOV             R4, R0|4-70
49520|code|CBZ             R0, locret_C182|56-177
49522|code|LDR             R0, [R0]|0-104
49524|code|BL              sub_B780|255-247-4-251
49528|code|MOV             R0, R4|32-70
49530|code|POP.W           {R4,LR}|189-232-16-64
49534|code|B.W             j_free|253-247-163-184
49538|code|POP             {R4,PC}|16-189
49540|code|PUSH.W          {R4-R11,LR}|45-233-240-79
49544|code|SUB             SP, SP, #0xC|131-176
49546|code|STR             R0, [SP,#4]|1-144
49548|code|MOV             R0, R1|8-70
49550|code|BL              sub_BD98|255-247-3-254
49554|code|MOV             R8, R0|128-70
49556|code|CMP             R0, #0|0-40
49558|code|BEQ.W           loc_C2D0|0-240-155-128
49562|code|BL              sub_B194|254-247-251-255
49566|code|LDR             R3, [SP,#4]|1-155
49568|code|LDR             R5, [R3]|29-104
49570|code|CMP             R5, #0|0-45
49572|code|BEQ.W           loc_C2E2|0-240-157-128
49576|code|LDR             R2, [R5]|42-104
49578|code|MOVW            R3, #0xDEAD|77-246-173-99
49582|code|CMP             R2, R3|154-66
49584|code|BNE.W           loc_C2D4|64-240-144-128
49588|code|LDR.W           R3, [R8,#8]|216-248-8-48
49592|code|MOV.W           R9, #0|79-240-0-9
49596|code|CMP             R3, #0|0-43
49598|code|IT GT|200-191
49600|code|MOVGT           R6, R9|78-70
49602|code|BLE             loc_C2C2|126-221
49604|code|LDR.W           R10, [R5,#8]|213-248-8-160
49608|code|LDR             R3, [R5,#4]|107-104
49610|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
49614|code|CMP             R3, R10|83-69
49616|code|LDR.W           R11, [R2,R6,LSL#2]|82-248-38-176
49620|code|BEQ             loc_C26C|74-208
49622|code|MOV             R0, R11|88-70
49624|code|BL              sub_A0AC|253-247-104-255
49628|code|CMP.W           R10, #0|186-241-0-15
49632|code|MOV             R7, R0|7-70
49634|code|BLE             loc_C28A|82-221
49636|code|MOVS            R4, #0|0-36
49638|code|B               loc_C1F2|4-224
49640|code|LDR.W           R10, [R5,#8]|213-248-8-160
49644|code|ADDS            R4, #1|1-52
49646|code|CMP             R4, R10|84-69
49648|code|BGE             loc_C28A|75-218
49650|code|LDR             R3, [R5,#0x10]|43-105
49652|code|MOV             R0, R11|88-70
49654|code|MOV.W           R10, R4,LSL#2|79-234-132-10
49658|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
49662|code|BL              sub_A3AC|254-247-213-248
49666|code|CMP             R0, #0|0-40
49668|code|BGT             loc_C1E8|240-220
49670|code|LDR             R3, [R5,#0x10]|43-105
49672|code|MOV             R0, R11|88-70
49674|code|LDR.W           R1, [R3,R10]|83-248-10-16
49678|code|BL              sub_A40C|254-247-253-248
49682|code|CMP             R0, #0|0-40
49684|code|MOV             R10, R0|130-70
49686|code|IT LT|184-191
49688|code|MOVLT.W         R10, #0|79-240-0-10
49692|code|BLT             loc_C226|3-219
49694|code|MOV             R0, R5|40-70
49696|code|MOV             R1, R4|33-70
49698|code|BL              sub_B064|254-247-31-255
49702|code|MOV             R0, R5|40-70
49704|code|MOV             R1, R11|89-70
49706|code|MOV             R2, R4|34-70
49708|code|BL              sub_A7FC|254-247-230-250
49712|code|CBZ             R4, loc_C240|52-177
49714|code|MOV             R0, R5|40-70
49716|code|MOV             R1, R4|33-70
49718|code|BL              sub_B100|254-247-99-255
49722|code|CMP             R0, #0|0-40
49724|code|IT GT|200-191
49726|code|ADDGT           R10, R0|130-68
49728|code|LDR             R3, [R5,#0xC]|235-104
49730|code|RSB.W           R7, R10, R7|202-235-7-7
49734|code|ADDS            R3, R3, R7|219-25
49736|code|STR             R3, [R5,#0xC]|235-96
49738|code|LDR.W           R3, [R8,#8]|216-248-8-48
49742|code|ADDS            R6, #1|1-54
49744|code|ADD             R9, R7|185-68
49746|code|CMP             R3, R6|179-66
49748|code|BLE             loc_C2C2|53-221
49750|code|LDR             R3, [SP,#4]|1-155
49752|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
49756|code|LDR             R5, [R3]|29-104
49758|code|LDR.W           R11, [R2,R6,LSL#2]|82-248-38-176
49762|code|LDR.W           R10, [R5,#8]|213-248-8-160
49766|code|LDR             R3, [R5,#4]|107-104
49768|code|CMP             R3, R10|83-69
49770|code|BNE             loc_C1D6|180-209
49772|code|MOV             R0, R5|40-70
49774|code|BL              sub_A714|254-247-81-250
49778|code|MOV             R7, R0|7-70
49780|code|CMP             R0, #0|0-40
49782|code|BEQ             loc_C24A|232-208
49784|code|MOV             R0, R11|88-70
49786|code|LDR.W           R10, [R5,#8]|213-248-8-160
49790|code|BL              sub_A0AC|253-247-21-255
49794|code|CMP.W           R10, #0|186-241-0-15
49798|code|MOV             R7, R0|7-70
49800|code|BGT             loc_C1E4|172-220
49802|code|MOV             R0, R11|88-70
49804|code|LDR             R4, [R5,#0x10]|44-105
49806|code|BL              sub_A2EC|254-247-45-248
49810|code|ADD.W           R3, R10, #1|10-241-1-3
49814|code|LDR             R2, [R5,#0xC]|234-104
49816|code|CMP             R3, #1|1-43
49818|code|ADD             R2, R7|58-68
49820|code|STR.W           R0, [R4,R10,LSL#2]|68-248-42-0
49824|code|STR             R3, [R5,#8]|171-96
49826|code|STR             R2, [R5,#0xC]|234-96
49828|code|BLE             loc_C24A|209-221
49830|code|MOV             R0, R5|40-70
49832|code|MOV             R1, R10|81-70
49834|code|BL              sub_B100|254-247-41-255
49838|code|LDR.W           R3, [R8,#8]|216-248-8-48
49842|code|CMP             R0, #0|0-40
49844|code|IT GT|200-191
49846|code|RSBGT.W         R7, R0, R7|192-235-7-7
49850|code|ADDS            R6, #1|1-54
49852|code|CMP             R3, R6|179-66
49854|code|ADD             R9, R7|185-68
49856|code|BGT             loc_C256|201-220
49858|code|MOV             R0, R8|64-70
49860|code|BL              sub_B780|255-247-92-250
49864|code|MOV             R0, R9|72-70
49866|code|ADD             SP, SP, #0xC|3-176
49868|code|POP.W           {R4-R11,PC}|189-232-240-143
49872|code|MOV             R9, R0|129-70
49874|code|B               loc_C2C8|249-231
49876|code|LDR             R0, =aSetHlMagic5700; "(set->hl)->magic == 57005"|6-72
49878|code|MOVW            R2, #0x985|64-246-133-18
49882|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
49884|code|LDR             R3, =aHostsetInsert; "hostset_insert"|6-75
49886|code|BLX             __assert_fail|252-247-224-239
49890|code|LDR             R0, =aSetHlVoid0; "set->hl != ((void *)0)"|6-72
49892|code|MOVW            R2, #0x985|64-246-133-18
49896|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
49898|code|LDR             R3, =aHostsetInsert; "hostset_insert"|3-75
49900|code|BLX             __assert_fail|252-247-216-239
49904|data|DCD aSetHlMagic5700; "(set->hl)->magic == 57005"|88-235-0-0
49908|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
49912|data|DCD aHostsetInsert; "hostset_insert"|252-231-0-0
49916|data|DCD aSetHlVoid0; "set->hl != ((void *)0)"|64-235-0-0
49920|code|PUSH.W          {R3-R11,LR}|45-233-248-79
49924|code|MOV             R6, R0|6-70
49926|code|LDR             R3, [R0]|3-104
49928|code|LDR             R4, [R3]|28-104
49930|code|MOVW            R3, #0xDEAD|77-246-173-99
49934|code|CMP             R4, R3|156-66
49936|code|BNE             loc_C3B0|78-209
49938|code|MOV             R0, R1|8-70
49940|code|BL              sub_BD98|255-247-64-253
49944|code|MOV             R9, R0|129-70
49946|code|CMP.W           R9, #0|185-241-0-15
49950|code|BEQ             locret_C3AC|69-208
49952|code|BL              sub_ABD4|254-247-88-252
49956|code|MOV.W           R8, #0|79-240-0-8
49960|code|MOV             R10, R4|162-70
49962|code|MOV             R11, R0|131-70
49964|code|MOV             R0, R9|72-70
49966|code|BL              sub_A9E8|254-247-91-251
49970|code|MOV             R7, R0|7-70
49972|code|CMP             R0, #0|0-40
49974|code|BEQ             loc_C38E|42-208
49976|code|LDR             R3, [R6]|51-104
49978|code|CMP             R3, #0|0-43
49980|code|BEQ             loc_C3CC|70-208
49982|code|LDR             R3, [R3]|27-104
49984|code|CMP             R3, R10|83-69
49986|code|BNE             loc_C3BE|60-209
49988|code|MOV             R0, R7|56-70
49990|code|BL              sub_9E34|253-247-117-253
49994|code|LDR             R2, [R6]|50-104
49996|code|LDR             R3, [R2,#8]|147-104
49998|code|CMP             R3, #0|0-43
50000|code|MOV             R5, R0|5-70
50002|code|BLE             loc_C3A8|41-221
50004|code|MOVS            R4, #0|0-36
50006|code|B               loc_C362|4-224
50008|code|LDR             R2, [R6]|50-104
50010|code|ADDS            R4, #1|1-52
50012|code|LDR             R3, [R2,#8]|147-104
50014|code|CMP             R4, R3|156-66
50016|code|BGE             loc_C3A4|32-218
50018|code|LDR             R3, [R2,#0x10]|19-105
50020|code|MOV             R1, R5|41-70
50022|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
50026|code|BL              sub_9FB4|253-247-35-254
50030|code|CMP             R0, #0|0-40
50032|code|BEQ             loc_C358|242-208
50034|code|MOVS            R3, #1|1-35
50036|code|MOV             R0, R5|40-70
50038|code|ADD             R8, R3|152-68
50040|code|BL              sub_9DF0|253-247-58-253
50044|code|MOV             R0, R7|56-70
50046|code|BLX             free|252-247-166-239
50050|code|MOV             R0, R9|72-70
50052|code|BL              sub_A9E8|254-247-48-251
50056|code|MOV             R7, R0|7-70
50058|code|CMP             R0, #0|0-40
50060|code|BNE             loc_C338|212-209
50062|code|MOV             R0, R9|72-70
50064|code|BL              sub_B780|255-247-246-249
50068|code|RSB.W           LR, R8, R11|200-235-11-14
50072|code|RSBS.W          R0, LR, #0|222-241-0-0
50076|code|ADC.W           R0, R0, LR|64-235-14-0
50080|code|POP.W           {R3-R11,PC}|189-232-248-143
50084|code|MOV             R3, R0|3-70
50086|code|B               loc_C374|229-231
50088|code|MOVS            R3, #0|0-35
50090|code|B               loc_C374|227-231
50092|code|POP.W           {R3-R11,PC}|189-232-248-143
50096|code|LDR             R0, =aSetHlMagic5700_0; "set->hl->magic == 57005"|10-72
50098|code|MOVW            R2, #0x9A9|64-246-169-18
50102|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
50104|code|LDR             R3, =aHostsetWithin; "hostset_within"|10-75
50106|code|BLX             __assert_fail|252-247-114-239
50110|code|LDR             R0, =aSetHlMagic5700; "(set->hl)->magic == 57005"|10-72
50112|code|MOVW            R2, #0x995|64-246-149-18
50116|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
50118|code|LDR             R3, =aHostsetFindHos; "hostset_find_host"|9-75
50120|code|BLX             __assert_fail|252-247-106-239
50124|code|LDR             R0, =aSetHlVoid0; "set->hl != ((void *)0)"|8-72
50126|code|MOVW            R2, #0x995|64-246-149-18
50130|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
50132|code|LDR             R3, =aHostsetFindHos; "hostset_find_host"|5-75
50134|code|BLX             __assert_fail|252-247-100-239
50138|data|ALIGN 4|0-191
50140|data|DCD aSetHlMagic5700_0; "set->hl->magic == 57005"|116-235-0-0
50144|data|DCD aHostlistC; "hostlist.c"|72-232-0-0
50148|data|DCD aHostsetWithin; "hostset_within"|12-232-0-0
50152|data|DCD aSetHlMagic5700; "(set->hl)->magic == 57005"|88-235-0-0
50156|data|DCD aHostsetFindHos; "hostset_find_host"|28-232-0-0
50160|data|DCD aSetHlVoid0; "set->hl != ((void *)0)"|64-235-0-0
50164|code|LDR             R0, [R0]|0-104
50166|code|B.W             loc_BD9C|255-247-209-188
50170|data|ALIGN 4|0-191
50172|code|LDR             R0, [R0]|0-104
50174|code|B.W             sub_B578|255-247-187-184
50178|data|ALIGN 4|0-191
50180|code|LDR             R0, [R0]|0-104
50182|code|B.W             loc_B594|255-247-197-184
50186|data|ALIGN 4|0-191
50188|code|LDR             R0, [R0]|0-104
50190|code|B.W             sub_A9E8|254-247-235-186
50194|data|ALIGN 4|0-191
50196|code|LDR             R0, [R0]|0-104
50198|code|B.W             loc_B7E8|255-247-231-185
50202|data|ALIGN 4|0-191
50204|code|LDR             R0, [R0]|0-104
50206|code|B.W             loc_B904|255-247-113-186
50210|data|ALIGN 4|0-191
50212|code|LDR             R0, [R0]|0-104
50214|code|B.W             sub_ABD4|254-247-213-187
50218|data|ALIGN 4|0-191
50220|code|LDR             R0, [R0]|0-104
50222|code|B.W             sub_AE60|254-247-23-189
50226|data|ALIGN 4|0-191
50228|code|LDR             R0, [R0]|0-104
50230|code|B.W             loc_ACC8|254-247-71-188
50234|data|ALIGN 4|0-191
50236|code|CMP             R0, #3|3-40
50238|code|PUSH            {R4-R6,LR}|112-181
50240|code|MOV             R4, R0|4-70
50242|code|SUB             SP, SP, #8|130-176
50244|code|BLS             loc_C48E|35-217
50246|code|CMP             R1, #0|0-41
50248|code|BEQ             loc_C49C|40-208
50250|code|LDR             R5, [R1]|13-104
50252|code|CBZ             R5, loc_C458|37-177
50254|code|LDR             R3, [R5]|43-104
50256|code|STR             R3, [R1]|11-96
50258|code|MOV             R0, R5|40-70
50260|code|ADD             SP, SP, #8|2-176
50262|code|POP             {R4-R6,PC}|112-189
50264|code|LSLS            R6, R0, #5|70-1
50266|code|STR             R1, [SP,#0x18+var_14]|1-145
50268|code|MOV             R0, R6; size|48-70
50270|code|BLX             malloc|252-247-198-239
50274|code|LDR             R1, [SP,#0x18+var_14]|1-153
50276|code|STR             R0, [R1]|8-96
50278|code|CBZ             R0, loc_C484|104-177
50280|code|SUBS            R6, R6, R4|54-27
50282|code|ADDS            R6, R0, R6|134-25
50284|code|CMP             R0, R6|176-66
50286|code|BCC             loc_C474|1-211
50288|code|B               loc_C47C|4-224
50290|code|MOV             R0, R3|24-70
50292|code|ADDS            R3, R0, R4|3-25
50294|code|STR             R3, [R0]|3-96
50296|code|CMP             R6, R3|158-66
50298|code|BHI             loc_C472|250-216
50300|code|MOVS            R3, #0|0-35
50302|code|STR             R3, [R6]|51-96
50304|code|LDR             R3, [R1]|11-104
50306|code|CBNZ            R3, loc_C4AA|147-185
50308|code|BLX             __errno_location|253-247-32-232
50312|code|MOVS            R3, #0xC|12-35
50314|code|STR             R3, [R0]|3-96
50316|code|B               loc_C452|225-231
50318|code|LDR             R0, =aSizeSizeofVoid; "size >= sizeof(void *)"|8-72
50320|code|MOVW            R2, #0x30B; line|64-242-11-50
50324|code|LDR             R1, =(aHostlistC+4); file|7-73
50326|code|LDR             R3, =aListAllocAux; "list_alloc_aux"|8-75
50328|code|BLX             __assert_fail|252-247-2-239
50332|code|LDR             R0, =aPfreelistVoid0; "pfreelist != ((void *)0)"|7-72
50334|code|MOV.W           R2, #0x30C; line|79-244-67-114
50338|code|LDR             R1, =(aHostlistC+4); file|4-73
50340|code|LDR             R3, =aListAllocAux; "list_alloc_aux"|4-75
50342|code|BLX             __assert_fail|252-247-252-238
50346|code|MOV             R5, R3|29-70
50348|code|B               loc_C44E|207-231
50350|data|ALIGN 0x10|0-191
50352|data|DCD aSizeSizeofVoid; "size >= sizeof(void *)"|28-237-0-0
50356|data|DCD aHostlistC+4; "list.c"|76-232-0-0
50360|data|DCD aListAllocAux; "list_alloc_aux"|140-235-0-0
50364|data|DCD aPfreelistVoid0; "pfreelist != ((void *)0)"|52-237-0-0
50368|code|PUSH            {R3-R7,LR}|248-181
50370|code|MOV             R5, R0|5-70
50372|code|MOV             R4, R1|12-70
50374|code|MOV             R6, R2|22-70
50376|code|CMP             R0, #0|0-40
50378|code|BEQ             loc_C5AC|111-208
50380|code|LDR             R2, [R0,#0x14]|66-105
50382|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
50390|code|CMP             R2, R3|154-66
50392|code|BNE             loc_C590|90-209
50394|code|CMP             R1, #0|0-41
50396|code|BEQ             loc_C582|81-208
50398|code|CMP             R6, #0|0-46
50400|code|BEQ             loc_C59E|93-208
50402|code|MOVS            R0, #8|8-32
50404|code|LDR             R1, =unk_17604|53-73
50406|code|BL              sub_C43C|255-247-169-255
50410|code|CMP             R0, #0|0-40
50412|code|BEQ             loc_C556|51-208
50414|code|STR             R6, [R0]|6-96
50416|code|LDR             R3, [R4]|35-104
50418|code|STR             R3, [R0,#4]|67-96
50420|code|CMP             R3, #0|0-43
50422|code|BEQ             loc_C550|43-208
50424|code|STR             R0, [R4]|32-96
50426|code|LDR             R2, [R5,#0x10]|42-105
50428|code|LDR             R3, [R5,#8]|171-104
50430|code|ADDS            R2, #1|1-50
50432|code|STR             R2, [R5,#0x10]|42-97
50434|code|CBZ             R3, loc_C54C|27-179
50436|code|LDR             R7, [R3,#0x10]|31-105
50438|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
50446|code|CMP             R7, R2|151-66
50448|code|IT EQ|8-191
50450|code|ADDEQ.W         R12, R0, #4|0-241-4-12
50454|code|BEQ             loc_C53C|17-208
50456|code|B               loc_C566|37-224
50458|code|LDR             R2, [R3,#4]|90-104
50460|code|LDR             R5, [R0,#4]|69-104
50462|code|CMP             R2, R5|170-66
50464|code|ITT EQ|4-191
50466|code|STREQ           R0, [R3,#4]|88-96
50468|code|MOVEQ           R2, R0|2-70
50470|code|LDR             R1, [R1]|9-104
50472|code|CMP             R2, R1|138-66
50474|code|BEQ             loc_C532|2-208
50476|code|LDR             R1, [R1,#4]|73-104
50478|code|CMP             R2, R1|138-66
50480|code|BNE             loc_C574|32-209
50482|code|LDR             R3, [R3,#0xC]|219-104
50484|code|CBZ             R3, loc_C54C|83-177
50486|code|LDR             R2, [R3,#0x10]|26-105
50488|code|CMP             R2, R7|186-66
50490|code|BNE             loc_C566|20-209
50492|code|LDR             R1, [R3,#8]|153-104
50494|code|CMP             R1, R4|161-66
50496|code|BNE             loc_C51A|235-209
50498|code|MOV             R1, R12|97-70
50500|code|STR.W           R12, [R3,#8]|195-248-8-192
50504|code|LDR             R2, [R3,#4]|90-104
50506|code|B               loc_C526|236-231
50508|code|MOV             R0, R6|48-70
50510|code|POP             {R3-R7,PC}|248-189
50512|code|ADDS            R3, R0, #4|3-29
50514|code|STR             R3, [R5,#4]|107-96
50516|code|B               loc_C4F8|208-231
50518|code|LDR             R0, =(aHostlistC+4); "list.c"|26-72
50520|code|MOV.W           R1, #0x29C|79-244-39-113
50524|code|LDR             R2, =aListNodeCreate; "list node create"|25-74
50526|code|POP.W           {R3-R7,LR}|189-232-248-64
50530|code|B.W             sub_9D00|253-247-205-187
50534|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|24-72
50536|code|MOVW            R2, #0x2A3; line|64-242-163-34
50540|code|LDR             R1, =(aHostlistC+4); file|20-73
50542|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|23-75
50544|code|BLX             __assert_fail|252-247-150-238
50548|code|LDR             R0, =aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|22-72
50550|code|MOV.W           R2, #0x2A8; line|79-244-42-114
50554|code|LDR             R1, =(aHostlistC+4); file|17-73
50556|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|19-75
50558|code|BLX             __assert_fail|252-247-144-238
50562|code|LDR             R0, =aPpVoid0; "pp != ((void *)0)"|20-72
50564|code|MOVW            R2, #0x299; line|64-242-153-34
50568|code|LDR             R1, =(aHostlistC+4); file|13-73
50570|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|16-75
50572|code|BLX             __assert_fail|252-247-136-238
50576|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|17-72
50578|code|MOVW            R2, #0x297; line|64-242-151-34
50582|code|LDR             R1, =(aHostlistC+4); file|10-73
50584|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|12-75
50586|code|BLX             __assert_fail|252-247-130-238
50590|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|15-72
50592|code|MOVW            R2, #0x29A; line|64-242-154-34
50596|code|LDR             R1, =(aHostlistC+4); file|6-73
50598|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|9-75
50600|code|BLX             __assert_fail|252-247-122-238
50604|code|LDR             R0, =(aIHlVoid0+4); assertion|12-72
50606|code|MOVW            R2, #0x296; line|64-242-150-34
50610|code|LDR             R1, =(aHostlistC+4); file|3-73
50612|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|5-75
50614|code|BLX             __assert_fail|252-247-116-238
50618|data|ALIGN 4|0-191
50620|data|DCD unk_17604|4-118-1-0
50624|data|DCD aHostlistC+4; "list.c"|76-232-0-0
50628|data|DCD aListNodeCreate; "list node create"|124-237-0-0
50632|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|144-237-0-0
50636|data|DCD aListNodeCreate_0; "list_node_create"|156-235-0-0
50640|data|DCD aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|168-237-0-0
50644|data|DCD aPpVoid0; "pp != ((void *)0)"|104-237-0-0
50648|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
50652|data|DCD aXVoid0; "x != ((void *)0)"|100-241-0-0
50656|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
50660|code|PUSH            {R3,LR}|8-181
50662|code|CBZ             R0, loc_C5F2|32-177
50664|code|CBZ             R1, loc_C600|81-177
50666|code|LDR             R3, [R1]|11-104
50668|code|STR             R3, [R0]|3-96
50670|code|STR             R0, [R1]|8-96
50672|code|POP             {R3,PC}|8-189
50674|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
50676|code|MOVW            R2, #0x329; line|64-242-41-50
50680|code|LDR             R1, =(aHostlistC+4); file|6-73
50682|code|LDR             R3, =aListFreeAux; "list_free_aux"|7-75
50684|code|BLX             __assert_fail|252-247-80-238
50688|code|LDR             R0, =aPfreelistVoid0; "pfreelist != ((void *)0)"|6-72
50690|code|MOVW            R2, #0x32A; line|64-242-42-50
50694|code|LDR             R1, =(aHostlistC+4); file|3-73
50696|code|LDR             R3, =aListFreeAux; "list_free_aux"|3-75
50698|code|BLX             __assert_fail|252-247-74-238
50702|data|ALIGN 0x10|0-191
50704|data|DCD aXVoid0; "x != ((void *)0)"|100-241-0-0
50708|data|DCD aHostlistC+4; "list.c"|76-232-0-0
50712|data|DCD aListFreeAux; "list_free_aux"|176-235-0-0
50716|data|DCD aPfreelistVoid0; "pfreelist != ((void *)0)"|52-237-0-0
50720|code|PUSH            {R3-R7,LR}|248-181
50722|code|CMP             R0, #0|0-40
50724|code|BEQ             loc_C6D2|85-208
50726|code|LDR             R2, [R0,#0x14]|66-105
50728|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
50736|code|CMP             R2, R3|154-66
50738|code|BNE             loc_C6C4|71-209
50740|code|CMP             R1, #0|0-41
50742|code|BEQ             loc_C6E0|83-208
50744|code|LDR             R3, [R1]|11-104
50746|code|CMP             R3, #0|0-43
50748|code|BEQ             loc_C6A4|50-208
50750|code|LDR             R2, [R3,#4]|90-104
50752|code|LDR             R4, [R3]|28-104
50754|code|STR             R2, [R1]|10-96
50756|code|CMP             R2, #0|0-42
50758|code|BEQ             loc_C6A0|43-208
50760|code|LDR             R5, [R0,#0x10]|5-105
50762|code|LDR             R2, [R0,#8]|130-104
50764|code|SUBS            R5, #1|1-61
50766|code|STR             R5, [R0,#0x10]|5-97
50768|code|CBZ             R2, loc_C694|2-179
50770|code|LDR             R6, [R2,#0x10]|22-105
50772|code|MOV             R0, #0xDEADBEEF|75-246-239-96-205-246-173-96
50780|code|ADDS            R7, R3, #4|31-29
50782|code|CMP             R6, R0|134-66
50784|code|BEQ             loc_C684|16-208
50786|code|B               loc_C6A8|33-224
50788|code|LDR             R5, [R2,#8]|149-104
50790|code|CMP             R5, R7|189-66
50792|code|ITT EQ|4-191
50794|code|STREQ           R1, [R2,#8]|145-96
50796|code|MOVEQ           R5, R1|13-70
50798|code|LDR             R5, [R5]|45-104
50800|code|CMP             R5, R0|133-66
50802|code|BEQ             loc_C67A|2-208
50804|code|LDR             R5, [R5,#4]|109-104
50806|code|CMP             R5, R0|133-66
50808|code|BNE             loc_C6B6|29-209
50810|code|LDR             R2, [R2,#0xC]|210-104
50812|code|CBZ             R2, loc_C694|82-177
50814|code|LDR             R0, [R2,#0x10]|16-105
50816|code|CMP             R0, R6|176-66
50818|code|BNE             loc_C6A8|17-209
50820|code|LDR             R0, [R2,#4]|80-104
50822|code|CMP             R0, R3|152-66
50824|code|BNE             loc_C664|236-209
50826|code|LDR             R0, [R3,#4]|88-104
50828|code|MOV             R5, R1|13-70
50830|code|STR             R1, [R2,#8]|145-96
50832|code|STR             R0, [R2,#4]|80-96
50834|code|B               loc_C66E|236-231
50836|code|MOV             R0, R3|24-70
50838|code|LDR             R1, =unk_17604|22-73
50840|code|BL              sub_C5E4|255-247-164-255
50844|code|MOV             R0, R4|32-70
50846|code|POP             {R3-R7,PC}|248-189
50848|code|STR             R1, [R0,#4]|65-96
50850|code|B               loc_C648|209-231
50852|code|MOV             R4, R3|28-70
50854|code|B               loc_C69C|249-231
50856|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|18-72
50858|code|MOVW            R2, #0x2C6; line|64-242-198-34
50862|code|LDR             R1, =(aHostlistC+4); file|18-73
50864|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|18-75
50866|code|BLX             __assert_fail|252-247-246-237
50870|code|LDR             R0, =aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|18-72
50872|code|MOVW            R2, #0x2CB; line|64-242-203-34
50876|code|LDR             R1, =(aHostlistC+4); file|14-73
50878|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|15-75
50880|code|BLX             __assert_fail|252-247-238-237
50884|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|15-72
50886|code|MOV.W           R2, #0x2BC; line|79-244-47-114
50890|code|LDR             R1, =(aHostlistC+4); file|11-73
50892|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|11-75
50894|code|BLX             __assert_fail|252-247-232-237
50898|code|LDR             R0, =(aIHlVoid0+4); assertion|13-72
50900|code|MOVW            R2, #0x2BB; line|64-242-187-34
50904|code|LDR             R1, =(aHostlistC+4); file|7-73
50906|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|8-75
50908|code|BLX             __assert_fail|252-247-224-237
50912|code|LDR             R0, =aPpVoid0; "pp != ((void *)0)"|10-72
50914|code|MOVW            R2, #0x2BE; line|64-242-190-34
50918|code|LDR             R1, =(aHostlistC+4); file|4-73
50920|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|4-75
50922|code|BLX             __assert_fail|252-247-218-237
50926|data|ALIGN 0x10|0-191
50928|data|DCD unk_17604|4-118-1-0
50932|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|144-237-0-0
50936|data|DCD aHostlistC+4; "list.c"|76-232-0-0
50940|data|DCD aListNodeDestro; "list_node_destroy"|192-235-0-0
50944|data|DCD aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|168-237-0-0
50948|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
50952|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
50956|data|DCD aPpVoid0; "pp != ((void *)0)"|104-237-0-0
50960|code|PUSH            {R4,LR}|16-181
50962|code|MOV             R4, R0|4-70
50964|code|LDR             R1, =unk_17608|11-73
50966|code|MOVS            R0, #0x18|24-32
50968|code|BL              sub_C43C|255-247-144-254
50972|code|CBZ             R0, loc_C736|88-177
50974|code|MOVS            R3, #0|0-35
50976|code|MOVW            R2, #0xBEEF|75-246-239-98
50980|code|STR             R3, [R0]|3-96
50982|code|MOVT.W          R2, #0xDEAD|205-246-173-98
50986|code|STR             R0, [R0,#4]|64-96
50988|code|STR             R3, [R0,#8]|131-96
50990|code|STR             R4, [R0,#0xC]|196-96
50992|code|STR             R3, [R0,#0x10]|3-97
50994|code|STR             R2, [R0,#0x14]|66-97
50996|code|POP             {R4,PC}|16-189
50998|code|LDR             R0, =(aHostlistC+4); "list.c"|4-72
51000|code|MOVS            R1, #0xDE|222-33
51002|code|LDR             R2, =aListCreate; "list create"|4-74
51004|code|POP.W           {R4,LR}|189-232-16-64
51008|code|B.W             sub_9D00|253-247-222-186
51012|data|DCD unk_17608|8-118-1-0
51016|data|DCD aHostlistC+4; "list.c"|76-232-0-0
51020|data|DCD aListCreate; "list create"|224-237-0-0
51024|code|PUSH            {R3-R7,LR}|248-181
51026|code|MOV             R7, R0|7-70
51028|code|CMP             R0, #0|0-40
51030|code|BEQ             loc_C7E0|67-208
51032|code|LDR             R2, [R0,#0x14]|66-105
51034|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
51042|code|CMP             R2, R3|154-66
51044|code|BNE             loc_C7D4|54-209
51046|code|LDR             R0, [R0,#8]|128-104
51048|code|CBZ             R0, loc_C792|152-177
51050|code|LDR             R6, [R0,#0x10]|6-105
51052|code|CMP             R6, R2|150-66
51054|code|ITT EQ|4-191
51056|code|MOVEQW          R5, #0x4110|68-242-16-21
51060|code|MOVTEQ.W        R5, #0x2152|194-242-82-21
51064|code|BEQ             loc_C784|4-208
51066|code|B               loc_C7C8|37-224
51068|code|LDR             R3, [R4,#0x10]|35-105
51070|code|CMP             R3, R6|179-66
51072|code|BNE             loc_C7C8|34-209
51074|code|MOV             R0, R4|32-70
51076|code|LDR             R4, [R0,#0xC]|196-104
51078|code|STR             R5, [R0,#0x10]|5-97
51080|code|LDR             R1, =unk_1760C|24-73
51082|code|BL              sub_C5E4|255-247-43-255
51086|code|CMP             R4, #0|0-44
51088|code|BNE             loc_C77C|244-209
51090|code|LDR             R5, [R7]|61-104
51092|code|CBNZ            R5, loc_C79A|13-185
51094|code|B               loc_C7B2|12-224
51096|code|MOV             R5, R4|37-70
51098|code|LDM.W           R5, {R0,R4}|149-232-17-0
51102|code|CBZ             R0, loc_C7A6|16-177
51104|code|LDR             R3, [R7,#0xC]|251-104
51106|code|CBZ             R3, loc_C7A6|3-177
51108|code|BLX             R3|152-71
51110|code|MOV             R0, R5|40-70
51112|code|LDR             R1, =unk_17604|17-73
51114|code|BL              sub_C5E4|255-247-27-255
51118|code|CMP             R4, #0|0-44
51120|code|BNE             loc_C798|242-209
51122|code|MOVW            R3, #0x4110|68-242-16-19
51126|code|MOV             R0, R7|56-70
51128|code|MOVT.W          R3, #0x2152|194-242-82-19
51132|code|LDR             R1, =unk_17608|13-73
51134|code|STR             R3, [R7,#0x14]|123-97
51136|code|POP.W           {R3-R7,LR}|189-232-248-64
51140|code|B.W             sub_C5E4|255-247-14-191
51144|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|11-72
51146|code|MOVS            R2, #0xF5|245-34
51148|code|LDR             R1, =(aHostlistC+4); "list.c"|11-73
51150|code|LDR             R3, =aListDestroy; "list_destroy"|12-75
51152|code|BLX             __assert_fail|252-247-102-237
51156|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|11-72
51158|code|MOVS            R2, #0xF2|242-34
51160|code|LDR             R1, =(aHostlistC+4); "list.c"|8-73
51162|code|LDR             R3, =aListDestroy; "list_destroy"|9-75
51164|code|BLX             __assert_fail|252-247-96-237
51168|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|9-72
51170|code|MOVS            R2, #0xF0|240-34
51172|code|LDR             R1, =(aHostlistC+4); "list.c"|5-73
51174|code|LDR             R3, =aListDestroy; "list_destroy"|6-75
51176|code|BLX             __assert_fail|252-247-90-237
51180|data|DCD unk_1760C|12-118-1-0
51184|data|DCD unk_17604|4-118-1-0
51188|data|DCD unk_17608|8-118-1-0
51192|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|144-237-0-0
51196|data|DCD aHostlistC+4; "list.c"|76-232-0-0
51200|data|DCD aListDestroy; "list_destroy"|212-235-0-0
51204|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
51208|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
51212|code|PUSH            {R3,LR}|8-181
51214|code|CBZ             R0, loc_C82A|96-177
51216|code|LDR             R2, [R0,#0x14]|66-105
51218|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
51226|code|CMP             R2, R3|154-66
51228|code|BNE             loc_C838|12-209
51230|code|LDR             R0, [R0,#0x10]|0-105
51232|code|RSBS.W          R0, R0, #1|208-241-1-0
51236|code|IT CC|56-191
51238|code|MOVCC           R0, #0|0-32
51240|code|POP             {R3,PC}|8-189
51242|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|7-72
51244|code|MOV.W           R2, #0x110|79-244-136-114
51248|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
51250|code|LDR             R3, =aListIsEmpty; "list_is_empty"|7-75
51252|code|BLX             __assert_fail|252-247-52-237
51256|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
51258|code|MOV.W           R2, #0x112|79-244-137-114
51262|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
51264|code|LDR             R3, =aListIsEmpty; "list_is_empty"|3-75
51266|code|BLX             __assert_fail|252-247-46-237
51270|data|ALIGN 4|0-191
51272|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
51276|data|DCD aHostlistC+4; "list.c"|76-232-0-0
51280|data|DCD aListIsEmpty; "list_is_empty"|228-235-0-0
51284|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
51288|code|PUSH            {R3,LR}|8-181
51290|code|CBZ             R0, loc_C86E|64-177
51292|code|LDR             R2, [R0,#0x14]|66-105
51294|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
51302|code|CMP             R2, R3|154-66
51304|code|BNE             loc_C87C|8-209
51306|code|LDR             R0, [R0,#0x10]|0-105
51308|code|POP             {R3,PC}|8-189
51310|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|7-72
51312|code|MOV.W           R2, #0x11E|79-244-143-114
51316|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
51318|code|LDR             R3, =aListCount; "list_count"|7-75
51320|code|BLX             __assert_fail|252-247-18-237
51324|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
51326|code|MOV.W           R2, #0x120|79-244-144-114
51330|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
51332|code|LDR             R3, =aListCount; "list_count"|3-75
51334|code|BLX             __assert_fail|252-247-12-237
51338|data|ALIGN 4|0-191
51340|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
51344|data|DCD aHostlistC+4; "list.c"|76-232-0-0
51348|data|DCD aListCount; "list_count"|244-235-0-0
51352|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
51356|code|PUSH            {R3,LR}|8-181
51358|code|MOV             R2, R1|10-70
51360|code|CBZ             R0, loc_C8BC|96-177
51362|code|CBZ             R1, loc_C8D8|201-177
51364|code|LDR             R1, [R0,#0x14]|65-105
51366|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
51374|code|CMP             R1, R3|153-66
51376|code|BNE             loc_C8CA|11-209
51378|code|LDR             R1, [R0,#4]|65-104
51380|code|POP.W           {R3,LR}|189-232-8-64
51384|code|B.W             sub_C4C0|255-247-2-190
51388|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
51390|code|MOV.W           R2, #0x12C|79-244-150-114
51394|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
51396|code|LDR             R3, =aListAppend; "list_append"|10-75
51398|code|BLX             __assert_fail|252-247-236-236
51402|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
51404|code|MOVW            R2, #0x12F|64-242-47-18
51408|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
51410|code|LDR             R3, =aListAppend; "list_append"|7-75
51412|code|BLX             __assert_fail|252-247-228-236
51416|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
51418|code|MOVW            R2, #0x12D|64-242-45-18
51422|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
51424|code|LDR             R3, =aListAppend; "list_append"|3-75
51426|code|BLX             __assert_fail|252-247-222-236
51430|data|ALIGN 4|0-191
51432|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
51436|data|DCD aHostlistC+4; "list.c"|76-232-0-0
51440|data|DCD aListAppend; "list_append"|0-236-0-0
51444|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
51448|data|DCD aXVoid0; "x != ((void *)0)"|100-241-0-0
51452|code|PUSH            {R3,LR}|8-181
51454|code|MOV             R2, R1|10-70
51456|code|CBZ             R0, loc_C91C|96-177
51458|code|CBZ             R1, loc_C938|201-177
51460|code|LDR             R1, [R0,#0x14]|65-105
51462|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
51470|code|CMP             R1, R3|153-66
51472|code|BNE             loc_C92A|11-209
51474|code|MOV             R1, R0|1-70
51476|code|POP.W           {R3,LR}|189-232-8-64
51480|code|B.W             sub_C4C0|255-247-210-189
51484|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
51486|code|MOVW            R2, #0x13B|64-242-59-18
51490|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
51492|code|LDR             R3, =aListPrepend; "list_prepend"|10-75
51494|code|BLX             __assert_fail|252-247-188-236
51498|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
51500|code|MOV.W           R2, #0x13E|79-244-159-114
51504|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
51506|code|LDR             R3, =aListPrepend; "list_prepend"|7-75
51508|code|BLX             __assert_fail|252-247-180-236
51512|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
51514|code|MOV.W           R2, #0x13C|79-244-158-114
51518|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
51520|code|LDR             R3, =aListPrepend; "list_prepend"|3-75
51522|code|BLX             __assert_fail|252-247-174-236
51526|data|ALIGN 4|0-191
51528|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
51532|data|DCD aHostlistC+4; "list.c"|76-232-0-0
51536|data|DCD aListPrepend; "list_prepend"|12-236-0-0
51540|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
51544|data|DCD aXVoid0; "x != ((void *)0)"|100-241-0-0
51548|code|PUSH            {R4-R6,LR}|112-181
51550|code|MOV             R4, R1|12-70
51552|code|MOV             R6, R2|22-70
51554|code|CBZ             R0, loc_C996|192-177
51556|code|CMP             R1, #0|0-41
51558|code|BEQ             loc_C9B2|36-208
51560|code|LDR             R2, [R0,#0x14]|66-105
51562|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
51570|code|CMP             R2, R3|154-66
51572|code|BNE             loc_C9A4|22-209
51574|code|LDR             R5, [R0]|5-104
51576|code|CBNZ            R5, loc_C980|21-185
51578|code|B               loc_C992|10-224
51580|code|LDR             R5, [R5,#4]|109-104
51582|code|CBZ             R5, loc_C98E|53-177
51584|code|LDR             R0, [R5]|40-104
51586|code|MOV             R1, R6|49-70
51588|code|BLX             R4|160-71
51590|code|CMP             R0, #0|0-40
51592|code|BEQ             loc_C97C|248-208
51594|code|LDR             R0, [R5]|40-104
51596|code|POP             {R4-R6,PC}|112-189
51598|code|MOV             R0, R5|40-70
51600|code|POP             {R4-R6,PC}|112-189
51602|code|MOV             R0, R5|40-70
51604|code|POP             {R4-R6,PC}|112-189
51606|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
51608|code|MOVW            R2, #0x14B|64-242-75-18
51612|code|LDR             R1, =(aHostlistC+4); "list.c"|9-73
51614|code|LDR             R3, =aListFindFirst; "list_find_first"|10-75
51616|code|BLX             __assert_fail|252-247-126-236
51620|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|9-72
51622|code|MOV.W           R2, #0x14E|79-244-167-114
51626|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
51628|code|LDR             R3, =aListFindFirst; "list_find_first"|6-75
51630|code|BLX             __assert_fail|252-247-120-236
51634|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
51636|code|MOV.W           R2, #0x14C|79-244-166-114
51640|code|LDR             R1, =(aHostlistC+4); "list.c"|2-73
51642|code|LDR             R3, =aListFindFirst; "list_find_first"|3-75
51644|code|BLX             __assert_fail|252-247-112-236
51648|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
51652|data|DCD aHostlistC+4; "list.c"|76-232-0-0
51656|data|DCD aListFindFirst; "list_find_first"|28-236-0-0
51660|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
51664|data|DCD aFVoid0; "f != ((void *)0)"|236-237-0-0
51668|code|PUSH.W          {R4-R8,LR}|45-233-240-65
51672|code|MOV             R5, R0|5-70
51674|code|MOV             R4, R1|12-70
51676|code|MOV             R7, R2|23-70
51678|code|CMP             R0, #0|0-40
51680|code|BEQ             loc_CA30|38-208
51682|code|CMP             R1, #0|0-41
51684|code|BEQ             loc_CA4C|50-208
51686|code|LDR             R2, [R0,#0x14]|66-105
51688|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
51696|code|CMP             R2, R3|154-66
51698|code|ITT EQ|4-191
51700|code|MOVEQ           R6, R0|6-70
51702|code|MOVEQ.W         R8, #0|79-240-0-8
51706|code|BNE             loc_CA3E|32-209
51708|code|LDR             R3, [R6]|51-104
51710|code|CBZ             R3, loc_CA12|67-177
51712|code|LDR             R0, [R3]|24-104
51714|code|MOV             R1, R7|57-70
51716|code|BLX             R4|160-71
51718|code|CBNZ            R0, loc_CA18|56-185
51720|code|LDR             R6, [R6]|54-104
51722|code|ADDS            R6, #4|4-54
51724|code|LDR             R3, [R6]|51-104
51726|code|CMP             R3, #0|0-43
51728|code|BNE             loc_CA00|246-209
51730|code|MOV             R0, R8|64-70
51732|code|POP.W           {R4-R8,PC}|189-232-240-129
51736|code|MOV             R0, R5|40-70
51738|code|MOV             R1, R6|49-70
51740|code|BL              sub_C620|255-247-0-254
51744|code|CMP             R0, #0|0-40
51746|code|BEQ             loc_C9FC|235-208
51748|code|LDR             R3, [R5,#0xC]|235-104
51750|code|CBZ             R3, loc_CA2A|3-177
51752|code|BLX             R3|152-71
51754|code|ADD.W           R8, R8, #1|8-241-1-8
51758|code|B               loc_C9FC|229-231
51760|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
51762|code|MOVW            R2, #0x161|64-242-97-18
51766|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
51768|code|LDR             R3, =aListDeleteAll; "list_delete_all"|10-75
51770|code|BLX             __assert_fail|252-247-50-236
51774|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
51776|code|MOV.W           R2, #0x164|79-244-178-114
51780|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
51782|code|LDR             R3, =aListDeleteAll; "list_delete_all"|7-75
51784|code|BLX             __assert_fail|252-247-42-236
51788|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
51790|code|MOV.W           R2, #0x162|79-244-177-114
51794|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
51796|code|LDR             R3, =aListDeleteAll; "list_delete_all"|3-75
51798|code|BLX             __assert_fail|252-247-36-236
51802|data|ALIGN 4|0-191
51804|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
51808|data|DCD aHostlistC+4; "list.c"|76-232-0-0
51812|data|DCD aListDeleteAll; "list_delete_all"|44-236-0-0
51816|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
51820|data|DCD aFVoid0; "f != ((void *)0)"|236-237-0-0
51824|code|PUSH            {R3-R7,LR}|248-181
51826|code|MOV             R4, R1|12-70
51828|code|MOV             R7, R2|23-70
51830|code|CBZ             R0, loc_CAC4|40-179
51832|code|CBZ             R1, loc_CAB6|233-177
51834|code|LDR             R2, [R0,#0x14]|66-105
51836|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
51844|code|CMP             R2, R3|154-66
51846|code|BNE             loc_CAA8|15-209
51848|code|LDR             R5, [R0]|5-104
51850|code|MOV             R6, R5|46-70
51852|code|CBZ             R5, loc_CAA4|85-177
51854|code|MOVS            R6, #0|0-38
51856|code|B               loc_CA96|1-224
51858|code|LDR             R5, [R5,#4]|109-104
51860|code|CBZ             R5, loc_CAA4|53-177
51862|code|LDR             R0, [R5]|40-104
51864|code|MOV             R1, R7|57-70
51866|code|BLX             R4|160-71
51868|code|ADDS            R6, #1|1-54
51870|code|CMP             R0, #0|0-40
51872|code|BGE             loc_CA92|247-218
51874|code|NEGS            R6, R6|118-66
51876|code|MOV             R0, R6|48-70
51878|code|POP             {R3-R7,PC}|248-189
51880|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
51882|code|MOV.W           R2, #0x180|79-244-192-114
51886|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
51888|code|LDR             R3, =aListForEach; "list_for_each"|10-75
51890|code|BLX             __assert_fail|252-247-246-235
51894|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|10-72
51896|code|MOV.W           R2, #0x17E|79-244-191-114
51900|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
51902|code|LDR             R3, =aListForEach; "list_for_each"|7-75
51904|code|BLX             __assert_fail|252-247-238-235
51908|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|7-72
51910|code|MOVW            R2, #0x17D|64-242-125-18
51914|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
51916|code|LDR             R3, =aListForEach; "list_for_each"|3-75
51918|code|BLX             __assert_fail|252-247-232-235
51922|data|ALIGN 4|0-191
51924|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
51928|data|DCD aHostlistC+4; "list.c"|76-232-0-0
51932|data|DCD aListForEach; "list_for_each"|60-236-0-0
51936|data|DCD aFVoid0; "f != ((void *)0)"|236-237-0-0
51940|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
51944|code|PUSH.W          {R4-R8,LR}|45-233-240-65
51948|code|MOV             R8, R0|128-70
51950|code|MOV             R6, R1|14-70
51952|code|CMP             R0, #0|0-40
51954|code|BEQ             loc_CB9C|83-208
51956|code|CMP             R1, #0|0-41
51958|code|BEQ             loc_CBB8|95-208
51960|code|LDR             R2, [R0,#0x14]|66-105
51962|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
51970|code|CMP             R2, R3|154-66
51972|code|BNE             loc_CBAA|81-209
51974|code|LDR             R3, [R0,#0x10]|3-105
51976|code|CMP             R3, #1|1-43
51978|code|BLE             locret_CB60|41-221
51980|code|LDR             R3, [R0]|3-104
51982|code|MOV             R7, R0|7-70
51984|code|ADDS            R5, R3, #4|29-29
51986|code|LDR             R3, [R3,#4]|91-104
51988|code|CBZ             R3, loc_CB32|107-177
51990|code|LDR             R2, [R7]|58-104
51992|code|LDR             R0, [R3]|24-104
51994|code|LDR             R1, [R2]|17-104
51996|code|BLX             R6|176-71
51998|code|CMP             R0, #0|0-40
52000|code|IT LT|184-191
52002|code|MOVLT           R4, R8|68-70
52004|code|BLT             loc_CB68|32-219
52006|code|LDR             R3, [R5]|43-104
52008|code|MOV             R7, R5|47-70
52010|code|ADDS            R5, R3, #4|29-29
52012|code|LDR             R3, [R3,#4]|91-104
52014|code|CMP             R3, #0|0-43
52016|code|BNE             loc_CB16|241-209
52018|code|LDR.W           R3, [R8,#8]|216-248-8-48
52022|code|STR.W           R5, [R8,#4]|200-248-4-80
52026|code|CBZ             R3, locret_CB60|139-177
52028|code|LDR             R0, [R3,#0x10]|24-105
52030|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
52038|code|CMP             R0, R2|144-66
52040|code|BEQ             loc_CB52|3-208
52042|code|B               loc_CB8E|32-224
52044|code|LDR             R2, [R3,#0x10]|26-105
52046|code|CMP             R2, R0|130-66
52048|code|BNE             loc_CB8E|29-209
52050|code|LDR             R2, [R3]|26-104
52052|code|LDR             R1, [R2]|17-104
52054|code|STR             R2, [R3,#8]|154-96
52056|code|STR             R1, [R3,#4]|89-96
52058|code|LDR             R3, [R3,#0xC]|219-104
52060|code|CMP             R3, #0|0-43
52062|code|BNE             loc_CB4C|245-209
52064|code|POP.W           {R4-R8,PC}|189-232-240-129
52068|code|LDR             R4, [R4]|36-104
52070|code|ADDS            R4, #4|4-52
52072|code|LDR             R2, [R5]|42-104
52074|code|LDR             R3, [R4]|35-104
52076|code|LDR             R0, [R2]|16-104
52078|code|LDR             R1, [R3]|25-104
52080|code|BLX             R6|176-71
52082|code|CMP             R0, #0|0-40
52084|code|BGE             loc_CB64|246-218
52086|code|LDR             R2, [R5]|42-104
52088|code|CMP             R7, R4|167-66
52090|code|LDR             R1, [R4]|33-104
52092|code|LDR             R3, [R2,#4]|83-104
52094|code|STR             R1, [R2,#4]|81-96
52096|code|LDR             R2, [R5]|42-104
52098|code|STR             R2, [R4]|34-96
52100|code|STR             R3, [R5]|43-96
52102|code|BNE             loc_CB14|197-209
52104|code|LDR             R7, [R7]|63-104
52106|code|ADDS            R7, #4|4-55
52108|code|B               loc_CB14|194-231
52110|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|14-72
52112|code|MOV.W           R2, #0x1B0|79-244-216-114
52116|code|LDR             R1, =(aHostlistC+4); "list.c"|13-73
52118|code|LDR             R3, =aListSort; "list_sort"|14-75
52120|code|BLX             __assert_fail|252-247-130-235
52124|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|13-72
52126|code|MOVW            R2, #0x195|64-242-149-18
52130|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
52132|code|LDR             R3, =aListSort; "list_sort"|10-75
52134|code|BLX             __assert_fail|252-247-124-235
52138|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|11-72
52140|code|MOV.W           R2, #0x198|79-244-204-114
52144|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
52146|code|LDR             R3, =aListSort; "list_sort"|7-75
52148|code|BLX             __assert_fail|252-247-116-235
52152|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|8-72
52154|code|MOV.W           R2, #0x196|79-244-203-114
52158|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
52160|code|LDR             R3, =aListSort; "list_sort"|3-75
52162|code|BLX             __assert_fail|252-247-110-235
52166|data|ALIGN 4|0-191
52168|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|144-237-0-0
52172|data|DCD aHostlistC+4; "list.c"|76-232-0-0
52176|data|DCD aListSort; "list_sort"|76-236-0-0
52180|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
52184|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
52188|data|DCD aFVoid0; "f != ((void *)0)"|236-237-0-0
52192|code|PUSH            {R3,LR}|8-181
52194|code|MOV             R2, R1|10-70
52196|code|CBZ             R0, loc_CC00|96-177
52198|code|CBZ             R1, loc_CC1C|201-177
52200|code|LDR             R1, [R0,#0x14]|65-105
52202|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52210|code|CMP             R1, R3|153-66
52212|code|BNE             loc_CC0E|11-209
52214|code|MOV             R1, R0|1-70
52216|code|POP.W           {R3,LR}|189-232-8-64
52220|code|B.W             sub_C4C0|255-247-96-188
52224|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
52226|code|MOVW            R2, #0x1BF|64-242-191-18
52230|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
52232|code|LDR             R3, =aListPush; "list_push"|10-75
52234|code|BLX             __assert_fail|252-247-74-235
52238|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
52240|code|MOV.W           R2, #0x1C2|79-244-225-114
52244|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
52246|code|LDR             R3, =aListPush; "list_push"|7-75
52248|code|BLX             __assert_fail|252-247-66-235
52252|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
52254|code|MOV.W           R2, #0x1C0|79-244-224-114
52258|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
52260|code|LDR             R3, =aListPush; "list_push"|3-75
52262|code|BLX             __assert_fail|252-247-60-235
52266|data|ALIGN 4|0-191
52268|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
52272|data|DCD aHostlistC+4; "list.c"|76-232-0-0
52276|data|DCD aListPush; "list_push"|88-236-0-0
52280|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
52284|data|DCD aXVoid0; "x != ((void *)0)"|100-241-0-0
52288|code|PUSH            {R3,LR}|8-181
52290|code|CBZ             R0, loc_CC5C|88-177
52292|code|LDR             R2, [R0,#0x14]|66-105
52294|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52302|code|CMP             R2, R3|154-66
52304|code|BNE             loc_CC6A|11-209
52306|code|MOV             R1, R0|1-70
52308|code|POP.W           {R3,LR}|189-232-8-64
52312|code|B.W             sub_C620|255-247-226-188
52316|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|6-72
52318|code|MOV.W           R2, #0x1CE|79-244-231-114
52322|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
52324|code|LDR             R3, =aListPop; "list_pop"|6-75
52326|code|BLX             __assert_fail|252-247-28-235
52330|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
52332|code|MOV.W           R2, #0x1D0|79-244-232-114
52336|code|LDR             R1, =(aHostlistC+4); "list.c"|2-73
52338|code|LDR             R3, =aListPop; "list_pop"|3-75
52340|code|BLX             __assert_fail|252-247-20-235
52344|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
52348|data|DCD aHostlistC+4; "list.c"|76-232-0-0
52352|data|DCD aListPop; "list_pop"|100-236-0-0
52356|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
52360|code|PUSH            {R3,LR}|8-181
52362|code|CBZ             R0, loc_CCA2|80-177
52364|code|LDR             R2, [R0,#0x14]|66-105
52366|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52374|code|CMP             R2, R3|154-66
52376|code|BNE             loc_CCB0|10-209
52378|code|LDR             R0, [R0]|0-104
52380|code|CBZ             R0, locret_CCA0|0-177
52382|code|LDR             R0, [R0]|0-104
52384|code|POP             {R3,PC}|8-189
52386|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|7-72
52388|code|MOV.W           R2, #0x1DC|79-244-238-114
52392|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
52394|code|LDR             R3, =aListPeek; "list_peek"|7-75
52396|code|BLX             __assert_fail|252-247-248-234
52400|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
52402|code|MOV.W           R2, #0x1DE|79-244-239-114
52406|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
52408|code|LDR             R3, =aListPeek; "list_peek"|3-75
52410|code|BLX             __assert_fail|252-247-242-234
52414|data|ALIGN 0x10|0-191
52416|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
52420|data|DCD aHostlistC+4; "list.c"|76-232-0-0
52424|data|DCD aListPeek; "list_peek"|112-236-0-0
52428|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
52432|code|PUSH            {R3,LR}|8-181
52434|code|MOV             R2, R1|10-70
52436|code|CBZ             R0, loc_CCF0|96-177
52438|code|CBZ             R1, loc_CD0C|201-177
52440|code|LDR             R1, [R0,#0x14]|65-105
52442|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52450|code|CMP             R1, R3|153-66
52452|code|BNE             loc_CCFE|11-209
52454|code|LDR             R1, [R0,#4]|65-104
52456|code|POP.W           {R3,LR}|189-232-8-64
52460|code|B.W             sub_C4C0|255-247-232-187
52464|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
52466|code|MOV.W           R2, #0x1EA|79-244-245-114
52470|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
52472|code|LDR             R3, =aListEnqueue; "list_enqueue"|10-75
52474|code|BLX             __assert_fail|252-247-210-234
52478|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
52480|code|MOVW            R2, #0x1ED|64-242-237-18
52484|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
52486|code|LDR             R3, =aListEnqueue; "list_enqueue"|7-75
52488|code|BLX             __assert_fail|252-247-202-234
52492|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
52494|code|MOVW            R2, #0x1EB|64-242-235-18
52498|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
52500|code|LDR             R3, =aListEnqueue; "list_enqueue"|3-75
52502|code|BLX             __assert_fail|252-247-196-234
52506|data|ALIGN 4|0-191
52508|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
52512|data|DCD aHostlistC+4; "list.c"|76-232-0-0
52516|data|DCD aListEnqueue; "list_enqueue"|124-236-0-0
52520|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
52524|data|DCD aXVoid0; "x != ((void *)0)"|100-241-0-0
52528|code|PUSH            {R3,LR}|8-181
52530|code|CBZ             R0, loc_CD4C|88-177
52532|code|LDR             R2, [R0,#0x14]|66-105
52534|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52542|code|CMP             R2, R3|154-66
52544|code|BNE             loc_CD5A|11-209
52546|code|MOV             R1, R0|1-70
52548|code|POP.W           {R3,LR}|189-232-8-64
52552|code|B.W             sub_C620|255-247-106-188
52556|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|6-72
52558|code|MOVW            R2, #0x1F9|64-242-249-18
52562|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
52564|code|LDR             R3, =aListDequeue; "list_dequeue"|6-75
52566|code|BLX             __assert_fail|252-247-164-234
52570|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
52572|code|MOVW            R2, #0x1FB|64-242-251-18
52576|code|LDR             R1, =(aHostlistC+4); "list.c"|2-73
52578|code|LDR             R3, =aListDequeue; "list_dequeue"|3-75
52580|code|BLX             __assert_fail|252-247-156-234
52584|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
52588|data|DCD aHostlistC+4; "list.c"|76-232-0-0
52592|data|DCD aListDequeue; "list_dequeue"|140-236-0-0
52596|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
52600|code|PUSH            {R4,LR}|16-181
52602|code|MOV             R4, R0|4-70
52604|code|CMP             R0, #0|0-40
52606|code|BEQ             loc_CDBA|28-208
52608|code|MOVS            R0, #0x14|20-32
52610|code|LDR             R1, =unk_1760C|21-73
52612|code|BL              sub_C43C|255-247-90-251
52616|code|CBZ             R0, loc_CDAA|120-177
52618|code|LDR             R3, [R4,#0x14]|99-105
52620|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
52628|code|STR             R4, [R0]|4-96
52630|code|CMP             R3, R2|147-66
52632|code|BNE             loc_CDC8|22-209
52634|code|LDR             R2, [R4,#8]|162-104
52636|code|LDR             R1, [R4]|33-104
52638|code|STR             R4, [R0,#8]|132-96
52640|code|STR             R2, [R0,#0xC]|194-96
52642|code|STR             R1, [R0,#4]|65-96
52644|code|STR             R0, [R4,#8]|160-96
52646|code|STR             R3, [R0,#0x10]|3-97
52648|code|POP             {R4,PC}|16-189
52650|code|LDR             R0, =(aHostlistC+4); "list.c"|12-72
52652|code|MOVW            R1, #0x209|64-242-9-33
52656|code|LDR             R2, =aListIteratorCr; "list iterator create"|11-74
52658|code|POP.W           {R4,LR}|189-232-16-64
52662|code|B.W             sub_9D00|252-247-163-191
52666|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
52668|code|MOVW            R2, #0x207|64-242-7-34
52672|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
52674|code|LDR             R3, =aListIteratorCr_0; "list_iterator_create"|9-75
52676|code|BLX             __assert_fail|252-247-108-234
52680|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-72
52682|code|MOV.W           R2, #0x20C|79-244-3-114
52686|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
52688|code|LDR             R3, =aListIteratorCr_0; "list_iterator_create"|5-75
52690|code|BLX             __assert_fail|252-247-102-234
52694|data|ALIGN 4|0-191
52696|data|DCD unk_1760C|12-118-1-0
52700|data|DCD aHostlistC+4; "list.c"|76-232-0-0
52704|data|DCD aListIteratorCr; "list iterator create"|0-238-0-0
52708|data|DCD aIHlVoid0+4; "l != ((void *)0)"|168-234-0-0
52712|data|DCD aListIteratorCr_0; "list_iterator_create"|156-236-0-0
52716|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|80-237-0-0
52720|code|PUSH            {R3,LR}|8-181
52722|code|CBZ             R0, loc_CE12|112-177
52724|code|LDR             R2, [R0,#0x10]|2-105
52726|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52734|code|CMP             R2, R3|154-66
52736|code|BNE             loc_CE2E|21-209
52738|code|LDR             R3, [R0]|3-104
52740|code|LDR             R1, [R3,#0x14]|89-105
52742|code|CMP             R1, R2|145-66
52744|code|BNE             loc_CE20|10-209
52746|code|LDR             R2, [R3]|26-104
52748|code|STR             R3, [R0,#8]|131-96
52750|code|STR             R2, [R0,#4]|66-96
52752|code|POP             {R3,PC}|8-189
52754|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|10-72
52756|code|MOVW            R2, #0x21A|64-242-26-34
52760|code|LDR             R1, =(aHostlistC+4); "list.c"|9-73
52762|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|10-75
52764|code|BLX             __assert_fail|252-247-64-234
52768|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|9-72
52770|code|MOVW            R2, #0x21D|64-242-29-34
52774|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
52776|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|6-75
52778|code|BLX             __assert_fail|252-247-58-234
52782|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|7-72
52784|code|MOVW            R2, #0x21B|64-242-27-34
52788|code|LDR             R1, =(aHostlistC+4); "list.c"|2-73
52790|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|3-75
52792|code|BLX             __assert_fail|252-247-50-234
52796|data|DCD aIVoid0; "i != ((void *)0)"|24-234-0-0
52800|data|DCD aHostlistC+4; "list.c"|76-232-0-0
52804|data|DCD aListIteratorRe; "list_iterator_reset"|180-236-0-0
52808|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|24-238-0-0
52812|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|144-237-0-0
52816|code|PUSH            {R4,LR}|16-181
52818|code|CMP             R0, #0|0-40
52820|code|BEQ             loc_CED6|63-208
52822|code|LDR             R3, [R0,#0x10]|3-105
52824|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
52832|code|CMP             R3, R2|147-66
52834|code|BNE             loc_CEC8|49-209
52836|code|LDR             R1, [R0]|1-104
52838|code|LDR             R2, [R1,#0x14]|74-105
52840|code|CMP             R2, R3|154-66
52842|code|BNE             loc_CEBA|38-209
52844|code|LDR             R3, [R1,#8]|139-104
52846|code|CBZ             R3, loc_CE92|131-177
52848|code|LDR             R4, [R3,#0x10]|28-105
52850|code|CMP             R4, R2|148-66
52852|code|BNE             loc_CEAC|26-209
52854|code|ADDS            R1, #8|8-49
52856|code|CMP             R0, R3|152-66
52858|code|BNE             loc_CE88|5-209
52860|code|B               loc_CEA6|19-224
52862|code|LDR             R2, [R3,#0x10]|26-105
52864|code|CMP             R2, R4|162-66
52866|code|BNE             loc_CEAC|19-209
52868|code|CMP             R0, R3|152-66
52870|code|BEQ             loc_CEA6|14-208
52872|code|ADD.W           R1, R3, #0xC|3-241-12-1
52876|code|LDR             R3, [R3,#0xC]|219-104
52878|code|CMP             R3, #0|0-43
52880|code|BNE             loc_CE7E|245-209
52882|code|MOVW            R3, #0x4110|68-242-16-19
52886|code|LDR             R1, =unk_1760C|19-73
52888|code|MOVT.W          R3, #0x2152|194-242-82-19
52892|code|STR             R3, [R0,#0x10]|3-97
52894|code|POP.W           {R4,LR}|189-232-16-64
52898|code|B.W             sub_C5E4|255-247-159-187
52902|code|LDR             R3, [R0,#0xC]|195-104
52904|code|STR             R3, [R1]|11-96
52906|code|B               loc_CE92|242-231
52908|code|LDR             R0, =aPiMagic0xdeadb; "(*pi)->magic == 0xDEADBEEF"|14-72
52910|code|MOVW            R2, #0x22F|64-242-47-34
52914|code|LDR             R1, =(aHostlistC+4); "list.c"|14-73
52916|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|14-75
52918|code|BLX             __assert_fail|252-247-244-233
52922|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|14-72
52924|code|MOVW            R2, #0x22D|64-242-45-34
52928|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
52930|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|11-75
52932|code|BLX             __assert_fail|252-247-236-233
52936|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|11-72
52938|code|MOVW            R2, #0x22B|64-242-43-34
52942|code|LDR             R1, =(aHostlistC+4); "list.c"|7-73
52944|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|7-75
52946|code|BLX             __assert_fail|252-247-230-233
52950|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|9-72
52952|code|MOVW            R2, #0x22A|64-242-42-34
52956|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
52958|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|4-75
52960|code|BLX             __assert_fail|252-247-222-233
52964|data|DCD unk_1760C|12-118-1-0
52968|data|DCD aPiMagic0xdeadb; "(*pi)->magic == 0xDEADBEEF"|56-238-0-0
52972|data|DCD aHostlistC+4; "list.c"|76-232-0-0
52976|data|DCD aListIteratorDe; "list_iterator_destroy"|200-236-0-0
52980|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|24-238-0-0
52984|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|144-237-0-0
52988|data|DCD aIVoid0; "i != ((void *)0)"|24-234-0-0
52992|code|PUSH            {R3,LR}|8-181
52994|code|CMP             R0, #0|0-40
52996|code|BEQ             loc_CF56|39-208
52998|code|LDR             R3, [R0,#0x10]|3-105
53000|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
53008|code|CMP             R3, R2|147-66
53010|code|BNE             loc_CF48|25-209
53012|code|LDR             R2, [R0]|2-104
53014|code|LDR             R2, [R2,#0x14]|82-105
53016|code|CMP             R2, R3|154-66
53018|code|BNE             loc_CF3A|14-209
53020|code|LDR             R3, [R0,#4]|67-104
53022|code|CBZ             R3, loc_CF24|11-177
53024|code|LDR             R2, [R3,#4]|90-104
53026|code|STR             R2, [R0,#4]|66-96
53028|code|LDR             R2, [R0,#8]|130-104
53030|code|LDR             R2, [R2]|18-104
53032|code|CMP             R2, R3|154-66
53034|code|BEQ             loc_CF30|1-208
53036|code|ADDS            R2, #4|4-50
53038|code|STR             R2, [R0,#8]|130-96
53040|code|CBZ             R3, loc_CF36|11-177
53042|code|LDR             R0, [R3]|24-104
53044|code|POP             {R3,PC}|8-189
53046|code|MOV             R0, R3|24-70
53048|code|POP             {R3,PC}|8-189
53050|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|10-72
53052|code|MOV.W           R2, #0x244; line|79-244-17-114
53056|code|LDR             R1, =(aHostlistC+4); file|9-73
53058|code|LDR             R3, =aListNext; "list_next"|10-75
53060|code|BLX             __assert_fail|252-247-172-233
53064|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|9-72
53066|code|MOVW            R2, #0x242; line|64-242-66-34
53070|code|LDR             R1, =(aHostlistC+4); file|6-73
53072|code|LDR             R3, =aListNext; "list_next"|6-75
53074|code|BLX             __assert_fail|252-247-166-233
53078|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
53080|code|MOVW            R2, #0x241; line|64-242-65-34
53084|code|LDR             R1, =(aHostlistC+4); file|2-73
53086|code|LDR             R3, =aListNext; "list_next"|3-75
53088|code|BLX             __assert_fail|252-247-158-233
53092|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|24-238-0-0
53096|data|DCD aHostlistC+4; "list.c"|76-232-0-0
53100|data|DCD aListNext; "list_next"|224-236-0-0
53104|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|144-237-0-0
53108|data|DCD aIVoid0; "i != ((void *)0)"|24-234-0-0
53112|code|PUSH            {R4,LR}|16-181
53114|code|MOV             R2, R1|10-70
53116|code|CBZ             R0, loc_CFA4|144-177
53118|code|CMP             R1, #0|0-41
53120|code|BEQ             loc_CFCE|37-208
53122|code|LDR             R1, [R0,#0x10]|1-105
53124|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53132|code|CMP             R1, R3|153-66
53134|code|BNE             loc_CFC0|23-209
53136|code|LDR             R3, [R0]|3-104
53138|code|LDR             R4, [R3,#0x14]|92-105
53140|code|CMP             R4, R1|140-66
53142|code|BNE             loc_CFB2|12-209
53144|code|LDR             R1, [R0,#8]|129-104
53146|code|MOV             R0, R3|24-70
53148|code|POP.W           {R4,LR}|189-232-16-64
53152|code|B.W             sub_C4C0|255-247-142-186
53156|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|13-72
53158|code|MOVW            R2, #0x253|64-242-83-34
53162|code|LDR             R1, =(aHostlistC+4); "list.c"|13-73
53164|code|LDR             R3, =aListInsert; "list_insert"|13-75
53166|code|BLX             __assert_fail|252-247-120-233
53170|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|13-72
53172|code|MOVW            R2, #0x257|64-242-87-34
53176|code|LDR             R1, =(aHostlistC+4); "list.c"|9-73
53178|code|LDR             R3, =aListInsert; "list_insert"|10-75
53180|code|BLX             __assert_fail|252-247-112-233
53184|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
53186|code|MOVW            R2, #0x255|64-242-85-34
53190|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
53192|code|LDR             R3, =aListInsert; "list_insert"|6-75
53194|code|BLX             __assert_fail|252-247-106-233
53198|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|8-72
53200|code|MOV.W           R2, #0x254|79-244-21-114
53204|code|LDR             R1, =(aHostlistC+4); "list.c"|2-73
53206|code|LDR             R3, =aListInsert; "list_insert"|3-75
53208|code|BLX             __assert_fail|252-247-98-233
53212|data|DCD aIVoid0; "i != ((void *)0)"|24-234-0-0
53216|data|DCD aHostlistC+4; "list.c"|76-232-0-0
53220|data|DCD aListInsert; "list_insert"|236-236-0-0
53224|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|24-238-0-0
53228|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|144-237-0-0
53232|data|DCD aXVoid0; "x != ((void *)0)"|100-241-0-0
53236|code|PUSH            {R3-R7,LR}|248-181
53238|code|MOV             R4, R0|4-70
53240|code|MOV             R5, R1|13-70
53242|code|MOV             R7, R2|23-70
53244|code|CBZ             R0, loc_D024|144-177
53246|code|CBZ             R1, loc_D040|249-177
53248|code|LDR             R2, [R0,#0x10]|2-105
53250|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53258|code|CMP             R2, R3|154-66
53260|code|BNE             loc_D032|17-209
53262|code|MOV             R0, R4|32-70
53264|code|BL              sub_CF00|255-247-118-255
53268|code|MOV             R6, R0|6-70
53270|code|CBZ             R0, loc_D020|24-177
53272|code|MOV             R1, R7|57-70
53274|code|BLX             R5|168-71
53276|code|CMP             R0, #0|0-40
53278|code|BEQ             loc_D00E|246-208
53280|code|MOV             R0, R6|48-70
53282|code|POP             {R3-R7,PC}|248-189
53284|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|10-72
53286|code|MOVW            R2, #0x263|64-242-99-34
53290|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
53292|code|LDR             R3, =aListFind; "list_find"|10-75
53294|code|BLX             __assert_fail|252-247-56-233
53298|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
53300|code|MOVW            R2, #0x265|64-242-101-34
53304|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
53306|code|LDR             R3, =aListFind; "list_find"|7-75
53308|code|BLX             __assert_fail|252-247-48-233
53312|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
53314|code|MOV.W           R2, #0x264|79-244-25-114
53318|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
53320|code|LDR             R3, =aListFind; "list_find"|3-75
53322|code|BLX             __assert_fail|252-247-42-233
53326|data|ALIGN 0x10|0-191
53328|data|DCD aIVoid0; "i != ((void *)0)"|24-234-0-0
53332|data|DCD aHostlistC+4; "list.c"|76-232-0-0
53336|data|DCD aListFind; "list_find"|248-236-0-0
53340|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|144-237-0-0
53344|data|DCD aFVoid0; "f != ((void *)0)"|236-237-0-0
53348|code|PUSH            {R3,LR}|8-181
53350|code|CMP             R0, #0|0-40
53352|code|BEQ             loc_D0B4|36-208
53354|code|LDR             R3, [R0,#0x10]|3-105
53356|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
53364|code|CMP             R3, R2|147-66
53366|code|BNE             loc_D0A6|22-209
53368|code|LDR             R2, [R0]|2-104
53370|code|LDR             R1, [R2,#0x14]|81-105
53372|code|CMP             R1, R3|153-66
53374|code|BNE             loc_D098|11-209
53376|code|LDR             R1, [R0,#8]|129-104
53378|code|LDR             R3, [R0,#4]|67-104
53380|code|LDR             R0, [R1]|8-104
53382|code|CMP             R0, R3|152-66
53384|code|BEQ             loc_D094|4-208
53386|code|MOV             R0, R2|16-70
53388|code|POP.W           {R3,LR}|189-232-8-64
53392|code|B.W             sub_C620|255-247-198-186
53396|code|MOVS            R0, #0|0-32
53398|code|POP             {R3,PC}|8-189
53400|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|10-72
53402|code|MOVW            R2, #0x273; line|64-242-115-34
53406|code|LDR             R1, =(aHostlistC+4); file|10-73
53408|code|LDR             R3, =aListRemove; "list_remove"|10-75
53410|code|BLX             __assert_fail|252-247-254-232
53414|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
53416|code|MOVW            R2, #0x271; line|64-242-113-34
53420|code|LDR             R1, =(aHostlistC+4); file|6-73
53422|code|LDR             R3, =aListRemove; "list_remove"|7-75
53424|code|BLX             __assert_fail|252-247-246-232
53428|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
53430|code|MOV.W           R2, #0x270; line|79-244-28-114
53434|code|LDR             R1, =(aHostlistC+4); file|3-73
53436|code|LDR             R3, =aListRemove; "list_remove"|3-75
53438|code|BLX             __assert_fail|252-247-240-232
53442|data|ALIGN 4|0-191
53444|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|24-238-0-0
53448|data|DCD aHostlistC+4; "list.c"|76-232-0-0
53452|data|DCD aListRemove; "list_remove"|4-237-0-0
53456|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|144-237-0-0
53460|data|DCD aIVoid0; "i != ((void *)0)"|24-234-0-0
53464|code|PUSH            {R4,LR}|16-181
53466|code|MOV             R4, R0|4-70
53468|code|CBZ             R0, loc_D102|136-177
53470|code|LDR             R2, [R0,#0x10]|2-105
53472|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53480|code|CMP             R2, R3|154-66
53482|code|BNE             loc_D110|17-209
53484|code|BL              sub_D064|255-247-186-255
53488|code|CBZ             R0, locret_D100|48-177
53490|code|LDR             R3, [R4]|35-104
53492|code|LDR             R3, [R3,#0xC]|219-104
53494|code|CBZ             R3, loc_D0FE|19-177
53496|code|BLX             R3|152-71
53498|code|MOVS            R0, #1|1-32
53500|code|POP             {R4,PC}|16-189
53502|code|MOVS            R0, #1|1-32
53504|code|POP             {R4,PC}|16-189
53506|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
53508|code|MOV.W           R2, #0x280|79-244-32-114
53512|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
53514|code|LDR             R3, =aListDelete; "list_delete"|7-75
53516|code|BLX             __assert_fail|252-247-200-232
53520|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|6-72
53522|code|MOVW            R2, #0x281|64-242-129-34
53526|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
53528|code|LDR             R3, =aListDelete; "list_delete"|3-75
53530|code|BLX             __assert_fail|252-247-194-232
53534|data|ALIGN 0x10|0-191
53536|data|DCD aIVoid0; "i != ((void *)0)"|24-234-0-0
53540|data|DCD aHostlistC+4; "list.c"|76-232-0-0
53544|data|DCD aListDelete; "list_delete"|16-237-0-0
53548|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|144-237-0-0
53552|code|PUSH.W          {R4-R9,LR}|45-233-240-67
53556|code|MOV             R8, R0|128-70
53558|code|SUB             SP, SP, #0xC|131-176
53560|code|MOV             R6, R1|14-70
53562|code|MOVS            R4, #0x50 ; 'P'|80-36
53564|code|MOVS            R5, #0|0-37
53566|code|B               loc_D172|24-224
53568|code|MOV             R0, R4|32-70
53570|code|MOV             R7, R4|39-70
53572|code|BL              sub_D910|0-240-228-251
53576|code|MOV             R5, R0|5-70
53578|code|MOV             R1, R4; maxlen|33-70
53580|code|MOV             R2, R8; format|66-70
53582|code|MOV             R3, R6; arg|51-70
53584|code|MOV             R0, R5; s|40-70
53586|code|STR             R6, [SP,#0x28+var_24]|1-150
53588|code|BLX             vsnprintf|252-247-128-232
53592|code|SUB.W           R2, R0, #0xFFFFFFFF|160-241-255-50
53596|code|MOV             R9, R0|129-70
53598|code|NEGS            R3, R2|83-66
53600|code|ADC.W           R3, R3, R2|67-235-2-3
53604|code|ADDS            R4, #0x50 ; 'P'|80-52
53606|code|CMP             R0, R7|184-66
53608|code|ITE LT|180-191
53610|code|MOVLT           R7, R3|31-70
53612|code|ORRGE.W         R7, R3, #1|67-240-1-7
53616|code|CBZ             R7, loc_D184|71-177
53618|code|CMP             R4, #0x50 ; 'P'|80-44
53620|code|BEQ             loc_D140|228-208
53622|code|MOV             R0, R5|40-70
53624|code|MOV             R1, R4|33-70
53626|code|BL              sub_D980|0-240-1-252
53630|code|MOV             R7, R4|39-70
53632|code|MOV             R5, R0|5-70
53634|code|B               loc_D14A|226-231
53636|code|MOV             R0, R5; s|40-70
53638|code|BLX             strlen|252-247-216-232
53642|code|CMP             R9, R0|129-69
53644|code|BNE             loc_D196|3-209
53646|code|MOV             R0, R5|40-70
53648|code|ADD             SP, SP, #0xC|3-176
53650|code|POP.W           {R4-R9,PC}|189-232-240-131
53654|code|LDR             R0, =aLenStrlenStr; "len == strlen(str)"|3-72
53656|code|MOVS            R2, #0x39 ; '9'; line|57-34
53658|code|LDR             R1, =aHprintfC; "hprintf.c"|3-73
53660|code|LDR             R3, =aHvsprintf; "hvsprintf"|3-75
53662|code|BLX             __assert_fail|252-247-128-232
53666|data|ALIGN 4|0-191
53668|data|DCD aLenStrlenStr; "len == strlen(str)"|96-238-0-0
53672|data|DCD aHprintfC; "hprintf.c"|116-238-0-0
53676|data|DCD aHvsprintf; "hvsprintf"|84-238-0-0
53680|code|PUSH            {R0-R3}|15-180
53682|code|PUSH            {LR}|0-181
53684|code|SUB             SP, SP, #0xC|131-176
53686|code|ADD             R3, SP, #0x10|4-171
53688|code|LDR.W           R0, [R3],#4|83-248-4-11
53692|code|MOV             R1, R3|25-70
53694|code|STR             R3, [SP,#4]|1-147
53696|code|BL              sub_D130|255-247-182-255
53700|code|ADD             SP, SP, #0xC|3-176
53702|code|POP.W           {LR}|93-248-4-235
53706|code|ADD             SP, SP, #0x10|4-176
53708|code|BX              LR|112-71
53710|data|ALIGN 0x10|0-191
53712|code|PUSH            {R1-R3}|14-180
53714|code|PUSH            {R4-R6,LR}|112-181
53716|code|SUB             SP, SP, #0xC|131-176
53718|code|ADD             R3, SP, #0x1C|7-171
53720|code|MOV             R6, R0|6-70
53722|code|LDR.W           R0, [R3],#4|83-248-4-11
53726|code|MOV             R1, R3|25-70
53728|code|STR             R3, [SP,#4]|1-147
53730|code|BL              sub_D130|255-247-165-255
53734|code|MOV             R5, R0|5-70
53736|code|BLX             strlen|252-247-166-232
53740|code|MOV             R4, R0|4-70
53742|code|MOV             R2, R4|34-70
53744|code|MOV             R0, R6|48-70
53746|code|MOV             R1, R5|41-70
53748|code|BL              sub_D408|0-240-8-249
53752|code|CMP             R0, #0|0-40
53754|code|RSB.W           R4, R0, R4|192-235-4-4
53758|code|BLT             loc_D20C|5-219
53760|code|CMP             R4, #0|0-44
53762|code|BGT             loc_D1EE|244-220
53764|code|MOV             R0, R5|40-70
53766|code|BL              sub_DA5C|0-240-41-252
53770|code|MOV             R0, R4|32-70
53772|code|ADD             SP, SP, #0xC|3-176
53774|code|POP.W           {R4-R6,LR}|189-232-112-64
53778|code|ADD             SP, SP, #0xC|3-176
53780|code|BX              LR|112-71
53782|data|ALIGN 4|0-191
53784|code|LDR             R3, [R0]|3-104
53786|code|CBZ             R3, loc_D22C|59-177
53788|code|MOV             R3, R0|3-70
53790|code|MOVS            R0, #0|0-32
53792|code|LDR.W           R2, [R3,#4]!|83-248-4-47
53796|code|ADDS            R0, #1|1-48
53798|code|CMP             R2, #0|0-42
53800|code|BNE             loc_D220|250-209
53802|code|BX              LR|112-71
53804|code|MOV             R0, R3|24-70
53806|code|BX              LR|112-71
53808|code|PUSH            {R3-R7,LR}|248-181
53810|code|MOV             R4, R1|12-70
53812|code|LDR             R6, [R0]|6-104
53814|code|MOVS            R5, #4|4-37
53816|code|MOVS            R1, #8|8-33
53818|code|CBZ             R6, loc_D254|94-177
53820|code|MOVS            R6, #0|0-38
53822|code|MOV             R3, R0|3-70
53824|code|LDR.W           R2, [R3,#4]!|83-248-4-47
53828|code|ADDS            R6, #1|1-54
53830|code|CMP             R2, #0|0-42
53832|code|BNE             loc_D240|250-209
53834|code|ADDS            R1, R6, #2|177-28
53836|code|ADDS            R5, R6, #1|117-28
53838|code|LSLS            R6, R6, #2|182-0
53840|code|LSLS            R1, R1, #2|137-0
53842|code|LSLS            R5, R5, #2|173-0
53844|code|BL              sub_D980|0-240-148-251
53848|code|MOV             R7, R0|7-70
53850|code|MOV             R0, R4|32-70
53852|code|BL              sub_DAD8|0-240-60-252
53856|code|MOVS            R3, #0|0-35
53858|code|STR             R0, [R7,R6]|184-81
53860|code|MOV             R0, R7|56-70
53862|code|STR             R3, [R7,R5]|123-81
53864|code|POP             {R3-R7,PC}|248-189
53866|data|ALIGN 4|0-191
53868|code|PUSH.W          {R4-R11,LR}|45-233-240-79
53872|code|SUB             SP, SP, #0xC|131-176
53874|code|LDRB            R6, [R0]|6-120
53876|code|MOV             R5, R0|5-70
53878|code|MOV             R4, R1|12-70
53880|code|MOV             R7, R0|7-70
53882|code|MOV.W           R9, #0|79-240-0-9
53886|code|CBNZ            R6, loc_D2D6|86-187
53888|code|ADD.W           R0, R9, #1|9-241-1-0
53892|code|MOV             R8, R9|200-70
53894|code|LSLS            R0, R0, #2|128-0
53896|code|BL              sub_D910|0-240-66-251
53900|code|STR             R0, [SP,#0x30+var_2C]|1-144
53902|code|CMP.W           R9, #0|185-241-0-15
53906|code|BEQ             loc_D350|93-208
53908|code|LDR.W           R10, [SP,#0x30+var_2C]|221-248-4-160
53912|code|MOV.W           R8, #0|79-240-0-8
53916|code|LDRB            R1, [R5]|41-120
53918|code|CBZ             R1, loc_D2C4|137-177
53920|code|STR             R1, [SP,#0x30+c]|0-145
53922|code|BLX             __ctype_b_loc|252-247-146-232
53926|code|LDR             R1, [SP,#0x30+c]; c|0-153
53928|code|MOV             R11, R5|171-70
53930|code|LDR             R6, [R0]|6-104
53932|code|LDRH.W          R3, [R6,R1,LSL#1]|54-248-17-48
53936|code|LSLS            R2, R3, #0x12|154-4
53938|code|BMI             loc_D2BC|3-212
53940|code|MOV             R0, R4; s|32-70
53942|code|BLX             strchr|251-247-226-239
53946|code|CBZ             R0, loc_D2FE|0-179
53948|code|LDRB.W          R1, [R11,#1]!|27-248-1-31
53952|code|CMP             R1, #0|0-41
53954|code|BNE             loc_D2AC|243-209
53956|code|MOVS            R3, #0|0-35
53958|code|STR.W           R3, [R10]|202-248-0-48
53962|code|LDR             R0, =aArgvIVoid0; "argv[i] != ((void *)0)"|53-72
53964|code|MOVS            R2, #0x70 ; 'p'; line|112-34
53966|code|LDR             R1, =aArgvC; "argv.c"|53-73
53968|code|LDR             R3, =aArgvCreate; "argv_create"|53-75
53970|code|BLX             __assert_fail|251-247-230-239
53974|code|BLX             __ctype_b_loc|252-247-120-232
53978|code|LDR.W           R8, [R0]|208-248-0-128
53982|code|LDRH.W          R3, [R8,R6,LSL#1]|56-248-22-48
53986|code|ANDS.W          R3, R3, #0x2000|19-244-0-83
53990|code|BNE             loc_D2F8|7-209
53992|code|MOV             R0, R4; s|32-70
53994|code|MOV             R1, R6; c|49-70
53996|code|STR             R3, [SP,#0x30+c]|0-147
53998|code|BLX             strchr|251-247-198-239
54002|code|LDR             R3, [SP,#0x30+c]|0-155
54004|code|CMP             R0, #0|0-40
54006|code|BEQ             loc_D360|51-208
54008|code|LDRB            R6, [R7,#1]|126-120
54010|code|ADDS            R7, #1|1-55
54012|code|B               loc_D27E|191-231
54014|code|LDRB.W          R1, [R11]|155-248-0-16
54018|code|CMP             R1, #0|0-41
54020|code|BEQ             loc_D2C4|222-208
54022|code|MOV             R5, R11|93-70
54024|code|B               loc_D318|6-224
54026|code|MOV             R0, R4; s|32-70
54028|code|BLX             strchr|251-247-182-239
54032|code|CBNZ            R0, loc_D320|48-185
54034|code|LDRB.W          R1, [R5,#1]!; c|21-248-1-31
54038|code|CBZ             R1, loc_D320|25-177
54040|code|LDRH.W          R3, [R6,R1,LSL#1]|54-248-17-48
54044|code|LSLS            R3, R3, #0x12|155-4
54046|code|BPL             loc_D30A|244-213
54048|code|RSB.W           R7, R11, R5|203-235-5-7
54052|code|CMP             R7, #0|0-47
54054|code|BLE             loc_D2C4|205-221
54056|code|ADDS            R0, R7, #1|120-28
54058|code|BL              sub_D910|0-240-241-250
54062|code|MOV             R2, R7; n|58-70
54064|code|MOV             R1, R11; src|89-70
54066|code|MOV             R6, R0|6-70
54068|code|BLX             memcpy|252-247-18-232
54072|code|MOVS            R2, #0|0-34
54074|code|STRB            R2, [R6,R7]|242-85
54076|code|STR.W           R6, [R10],#4|74-248-4-107
54080|code|CMP             R6, #0|0-46
54082|code|BEQ             loc_D2CA|194-208
54084|code|ADD.W           R8, R8, #1|8-241-1-8
54088|code|CMP             R8, R9|200-69
54090|code|BNE             loc_D29C|167-209
54092|code|MOV.W           R8, R8,LSL#2|79-234-136-8
54096|code|LDR             R2, [SP,#0x30+var_2C]|1-154
54098|code|MOVS            R3, #0|0-35
54100|code|MOV             R0, R2|16-70
54102|code|STR.W           R3, [R2,R8]|66-248-8-48
54106|code|ADD             SP, SP, #0xC|3-176
54108|code|POP.W           {R4-R11,PC}|189-232-240-143
54112|code|ADD.W           R10, R9, #1|9-241-1-10
54116|code|CBNZ            R3, loc_D382|107-185
54118|code|MOV             R0, R4; s|32-70
54120|code|MOV             R1, R6; c|49-70
54122|code|BLX             strchr|251-247-136-239
54126|code|CBNZ            R0, loc_D382|64-185
54128|code|LDRB            R6, [R7,#1]|126-120
54130|code|CBZ             R6, loc_D38A|86-177
54132|code|LDRH.W          R3, [R8,R6,LSL#1]|56-248-22-48
54136|code|ADDS            R7, #1|1-55
54138|code|AND.W           R3, R3, #0x2000|3-244-0-83
54142|code|CMP             R3, #0|0-43
54144|code|BEQ             loc_D366|241-208
54146|code|LDRB            R6, [R7]|62-120
54148|code|CBZ             R6, loc_D38E|30-177
54150|code|MOV             R9, R10|209-70
54152|code|B               loc_D27E|121-231
54154|code|MOV             R9, R10|209-70
54156|code|B               loc_D280|120-231
54158|code|ADD.W           R0, R9, #2|9-241-2-0
54162|code|MOV             R9, R10|209-70
54164|code|LSLS            R0, R0, #2|128-0
54166|code|BL              sub_D910|0-240-187-250
54170|code|STR             R0, [SP,#0x30+var_2C]|1-144
54172|code|B               loc_D294|122-231
54174|data|ALIGN 0x10|0-191
54176|data|DCD aArgvIVoid0; "argv[i] != ((void *)0)"|140-238-0-0
54180|data|DCD aArgvC; "argv.c"|164-238-0-0
54184|data|DCD aArgvCreate; "argv_create"|128-238-0-0
54188|code|PUSH            {R3-R5,LR}|56-181
54190|code|MOV             R5, R0|5-70
54192|code|LDR             R0, [R0]|0-104
54194|code|CBZ             R0, loc_D3C2|48-177
54196|code|MOV             R4, R5|44-70
54198|code|BL              sub_DA5C|0-240-81-251
54202|code|LDR.W           R0, [R4,#4]!|84-248-4-15
54206|code|CMP             R0, #0|0-40
54208|code|BNE             loc_D3B6|249-209
54210|code|MOV             R0, R5|40-70
54212|code|POP.W           {R3-R5,LR}|189-232-56-64
54216|code|B.W             sub_DA5C|0-240-72-187
54220|code|PUSH            {R3-R7,LR}|248-181
54222|code|MOV             R6, R0|6-70
54224|code|MOV             R5, R1|13-70
54226|code|MOV             R4, R2|20-70
54228|code|MOV             R1, R5; buf|41-70
54230|code|MOV             R2, R4; nbytes|34-70
54232|code|MOV             R0, R6; fd|48-70
54234|code|BLX             read|251-247-126-239
54238|code|CMP             R0, #0|0-40
54240|code|MOV             R7, R0|7-70
54242|code|BGE             loc_D3FE|12-218
54244|code|BLX             __errno_location|252-247-112-232
54248|code|LDR             R3, [R0]|3-104
54250|code|CMP             R3, #4|4-43
54252|code|BEQ             loc_D3D4|242-208
54254|code|CMP             R3, #0xB|11-43
54256|code|BEQ             loc_D3FE|5-208
54258|code|CMP             R3, #0x68 ; 'h'|104-43
54260|code|BEQ             loc_D3FE|3-208
54262|code|MOVS            R0, #1|1-32
54264|code|LDR             R1, =aRead_0; "read"|2-73
54266|code|BL              sub_9CA4|252-247-83-252
54270|code|MOV             R0, R7|56-70
54272|code|POP             {R3-R7,PC}|248-189
54274|data|ALIGN 4|0-191
54276|data|DCD aRead_0; "read"|172-238-0-0
54280|code|PUSH            {R3-R7,LR}|248-181
54282|code|MOV             R6, R0|6-70
54284|code|MOV             R5, R1|13-70
54286|code|MOV             R4, R2|20-70
54288|code|MOV             R1, R5; buf|41-70
54290|code|MOV             R2, R4; n|34-70
54292|code|MOV             R0, R6; fd|48-70
54294|code|BLX             write|251-247-102-239
54298|code|CMP             R0, #0|0-40
54300|code|MOV             R7, R0|7-70
54302|code|BGE             loc_D43E|14-218
54304|code|BLX             __errno_location|252-247-82-232
54308|code|LDR             R3, [R0]|3-104
54310|code|CMP             R3, #4|4-43
54312|code|BEQ             loc_D410|242-208
54314|code|CMP             R3, #0xB|11-43
54316|code|BEQ             loc_D43E|7-208
54318|code|CMP             R3, #0x68 ; 'h'|104-43
54320|code|BEQ             loc_D43E|5-208
54322|code|CMP             R3, #0x20 ; ' '|32-43
54324|code|BEQ             loc_D43E|3-208
54326|code|MOVS            R0, #1|1-32
54328|code|LDR             R1, =aWrite; "write"|2-73
54330|code|BL              sub_9CA4|252-247-51-252
54334|code|MOV             R0, R7|56-70
54336|code|POP             {R3-R7,PC}|248-189
54338|data|ALIGN 4|0-191
54340|data|DCD aWrite; "write"|180-238-0-0
54344|code|CMP             R2, #0|0-42
54346|code|PUSH            {R3-R7,LR}|248-181
54348|code|MOV             R6, R0|6-70
54350|code|MOV             R7, R1|15-70
54352|code|MOV             R5, R2|21-70
54354|code|BLE             locret_D478|17-221
54356|code|MOVS            R4, #0|0-36
54358|code|B               loc_D45C|1-224
54360|code|CMP             R5, R4|165-66
54362|code|BLE             locret_D478|13-221
54364|code|ADDS            R1, R7, R4|57-25
54366|code|SUBS            R2, R5, R4|42-27
54368|code|MOV             R0, R6|48-70
54370|code|BL              sub_D408|255-247-209-255
54374|code|CMP             R0, #0|0-40
54376|code|ADD             R4, R0|4-68
54378|code|BGE             loc_D458|245-218
54380|code|MOVS            R0, #1|1-32
54382|code|LDR             R1, =aWrite; "write"|3-73
54384|code|BL              sub_9CA4|252-247-24-252
54388|code|CMP             R5, R4|165-66
54390|code|BGT             loc_D45C|241-220
54392|code|POP             {R3-R7,PC}|248-189
54394|data|ALIGN 4|0-191
54396|data|DCD aWrite; "write"|180-238-0-0
54400|code|CMP             R2, #0|0-42
54402|code|PUSH.W          {R4-R8,LR}|45-233-240-65
54406|code|MOV             R6, R0|6-70
54408|code|MOV             R7, R1|15-70
54410|code|MOV             R5, R2|21-70
54412|code|BLE             locret_D4BE|23-221
54414|code|MOVS            R4, #0|0-36
54416|code|B               loc_D4A0|6-224
54418|code|BNE             loc_D49A|2-209
54420|code|LDR             R1, =aEofOnRead; "EOF on read"|11-73
54422|code|BL              sub_9CA4|252-247-5-252
54426|code|ADD             R4, R8|68-68
54428|code|CMP             R5, R4|165-66
54430|code|BLE             locret_D4BE|14-221
54432|code|ADDS            R1, R7, R4|57-25
54434|code|SUBS            R2, R5, R4|42-27
54436|code|MOV             R0, R6|48-70
54438|code|BL              sub_D3CC|255-247-145-255
54442|code|CMP             R0, #0|0-40
54444|code|MOV             R8, R0|128-70
54446|code|BGE             loc_D492|240-218
54448|code|MOVS            R0, #1|1-32
54450|code|LDR             R1, =aRead_0; "read"|5-73
54452|code|ADD             R4, R8|68-68
54454|code|BL              sub_9CA4|252-247-245-251
54458|code|CMP             R5, R4|165-66
54460|code|BGT             loc_D4A0|240-220
54462|code|POP.W           {R4-R8,PC}|189-232-240-129
54466|data|ALIGN 4|0-191
54468|data|DCD aEofOnRead; "EOF on read"|188-238-0-0
54472|data|DCD aRead_0; "read"|172-238-0-0
54476|code|PUSH            {R3-R5,LR}|56-181
54478|code|MOV             R3, R0|3-70
54480|code|MOV             R4, R1|12-70
54482|code|LDR             R0, =(aRegcompFailedS+0x10); "%s"|20-72
54484|code|MOV             R1, R3|25-70
54486|code|MOV             R5, R2|21-70
54488|code|BLX             printf|251-247-76-239
54492|code|LDR             R3, =stdout|18-75
54494|code|LDR             R0, [R3]|24-104
54496|code|BLX             fflush|251-247-30-239
54500|code|LDR             R3, =stdin|17-75
54502|code|MOV             R0, R4|32-70
54504|code|MOV             R1, R5|41-70
54506|code|LDR             R2, [R3]|26-104
54508|code|BLX             fgets|251-247-192-238
54512|code|CBZ             R0, loc_D51E|168-177
54514|code|MOV             R0, R4|32-70
54516|code|BLX             strlen|251-247-32-239
54520|code|SUBS            R5, R0, #1|69-30
54522|code|ADDS            R5, R4, R5|101-25
54524|code|BCS             loc_D51A|13-210
54526|code|BLX             __ctype_b_loc|251-247-100-239
54530|code|MOVS            R1, #0|0-33
54532|code|B               loc_D50C|2-224
54534|code|CMP             R4, R5|172-66
54536|code|STRB            R1, [R5,#1]|105-112
54538|code|BHI             loc_D51A|6-216
54540|code|LDRB.W          R2, [R5],#-1|21-248-1-41
54544|code|LDR             R3, [R0]|3-104
54546|code|LDRH.W          R3, [R3,R2,LSL#1]|51-248-18-48
54550|code|LSLS            R3, R3, #0x12|155-4
54552|code|BMI             loc_D506|245-212
54554|code|MOV             R0, R4|32-70
54556|code|POP             {R3-R5,PC}|56-189
54558|code|MOV             R4, R0|4-70
54560|code|B               loc_D51A|251-231
54562|data|ALIGN 4|0-191
54564|data|DCD aRegcompFailedS+0x10; "%s"|84-241-0-0
54568|data|DCD stdout|228-116-1-0
54572|data|DCD stdin|224-116-1-0
54576|code|PUSH.W          {R4-R8,LR}|45-233-240-65
54580|code|MOV             R5, R0|5-70
54582|code|SUB             SP, SP, #0x18|134-176
54584|code|MOV             R6, R1|14-70
54586|code|MOV             R4, R1|12-70
54588|code|CBZ             R1, loc_D556|89-177
54590|code|LDM             R1, {R0,R1}|3-201
54592|code|MOV             R4, SP|108-70
54594|code|STMEA.W         SP, {R0,R1}|141-232-3-0
54598|code|MOVS            R1, #0|0-33
54600|code|ADD             R0, SP, #8|2-168
54602|code|BLX             gettimeofday|251-247-222-238
54606|code|CMP             R0, #0|0-40
54608|code|IT GE|168-191
54610|code|MOVGE           R4, SP|108-70
54612|code|BLT             loc_D5F6|79-219
54614|code|MOV             R7, #0x10624DD3|68-246-211-87-193-242-98-7
54622|code|MOV.W           R8, #0x3E8|79-244-122-120
54626|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
54630|code|CBZ             R4, loc_D57A|68-177
54632|code|LDM.W           R4, {R2,R3}|148-232-12-0
54636|code|SMULL.W         R0, R1, R7, R3|135-251-3-1
54640|code|ASRS            R3, R3, #0x1F|219-23
54642|code|RSB.W           R3, R3, R1,ASR#6|195-235-161-19
54646|code|MLA.W           R2, R8, R2, R3|8-251-2-50
54650|code|LDR             R0, [R5,#0xC]|232-104
54652|code|LDR             R1, [R5,#4]|105-104
54654|code|BLX             poll|251-247-72-239
54658|code|CMP             R0, #0|0-40
54660|code|BLT             loc_D58C|2-219
54662|code|ADD             SP, SP, #0x18|6-176
54664|code|POP.W           {R4-R8,PC}|189-232-240-129
54668|code|BLX             __errno_location|251-247-156-239
54672|code|LDR             R3, [R0]|3-104
54674|code|CMP             R3, #4|4-43
54676|code|BEQ             loc_D59E|3-208
54678|code|MOVS            R0, #1|1-32
54680|code|LDR             R1, =aSelectPoll; "select/poll"|26-73
54682|code|BL              sub_9CA4|252-247-131-251
54686|code|CMP             R6, #0|0-46
54688|code|BEQ             loc_D562|223-208
54690|code|MOVS            R1, #0|0-33
54692|code|ADD             R0, SP, #0x10|4-168
54694|code|BLX             gettimeofday|251-247-176-238
54698|code|CMP             R0, #0|0-40
54700|code|BLT             loc_D5EC|30-219
54702|code|LDR             R2, [SP,#0x14]|5-154
54704|code|LDR             R3, [SP,#0xC]|3-155
54706|code|LDR             R1, [SP,#8]|2-153
54708|code|LDR             R0, [SP,#0x10]|4-152
54710|code|SUBS            R3, R2, R3|211-26
54712|code|RSB.W           R1, R1, R0|193-235-0-1
54716|code|BMI             loc_D5E0|16-212
54718|code|LDR             R0, [R6,#4]|112-104
54720|code|LDR             R2, [R6]|50-104
54722|code|SUBS            R3, R0, R3|195-26
54724|code|STR             R3, [R4,#4]|99-96
54726|code|CMP             R3, #0|0-43
54728|code|RSB.W           R1, R1, R2|193-235-2-1
54732|code|STR             R1, [R4]|33-96
54734|code|BGE             loc_D562|200-218
54736|code|ADD.W           R3, R3, #0xF4000|3-245-116-35
54740|code|SUBS            R1, #1|1-57
54742|code|ADD.W           R3, R3, #0x240|3-245-16-115
54746|code|STM.W           R4, {R1,R3}|132-232-10-0
54750|code|B               loc_D562|192-231
54752|code|ADD.W           R3, R3, #0xF4000|3-245-116-35
54756|code|SUBS            R1, #1|1-57
54758|code|ADD.W           R3, R3, #0x240|3-245-16-115
54762|code|B               loc_D5BE|232-231
54764|code|MOVS            R0, #1|1-32
54766|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|6-73
54768|code|BL              sub_9CA4|252-247-88-251
54772|code|B               loc_D5AE|219-231
54774|code|MOVS            R0, #1|1-32
54776|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|3-73
54778|code|BL              sub_9CA4|252-247-83-251
54782|code|MOV             R4, SP|108-70
54784|code|B               loc_D556|169-231
54786|data|ALIGN 4|0-191
54788|data|DCD aSelectPoll; "select/poll"|32-239-0-0
54792|data|DCD aGettimeofday_0; "gettimeofday"|16-239-0-0
54796|code|PUSH            {R4,LR}|16-181
54798|code|MOVS            R0, #0x10|16-32
54800|code|BL              sub_D910|0-240-126-249
54804|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
54812|code|MOV             R4, R0|4-70
54814|code|LDR             R0, [R0,#8]|128-104
54816|code|STR             R3, [R4]|35-96
54818|code|ADDS            R0, #0x10|16-48
54820|code|STR             R0, [R4,#8]|160-96
54822|code|LSLS            R0, R0, #3|192-0
54824|code|BL              sub_D910|0-240-114-249
54828|code|MOVS            R3, #0|0-35
54830|code|STR             R3, [R4,#4]|99-96
54832|code|STR             R0, [R4,#0xC]|224-96
54834|code|MOV             R0, R4|32-70
54836|code|POP             {R4,PC}|16-189
54838|data|ALIGN 4|0-191
54840|code|LDR             R2, [R0]|2-104
54842|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
54850|code|CMP             R2, R3|154-66
54852|code|PUSH            {R4,LR}|16-181
54854|code|MOV             R4, R0|4-70
54856|code|BNE             loc_D660|10-209
54858|code|LDR             R0, [R0,#0xC]|192-104
54860|code|MOVS            R3, #0|0-35
54862|code|STR             R3, [R4]|35-96
54864|code|CBZ             R0, loc_D656|8-177
54866|code|BL              sub_DA5C|0-240-3-250
54870|code|MOV             R0, R4|32-70
54872|code|POP.W           {R4,LR}|189-232-16-64
54876|code|B.W             sub_DA5C|0-240-254-185
54880|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|2-72
54882|code|MOVS            R2, #0xBC|188-34
54884|code|LDR             R1, =aXpollC; "xpoll.c"|2-73
54886|code|LDR             R3, =aXpollfdDestroy; "xpollfd_destroy"|3-75
54888|code|BLX             __assert_fail|251-247-26-238
54892|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|44-239-0-0
54896|data|DCD aXpollC; "xpoll.c"|72-239-0-0
54900|data|DCD aXpollfdDestroy; "xpollfd_destroy"|200-238-0-0
54904|code|LDR             R2, [R0]|2-104
54906|code|PUSH            {R3,LR}|8-181
54908|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
54916|code|CMP             R2, R3|154-66
54918|code|BNE             loc_D68E|2-209
54920|code|MOVS            R3, #0|0-35
54922|code|STR             R3, [R0,#4]|67-96
54924|code|POP             {R3,PC}|8-189
54926|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
54928|code|MOVS            R2, #0xC8|200-34
54930|code|LDR             R1, =aXpollC; "xpoll.c"|3-73
54932|code|LDR             R3, =aXpollfdZero; "xpollfd_zero"|3-75
54934|code|BLX             __assert_fail|251-247-4-238
54938|data|ALIGN 4|0-191
54940|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|44-239-0-0
54944|data|DCD aXpollC; "xpoll.c"|72-239-0-0
54948|data|DCD aXpollfdZero; "xpollfd_zero"|216-238-0-0
54952|code|PUSH.W          {R4-R8,LR}|45-233-240-65
54956|code|MOV             R4, R0|4-70
54958|code|LDR             R0, [R0]|0-104
54960|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
54968|code|MOV             R5, R1|13-70
54970|code|CMP             R0, R3|152-66
54972|code|MOV             R7, R2|23-70
54974|code|BNE             loc_D796|106-209
54976|code|LDR             R6, [R4,#4]|102-104
54978|code|LDR             R0, [R4,#0xC]|224-104
54980|code|CMP             R6, #0|0-46
54982|code|BEQ             loc_D792|100-208
54984|code|LDR             R3, [R0]|3-104
54986|code|MOV             R12, R0|132-70
54988|code|CMP             R3, R1|139-66
54990|code|BEQ             loc_D6F8|19-208
54992|code|ADD.W           R2, R0, #8|0-241-8-2
54996|code|MOVS            R3, #0|0-35
54998|code|B               loc_D6E2|4-224
55000|code|MOV             R12, R2|148-70
55002|code|LDR.W           R1, [R2],#8|82-248-8-27
55006|code|CMP             R1, R5|169-66
55008|code|BEQ             loc_D6FC|12-208
55010|code|ADDS            R3, #1|1-51
55012|code|CMP             R3, R6|179-66
55014|code|MOV             R8, R3|152-70
55016|code|BNE             loc_D6D8|246-209
55018|code|CMP             R6, R8|70-69
55020|code|IT EQ|8-191
55022|code|MOVEQ.W         R8, R6,LSL#3|79-234-198-8
55026|code|BEQ             loc_D740|37-208
55028|code|POP.W           {R4-R8,PC}|189-232-240-129
55032|code|MOV.W           R8, #0|79-240-0-8
55036|code|UXTH            R3, R7|187-178
55038|code|LDRH.W          R1, [R12,#4]|188-248-4-16
55042|code|AND.W           R2, R3, #1|3-240-1-2
55046|code|TST.W           R3, #2|19-240-2-15
55050|code|ITT NE|28-191
55052|code|ORRNE.W         R2, R2, #4|66-240-4-2
55056|code|UXTHNE          R2, R2|146-178
55058|code|TST.W           R3, #4|19-240-4-15
55062|code|IT NE|24-191
55064|code|ORRNE.W         R2, R2, #0x10|66-240-16-2
55068|code|TST.W           R3, #8|19-240-8-15
55072|code|IT NE|24-191
55074|code|ORRNE.W         R2, R2, #8|66-240-8-2
55078|code|LSLS            R3, R3, #0x1B|219-6
55080|code|IT MI|72-191
55082|code|ORRMI.W         R2, R2, #0x20|66-240-32-2
55086|code|CMP             R6, R8|70-69
55088|code|ORR.W           R2, R2, R1|66-234-1-2
55092|code|IT EQ|8-191
55094|code|MOVEQ.W         R8, R6,LSL#3|79-234-198-8
55098|code|STRH.W          R2, [R12,#4]|172-248-4-32
55102|code|BNE             locret_D6F4|217-209
55104|code|LDR             R1, [R4,#8]|161-104
55106|code|ADDS            R6, #1|1-54
55108|code|STR             R6, [R4,#4]|102-96
55110|code|CMP             R6, R1|142-66
55112|code|BLS             loc_D75C|8-217
55114|code|ADDS            R1, #0x10|16-49
55116|code|STR             R1, [R4,#8]|161-96
55118|code|LSLS            R1, R1, #3|201-0
55120|code|BL              sub_D980|0-240-22-249
55124|code|LDR             R1, [R4,#8]|161-104
55126|code|CMP             R6, R1|142-66
55128|code|STR             R0, [R4,#0xC]|224-96
55130|code|BHI             loc_D74A|246-216
55132|code|UXTH            R7, R7|191-178
55134|code|STR.W           R5, [R0,R8]|64-248-8-80
55138|code|AND.W           R3, R7, #1|7-240-1-3
55142|code|LSLS            R1, R7, #0x1E|185-7
55144|code|IT MI|72-191
55146|code|ORRMI.W         R3, R3, #4|67-240-4-3
55150|code|ADD             R0, R8|64-68
55152|code|IT MI|72-191
55154|code|UXTHMI          R3, R3|155-178
55156|code|LSLS            R2, R7, #0x1D|122-7
55158|code|IT MI|72-191
55160|code|ORRMI.W         R3, R3, #0x10|67-240-16-3
55164|code|LSLS            R1, R7, #0x1C|57-7
55166|code|IT MI|72-191
55168|code|ORRMI.W         R3, R3, #8|67-240-8-3
55172|code|LSLS            R2, R7, #0x1B|250-6
55174|code|IT MI|72-191
55176|code|ORRMI.W         R3, R3, #0x20|67-240-32-3
55180|code|STRH            R3, [R0,#4]|131-128
55182|code|POP.W           {R4-R8,PC}|189-232-240-129
55186|code|MOV             R8, R6|176-70
55188|code|B               loc_D740|212-231
55190|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
55192|code|MOVS            R2, #0xD9|217-34
55194|code|LDR             R1, =aXpollC; "xpoll.c"|3-73
55196|code|LDR             R3, =aXpollfdSet; "xpollfd_set"|3-75
55198|code|BLX             __assert_fail|251-247-128-237
55202|data|ALIGN 4|0-191
55204|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|44-239-0-0
55208|data|DCD aXpollC; "xpoll.c"|72-239-0-0
55212|data|DCD aXpollfdSet; "xpollfd_set"|232-238-0-0
55216|code|PUSH.W          {R3-R11,LR}|45-233-248-79
55220|code|MOV             R4, R0|4-70
55222|code|LDR             R0, [R0]|0-104
55224|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
55232|code|MOV             R5, R1|13-70
55234|code|CMP             R0, R3|152-66
55236|code|MOV             R6, R2|22-70
55238|code|BNE             loc_D852|68-209
55240|code|MOV             R0, R1|8-70
55242|code|MOVS            R1, #0x2E ; '.'|46-33
55244|code|BLX             memset|251-247-92-237
55248|code|LDR             R7, [R4,#4]|103-104
55250|code|MOV.W           R12, #0xFFFFFFFF|79-240-255-60
55254|code|CMP             R7, #0|0-47
55256|code|BEQ             loc_D834|44-208
55258|code|MOVS            R2, #0|0-34
55260|code|ADD.W           R8, R6, #0xFFFFFFFF|6-241-255-56
55264|code|MOV.W           R12, #0xFFFFFFFF|79-240-255-60
55268|code|MOV.W           R11, #0x4F ; 'O'|79-240-79-11
55272|code|MOV             R3, R2|19-70
55274|code|MOV.W           R10, #0x49 ; 'I'|79-240-73-10
55278|code|MOV.W           R9, #0x45 ; 'E'|79-240-69-9
55282|code|B               loc_D808|9-224
55284|code|STRB.W          R9, [R5,R2]|5-248-2-144
55288|code|LDR             R7, [R4,#4]|103-104
55290|code|CMP             R12, R2|148-69
55292|code|IT LT|184-191
55294|code|MOVLT           R12, R2|148-70
55296|code|ADDS            R3, #1|1-51
55298|code|CMP             R3, R7|187-66
55300|code|MOV             R2, R3|26-70
55302|code|BCS             loc_D830|19-210
55304|code|LDR             R1, [R4,#0xC]|225-104
55306|code|ADD.W           R0, R1, R2,LSL#3|1-235-194-0
55310|code|LDR.W           R2, [R1,R2,LSL#3]|81-248-50-32
55314|code|LDRH            R1, [R0,#6]|193-136
55316|code|CMP             R2, R8|66-69
55318|code|BGE             loc_D800|243-218
55320|code|CMP             R1, #0|0-41
55322|code|BEQ             loc_D7FA|238-208
55324|code|UXTH            R1, R1|137-178
55326|code|TST.W           R1, #0x38|17-240-56-15
55330|code|BNE             loc_D7F4|231-209
55332|code|LSLS            R0, R1, #0x1F|200-7
55334|code|BPL             loc_D846|14-213
55336|code|STRB.W          R10, [R5,R2]|5-248-2-160
55340|code|LDR             R7, [R4,#4]|103-104
55342|code|B               loc_D7FA|228-231
55344|code|ADD.W           R7, R12, #1|12-241-1-7
55348|code|CMP             R6, R7|190-66
55350|code|BLE             loc_D85E|18-221
55352|code|ADD             R12, R5|172-68
55354|code|MOVS            R3, #0|0-35
55356|code|MOV             R0, R5|40-70
55358|code|STRB.W          R3, [R12,#1]|140-248-1-48
55362|code|POP.W           {R3-R11,PC}|189-232-248-143
55366|code|LSLS            R1, R1, #0x1D|73-7
55368|code|ITT MI|68-191
55370|code|STRBMI.W        R11, [R5,R2]|5-248-2-176
55374|code|LDRMI           R7, [R4,#4]|103-104
55376|code|B               loc_D7FA|211-231
55378|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|6-72
55380|code|MOVS            R2, #0xF7|247-34
55382|code|LDR             R1, =aXpollC; "xpoll.c"|6-73
55384|code|LDR             R3, =aXpollfdStr; "xpollfd_str"|6-75
55386|code|BLX             __assert_fail|251-247-34-237
55390|code|LDR             R0, =aMaxfd1Len; "maxfd + 1 < len"|6-72
55392|code|MOVW            R2, #0x10B|64-242-11-18
55396|code|LDR             R1, =aXpollC; "xpoll.c"|2-73
55398|code|LDR             R3, =aXpollfdStr; "xpollfd_str"|3-75
55400|code|BLX             __assert_fail|251-247-26-237
55404|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|44-239-0-0
55408|data|DCD aXpollC; "xpoll.c"|72-239-0-0
55412|data|DCD aXpollfdStr; "xpollfd_str"|244-238-0-0
55416|data|DCD aMaxfd1Len; "maxfd + 1 < len"|80-239-0-0
55420|code|LDR             R2, [R0]|2-104
55422|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
55430|code|CMP             R2, R3|154-66
55432|code|PUSH            {R4-R6,LR}|112-181
55434|code|BNE             loc_D8E8|45-209
55436|code|LDR             R6, [R0,#4]|70-104
55438|code|CBZ             R6, loc_D8B2|134-177
55440|code|LDR             R5, [R0,#0xC]|197-104
55442|code|LDR             R3, [R5]|43-104
55444|code|CMP             R3, R1|139-66
55446|code|BEQ             loc_D8B6|14-208
55448|code|ADD.W           R2, R5, #8|5-241-8-2
55452|code|MOVS            R3, #0|0-35
55454|code|B               loc_D8AA|4-224
55456|code|MOV             R5, R2|21-70
55458|code|LDR.W           R4, [R2],#8|82-248-8-75
55462|code|CMP             R4, R1|140-66
55464|code|BEQ             loc_D8B6|5-208
55466|code|ADDS            R3, #1|1-51
55468|code|CMP             R3, R6|179-66
55470|code|BNE             loc_D8A0|247-209
55472|code|MOVS            R6, #0|0-38
55474|code|SXTH            R0, R6|48-178
55476|code|POP             {R4-R6,PC}|112-189
55478|code|LDRH            R3, [R5,#6]|235-136
55480|code|AND.W           R6, R3, #1|3-240-1-6
55484|code|LSLS            R0, R3, #0x1D|88-7
55486|code|ITT MI|68-191
55488|code|ORRMI.W         R6, R6, #2|70-240-2-6
55492|code|UXTHMI          R6, R6|182-178
55494|code|LSLS            R1, R3, #0x1B|217-6
55496|code|ITT MI|68-191
55498|code|ORRMI.W         R6, R6, #4|70-240-4-6
55502|code|UXTHMI          R6, R6|182-178
55504|code|LSLS            R2, R3, #0x1C|26-7
55506|code|ITT MI|68-191
55508|code|ORRMI.W         R6, R6, #8|70-240-8-6
55512|code|UXTHMI          R6, R6|182-178
55514|code|LSLS            R3, R3, #0x1A|155-6
55516|code|ITT MI|68-191
55518|code|ORRMI.W         R6, R6, #0x10|70-240-16-6
55522|code|UXTHMI          R6, R6|182-178
55524|code|SXTH            R0, R6|48-178
55526|code|POP             {R4-R6,PC}|112-189
55528|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
55530|code|MOVW            R2, #0x123|64-242-35-18
55534|code|LDR             R1, =aXpollC; "xpoll.c"|3-73
55536|code|LDR             R3, =aXpollfdRevents; "xpollfd_revents"|3-75
55538|code|BLX             __assert_fail|251-247-214-236
55542|data|ALIGN 4|0-191
55544|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|44-239-0-0
55548|data|DCD aXpollC; "xpoll.c"|72-239-0-0
55552|data|DCD aXpollfdRevents; "xpollfd_revents"|0-239-0-0
55556|code|MOV             R3, #0x17610|71-242-16-99-192-242-1-3
55564|code|LDR             R0, [R3]|24-104
55566|code|BX              LR|112-71
55568|code|CMP             R0, #0|0-40
55570|code|PUSH            {R3-R7,LR}|248-181
55572|code|MOV             R4, R0|4-70
55574|code|BLE             loc_D960|35-221
55576|code|ADD.W           R0, R0, #0x18; size|0-241-24-0
55580|code|BLX             malloc|251-247-102-237
55584|code|MOV             R5, R0|5-70
55586|code|CBZ             R0, loc_D958|200-177
55588|code|LDR             R3, =dword_17610|17-75
55590|code|ADD.W           R6, R5, #8|5-241-8-6
55594|code|MOVS            R1, #0; c|0-33
55596|code|MOV             R2, R4; n|34-70
55598|code|MOV             R0, R6; s|48-70
55600|code|STR             R4, [R5,#4]|108-96
55602|code|LDR.W           LR, [R3]|211-248-0-224
55606|code|MOV             R7, #0xF00FBAAB|75-246-171-39-207-242-15-7
55614|code|STR             R7, [R5]|47-96
55616|code|ADD             LR, R4|166-68
55618|code|STR.W           LR, [R3]|195-248-0-224
55622|code|BLX             memset|251-247-160-236
55626|code|ADDS            R0, R6, R4; s|48-25
55628|code|MOVS            R1, #0x55 ; 'U'; c|85-33
55630|code|MOVS            R2, #0x10; n|16-34
55632|code|BLX             memset|251-247-154-236
55636|code|MOV             R0, R6|48-70
55638|code|POP             {R3-R7,PC}|248-189
55640|code|LDR             R1, =aOutOfMemory; "out of memory"|5-73
55642|code|BL              sub_9CA4|252-247-163-249
55646|code|B               loc_D924|225-231
55648|code|LDR             R0, =aSize0; "size > 0"|4-72
55650|code|MOVS            R2, #0x46 ; 'F'; line|70-34
55652|code|LDR             R1, =aXmallocC; "xmalloc.c"|4-73
55654|code|LDR             R3, =aXmalloc; "xmalloc"|5-75
55656|code|BLX             __assert_fail|251-247-154-236
55660|data|DCD dword_17610|16-118-1-0
55664|data|DCD aOutOfMemory; "out of memory"|184-228-0-0
55668|data|DCD aSize0; "size > 0"|124-239-0-0
55672|data|DCD aXmallocC; "xmalloc.c"|136-239-0-0
55676|data|DCD aXmalloc; "xmalloc"|96-239-0-0
55680|code|PUSH            {R4-R6,LR}|112-181
55682|code|MOV             R4, R1|12-70
55684|code|CMP             R0, #0|0-40
55686|code|BEQ             loc_DA0A|64-208
55688|code|CMP             R1, #0|0-41
55690|code|BLE             loc_DA2E|80-221
55692|code|LDR.W           R2, [R0,#-8]|80-248-8-44
55696|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
55704|code|CMP             R2, R3|154-66
55706|code|BNE             loc_DA16|60-209
55708|code|LDR.W           R6, [R0,#-4]|80-248-4-108
55712|code|MOVS            R3, #0xF|15-35
55714|code|ADDS            R1, R0, R6|129-25
55716|code|LDRB            R2, [R1,R3]|202-92
55718|code|CMP             R2, #0x55 ; 'U'|85-42
55720|code|BNE             loc_D9F4|36-209
55722|code|ADDS.W          R3, R3, #0xFFFFFFFF|19-241-255-51
55726|code|BCS             loc_D9A4|249-210
55728|code|SUBS            R0, #8; ptr|8-56
55730|code|ADD.W           R1, R4, #0x18; size|4-241-24-1
55734|code|BLX             realloc|251-247-106-237
55738|code|MOV             R5, R0|5-70
55740|code|CBZ             R0, loc_DA00|0-179
55742|code|LDR             R2, [R5]|42-104
55744|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
55752|code|CMP             R2, R3|154-66
55754|code|BNE             loc_DA22|42-209
55756|code|LDR             R3, =dword_17610|27-75
55758|code|SUBS            R2, R4, R6; n|162-27
55760|code|STR             R4, [R5,#4]|108-96
55762|code|ADDS            R5, #8|8-53
55764|code|CMP             R4, R6|180-66
55766|code|LDR             R1, [R3]|25-104
55768|code|ADD             R1, R2|17-68
55770|code|STR             R1, [R3]|25-96
55772|code|BLE             loc_D9E6|3-221
55774|code|ADDS            R0, R5, R6; s|168-25
55776|code|MOVS            R1, #0; c|0-33
55778|code|BLX             memset|251-247-82-236
55782|code|ADDS            R0, R5, R4; s|40-25
55784|code|MOVS            R1, #0x55 ; 'U'; c|85-33
55786|code|MOVS            R2, #0x10; n|16-34
55788|code|BLX             memset|251-247-76-236
55792|code|MOV             R0, R5|40-70
55794|code|POP             {R4-R6,PC}|112-189
55796|code|LDR             R0, =aCheckfillItemO; "_checkfill(item + oldsize, 0x55, 16)"|18-72
55798|code|MOVS            R2, #0x60 ; '`'; line|96-34
55800|code|LDR             R1, =aXmallocC; "xmalloc.c"|18-73
55802|code|LDR             R3, =aXrealloc; "xrealloc"|19-75
55804|code|BLX             __assert_fail|251-247-80-236
55808|code|MOV             R0, R5|40-70
55810|code|LDR             R1, =aOutOfMemory; "out of memory"|18-73
55812|code|BL              sub_9CA4|252-247-78-249
55816|code|B               loc_D9BE|217-231
55818|code|LDR             R0, =aItemVoid0; "item != ((void *)0)"|17-72
55820|code|MOVS            R2, #0x5C ; '\'; line|92-34
55822|code|LDR             R1, =aXmallocC; "xmalloc.c"|13-73
55824|code|LDR             R3, =aXrealloc; "xrealloc"|13-75
55826|code|BLX             __assert_fail|251-247-70-236
55830|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|15-72
55832|code|MOVS            R2, #0x5E ; '^'; line|94-34
55834|code|LDR             R1, =aXmallocC; "xmalloc.c"|10-73
55836|code|LDR             R3, =aXrealloc; "xrealloc"|10-75
55838|code|BLX             __assert_fail|251-247-64-236
55842|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|12-72
55844|code|MOVS            R2, #0x64 ; 'd'; line|100-34
55846|code|LDR             R1, =aXmallocC; "xmalloc.c"|7-73
55848|code|LDR             R3, =aXrealloc; "xrealloc"|7-75
55850|code|BLX             __assert_fail|251-247-58-236
55854|code|LDR             R0, =aNewsize0; "newsize > 0"|10-72
55856|code|MOVS            R2, #0x5D ; ']'; line|93-34
55858|code|LDR             R1, =aXmallocC; "xmalloc.c"|4-73
55860|code|LDR             R3, =aXrealloc; "xrealloc"|4-75
55862|code|BLX             __assert_fail|251-247-52-236
55866|data|ALIGN 4|0-191
55868|data|DCD dword_17610|16-118-1-0
55872|data|DCD aCheckfillItemO; "_checkfill(item + oldsize, 0x55, 16)"|200-239-0-0
55876|data|DCD aXmallocC; "xmalloc.c"|136-239-0-0
55880|data|DCD aXrealloc; "xrealloc"|104-239-0-0
55884|data|DCD aOutOfMemory; "out of memory"|184-228-0-0
55888|data|DCD aItemVoid0; "item != ((void *)0)"|148-239-0-0
55892|data|DCD aP00xf00fbaab; "p[0] == 0xf00fbaab"|180-239-0-0
55896|data|DCD aNewsize0; "newsize > 0"|168-239-0-0
55900|code|PUSH            {R3-R5,LR}|56-181
55902|code|CMP             R0, #0|0-40
55904|code|BEQ             locret_DAA8|34-208
55906|code|LDR.W           R2, [R0,#-8]|80-248-8-44
55910|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
55918|code|CMP             R2, R3|154-66
55920|code|BNE             loc_DAB6|33-209
55922|code|LDR.W           R4, [R0,#-4]|80-248-4-76
55926|code|MOVS            R3, #0xF|15-35
55928|code|ADDS            R1, R0, R4|1-25
55930|code|LDRB            R2, [R1,R3]|202-92
55932|code|CMP             R2, #0x55 ; 'U'|85-42
55934|code|BNE             loc_DAAA|20-209
55936|code|ADDS.W          R3, R3, #0xFFFFFFFF|19-241-255-51
55940|code|BCS             loc_DA7A|249-210
55942|code|SUB.W           R5, R0, #8|160-241-8-5
55946|code|ADD.W           R2, R4, #0x18; n|4-241-24-2
55950|code|MOVS            R1, #0; c|0-33
55952|code|MOV             R0, R5; s|40-70
55954|code|BLX             memset|251-247-250-235
55958|code|LDR             R3, =dword_17610|11-75
55960|code|MOV             R0, R5; ptr|40-70
55962|code|LDR             R2, [R3]|26-104
55964|code|SUBS            R4, R2, R4|20-27
55966|code|STR             R4, [R3]|28-96
55968|code|POP.W           {R3-R5,LR}|189-232-56-64
55972|code|B.W             j_free|251-247-16-188
55976|code|POP             {R3-R5,PC}|56-189
55978|code|LDR             R0, =aCheckfillCharP; "_checkfill((char*)ptr + size, 0x55, 16)"|7-72
55980|code|MOVS            R2, #0x78 ; 'x'; line|120-34
55982|code|LDR             R1, =aXmallocC; "xmalloc.c"|7-73
55984|code|LDR             R3, =aXfree; "xfree"|7-75
55986|code|BLX             __assert_fail|251-247-246-235
55990|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|7-72
55992|code|MOVS            R2, #0x76 ; 'v'; line|118-34
55994|code|LDR             R1, =aXmallocC; "xmalloc.c"|4-73
55996|code|LDR             R3, =aXfree; "xfree"|4-75
55998|code|BLX             __assert_fail|251-247-240-235
56002|data|ALIGN 4|0-191
56004|data|DCD dword_17610|16-118-1-0
56008|data|DCD aCheckfillCharP; "_checkfill((char*)ptr + size, 0x55, 16)"|240-239-0-0
56012|data|DCD aXmallocC; "xmalloc.c"|136-239-0-0
56016|data|DCD aXfree; "xfree"|116-239-0-0
56020|data|DCD aP00xf00fbaab; "p[0] == 0xf00fbaab"|180-239-0-0
56024|code|PUSH            {R3-R5,LR}|56-181
56026|code|MOV             R5, R0|5-70
56028|code|BLX             strlen|251-247-44-236
56032|code|ADDS            R0, #1|1-48
56034|code|BL              sub_D910|255-247-21-255
56038|code|MOV             R1, R5; src|41-70
56040|code|MOV             R4, R0|4-70
56042|code|BLX             strcpy|251-247-62-236
56046|code|MOV             R0, R4|32-70
56048|code|POP             {R3-R5,PC}|56-189
56050|data|ALIGN 4|0-191
56052|code|PUSH.W          {R4-R11,LR}|45-233-240-79
56056|code|MOV             R5, R0|5-70
56058|code|SUB             SP, SP, #0xC|131-176
56060|code|MOV             R0, R2; s|16-70
56062|code|MOV             R8, R3|152-70
56064|code|MOV             R10, R2|146-70
56066|code|MOV             R9, R1|137-70
56068|code|BLX             strlen|251-247-24-236
56072|code|MOV             R7, R0|7-70
56074|code|MOV             R0, R8; s|64-70
56076|code|BLX             strlen|251-247-20-236
56080|code|RSB.W           R11, R7, R0|199-235-0-11
56084|code|MOV             R6, R0|6-70
56086|code|ADD.W           R11, R11, #1|11-241-1-11
56090|code|B               loc_DB48|21-224
56092|code|MOV             R0, R5; s|40-70
56094|code|BLX             strlen|251-247-12-236
56098|code|ADD             R0, R11|88-68
56100|code|CMP             R0, R9|72-69
56102|code|BHI             loc_DB5C|25-216
56104|code|ADDS            R1, R4, R7|225-25
56106|code|STR             R1, [SP,#0x30+src]|1-145
56108|code|MOV             R0, R1; s|8-70
56110|code|BLX             strlen|251-247-4-236
56114|code|ADDS            R3, R4, R6|163-25
56116|code|LDR             R1, [SP,#0x30+src]; src|1-153
56118|code|ADDS            R2, R0, #1; n|66-28
56120|code|MOV             R0, R3; dest|24-70
56122|code|BLX             memmove|251-247-124-236
56126|code|MOV             R0, R4; dest|32-70
56128|code|MOV             R1, R8; src|65-70
56130|code|MOV             R2, R6; n|50-70
56132|code|BLX             memcpy|251-247-10-236
56136|code|MOV             R0, R5; haystack|40-70
56138|code|MOV             R1, R10; needle|81-70
56140|code|BLX             strstr|251-247-36-236
56144|code|MOV             R4, R0|4-70
56146|code|CMP             R0, #0|0-40
56148|code|BNE             loc_DB1C|226-209
56150|code|ADD             SP, SP, #0xC|3-176
56152|code|POP.W           {R4-R11,PC}|189-232-240-143
56156|code|LDR             R0, =aStrlenS1S3lenS; "strlen(s1) + (s3len - s2len) + 1 <= len"|2-72
56158|code|MOVS            R2, #0x5C ; '\'; line|92-34
56160|code|LDR             R1, =aXregexC; "xregex.c"|2-73
56162|code|LDR             R3, =aStrSubst; "_str_subst"|3-75
56164|code|BLX             __assert_fail|251-247-156-235
56168|data|DCD aStrlenS1S3lenS; "strlen(s1) + (s3len - s2len) + 1 <= len"|168-240-0-0
56172|data|DCD aXregexC; "xregex.c"|208-240-0-0
56176|data|DCD aStrSubst; "_str_subst"|24-240-0-0
56180|code|PUSH            {R3,LR}|8-181
56182|code|MOVS            R0, #0xC|12-32
56184|code|BL              sub_D910|255-247-202-254
56188|code|MOVS            R2, #0|0-34
56190|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
56198|code|STR             R2, [R0,#8]|130-96
56200|code|STR             R3, [R0]|3-96
56202|code|POP             {R3,PC}|8-189
56204|code|LDR             R2, [R0]|2-104
56206|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
56214|code|CMP             R2, R3|154-66
56216|code|PUSH            {R4,LR}|16-181
56218|code|MOV             R4, R0|4-70
56220|code|BNE             loc_DBBA|13-209
56222|code|LDR             R0, [R0,#8]|128-104
56224|code|CBZ             R0, loc_DBAC|32-177
56226|code|BLX             regfree|251-247-52-235
56230|code|LDR             R0, [R4,#8]|160-104
56232|code|BL              sub_DA5C|255-247-88-255
56236|code|MOVS            R3, #0|0-35
56238|code|MOV             R0, R4|32-70
56240|code|STR             R3, [R4]|35-96
56242|code|POP.W           {R4,LR}|189-232-16-64
56246|code|B.W             sub_DA5C|255-247-81-191
56250|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|3-72
56252|code|MOVS            R2, #0x48 ; 'H'|72-34
56254|code|LDR             R1, =aXregexC; "xregex.c"|3-73
56256|code|LDR             R3, =aXregexDestroy; "xregex_destroy"|3-75
56258|code|BLX             __assert_fail|251-247-110-235
56262|data|ALIGN 4|0-191
56264|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|220-240-0-0
56268|data|DCD aXregexC; "xregex.c"|208-240-0-0
56272|data|DCD aXregexDestroy; "xregex_destroy"|36-240-0-0
56276|code|PUSH.W          {R4-R8,LR}|45-233-240-65
56280|code|SUB             SP, SP, #0x108|194-176
56282|code|LDR             R6, =__stack_chk_guard|56-78
56284|code|MOV             R4, R0|4-70
56286|code|MOV             R5, R1|13-70
56288|code|MOV             R7, R2|23-70
56290|code|LDR             R3, [R6]|51-104
56292|code|STR             R3, [SP,#0x104]|65-147
56294|code|CMP             R1, #0|0-41
56296|code|BEQ             loc_DCAE|97-208
56298|code|LDR             R2, [R0]|2-104
56300|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
56308|code|CMP             R2, R3|154-66
56310|code|BNE             loc_DCA2|84-209
56312|code|LDR.W           R8, [R0,#8]|208-248-8-128
56316|code|CMP.W           R8, #0|184-241-0-15
56320|code|BNE             loc_DC96|73-209
56322|code|MOV             R0, R1|8-70
56324|code|BLX             strlen|251-247-152-235
56328|code|CMP.W           R0, #0x100|176-245-128-127
56332|code|BHI             loc_DC88|60-216
56334|code|MOVS            R0, #0x20 ; ' '|32-32
56336|code|BL              sub_D910|255-247-126-254
56340|code|MOVS            R3, #1|1-35
56342|code|STR             R3, [R4,#4]|99-96
56344|code|STR             R0, [R4,#8]|160-96
56346|code|CMP             R7, #0|0-47
56348|code|BEQ             loc_DC82|49-208
56350|code|MOV             R0, R5|40-70
56352|code|BL              sub_DAD8|255-247-90-255
56356|code|MOV             R5, R0|5-70
56358|code|BLX             strlen|251-247-136-235
56362|code|LDR             R2, =aR; "\\r"|37-74
56364|code|LDR             R3, =asc_F140; "\r"|37-75
56366|code|ADDS            R1, R0, #1|65-28
56368|code|MOV             R0, R5|40-70
56370|code|BL              sub_DAF4|255-247-95-255
56374|code|MOV             R0, R5|40-70
56376|code|BLX             strlen|251-247-126-235
56380|code|LDR             R3, =(aUsageHttppower+0x1C); "\n"|34-75
56382|code|LDR             R2, =aN; "\\n"|35-74
56384|code|ADDS            R1, R0, #1|65-28
56386|code|MOV             R0, R5|40-70
56388|code|BL              sub_DAF4|255-247-86-255
56392|code|LDR             R0, [R4,#8]|160-104
56394|code|LDR             R2, [R4,#4]|98-104
56396|code|MOV             R1, R5|41-70
56398|code|BLX             regcomp|251-247-110-235
56402|code|MOV             R7, R0|7-70
56404|code|MOV             R0, R5|40-70
56406|code|BL              sub_DA5C|255-247-1-255
56410|code|CBZ             R7, loc_DC74|95-177
56412|code|LDR             R1, [R4,#8]|161-104
56414|code|ADD             R2, SP, #4|1-170
56416|code|MOV             R0, R7|56-70
56418|code|MOV.W           R3, #0x100|79-244-128-115
56422|code|BLX             regerror|251-247-74-235
56426|code|MOVS            R0, #0|0-32
56428|code|LDR             R1, =aRegcompFailedS; "regcomp failed: %s"|24-73
56430|code|ADD             R2, SP, #4|1-170
56432|code|BL              sub_9CA4|252-247-24-248
56436|code|LDR             R2, [SP,#0x104]|65-154
56438|code|LDR             R3, [R6]|51-104
56440|code|CMP             R2, R3|154-66
56442|code|BNE             loc_DC92|10-209
56444|code|ADD             SP, SP, #0x108|66-176
56446|code|POP.W           {R4-R8,PC}|189-232-240-129
56450|code|MOVS            R3, #9|9-35
56452|code|STR             R3, [R4,#4]|99-96
56454|code|B               loc_DC1E|202-231
56456|code|MOV             R0, R8|64-70
56458|code|LDR             R1, =aRefusingToComp; "refusing to compile regex > 256 bytes"|18-73
56460|code|BL              sub_9CA4|252-247-10-248
56464|code|B               loc_DC0E|189-231
56466|code|BLX             __stack_chk_fail|251-247-178-235
56470|code|LDR             R0, =aXrpXrRegexVoid; "xrp->xr_regex == ((void *)0)"|16-72
56472|code|MOVS            R2, #0x6B ; 'k'|107-34
56474|code|LDR             R1, =aXregexC; "xregex.c"|16-73
56476|code|LDR             R3, =aXregexCompile; "xregex_compile"|16-75
56478|code|BLX             __assert_fail|251-247-0-235
56482|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|16-72
56484|code|MOVS            R2, #0x6A ; 'j'|106-34
56486|code|LDR             R1, =aXregexC; "xregex.c"|13-73
56488|code|LDR             R3, =aXregexCompile; "xregex_compile"|13-75
56490|code|BLX             __assert_fail|251-247-250-234
56494|code|LDR             R0, =unk_F160|14-72
56496|code|MOVS            R2, #0x69 ; 'i'|105-34
56498|code|LDR             R1, =aXregexC; "xregex.c"|10-73
56500|code|LDR             R3, =aXregexCompile; "xregex_compile"|10-75
56502|code|BLX             __assert_fail|251-247-244-234
56506|data|ALIGN 4|0-191
56508|data|DCD __stack_chk_guard|216-116-1-0
56512|data|DCD aR; "\\r"|244-227-0-0
56516|data|DCD asc_F140; "\r"|64-241-0-0
56520|data|DCD aUsageHttppower+0x1C; "\n"|84-227-0-0
56524|data|DCD aN; "\\n"|248-227-0-0
56528|data|DCD aRegcompFailedS; "regcomp failed: %s"|68-241-0-0
56532|data|DCD aRefusingToComp; "refusing to compile regex > 256 bytes"|24-241-0-0
56536|data|DCD aXrpXrRegexVoid; "xrp->xr_regex == ((void *)0)"|248-240-0-0
56540|data|DCD aXregexC; "xregex.c"|208-240-0-0
56544|data|DCD aXregexCompile; "xregex_compile"|52-240-0-0
56548|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|220-240-0-0
56552|data|DCD unk_F160|96-241-0-0
56556|code|PUSH            {R4-R6,LR}|112-181
56558|code|MOVW            R3, #0xAAAA|74-246-170-35
56562|code|LDR             R6, [R0]|6-104
56564|code|MOVT.W          R3, #0x3456|195-242-86-67
56568|code|SUB             SP, SP, #8|130-176
56570|code|MOV             R5, R1|13-70
56572|code|CMP             R6, R3|158-66
56574|code|MOV             R4, R2|20-70
56576|code|BNE             loc_DD60|46-209
56578|code|LDR             R0, [R0,#8]|128-104
56580|code|CMP             R0, #0|0-40
56582|code|BEQ             loc_DD6C|49-208
56584|code|CMP             R2, #0|0-42
56586|code|BEQ             loc_DD52|34-208
56588|code|LDR             R2, [R2]|18-104
56590|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
56598|code|CMP             R2, R3|154-66
56600|code|BNE             loc_DD84|52-209
56602|code|LDR             R3, [R4,#0x14]|99-105
56604|code|CMP             R3, #0|0-43
56606|code|BNE             loc_DD78|43-209
56608|code|LDR             R3, [R4,#8]|163-104
56610|code|MOVS            R6, #2|2-38
56612|code|LDR             R2, [R4,#4]|98-104
56614|code|STR             R6, [SP]|0-150
56616|code|BLX             regexec|251-247-120-235
56620|code|MOVS            R3, #1|1-35
56622|code|STR             R3, [R4,#0x14]|99-97
56624|code|MOV             R6, R0|6-70
56626|code|STR             R0, [R4,#0x10]|32-97
56628|code|CBNZ            R0, loc_DD46|56-185
56630|code|LDR             R0, [R4,#0xC]|224-104
56632|code|CBZ             R0, loc_DD3E|8-177
56634|code|BL              sub_DA5C|255-247-143-254
56638|code|MOV             R0, R5|40-70
56640|code|BL              sub_DAD8|255-247-202-254
56644|code|STR             R0, [R4,#0xC]|224-96
56646|code|RSBS.W          R0, R6, #1|214-241-1-0
56650|code|IT CC|56-191
56652|code|MOVCC           R0, #0|0-32
56654|code|ADD             SP, SP, #8|2-176
56656|code|POP             {R4-R6,PC}|112-189
56658|code|MOV             R3, R2|19-70
56660|code|MOVS            R4, #2|2-36
56662|code|STR             R4, [SP]|0-148
56664|code|BLX             regexec|251-247-96-235
56668|code|MOV             R6, R0|6-70
56670|code|B               loc_DD46|242-231
56672|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|11-72
56674|code|MOVS            R2, #0x8C|140-34
56676|code|LDR             R1, =aXregexC; "xregex.c"|11-73
56678|code|LDR             R3, =aXregexExec; "xregex_exec"|12-75
56680|code|BLX             __assert_fail|251-247-154-234
56684|code|LDR             R0, =unk_F158|11-72
56686|code|MOVS            R2, #0x8D|141-34
56688|code|LDR             R1, =aXregexC; "xregex.c"|8-73
56690|code|LDR             R3, =aXregexExec; "xregex_exec"|9-75
56692|code|BLX             __assert_fail|251-247-148-234
56696|code|LDR             R0, =aXmXmUsedFalse; "xm->xm_used == FALSE"|9-72
56698|code|MOVS            R2, #0x90|144-34
56700|code|LDR             R1, =aXregexC; "xregex.c"|5-73
56702|code|LDR             R3, =aXregexExec; "xregex_exec"|6-75
56704|code|BLX             __assert_fail|251-247-142-234
56708|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|7-72
56710|code|MOVS            R2, #0x8F|143-34
56712|code|LDR             R1, =aXregexC; "xregex.c"|2-73
56714|code|LDR             R3, =aXregexExec; "xregex_exec"|3-75
56716|code|BLX             __assert_fail|251-247-136-234
56720|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|220-240-0-0
56724|data|DCD aXregexC; "xregex.c"|208-240-0-0
56728|data|DCD aXregexExec; "xregex_exec"|68-240-0-0
56732|data|DCD unk_F158|88-241-0-0
56736|data|DCD aXmXmUsedFalse; "xm->xm_used == FALSE"|148-241-0-0
56740|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|120-241-0-0
56744|code|PUSH            {R3-R5,LR}|56-181
56746|code|MOV             R5, R0|5-70
56748|code|MOVS            R0, #0x18|24-32
56750|code|ADDS            R5, #1|1-53
56752|code|BL              sub_D910|255-247-174-253
56756|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
56764|code|MOV             R4, R0|4-70
56766|code|STR             R5, [R0,#4]|69-96
56768|code|STR             R3, [R4]|35-96
56770|code|LSLS            R0, R5, #3|232-0
56772|code|BL              sub_D910|255-247-164-253
56776|code|MOVS            R3, #0|0-35
56778|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
56782|code|STR             R3, [R4,#0xC]|227-96
56784|code|STR             R2, [R4,#0x10]|34-97
56786|code|STR             R3, [R4,#0x14]|99-97
56788|code|STR             R0, [R4,#8]|160-96
56790|code|MOV             R0, R4|32-70
56792|code|POP             {R3-R5,PC}|56-189
56794|data|ALIGN 4|0-191
56796|code|LDR             R2, [R0]|2-104
56798|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
56806|code|CMP             R2, R3|154-66
56808|code|PUSH            {R4,LR}|16-181
56810|code|MOV             R4, R0|4-70
56812|code|BNE             loc_DE0A|13-209
56814|code|LDR             R0, [R0,#8]|128-104
56816|code|BL              sub_DA5C|255-247-52-254
56820|code|LDR             R0, [R4,#0xC]|224-104
56822|code|CBZ             R0, loc_DDFC|8-177
56824|code|BL              sub_DA5C|255-247-48-254
56828|code|MOVS            R3, #0|0-35
56830|code|MOV             R0, R4|32-70
56832|code|STR             R3, [R4]|35-96
56834|code|POP.W           {R4,LR}|189-232-16-64
56838|code|B.W             sub_DA5C|255-247-41-190
56842|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|3-72
56844|code|MOVS            R2, #0xB3|179-34
56846|code|LDR             R1, =aXregexC; "xregex.c"|3-73
56848|code|LDR             R3, =aXregexMatchDes; "xregex_match_destroy"|3-75
56850|code|BLX             __assert_fail|251-247-70-234
56854|data|ALIGN 4|0-191
56856|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|120-241-0-0
56860|data|DCD aXregexC; "xregex.c"|208-240-0-0
56864|data|DCD aXregexMatchDes; "xregex_match_destroy"|80-240-0-0
56868|code|PUSH            {R4,LR}|16-181
56870|code|MOV             R4, R0|4-70
56872|code|LDR             R0, [R0,#0xC]|192-104
56874|code|CBZ             R0, loc_DE34|24-177
56876|code|BL              sub_DA5C|255-247-22-254
56880|code|MOVS            R3, #0|0-35
56882|code|STR             R3, [R4,#0xC]|227-96
56884|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
56888|code|STR             R3, [R4,#0x10]|35-97
56890|code|MOVS            R3, #0|0-35
56892|code|STR             R3, [R4,#0x14]|99-97
56894|code|POP             {R4,PC}|16-189
56896|code|LDR             R2, [R0]|2-104
56898|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
56906|code|CMP             R2, R3|154-66
56908|code|PUSH            {R4-R6,LR}|112-181
56910|code|MOV             R4, R0|4-70
56912|code|BNE             loc_DE8E|29-209
56914|code|LDR             R3, [R0,#0x14]|67-105
56916|code|CBZ             R3, loc_DE82|171-177
56918|code|LDR             R6, [R0,#0x10]|6-105
56920|code|CBNZ            R6, loc_DE7C|134-185
56922|code|LDR             R3, [R0,#8]|131-104
56924|code|LDR             R0, [R3,#4]|88-104
56926|code|ADDS            R0, #1|1-48
56928|code|BL              sub_D910|255-247-86-253
56932|code|LDR             R1, [R4,#0xC]|225-104
56934|code|MOV             R5, R0|5-70
56936|code|CBZ             R1, loc_DE9A|185-177
56938|code|LDR             R3, [R4,#8]|163-104
56940|code|LDR             R2, [R3,#4]|90-104
56942|code|BLX             memcpy|251-247-118-234
56946|code|LDR             R3, [R4,#8]|163-104
56948|code|MOV             R0, R5|40-70
56950|code|LDR             R3, [R3,#4]|91-104
56952|code|STRB            R6, [R5,R3]|238-84
56954|code|POP             {R4-R6,PC}|112-189
56956|code|MOVS            R5, #0|0-37
56958|code|MOV             R0, R5|40-70
56960|code|POP             {R4-R6,PC}|112-189
56962|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|9-72
56964|code|MOVS            R2, #0xCD|205-34
56966|code|LDR             R1, =aXregexC; "xregex.c"|9-73
56968|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|9-75
56970|code|BLX             __assert_fail|251-247-10-234
56974|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|9-72
56976|code|MOVS            R2, #0xCC|204-34
56978|code|LDR             R1, =aXregexC; "xregex.c"|6-73
56980|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|6-75
56982|code|BLX             __assert_fail|251-247-4-234
56986|code|LDR             R0, =aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|7-72
56988|code|MOVS            R2, #0xD1|209-34
56990|code|LDR             R1, =aXregexC; "xregex.c"|3-73
56992|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|3-75
56994|code|BLX             __assert_fail|251-247-254-233
56998|data|ALIGN 4|0-191
57000|data|DCD aXmXmUsed; "xm->xm_used"|172-241-0-0
57004|data|DCD aXregexC; "xregex.c"|208-240-0-0
57008|data|DCD aXregexMatchStr; "xregex_match_strdup"|104-240-0-0
57012|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|120-241-0-0
57016|data|DCD aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|184-241-0-0
57020|code|LDR             R2, [R0]|2-104
57022|code|PUSH            {R3,LR}|8-181
57024|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
57032|code|CMP             R2, R3|154-66
57034|code|BNE             loc_DED6|4-209
57036|code|LDR             R3, [R0,#0x14]|67-105
57038|code|CBZ             R3, loc_DEE2|67-177
57040|code|LDR             R3, [R0,#8]|131-104
57042|code|LDR             R0, [R3,#4]|88-104
57044|code|POP             {R3,PC}|8-189
57046|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|6-72
57048|code|MOVS            R2, #0xDB|219-34
57050|code|LDR             R1, =aXregexC; "xregex.c"|6-73
57052|code|LDR             R3, =aXregexMatchStr_0; "xregex_match_strlen"|6-75
57054|code|BLX             __assert_fail|251-247-224-233
57058|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|6-72
57060|code|MOVS            R2, #0xDC|220-34
57062|code|LDR             R1, =aXregexC; "xregex.c"|3-73
57064|code|LDR             R3, =aXregexMatchStr_0; "xregex_match_strlen"|3-75
57066|code|BLX             __assert_fail|251-247-218-233
57070|data|ALIGN 0x10|0-191
57072|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|120-241-0-0
57076|data|DCD aXregexC; "xregex.c"|208-240-0-0
57080|data|DCD aXregexMatchStr_0; "xregex_match_strlen"|124-240-0-0
57084|data|DCD aXmXmUsed; "xm->xm_used"|172-241-0-0
57088|code|LDR             R2, [R0]|2-104
57090|code|PUSH            {R3-R7,LR}|248-181
57092|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
57100|code|MOV             R6, R0|6-70
57102|code|CMP             R2, R3|154-66
57104|code|BNE             loc_DF6E|45-209
57106|code|LDR             R3, [R0,#0x14]|67-105
57108|code|CMP             R3, #0|0-43
57110|code|BEQ             loc_DF7A|48-208
57112|code|LDR             R4, [R0,#0x10]|4-105
57114|code|RSBS.W          R4, R4, #1|212-241-1-4
57118|code|IT CC|56-191
57120|code|MOVCC           R4, #0|0-36
57122|code|CMP             R1, #0|0-41
57124|code|ITE LT|180-191
57126|code|MOVLT           R4, #0|0-36
57128|code|ANDGE.W         R4, R4, #1|4-240-1-4
57132|code|CBZ             R4, loc_DF64|212-177
57134|code|LDR             R3, [R0,#4]|67-104
57136|code|CMP             R1, R3|153-66
57138|code|BGE             loc_DF68|25-218
57140|code|LDR             R3, [R0,#8]|131-104
57142|code|ADD.W           R2, R3, R1,LSL#3|3-235-193-2
57146|code|LDR.W           R7, [R3,R1,LSL#3]|83-248-49-112
57150|code|ADDS            R3, R7, #1|123-28
57152|code|BEQ             loc_DF68|18-208
57154|code|LDR             R3, [R0,#0xC]|195-104
57156|code|LDR             R5, [R2,#4]|85-104
57158|code|CBZ             R3, loc_DF92|35-179
57160|code|CMP             R7, R5|175-66
57162|code|BGE             loc_DF86|28-218
57164|code|SUBS            R5, R5, R7|237-27
57166|code|ADDS            R0, R5, #1|104-28
57168|code|BL              sub_D910|255-247-222-252
57172|code|LDR             R1, [R6,#0xC]|241-104
57174|code|MOV             R2, R5|42-70
57176|code|ADDS            R1, R1, R7|201-25
57178|code|MOV             R4, R0|4-70
57180|code|BLX             memcpy|251-247-254-233
57184|code|MOVS            R3, #0|0-35
57186|code|STRB            R3, [R4,R5]|99-85
57188|code|MOV             R0, R4|32-70
57190|code|POP             {R3-R7,PC}|248-189
57192|code|MOVS            R4, #0|0-36
57194|code|MOV             R0, R4|32-70
57196|code|POP             {R3-R7,PC}|248-189
57198|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|12-72
57200|code|MOVS            R2, #0xE6|230-34
57202|code|LDR             R1, =aXregexC; "xregex.c"|12-73
57204|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|12-75
57206|code|BLX             __assert_fail|251-247-148-233
57210|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|12-72
57212|code|MOVS            R2, #0xE7|231-34
57214|code|LDR             R1, =aXregexC; "xregex.c"|9-73
57216|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|9-75
57218|code|BLX             __assert_fail|251-247-142-233
57222|code|LDR             R0, =aMRmSoMRmEo; "m.rm_so < m.rm_eo"|10-72
57224|code|MOVS            R2, #0xEE|238-34
57226|code|LDR             R1, =aXregexC; "xregex.c"|6-73
57228|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|6-75
57230|code|BLX             __assert_fail|251-247-136-233
57234|code|LDR             R0, =aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|8-72
57236|code|MOVS            R2, #0xED|237-34
57238|code|LDR             R1, =aXregexC; "xregex.c"|3-73
57240|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|3-75
57242|code|BLX             __assert_fail|251-247-130-233
57246|data|ALIGN 0x10|0-191
57248|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|120-241-0-0
57252|data|DCD aXregexC; "xregex.c"|208-240-0-0
57256|data|DCD aXregexMatchSub; "xregex_match_sub_strdup"|144-240-0-0
57260|data|DCD aXmXmUsed; "xm->xm_used"|172-241-0-0
57264|data|DCD aMRmSoMRmEo; "m.rm_so < m.rm_eo"|212-241-0-0
57268|data|DCD aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|184-241-0-0
57272|code|PUSH            {R3-R5,LR}|56-181
57274|code|MOVS            R1, #3|3-33
57276|code|MOVS            R2, #0|0-34
57278|code|MOV             R4, R0|4-70
57280|code|BLX             fcntl|251-247-82-234
57284|code|CMP             R0, #0|0-40
57286|code|MOV             R5, R0|5-70
57288|code|BLT             loc_DFE8|14-219
57290|code|MOVS            R1, #4|4-33
57292|code|ORR.W           R2, R5, #0x800|69-244-0-98
57296|code|MOV             R0, R4|32-70
57298|code|BLX             fcntl|251-247-74-234
57302|code|CMP             R0, #0|0-40
57304|code|BLT             loc_DFDC|0-219
57306|code|POP             {R3-R5,PC}|56-189
57308|code|MOVS            R0, #1|1-32
57310|code|LDR             R1, =aFcntlFSetfl; "fcntl F_SETFL"|5-73
57312|code|POP.W           {R3-R5,LR}|189-232-56-64
57316|code|B.W             sub_9CA4|251-247-94-190
57320|code|MOVS            R0, #1|1-32
57322|code|LDR             R1, =aFcntlFGetfl; "fcntl F_GETFL"|3-73
57324|code|BL              sub_9CA4|251-247-90-254
57328|code|B               loc_DFCA|235-231
57330|data|ALIGN 4|0-191
57332|data|DCD aFcntlFSetfl; "fcntl F_SETFL"|4-242-0-0
57336|data|DCD aFcntlFGetfl; "fcntl F_GETFL"|244-241-0-0
57340|code|PUSH            {R3-R5,LR}|56-181
57342|code|MOVS            R1, #3|3-33
57344|code|MOVS            R2, #0|0-34
57346|code|MOV             R4, R0|4-70
57348|code|BLX             fcntl|251-247-48-234
57352|code|CMP             R0, #0|0-40
57354|code|MOV             R5, R0|5-70
57356|code|BLT             loc_E02C|14-219
57358|code|MOVS            R1, #4|4-33
57360|code|BIC.W           R2, R5, #0x800|37-244-0-98
57364|code|MOV             R0, R4|32-70
57366|code|BLX             fcntl|251-247-40-234
57370|code|CMP             R0, #0|0-40
57372|code|BLT             loc_E020|0-219
57374|code|POP             {R3-R5,PC}|56-189
57376|code|MOVS            R0, #1|1-32
57378|code|LDR             R1, =aFcntlFSetfl; "fcntl F_SETFL"|5-73
57380|code|POP.W           {R3-R5,LR}|189-232-56-64
57384|code|B.W             sub_9CA4|251-247-60-190
57388|code|MOVS            R0, #1|1-32
57390|code|LDR             R1, =aFcntlFGetfl; "fcntl F_GETFL"|3-73
57392|code|BL              sub_9CA4|251-247-56-254
57396|code|B               loc_E00E|235-231
57398|data|ALIGN 4|0-191
57400|data|DCD aFcntlFSetfl; "fcntl F_SETFL"|4-242-0-0
57404|data|DCD aFcntlFGetfl; "fcntl F_GETFL"|244-241-0-0
57408|code|PUSH            {R4,R5,LR}|48-181
57410|code|SUB             SP, SP, #0x84|161-176
57412|code|LDR             R5, =__stack_chk_guard|53-77
57414|code|ADD             R1, SP, #4|1-169
57416|code|MOV             R4, R0|4-70
57418|code|LDR             R3, [R5]|43-104
57420|code|STR             R3, [SP,#0x7C]|31-147
57422|code|BLX             tcgetattr|251-247-98-233
57426|code|CMP             R0, #0|0-40
57428|code|BLT             loc_E0D2|61-219
57430|code|ADD             R0, SP, #4|1-168
57432|code|BLX             cfmakeraw|251-247-48-233
57436|code|MOVS            R1, #0|0-33
57438|code|MOV             R0, R4|32-70
57440|code|ADD             R2, SP, #4|1-170
57442|code|BLX             tcsetattr|251-247-252-233
57446|code|CMP             R0, #0|0-40
57448|code|BLT             loc_E0EE|65-219
57450|code|MOVS            R2, #0x3C ; '<'|60-34
57452|code|MOVS            R1, #0|0-33
57454|code|ADD             R0, SP, #0x40 ; '@'|16-168
57456|code|BLX             memset|251-247-10-233
57460|code|MOV             R0, R4|32-70
57462|code|ADD             R1, SP, #0x40 ; '@'|16-169
57464|code|BLX             tcgetattr|251-247-76-233
57468|code|CMP             R0, #0|0-40
57470|code|BLT             loc_E10C|69-219
57472|code|MOVS            R2, #0x20 ; ' '|32-34
57474|code|ADD.W           R0, SP, #0x15|13-241-21-0
57478|code|ADD.W           R1, SP, #0x51 ; 'Q'|13-241-81-1
57482|code|BLX             memcmp|251-247-204-232
57486|code|CBNZ            R0, loc_E09C|40-185
57488|code|LDRB.W          R2, [SP,#0x1A]|157-248-26-32
57492|code|LDRB.W          R3, [SP,#0x56]|157-248-86-48
57496|code|CMP             R2, R3|154-66
57498|code|BEQ             loc_E0B0|9-208
57500|code|MOVS            R0, #0|0-32
57502|code|LDR             R1, =aTcsetattrFaile; "tcsetattr failed"|32-73
57504|code|BL              sub_9CA4|251-247-0-254
57508|code|LDR             R2, [SP,#0x7C]|31-154
57510|code|LDR             R3, [R5]|43-104
57512|code|CMP             R2, R3|154-66
57514|code|BNE             loc_E116|52-209
57516|code|ADD             SP, SP, #0x84|33-176
57518|code|POP             {R4,R5,PC}|48-189
57520|code|LDR             R3, [SP,#0x40]|16-155
57522|code|LDR             R2, [SP,#4]|1-154
57524|code|CMP             R2, R3|154-66
57526|code|BNE             loc_E09C|241-209
57528|code|LDR             R3, [SP,#0x44]|17-155
57530|code|LDR             R2, [SP,#8]|2-154
57532|code|CMP             R2, R3|154-66
57534|code|BNE             loc_E09C|237-209
57536|code|LDR             R3, [SP,#0x48]|18-155
57538|code|LDR             R2, [SP,#0xC]|3-154
57540|code|CMP             R2, R3|154-66
57542|code|BNE             loc_E09C|233-209
57544|code|LDR             R3, [SP,#0x4C]|19-155
57546|code|LDR             R2, [SP,#0x10]|4-154
57548|code|CMP             R2, R3|154-66
57550|code|BNE             loc_E09C|229-209
57552|code|B               loc_E0A4|232-231
57554|code|MOVS            R0, #1|1-32
57556|code|LDR             R1, =aXcfmakerawTcge; "xcfmakeraw: tcgetattr"|19-73
57558|code|BL              sub_9CA4|251-247-229-253
57562|code|ADD             R0, SP, #4|1-168
57564|code|BLX             cfmakeraw|251-247-238-232
57568|code|MOVS            R1, #0|0-33
57570|code|MOV             R0, R4|32-70
57572|code|ADD             R2, SP, #4|1-170
57574|code|BLX             tcsetattr|251-247-186-233
57578|code|CMP             R0, #0|0-40
57580|code|BGE             loc_E06A|189-218
57582|code|MOVS            R0, #1|1-32
57584|code|LDR             R1, =aTcsetattr_0; "tcsetattr"|13-73
57586|code|BL              sub_9CA4|251-247-215-253
57590|code|MOVS            R2, #0x3C ; '<'|60-34
57592|code|MOVS            R1, #0|0-33
57594|code|ADD             R0, SP, #0x40 ; '@'|16-168
57596|code|BLX             memset|251-247-196-232
57600|code|MOV             R0, R4|32-70
57602|code|ADD             R1, SP, #0x40 ; '@'|16-169
57604|code|BLX             tcgetattr|251-247-6-233
57608|code|CMP             R0, #0|0-40
57610|code|BGE             loc_E080|185-218
57612|code|MOVS            R0, #1|1-32
57614|code|LDR             R1, =(aXcfmakerawTcge+0xC); "tcgetattr"|7-73
57616|code|BL              sub_9CA4|251-247-200-253
57620|code|B               loc_E080|180-231
57622|code|BLX             __stack_chk_fail|251-247-112-233
57626|data|ALIGN 4|0-191
57628|data|DCD __stack_chk_guard|216-116-1-0
57632|data|DCD aTcsetattrFaile; "tcsetattr failed"|56-242-0-0
57636|data|DCD aXcfmakerawTcge; "xcfmakeraw: tcgetattr"|20-242-0-0
57640|data|DCD aTcsetattr_0; "tcsetattr"|44-242-0-0
57644|data|DCD aXcfmakerawTcge+0xC; "tcgetattr"|32-242-0-0
57648|code|PUSH            {R4-R6,LR}|112-181
57650|code|MOV             R5, R2|21-70
57652|code|MOVS            R2, #0|0-34
57654|code|MOV             R4, R1|12-70
57656|code|MOV             R3, R2|19-70
57658|code|BLX             forkpty|251-247-40-233
57662|code|MOVS            R3, R4|35-28
57664|code|IT NE|24-191
57666|code|MOVNE           R3, #1|1-35
57668|code|CMP             R0, #0|0-40
57670|code|ITE LE|212-191
57672|code|MOVLE           R3, #0|0-35
57674|code|ANDGT.W         R3, R3, #1|3-240-1-3
57678|code|MOV             R6, R0|6-70
57680|code|CBZ             R3, loc_E15C|35-177
57682|code|MOV             R0, R4|32-70
57684|code|BLX             strlen|251-247-240-232
57688|code|CMP             R0, R5|168-66
57690|code|BCS             loc_E160|1-210
57692|code|MOV             R0, R6|48-70
57694|code|POP             {R4-R6,PC}|112-189
57696|code|LDR             R0, =aStrlenNameLen; "strlen(name) < len"|2-72
57698|code|MOVS            R2, #0x88|136-34
57700|code|LDR             R1, =aXptyC; "xpty.c"|2-73
57702|code|LDR             R3, =aXforkpty; "xforkpty"|3-75
57704|code|BLX             __assert_fail|251-247-154-232
57708|data|DCD aStrlenNameLen; "strlen(name) < len"|76-242-0-0
57712|data|DCD aXptyC; "xpty.c"|96-242-0-0
57716|data|DCD aXforkpty; "xforkpty"|232-241-0-0
57720|code|PUSH            {R4,LR}|16-181
57722|code|SUB             SP, SP, #0x118|198-176
57724|code|MOV             R4, R0|4-70
57726|code|ADD             R0, SP, #4|1-168
57728|code|STR             R1, [SP]|0-145
57730|code|BLX             sigemptyset|251-247-56-232
57734|code|MOV             R0, R4|32-70
57736|code|MOV             R1, SP|105-70
57738|code|ADD             R2, SP, #0x8C|35-170
57740|code|CMP             R4, #0xE|14-44
57742|code|ITE EQ|12-191
57744|code|MOVEQ.W         R4, #0x20000000|79-240-0-84
57748|code|MOVNE.W         R4, #0x10000000|79-240-128-84
57752|code|STR             R4, [SP,#0x84]|33-148
57754|code|BLX             sigaction|251-247-52-233
57758|code|CMP             R0, #0|0-40
57760|code|BLT             loc_E1A8|2-219
57762|code|LDR             R0, [SP,#0x8C]|35-152
57764|code|ADD             SP, SP, #0x118|70-176
57766|code|POP             {R4,PC}|16-189
57768|code|MOVS            R0, #1|1-32
57770|code|LDR             R1, =aSigaction_0; "sigaction"|2-73
57772|code|BL              sub_9CA4|251-247-122-253
57776|code|B               loc_E1A2|247-231
57778|data|ALIGN 4|0-191
57780|data|DCD aSigaction_0; "sigaction"|104-242-0-0
57784|code|PUSH.W          {R3-R9,LR}|45-233-248-67
57788|code|MOV             R6, R0|6-70
57790|code|LDR.W           R9, =(off_17284 - 0xE1CC)|223-248-52-144
57794|code|MOV             R7, R1|15-70
57796|code|LDR             R5, =(off_17280 - 0xE1D2)|12-77
57798|code|MOV             R8, R2|144-70
57800|code|ADD             R9, PC; off_17284|249-68
57802|code|BL              .init_proc|250-247-253-255
57806|code|ADD             R5, PC; off_17280|125-68
57808|code|RSB.W           R9, R5, R9|197-235-9-9
57812|code|MOVS.W          R9, R9,ASR#2|95-234-169-9
57816|code|BEQ             locret_E1EE|9-208
57818|code|MOVS            R4, #0|0-36
57820|code|LDR.W           R3, [R5],#4|85-248-4-59
57824|code|MOV             R0, R6|48-70
57826|code|MOV             R1, R7|57-70
57828|code|MOV             R2, R8|66-70
57830|code|ADDS            R4, #1|1-52
57832|code|BLX             R3; sub_9620|152-71
57834|code|CMP             R4, R9|76-69
57836|code|BNE             loc_E1DC|246-209
57838|code|POP.W           {R3-R9,PC}|189-232-248-131
57842|data|ALIGN 4|0-191
57844|data|DCD off_17284 - 0xE1CC|184-144-0-0
57848|data|DCD off_17280 - 0xE1D2|174-144-0-0
57852|code|BX              LR|112-71
57854|data|ALIGN 0x10|0-191
57856|code|PUSH            {R3,LR}; _fini|8-181
57858|code|NOP|0-191
57860|code|POP             {R3,PC}|8-189
57862|data|DCW 0|0-0
62076|data|ALIGN 0x10|0-0-0-0
94848|data|DCD sub_9620+1|33-150-0-0
94852|data|DCD sub_9610+1|17-150-0-0
94856|data|DCD 0|0-0-0-0
94860|data|Elf32_Dyn <1, <1>>; DT_NEEDED libcurl-gnutls.so.4|1-0-0-0-1-0-0-0
94868|data|Elf32_Dyn <1, <0x8D>>; DT_NEEDED libutil.so.1|1-0-0-0-141-0-0-0
94876|data|Elf32_Dyn <1, <0xA2>>; DT_NEEDED libc.so.6|1-0-0-0-162-0-0-0
94884|data|Elf32_Dyn <1, <0x283>>; DT_NEEDED ld-linux.so.3|1-0-0-0-131-2-0-0
94892|data|Elf32_Dyn <0xC, <0x91C9>>; DT_INIT|12-0-0-0-201-145-0-0
94900|data|Elf32_Dyn <0xD, <0xE201>>; DT_FINI|13-0-0-0-1-226-0-0
94908|data|Elf32_Dyn <0x19, <0x17280>>; DT_INIT_ARRAY|25-0-0-0-128-114-1-0
94916|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
94924|data|Elf32_Dyn <0x1A, <0x17284>>; DT_FINI_ARRAY|26-0-0-0-132-114-1-0
94932|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
94940|data|Elf32_Dyn <4, <0x81A0>>; DT_HASH|4-0-0-0-160-129-0-0
94948|data|Elf32_Dyn <0x6FFFFEF5, <0x83F4>>; DT_GNU_HASH|245-254-255-111-244-131-0-0
94956|data|Elf32_Dyn <5, <0x8B84>>; DT_STRTAB|5-0-0-0-132-139-0-0
94964|data|Elf32_Dyn <6, <0x8684>>; DT_SYMTAB|6-0-0-0-132-134-0-0
94972|data|Elf32_Dyn <0xA, <0x2FB>>; DT_STRSZ|10-0-0-0-251-2-0-0
94980|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
94988|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
94996|data|Elf32_Dyn <3, <0x17394>>; DT_PLTGOT|3-0-0-0-148-115-1-0
95004|data|Elf32_Dyn <2, <0x1F0>>; DT_PLTRELSZ|2-0-0-0-240-1-0-0
95012|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
95020|data|Elf32_Dyn <0x17, <0x8FD8>>; DT_JMPREL|23-0-0-0-216-143-0-0
95028|data|Elf32_Dyn <0x11, <0x8FA0>>; DT_REL|17-0-0-0-160-143-0-0
95036|data|Elf32_Dyn <0x12, <0x38>>; DT_RELSZ|18-0-0-0-56-0-0-0
95044|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
95052|data|Elf32_Dyn <0x6FFFFFFE, <0x8F20>>; DT_VERNEED|254-255-255-111-32-143-0-0
95060|data|Elf32_Dyn <0x6FFFFFFF, <4>>; DT_VERNEEDNUM|255-255-255-111-4-0-0-0
95068|data|Elf32_Dyn <0x6FFFFFF0, <0x8E80>>; DT_VERSYM|240-255-255-111-128-142-0-0
95076|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
95084|data|ALIGN 0x10|0-0-0-0
95124|data|DCD stru_1728C|140-114-1-0
95128|data|DCD 0|0-0-0-0
95132|data|DCD 0|0-0-0-0
95136|data|DCD __imp_qsort|132-118-1-0
95140|data|DCD __imp_sigemptyset|40-118-1-0
95144|data|DCD __imp_strerror|112-118-1-0
95148|data|DCD __imp_regfree|244-118-1-0
95152|data|DCD __imp_abort|28-118-1-0
95156|data|DCD __imp_memcmp|188-118-1-0
95160|data|DCD __imp_syslog|120-118-1-0
95164|data|DCD __imp___libc_start_main|80-118-1-0
95168|data|DCD __imp___gmon_start__|12-119-1-0
95172|data|DCD __imp_vsnprintf|4-119-1-0
95176|data|DCD __imp_strncpy|196-118-1-0
95180|data|DCD __imp_fgets|0-119-1-0
95184|data|DCD __imp_strchr|236-118-1-0
95188|data|DCD __imp_memset|228-118-1-0
95192|data|DCD __imp_strrchr|60-118-1-0
95196|data|DCD __imp___assert_fail|108-118-1-0
95200|data|DCD __imp_curl_easy_setopt|200-118-1-0
95204|data|DCD __imp_cfmakeraw|240-118-1-0
95208|data|DCD __imp_free|100-118-1-0
95212|data|DCD __imp_read|148-118-1-0
95216|data|DCD __imp_write|68-118-1-0
95220|data|DCD __imp_getopt_long|232-118-1-0
95224|data|DCD __imp_regerror|192-118-1-0
95228|data|DCD __imp_gettimeofday|144-118-1-0
95232|data|DCD __imp_tcgetattr|36-118-1-0
95236|data|DCD __imp_fflush|44-118-1-0
95240|data|DCD __imp_regcomp|48-118-1-0
95244|data|DCD __imp_strlen|160-118-1-0
95248|data|DCD __imp_strtoul|92-118-1-0
95252|data|DCD __imp___xpg_basename|248-118-1-0
95256|data|DCD __imp_memcpy|96-118-1-0
95260|data|DCD __imp_strcpy|252-118-1-0
95264|data|DCD __imp_printf|124-118-1-0
95268|data|DCD __imp_ctime|84-118-1-0
95272|data|DCD __imp_forkpty|220-118-1-0
95276|data|DCD __imp_strstr|224-118-1-0
95280|data|DCD __imp_fwrite|32-118-1-0
95284|data|DCD __imp_time|76-118-1-0
95288|data|DCD __imp_curl_easy_init|172-118-1-0
95292|data|DCD __imp___ctype_b_loc|136-118-1-0
95296|data|DCD __imp_curl_easy_cleanup|72-118-1-0
95300|data|DCD __imp_fprintf|176-118-1-0
95304|data|DCD __imp_malloc|56-118-1-0
95308|data|DCD __imp___stack_chk_fail|212-118-1-0
95312|data|DCD __imp_sigaction|156-118-1-0
95316|data|DCD __imp_poll|216-118-1-0
95320|data|DCD __imp_regexec|24-118-1-0
95324|data|DCD __imp_strcat|140-118-1-0
95328|data|DCD __imp_memmove|116-118-1-0
95332|data|DCD __imp_puts|128-118-1-0
95336|data|DCD __imp_curl_easy_perform|204-118-1-0
95340|data|DCD __imp_tcsetattr|152-118-1-0
95344|data|DCD __imp_fcntl|164-118-1-0
95348|data|DCD __imp_curl_global_init|208-118-1-0
95352|data|DCD __imp_snprintf|180-118-1-0
95356|data|DCD __imp_realloc|168-118-1-0
95360|data|DCD __imp___strdup|52-118-1-0
95364|data|DCD __imp_memchr|88-118-1-0
95368|data|DCD __imp_strcmp|104-118-1-0
95372|data|DCD __imp_exit|184-118-1-0
95376|data|DCD __imp___errno_location|64-118-1-0
95380|data|DCD __imp_sprintf|8-119-1-0
95384|data|DCD __imp___gmon_start__|12-119-1-0
95388|data|ALIGN 0x10|0-0-0-0
95428|data|DCD 1|1-0-0-0
95432|data|DCD 1|1-0-0-0
95768|code|IMPORT __imp_regexec|0-0-0-0
95772|code|IMPORT __imp_abort|0-0-0-0
95776|code|IMPORT __imp_fwrite|0-0-0-0
95780|code|IMPORT __imp_tcgetattr|0-0-0-0
95784|code|IMPORT __imp_sigemptyset|0-0-0-0
95788|code|IMPORT __imp_fflush|0-0-0-0
95792|code|IMPORT __imp_regcomp|0-0-0-0
95796|code|IMPORT __imp___strdup|0-0-0-0
95800|code|IMPORT __imp_malloc|0-0-0-0
95804|code|IMPORT __imp_strrchr|0-0-0-0
95808|code|IMPORT __imp___errno_location|0-0-0-0
95812|code|IMPORT __imp_write|0-0-0-0
95816|code|IMPORT __imp_curl_easy_cleanup|0-0-0-0
95820|code|IMPORT __imp_time|0-0-0-0
95824|code|IMPORT __imp___libc_start_main|0-0-0-0
95828|code|IMPORT __imp_ctime|0-0-0-0
95832|code|IMPORT __imp_memchr|0-0-0-0
95836|code|IMPORT __imp_strtoul|0-0-0-0
95840|code|IMPORT __imp_memcpy|0-0-0-0
95844|code|IMPORT __imp_free|0-0-0-0
95848|code|IMPORT __imp_strcmp|0-0-0-0
95852|code|IMPORT __imp___assert_fail|0-0-0-0
95856|code|IMPORT __imp_strerror|0-0-0-0
95860|code|IMPORT __imp_memmove|0-0-0-0
95864|code|IMPORT __imp_syslog|0-0-0-0
95868|code|IMPORT __imp_printf|0-0-0-0
95872|code|IMPORT __imp_puts|0-0-0-0
95876|code|IMPORT __imp_qsort|0-0-0-0
95880|code|IMPORT __imp___ctype_b_loc|0-0-0-0
95884|code|IMPORT __imp_strcat|0-0-0-0
95888|code|IMPORT __imp_gettimeofday|0-0-0-0
95892|code|IMPORT __imp_read|0-0-0-0
95896|code|IMPORT __imp_tcsetattr|0-0-0-0
95900|code|IMPORT __imp_sigaction|0-0-0-0
95904|code|IMPORT __imp_strlen|0-0-0-0
95908|code|IMPORT __imp_fcntl|0-0-0-0
95912|code|IMPORT __imp_realloc|0-0-0-0
95916|code|IMPORT __imp_curl_easy_init|0-0-0-0
95920|code|IMPORT __imp_fprintf|0-0-0-0
95924|code|IMPORT __imp_snprintf|0-0-0-0
95928|code|IMPORT __imp_exit|0-0-0-0
95932|code|IMPORT __imp_memcmp|0-0-0-0
95936|code|IMPORT __imp_regerror|0-0-0-0
95940|code|IMPORT __imp_strncpy|0-0-0-0
95944|code|IMPORT __imp_curl_easy_setopt|0-0-0-0
95948|code|IMPORT __imp_curl_easy_perform|0-0-0-0
95952|code|IMPORT __imp_curl_global_init|0-0-0-0
95956|code|IMPORT __imp___stack_chk_fail|0-0-0-0
95960|code|IMPORT __imp_poll|0-0-0-0
95964|code|IMPORT __imp_forkpty|0-0-0-0
95968|code|IMPORT __imp_strstr|0-0-0-0
95972|code|IMPORT __imp_memset|0-0-0-0
95976|code|IMPORT __imp_getopt_long|0-0-0-0
95980|code|IMPORT __imp_strchr|0-0-0-0
95984|code|IMPORT __imp_cfmakeraw|0-0-0-0
95988|code|IMPORT __imp_regfree|0-0-0-0
95992|code|IMPORT __imp___xpg_basename|0-0-0-0
95996|code|IMPORT __imp_strcpy|0-0-0-0
96000|code|IMPORT __imp_fgets|0-0-0-0
96004|code|IMPORT __imp_vsnprintf|0-0-0-0
96008|code|IMPORT __imp_sprintf|0-0-0-0
