address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|89-21-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x31CC; SHT file offset|204-49-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1C; Number of entries in SHT|28-0
50|data|DCW 0x1B; SHT entry index for string table|27-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x2118; File offset|24-33-0-0
60|data|DCD unk_2118; Virtual address|24-33-0-0
64|data|DCD 0x2118; Physical address|24-33-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x2124; Size in file image|36-33-0-0
168|data|DCD 0x2124; Size in memory image|36-33-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x2E1C; File offset|28-46-0-0
188|data|DCD off_12E1C; Virtual address|28-46-1-0
192|data|DCD 0x12E1C; Physical address|28-46-1-0
196|data|DCD 0x27C; Size in file image|124-2-0-0
200|data|DCD 0x280; Size in memory image|128-2-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x2E4C; File offset|76-46-0-0
220|data|DCD stru_12E4C; Virtual address|76-46-1-0
224|data|DCD 0x12E4C; Physical address|76-46-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x2E1C; File offset|28-46-0-0
316|data|DCD off_12E1C; Virtual address|28-46-1-0
320|data|DCD 0x12E1C; Physical address|28-46-1-0
324|data|DCD 0x1E4; Size in file image|228-1-0-0
328|data|DCD 0x1E4; Size in memory image|228-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x35, 0x5B, 0x45, 0x74, 0xFC, 0xBB, 0xFC, 0xDC, 0x1E; Desc|53-91-69-116-252-187-252-220-30-22-106-238-221-170-254-72-102-254-252-150
436|data|DCD 3|3-0-0-0
440|data|DCD 0x26|38-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x26, 0x2A, 0x2F|38-0-0-0-42-0-0-0-47-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_544 - byte_544, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_544 - byte_544, dword_12E24, 0, 3, 0, 0x14>|0-0-0-0-36-46-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aCxaFinalize - byte_544, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|194-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
596|data|Elf32_Sym <aSmpInitiatorCl - byte_544, dword_0, 0, 0x12, 0, 0>; "smp_initiator_close"|223-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
612|data|Elf32_Sym <aItmDeregistert - byte_544, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|19-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
628|data|Elf32_Sym <aDstrhex - byte_544, dword_0, 0, 0x12, 0, 0>; "dStrHex"|196-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
644|data|Elf32_Sym <aStackChkGuard - byte_544, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|247-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
660|data|Elf32_Sym <aSmpGetFuncDefR - byte_544, dword_0, 0, 0x12, 0, 0>; "smp_get_func_def_resp_len"|108-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
676|data|Elf32_Sym <aOptind - byte_544, dword_0, 0, 0x11, 0, 0>; "optind"|36-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
692|data|Elf32_Sym <aStackChkFail - byte_544, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|72-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aSmpIsNaa5 - byte_544, dword_0, 0, 0x12, 0, 0>; "smp_is_naa5"|243-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aStderr - byte_544, dword_0, 0, 0x11, 0, 0>; "stderr"|161-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
740|data|Elf32_Sym <aFwrite - byte_544, dword_0, 0, 0x12, 0, 0>; "fwrite"|180-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aGetenv - byte_544, dword_0, 0, 0x12, 0, 0>; "getenv"|147-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aPuts - byte_544, dword_0, 0, 0x12, 0, 0>; "puts"|67-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aLibcStartMain - byte_544, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|209-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
804|data|Elf32_Sym <aGmonStart - byte_544, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|47-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
820|data|Elf32_Sym <aGetoptLong - byte_544, dword_0, 0, 0x12, 0, 0>; "getopt_long"|168-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aStrchr - byte_544, dword_0, 0, 0x12, 0, 0>; "strchr"|187-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aSmpSendReq - byte_544, dword_0, 0, 0x12, 0, 0>; "smp_send_req"|169-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aErrnoLocation - byte_544, dword_0, 0, 0x12, 0, 0>; "__errno_location"|110-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aIsoc99Sscanf - byte_544, dword_0, 0, 0x12, 0, 0>; "__isoc99_sscanf"|43-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aMemset - byte_544, dword_0, 0, 0x12, 0, 0>; "memset"|103-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aPutchar - byte_544, dword_0, 0, 0x12, 0, 0>; "putchar"|89-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aStrncpy - byte_544, dword_0, 0, 0x12, 0, 0>; "strncpy"|59-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aPrintfChk - byte_544, dword_0, 0, 0x12, 0, 0>; "__printf_chk"|23-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aSmpGetDhnum - byte_544, dword_0, 0, 0x12, 0, 0>; "smp_get_dhnum"|255-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aFprintfChk - byte_544, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|127-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
996|data|Elf32_Sym <aFputc - byte_544, dword_0, 0, 0x12, 0, 0>; "fputc"|141-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1012|data|Elf32_Sym <aSafeStrerror - byte_544, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|182-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1028|data|Elf32_Sym <aJvRegisterclas - byte_544, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|62-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1044|data|Elf32_Sym <aSmpGetLlnum - byte_544, dword_0, 0, 0x12, 0, 0>; "smp_get_llnum"|134-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1060|data|Elf32_Sym <aItmRegistertmc - byte_544, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|82-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1076|data|Elf32_Sym <aSmpGetFuncResS - byte_544, dword_0, 0, 0x12, 0, 0>; "smp_get_func_res_str"|148-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1092|data|Elf32_Sym <aSmpInitiatorOp - byte_544, dword_0, 0, 0x12, 0, 0>; "smp_initiator_open"|204-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1108|data|Elf32_Sym <aOptarg - byte_544, dword_0, 0, 0x11, 0, 0>; "optarg"|154-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1124|data|Elf32_Sym <aAbort - byte_544, dword_0, 0, 0x12, 0, 0>; "abort"|97-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1140|data|Elf32_Sym <aBssEnd+1 - byte_544, _end, 0, 0x10, 0, 0x19>; "_bss_end__"|56-2-0-0-156-48-1-0-0-0-0-0-16-0-25-0
1156|data|Elf32_Sym <aEdata - byte_544, __bss_start__, 0, 0x10, 0, 0x18>; "_edata"|22-2-0-0-152-48-1-0-0-0-0-0-16-0-24-0
1172|data|Elf32_Sym <aDataStart - byte_544, __data_start, 0, 0x10, 0, 0x18>; "__data_start"|9-2-0-0-0-48-1-0-0-0-0-0-16-0-24-0
1188|data|Elf32_Sym <aEnd_0 - byte_544, _end, 0, 0x10, 0, 0x19>; "_end"|75-2-0-0-156-48-1-0-0-0-0-0-16-0-25-0
1204|data|Elf32_Sym <aBssEnd - byte_544, _end, 0, 0x10, 0, 0x19>; "__bss_end__"|55-2-0-0-156-48-1-0-0-0-0-0-16-0-25-0
1220|data|Elf32_Sym <aLibcCsuInit - byte_544, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|96-2-0-0-149-22-0-0-64-0-0-0-18-0-13-0
1236|data|Elf32_Sym <aBssStart - byte_544, __bss_start__, 0, 0x10, 0, 0x19>; "__bss_start"|29-2-0-0-152-48-1-0-0-0-0-0-16-0-25-0
1252|data|Elf32_Sym <aLibcStartMain+0xD - byte_544, main+1, 0x988, 0x12, 0, 0xD>; "main"|222-1-0-0-209-11-0-0-136-9-0-0-18-0-13-0
1268|data|Elf32_Sym <aLibcCsuInit+0xA - byte_544, .init_proc, 0, 0x12, 0, 0xB>; "_init"|106-2-0-0-96-10-0-0-0-0-0-0-18-0-11-0
1284|data|Elf32_Sym <aLibcCsuFini - byte_544, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|80-2-0-0-213-22-0-0-2-0-0-0-18-0-13-0
1300|data|Elf32_Sym <aBssStart_0 - byte_544, __bss_start__, 0, 0x10, 0, 0x19>; "__bss_start__"|41-2-0-0-152-48-1-0-0-0-0-0-16-0-25-0
1316|data|Elf32_Sym <aLibcCsuFini+0xA - byte_544, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|90-2-0-0-216-22-0-0-0-0-0-0-18-0-14-0
1332|data|Elf32_Sym <aEnd - byte_544, _end, 0, 0x10, 0, 0x19>; "__end__"|67-2-0-0-156-48-1-0-0-0-0-0-16-0-25-0
1348|data|DCB 0|0
1349|data|DCB "libsmputils1.so.1",0|108-105-98-115-109-112-117-116-105-108-115-49-46-115-111-46-49-0
1367|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1395|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1410|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1430|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1456|data|DCB "smp_get_func_def_resp_len",0|115-109-112-95-103-101-116-95-102-117-110-99-95-100-101-102-95-114-101-115-112-95-108-101-110-0
1482|data|DCB "smp_get_llnum",0|115-109-112-95-103-101-116-95-108-108-110-117-109-0
1496|data|DCB "smp_get_func_res_str",0|115-109-112-95-103-101-116-95-102-117-110-99-95-114-101-115-95-115-116-114-0
1517|data|DCB "smp_send_req",0|115-109-112-95-115-101-110-100-95-114-101-113-0
1530|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
1544|data|DCB "dStrHex",0|100-83-116-114-72-101-120-0
1552|data|DCB "smp_initiator_open",0|115-109-112-95-105-110-105-116-105-97-116-111-114-95-111-112-101-110-0
1571|data|DCB "smp_initiator_close",0|115-109-112-95-105-110-105-116-105-97-116-111-114-95-99-108-111-115-101-0
1591|data|DCB "smp_is_naa5",0|115-109-112-95-105-115-95-110-97-97-53-0
1603|data|DCB "smp_get_dhnum",0|115-109-112-95-103-101-116-95-100-104-110-117-109-0
1617|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1627|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
1640|data|DCB "optind",0|111-112-116-105-110-100-0
1647|data|DCB "__isoc99_sscanf",0|95-95-105-115-111-99-57-57-95-115-115-99-97-110-102-0
1663|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
1671|data|DCB "puts",0|112-117-116-115-0
1676|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1693|data|DCB "putchar",0|112-117-116-99-104-97-114-0
1701|data|DCB "abort",0|97-98-111-114-116-0
1707|data|DCB "memset",0|109-101-109-115-101-116-0
1714|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
1731|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
1745|data|DCB "fputc",0|102-112-117-116-99-0
1751|data|DCB "getenv",0|103-101-116-101-110-118-0
1758|data|DCB "optarg",0|111-112-116-97-114-103-0
1765|data|DCB "stderr",0|115-116-100-101-114-114-0
1772|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1784|data|DCB "fwrite",0|102-119-114-105-116-101-0
1791|data|DCB "strchr",0|115-116-114-99-104-114-0
1798|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1813|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1831|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1851|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1869|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1882|data|DCB "_edata",0|95-101-100-97-116-97-0
1889|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1901|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1915|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1927|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1935|data|DCB "_end",0|95-101-110-100-0
1940|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1956|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1972|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1982|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
1992|data|DCW 0|0-0
1994|data|DCW 0|0-0
1996|data|DCW 0|0-0
1998|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
2000|data|DCW 0; local  symbol: smp_initiator_close|0-0
2002|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
2004|data|DCW 0; local  symbol: dStrHex|0-0
2006|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
2008|data|DCW 0; local  symbol: smp_get_func_def_resp_len|0-0
2010|data|DCW 2; optind@@GLIBC_2.4|2-0
2012|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
2014|data|DCW 0; local  symbol: smp_is_naa5|0-0
2016|data|DCW 2; stderr@@GLIBC_2.4|2-0
2018|data|DCW 2; fwrite@@GLIBC_2.4|2-0
2020|data|DCW 2; getenv@@GLIBC_2.4|2-0
2022|data|DCW 2; puts@@GLIBC_2.4|2-0
2024|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
2026|data|DCW 0; local  symbol: __gmon_start__|0-0
2028|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
2030|data|DCW 2; strchr@@GLIBC_2.4|2-0
2032|data|DCW 0; local  symbol: smp_send_req|0-0
2034|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
2036|data|DCW 4; __isoc99_sscanf@@GLIBC_2.7|4-0
2038|data|DCW 2; memset@@GLIBC_2.4|2-0
2040|data|DCW 2; putchar@@GLIBC_2.4|2-0
2042|data|DCW 2; strncpy@@GLIBC_2.4|2-0
2044|data|DCW 2; __printf_chk@@GLIBC_2.4|2-0
2046|data|DCW 0; local  symbol: smp_get_dhnum|0-0
2048|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
2050|data|DCW 2; fputc@@GLIBC_2.4|2-0
2052|data|DCW 0; local  symbol: safe_strerror|0-0
2054|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
2056|data|DCW 0; local  symbol: smp_get_llnum|0-0
2058|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
2060|data|DCW 0; local  symbol: smp_get_func_res_str|0-0
2062|data|DCW 0; local  symbol: smp_initiator_open|0-0
2064|data|DCW 2; optarg@@GLIBC_2.4|2-0
2066|data|DCW 2; abort@@GLIBC_2.4|2-0
2068|data|DCW 1; global symbol: _bss_end__|1-0
2070|data|DCW 1; global symbol: _edata|1-0
2072|data|DCW 1; global symbol: __data_start|1-0
2074|data|DCW 1; global symbol: _end|1-0
2076|data|DCW 1; global symbol: __bss_end__|1-0
2078|data|DCW 1; global symbol: __libc_csu_init|1-0
2080|data|DCW 1; global symbol: __bss_start|1-0
2082|data|DCW 1; global symbol: main|1-0
2084|data|DCW 1; global symbol: _init|1-0
2086|data|DCW 1; global symbol: __libc_csu_fini|1-0
2088|data|DCW 1; global symbol: __bss_start__|1-0
2090|data|DCW 1; global symbol: _fini|1-0
2092|data|DCW 1; global symbol: __end__|1-0
2094|data|DCW 0|0-0
2096|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_544, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-227-1-0-0-16-0-0-0-32-0-0-0
2112|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_544, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-112-2-0-0-0-0-0-0
2128|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_544, 0x10, 0>; "libc.so.6"|1-0-2-0-13-1-0-0-16-0-0-0-0-0-0-0
2144|data|Elf32_Vernaux <0xD696917, 0, 4, aGlibc27 - byte_544, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-4-0-122-2-0-0-16-0-0-0
2160|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_544, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-112-2-0-0-0-0-0-0
2176|data|Elf32_Rel <0x12E1C, 0x17>; R_ARM_RELATIVE|28-46-1-0-23-0-0-0
2184|data|Elf32_Rel <0x12E20, 0x17>; R_ARM_RELATIVE|32-46-1-0-23-0-0-0
2192|data|Elf32_Rel <0x12E28, 0x17>; R_ARM_RELATIVE|40-46-1-0-23-0-0-0
2200|data|Elf32_Rel <0x12E2C, 0x17>; R_ARM_RELATIVE|44-46-1-0-23-0-0-0
2208|data|Elf32_Rel <0x12E30, 0x17>; R_ARM_RELATIVE|48-46-1-0-23-0-0-0
2216|data|Elf32_Rel <0x12E34, 0x17>; R_ARM_RELATIVE|52-46-1-0-23-0-0-0
2224|data|Elf32_Rel <0x12E38, 0x17>; R_ARM_RELATIVE|56-46-1-0-23-0-0-0
2232|data|Elf32_Rel <0x12E3C, 0x17>; R_ARM_RELATIVE|60-46-1-0-23-0-0-0
2240|data|Elf32_Rel <0x12E40, 0x17>; R_ARM_RELATIVE|64-46-1-0-23-0-0-0
2248|data|Elf32_Rel <0x12E44, 0x17>; R_ARM_RELATIVE|68-46-1-0-23-0-0-0
2256|data|Elf32_Rel <0x12E48, 0x17>; R_ARM_RELATIVE|72-46-1-0-23-0-0-0
2264|data|Elf32_Rel <0x12FD0, 0x17>; R_ARM_RELATIVE|208-47-1-0-23-0-0-0
2272|data|Elf32_Rel <0x12FEC, 0x17>; R_ARM_RELATIVE|236-47-1-0-23-0-0-0
2280|data|Elf32_Rel <0x12FF0, 0x17>; R_ARM_RELATIVE|240-47-1-0-23-0-0-0
2288|data|Elf32_Rel <0x13004, 0x17>; R_ARM_RELATIVE|4-48-1-0-23-0-0-0
2296|data|Elf32_Rel <0x13008, 0x17>; R_ARM_RELATIVE|8-48-1-0-23-0-0-0
2304|data|Elf32_Rel <0x13018, 0x17>; R_ARM_RELATIVE|24-48-1-0-23-0-0-0
2312|data|Elf32_Rel <0x13028, 0x17>; R_ARM_RELATIVE|40-48-1-0-23-0-0-0
2320|data|Elf32_Rel <0x13038, 0x17>; R_ARM_RELATIVE|56-48-1-0-23-0-0-0
2328|data|Elf32_Rel <0x13048, 0x17>; R_ARM_RELATIVE|72-48-1-0-23-0-0-0
2336|data|Elf32_Rel <0x13058, 0x17>; R_ARM_RELATIVE|88-48-1-0-23-0-0-0
2344|data|Elf32_Rel <0x13068, 0x17>; R_ARM_RELATIVE|104-48-1-0-23-0-0-0
2352|data|Elf32_Rel <0x13078, 0x17>; R_ARM_RELATIVE|120-48-1-0-23-0-0-0
2360|data|Elf32_Rel <0x12FD4, 0x315>; R_ARM_GLOB_DAT __cxa_finalize|212-47-1-0-21-3-0-0
2368|data|Elf32_Rel <0x12FD8, 0x515>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|216-47-1-0-21-5-0-0
2376|data|Elf32_Rel <0x12FDC, 0x715>; R_ARM_GLOB_DAT __stack_chk_guard|220-47-1-0-21-7-0-0
2384|data|Elf32_Rel <0x12FE0, 0x915>; R_ARM_GLOB_DAT optind|224-47-1-0-21-9-0-0
2392|data|Elf32_Rel <0x12FE4, 0xC15>; R_ARM_GLOB_DAT stderr|228-47-1-0-21-12-0-0
2400|data|Elf32_Rel <0x12FE8, 0x1115>; R_ARM_GLOB_DAT __gmon_start__|232-47-1-0-21-17-0-0
2408|data|Elf32_Rel <0x12FF4, 0x1F15>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-47-1-0-21-31-0-0
2416|data|Elf32_Rel <0x12FF8, 0x2115>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-47-1-0-21-33-0-0
2424|data|Elf32_Rel <0x12FFC, 0x2415>; R_ARM_GLOB_DAT optarg|252-47-1-0-21-36-0-0
2432|data|Elf32_Rel <0x12F60, 0x316>; R_ARM_JUMP_SLOT __cxa_finalize|96-47-1-0-22-3-0-0
2440|data|Elf32_Rel <0x12F64, 0x416>; R_ARM_JUMP_SLOT smp_initiator_close|100-47-1-0-22-4-0-0
2448|data|Elf32_Rel <0x12F68, 0x616>; R_ARM_JUMP_SLOT dStrHex|104-47-1-0-22-6-0-0
2456|data|Elf32_Rel <0x12F6C, 0x816>; R_ARM_JUMP_SLOT smp_get_func_def_resp_len|108-47-1-0-22-8-0-0
2464|data|Elf32_Rel <0x12F70, 0xA16>; R_ARM_JUMP_SLOT __stack_chk_fail|112-47-1-0-22-10-0-0
2472|data|Elf32_Rel <0x12F74, 0xB16>; R_ARM_JUMP_SLOT smp_is_naa5|116-47-1-0-22-11-0-0
2480|data|Elf32_Rel <0x12F78, 0xD16>; R_ARM_JUMP_SLOT fwrite|120-47-1-0-22-13-0-0
2488|data|Elf32_Rel <0x12F7C, 0xE16>; R_ARM_JUMP_SLOT getenv|124-47-1-0-22-14-0-0
2496|data|Elf32_Rel <0x12F80, 0xF16>; R_ARM_JUMP_SLOT puts|128-47-1-0-22-15-0-0
2504|data|Elf32_Rel <0x12F84, 0x1016>; R_ARM_JUMP_SLOT __libc_start_main|132-47-1-0-22-16-0-0
2512|data|Elf32_Rel <0x12F88, 0x1116>; R_ARM_JUMP_SLOT __gmon_start__|136-47-1-0-22-17-0-0
2520|data|Elf32_Rel <0x12F8C, 0x1216>; R_ARM_JUMP_SLOT getopt_long|140-47-1-0-22-18-0-0
2528|data|Elf32_Rel <0x12F90, 0x1316>; R_ARM_JUMP_SLOT strchr|144-47-1-0-22-19-0-0
2536|data|Elf32_Rel <0x12F94, 0x1416>; R_ARM_JUMP_SLOT smp_send_req|148-47-1-0-22-20-0-0
2544|data|Elf32_Rel <0x12F98, 0x1516>; R_ARM_JUMP_SLOT __errno_location|152-47-1-0-22-21-0-0
2552|data|Elf32_Rel <0x12F9C, 0x1616>; R_ARM_JUMP_SLOT __isoc99_sscanf|156-47-1-0-22-22-0-0
2560|data|Elf32_Rel <0x12FA0, 0x1716>; R_ARM_JUMP_SLOT memset|160-47-1-0-22-23-0-0
2568|data|Elf32_Rel <0x12FA4, 0x1816>; R_ARM_JUMP_SLOT putchar|164-47-1-0-22-24-0-0
2576|data|Elf32_Rel <0x12FA8, 0x1916>; R_ARM_JUMP_SLOT strncpy|168-47-1-0-22-25-0-0
2584|data|Elf32_Rel <0x12FAC, 0x1A16>; R_ARM_JUMP_SLOT __printf_chk|172-47-1-0-22-26-0-0
2592|data|Elf32_Rel <0x12FB0, 0x1B16>; R_ARM_JUMP_SLOT smp_get_dhnum|176-47-1-0-22-27-0-0
2600|data|Elf32_Rel <0x12FB4, 0x1C16>; R_ARM_JUMP_SLOT __fprintf_chk|180-47-1-0-22-28-0-0
2608|data|Elf32_Rel <0x12FB8, 0x1D16>; R_ARM_JUMP_SLOT fputc|184-47-1-0-22-29-0-0
2616|data|Elf32_Rel <0x12FBC, 0x1E16>; R_ARM_JUMP_SLOT safe_strerror|188-47-1-0-22-30-0-0
2624|data|Elf32_Rel <0x12FC0, 0x2016>; R_ARM_JUMP_SLOT smp_get_llnum|192-47-1-0-22-32-0-0
2632|data|Elf32_Rel <0x12FC4, 0x2216>; R_ARM_JUMP_SLOT smp_get_func_res_str|196-47-1-0-22-34-0-0
2640|data|Elf32_Rel <0x12FC8, 0x2316>; R_ARM_JUMP_SLOT smp_initiator_open|200-47-1-0-22-35-0-0
2648|data|Elf32_Rel <0x12FCC, 0x2516>; R_ARM_JUMP_SLOT abort|204-47-1-0-22-37-0-0
2656|code|PUSH            {R3,LR}; _init|8-64-45-233
2660|code|BL              sub_15A0|205-2-0-235
2664|code|POP             {R3,PC}|8-128-189-232
2668|code|PUSH            {LR}|4-224-45-229
2672|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0xA7C)|4-224-159-229
2676|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2680|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2684|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xA7C|216-36-1-0
2688|code|ADR             R12, 0xA88|0-198-143-226
2692|code|ADD             R12, R12, #0x12000|18-202-140-226
2696|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x12A88)]!; __imp___cxa_finalize|216-244-188-229
2700|code|ADR             R12, 0xA94|0-198-143-226
2704|code|ADD             R12, R12, #0x12000|18-202-140-226
2708|code|LDR             PC, [R12,#(smp_initiator_close_ptr - 0x12A94)]!; __imp_smp_initiator_close|208-244-188-229
2712|code|ADR             R12, 0xAA0|0-198-143-226
2716|code|ADD             R12, R12, #0x12000|18-202-140-226
2720|code|LDR             PC, [R12,#(dStrHex_ptr - 0x12AA0)]!; __imp_dStrHex|200-244-188-229
2724|code|ADR             R12, 0xAAC|0-198-143-226
2728|code|ADD             R12, R12, #0x12000|18-202-140-226
2732|code|LDR             PC, [R12,#(smp_get_func_def_resp_len_ptr - 0x12AAC)]!; __imp_smp_get_func_def_resp_len|192-244-188-229
2736|code|ADR             R12, 0xAB8|0-198-143-226
2740|code|ADD             R12, R12, #0x12000|18-202-140-226
2744|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x12AB8)]!; __imp___stack_chk_fail|184-244-188-229
2748|code|ADR             R12, 0xAC4|0-198-143-226
2752|code|ADD             R12, R12, #0x12000|18-202-140-226
2756|code|LDR             PC, [R12,#(smp_is_naa5_ptr - 0x12AC4)]!; __imp_smp_is_naa5|176-244-188-229
2760|code|ADR             R12, 0xAD0|0-198-143-226
2764|code|ADD             R12, R12, #0x12000|18-202-140-226
2768|code|LDR             PC, [R12,#(fwrite_ptr - 0x12AD0)]!; __imp_fwrite|168-244-188-229
2772|code|ADR             R12, 0xADC|0-198-143-226
2776|code|ADD             R12, R12, #0x12000|18-202-140-226
2780|code|LDR             PC, [R12,#(getenv_ptr - 0x12ADC)]!; __imp_getenv|160-244-188-229
2784|code|ADR             R12, 0xAE8|0-198-143-226
2788|code|ADD             R12, R12, #0x12000|18-202-140-226
2792|code|LDR             PC, [R12,#(puts_ptr - 0x12AE8)]!; __imp_puts|152-244-188-229
2796|code|ADR             R12, 0xAF4|0-198-143-226
2800|code|ADD             R12, R12, #0x12000|18-202-140-226
2804|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x12AF4)]!; __imp___libc_start_main|144-244-188-229
2808|code|ADR             R12, 0xB00|0-198-143-226
2812|code|ADD             R12, R12, #0x12000|18-202-140-226
2816|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x12B00)]!; __imp___gmon_start__|136-244-188-229
2820|code|ADR             R12, 0xB0C|0-198-143-226
2824|code|ADD             R12, R12, #0x12000|18-202-140-226
2828|code|LDR             PC, [R12,#(getopt_long_ptr - 0x12B0C)]!; __imp_getopt_long|128-244-188-229
2832|code|ADR             R12, 0xB18|0-198-143-226
2836|code|ADD             R12, R12, #0x12000|18-202-140-226
2840|code|LDR             PC, [R12,#(strchr_ptr - 0x12B18)]!; __imp_strchr|120-244-188-229
2844|code|ADR             R12, 0xB24|0-198-143-226
2848|code|ADD             R12, R12, #0x12000|18-202-140-226
2852|code|LDR             PC, [R12,#(smp_send_req_ptr - 0x12B24)]!; __imp_smp_send_req|112-244-188-229
2856|code|ADR             R12, 0xB30|0-198-143-226
2860|code|ADD             R12, R12, #0x12000|18-202-140-226
2864|code|LDR             PC, [R12,#(__errno_location_ptr - 0x12B30)]!; __imp___errno_location|104-244-188-229
2868|code|ADR             R12, 0xB3C|0-198-143-226
2872|code|ADD             R12, R12, #0x12000|18-202-140-226
2876|code|LDR             PC, [R12,#(__isoc99_sscanf_ptr - 0x12B3C)]!; __imp___isoc99_sscanf|96-244-188-229
2880|code|ADR             R12, 0xB48|0-198-143-226
2884|code|ADD             R12, R12, #0x12000|18-202-140-226
2888|code|LDR             PC, [R12,#(memset_ptr - 0x12B48)]!; __imp_memset|88-244-188-229
2892|code|ADR             R12, 0xB54|0-198-143-226
2896|code|ADD             R12, R12, #0x12000|18-202-140-226
2900|code|LDR             PC, [R12,#(putchar_ptr - 0x12B54)]!; __imp_putchar|80-244-188-229
2904|code|ADR             R12, 0xB60|0-198-143-226
2908|code|ADD             R12, R12, #0x12000|18-202-140-226
2912|code|LDR             PC, [R12,#(strncpy_ptr - 0x12B60)]!; __imp_strncpy|72-244-188-229
2916|code|ADR             R12, 0xB6C|0-198-143-226
2920|code|ADD             R12, R12, #0x12000|18-202-140-226
2924|code|LDR             PC, [R12,#(__printf_chk_ptr - 0x12B6C)]!; __imp___printf_chk|64-244-188-229
2928|code|ADR             R12, 0xB78|0-198-143-226
2932|code|ADD             R12, R12, #0x12000|18-202-140-226
2936|code|LDR             PC, [R12,#(smp_get_dhnum_ptr - 0x12B78)]!; __imp_smp_get_dhnum|56-244-188-229
2940|code|ADR             R12, 0xB84|0-198-143-226
2944|code|ADD             R12, R12, #0x12000|18-202-140-226
2948|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x12B84)]!; __imp___fprintf_chk|48-244-188-229
2952|code|ADR             R12, 0xB90|0-198-143-226
2956|code|ADD             R12, R12, #0x12000|18-202-140-226
2960|code|LDR             PC, [R12,#(fputc_ptr - 0x12B90)]!; __imp_fputc|40-244-188-229
2964|code|ADR             R12, 0xB9C|0-198-143-226
2968|code|ADD             R12, R12, #0x12000|18-202-140-226
2972|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x12B9C)]!; __imp_safe_strerror|32-244-188-229
2976|code|ADR             R12, 0xBA8|0-198-143-226
2980|code|ADD             R12, R12, #0x12000|18-202-140-226
2984|code|LDR             PC, [R12,#(smp_get_llnum_ptr - 0x12BA8)]!; __imp_smp_get_llnum|24-244-188-229
2988|code|ADR             R12, 0xBB4|0-198-143-226
2992|code|ADD             R12, R12, #0x12000|18-202-140-226
2996|code|LDR             PC, [R12,#(smp_get_func_res_str_ptr - 0x12BB4)]!; __imp_smp_get_func_res_str|16-244-188-229
3000|code|ADR             R12, 0xBC0|0-198-143-226
3004|code|ADD             R12, R12, #0x12000|18-202-140-226
3008|code|LDR             PC, [R12,#(smp_initiator_open_ptr - 0x12BC0)]!; __imp_smp_initiator_open|8-244-188-229
3012|code|ADR             R12, 0xBCC|0-198-143-226
3016|code|ADD             R12, R12, #0x12000|18-202-140-226
3020|code|LDR             PC, [R12,#(abort_ptr - 0x12BCC)]!; __imp_abort|0-244-188-229
3024|code|PUSH.W          {R4-R11,LR}|45-233-240-79
3028|code|SUBW            SP, SP, #0x99C|173-246-156-29
3032|code|LDR.W           R6, =(_GLOBAL_OFFSET_TABLE_ - 0xBE8)|223-248-132-104
3036|code|ADD             R4, SP, #0x9C0+var_974|19-172
3038|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x12F54)|223-248-132-56
3042|code|MOV             R8, R0|128-70
3044|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
3046|code|LDR.W           R2, =(dword_16E4 - 0xBF2)|223-248-128-40
3050|code|STR             R4, [SP,#0x9C0+var_98C]|13-148
3052|code|ADD             R0, SP, #0x9C0+var_630|228-168
3054|code|ADD             R2, PC; dword_16E4|122-68
3056|code|STR             R0, [SP,#0x9C0+s]|5-144
3058|code|MOV             R9, R1|137-70
3060|code|ADD             R1, SP, #0x9C0+var_83C|97-169
3062|code|STR             R1, [SP,#0x9C0+var_988]|14-145
3064|code|MOVS            R7, #0|0-39
3066|code|LDR             R3, [R6,R3]; __stack_chk_guard|243-88
3068|code|MOV             R12, R1|140-70
3070|code|LDR             R0, [R2]|16-104
3072|code|MOV.W           R10, #0|79-240-0-10
3076|code|LDR             R1, [R2,#(dword_16E8 - 0x16E4)]|81-104
3078|code|MOV.W           R11, #0|79-240-0-11
3082|code|LDR             R2, [R2,#(dword_16EC - 0x16E4)]|146-104
3084|code|MOV             R5, R7|61-70
3086|code|LDR.W           LR, [R3]|211-248-0-224
3090|code|STRD.W          R10, R11, [SP,#0x9C0+var_998]|205-233-10-171
3094|code|STM.W           R12!, {R0-R2}|172-232-7-0
3098|code|MOV             R1, R7; c|57-70
3100|code|LDR             R0, [SP,#0x9C0+s]; s|5-152
3102|code|MOV.W           R2, #0x200; n|79-244-0-114
3106|code|LDR.W           R11, =(aBHhiRsVv - 0xC34); "b:hHI:rs:vV"|223-248-72-184
3110|code|LDR.W           R10, =(off_13008 - 0xC38); "broadcast"|223-248-72-168
3114|code|STR             R3, [SP,#0x9C0+var_9A4]|7-147
3116|code|ADD             R3, SP, #0x9C0+var_970|20-171
3118|code|STR             R7, [SP,#0x9C0+var_974]|19-151
3120|code|ADD             R11, PC; "b:hHI:rs:vV"|251-68
3122|code|STR             R3, [SP,#0x9C0+var_9A8]|6-147
3124|code|ADD             R10, PC; off_13008|250-68
3126|code|STR             R7, [SP,#0x9C0+var_99C]|9-151
3128|code|STR.W           LR, [SP,#0x9C0+var_2C]|205-248-148-233
3132|code|BLX             memset|255-247-128-239
3136|code|LDR             R4, [SP,#0x9C0+var_9A8]|6-156
3138|code|STR             R7, [SP,#0x9C0+var_990]|12-151
3140|code|STR             R7, [SP,#0x9C0+var_9A0]|8-151
3142|code|STR             R4, [SP,#0x9C0+longind]; longind|0-148
3144|code|MOV             R2, R11; shortopts|90-70
3146|code|MOV             R0, R8; argc|64-70
3148|code|MOV             R1, R9; argv|73-70
3150|code|MOV             R3, R10; longopts|83-70
3152|code|STR             R7, [R4]|39-96
3154|code|BLX             getopt_long|255-247-88-239
3158|code|ADDS            R2, R0, #1|66-28
3160|code|BEQ.W           loc_D9E|0-240-161-128
3164|code|SUB.W           R3, R0, #0x3F ; '?'; switch 56 cases|160-241-63-3
3168|code|CMP             R3, #0x37|55-43
3170|code|BHI.W           def_C66; jumptable 00000C66 default case, cases 64-71,74-85,87-97,99-103,105-113,116,117|0-242-134-128
3174|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
3178|data|DCB 0x76; jump table for switch statement|118
3179|data|DCB 0x84|132
3180|data|DCB 0x84|132
3181|data|DCB 0x84|132
3182|data|DCB 0x84|132
3183|data|DCB 0x84|132
3184|data|DCB 0x84|132
3185|data|DCB 0x84|132
3186|data|DCB 0x84|132
3187|data|DCB 0x72|114
3188|data|DCB 0x60|96
3189|data|DCB 0x84|132
3190|data|DCB 0x84|132
3191|data|DCB 0x84|132
3192|data|DCB 0x84|132
3193|data|DCB 0x84|132
3194|data|DCB 0x84|132
3195|data|DCB 0x84|132
3196|data|DCB 0x84|132
3197|data|DCB 0x84|132
3198|data|DCB 0x84|132
3199|data|DCB 0x84|132
3200|data|DCB 0x84|132
3201|data|DCB 0x47|71
3202|data|DCB 0x84|132
3203|data|DCB 0x84|132
3204|data|DCB 0x84|132
3205|data|DCB 0x84|132
3206|data|DCB 0x84|132
3207|data|DCB 0x84|132
3208|data|DCB 0x84|132
3209|data|DCB 0x84|132
3210|data|DCB 0x84|132
3211|data|DCB 0x84|132
3212|data|DCB 0x84|132
3213|data|DCB 0x31|49
3214|data|DCB 0x84|132
3215|data|DCB 0x84|132
3216|data|DCB 0x84|132
3217|data|DCB 0x84|132
3218|data|DCB 0x84|132
3219|data|DCB 0x76|118
3220|data|DCB 0x84|132
3221|data|DCB 0x84|132
3222|data|DCB 0x84|132
3223|data|DCB 0x84|132
3224|data|DCB 0x84|132
3225|data|DCB 0x84|132
3226|data|DCB 0x84|132
3227|data|DCB 0x84|132
3228|data|DCB 0x84|132
3229|data|DCB 0x2D|45
3230|data|DCB 0x1E|30
3231|data|DCB 0x84|132
3232|data|DCB 0x84|132
3233|data|DCB 0x1C|28
3234|code|ADDS            R5, #1; jumptable 00000C66 case 118|1-53
3236|code|B               loc_C46|207-231
3238|code|LDR.W           R3, =(optarg_ptr - 0x12F54); jumptable 00000C66 case 115|223-248-204-55
3242|code|LDR             R3, [R6,R3]; optarg|243-88
3244|code|LDR             R0, [R3]|24-104
3246|code|BLX             smp_get_llnum|255-247-120-239
3250|code|ADDS            R3, R1, #1|75-28
3252|code|IT EQ|8-191
3254|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
3258|code|BEQ.W           loc_103C|0-240-191-129
3262|code|STRD.W          R0, R1, [SP,#0x9C0+var_998]|205-233-10-1
3266|code|B               loc_C46|192-231
3268|code|LDR             R3, [SP,#0x9C0+var_99C]; jumptable 00000C66 case 114|9-155
3270|code|ADDS            R3, #1|1-51
3272|code|STR             R3, [SP,#0x9C0+var_99C]|9-147
3274|code|B               loc_C46|188-231
3276|code|LDR.W           R3, =(optarg_ptr - 0x12F54); jumptable 00000C66 case 98|223-248-164-55
3280|code|LDR             R3, [R6,R3]; optarg|243-88
3282|code|LDR             R0, [R3]|24-104
3284|code|BLX             smp_get_dhnum|255-247-76-239
3288|code|CMP             R0, #0xF|15-40
3290|code|STR             R0, [SP,#0x9C0+var_990]|12-144
3292|code|BLS             loc_C46|179-217
3294|code|LDR.W           R3, =(stderr_ptr - 0x12F54)|223-248-152-55
3298|code|MOVS            R1, #1; size|1-33
3300|code|LDR.W           R0, =(aBadArgumentToB - 0xCF0); "bad argument to '--broadcast', expect v"...|223-248-148-7
3304|code|MOVS            R2, #0x39 ; '9'; n|57-34
3306|code|LDR             R3, [R6,R3]; stderr|243-88
3308|code|ADD             R0, PC; "bad argument to '--broadcast', expect v"...|120-68
3310|code|LDR             R3, [R3]; s|27-104
3312|code|BLX             fwrite|255-247-234-238
3316|code|MOVS            R0, #0x5B ; '['|91-32
3318|code|B               loc_D14|13-224
3320|code|LDR.W           R0, =(stderr_ptr - 0x12F54); jumptable 00000C66 case 86|223-248-124-7
3324|code|MOVS            R1, #1|1-33
3326|code|LDR.W           R2, =(aVersionS - 0xD0C); "version: %s\n"|223-248-128-39
3330|code|LDR.W           R3, =(a10420130604 - 0xD0E); "1.04 20130604"|223-248-128-55
3334|code|LDR             R0, [R6,R0]; stderr|48-88
3336|code|ADD             R2, PC; "version: %s\n"|122-68
3338|code|ADD             R3, PC; "1.04 20130604"|123-68
3340|code|LDR             R0, [R0]|0-104
3342|code|BLX             __fprintf_chk|255-247-54-239
3346|code|MOVS            R0, #0|0-32
3348|code|LDR             R3, [SP,#0x9C0+var_9A4]|7-155
3350|code|LDR.W           R2, [SP,#0x9C0+var_2C]|221-248-148-41
3354|code|LDR             R3, [R3]|27-104
3356|code|CMP             R2, R3|154-66
3358|code|BNE.W           loc_12A4|64-240-193-130
3362|code|ADDW            SP, SP, #0x99C|13-246-156-29
3366|code|POP.W           {R4-R11,PC}|189-232-240-143
3370|code|LDR.W           R3, =(optarg_ptr - 0x12F54); jumptable 00000C66 case 73|223-248-72-55
3374|code|ADD.W           R12, SP, #0x9C0+dest|13-245-200-124
3378|code|STR.W           R12, [SP,#0x9C0+var_9A8]|205-248-24-192
3382|code|MOV.W           R2, #0x100; n|79-244-128-114
3386|code|MOV             R0, R12; dest|96-70
3388|code|LDR             R3, [R6,R3]; optarg|243-88
3390|code|LDR             R1, [R3]; src|25-104
3392|code|BLX             strncpy|255-247-10-239
3396|code|LDR.W           R12, [SP,#0x9C0+var_9A8]|221-248-24-192
3400|code|STRB.W          R7, [R12,#0xFF]|140-248-255-112
3404|code|B               loc_C46|123-231
3406|code|LDR             R3, [SP,#0x9C0+var_9A0]; jumptable 00000C66 case 72|8-155
3408|code|ADDS            R3, #1|1-51
3410|code|STR             R3, [SP,#0x9C0+var_9A0]|8-147
3412|code|B               loc_C46|119-231
3414|code|LDR.W           R3, =(stderr_ptr - 0x12F54); jumptable 00000C66 cases 63,104|223-248-32-55
3418|code|MOVS            R1, #1; size|1-33
3420|code|LDR.W           R0, =(aUsageSmpRepBro - 0xD6A); "Usage: smp_rep_broadcast [--broadcast=B"...|223-248-40-7
3424|code|MOVW            R2, #0x37E; n|64-242-126-50
3428|code|LDR             R3, [R6,R3]; stderr|243-88
3430|code|ADD             R0, PC; "Usage: smp_rep_broadcast [--broadcast=B"...|120-68
3432|code|LDR             R3, [R3]; s|27-104
3434|code|BLX             fwrite|255-247-174-238
3438|code|MOVS            R0, #0|0-32
3440|code|B               loc_D14|208-231
3442|code|LDR.W           R4, =(stderr_ptr - 0x12F54); jumptable 00000C66 default case, cases 64-71,74-85,87-97,99-103,105-113,116,117|223-248-4-71
3446|code|MOV             R3, R0|3-70
3448|code|LDR.W           R2, =(aUnrecognisedSw - 0xD84); "unrecognised switch code 0x%x ??\n"|223-248-16-39
3452|code|MOVS            R1, #1|1-33
3454|code|LDR             R4, [R6,R4]; stderr|52-89
3456|code|ADD             R2, PC; "unrecognised switch code 0x%x ??\n"|122-68
3458|code|LDR             R0, [R4]|32-104
3460|code|BLX             __fprintf_chk|255-247-250-238
3464|code|LDR.W           R0, =(aUsageSmpRepBro - 0xD94); "Usage: smp_rep_broadcast [--broadcast=B"...|223-248-4-7
3468|code|LDR             R3, [R4]; s|35-104
3470|code|MOVS            R1, #1; size|1-33
3472|code|ADD             R0, PC; "Usage: smp_rep_broadcast [--broadcast=B"...|120-68
3474|code|MOVW            R2, #0x37E; n|64-242-126-50
3478|code|BLX             fwrite|255-247-152-238
3482|code|MOVS            R0, #0x5B ; '['|91-32
3484|code|B               loc_D14|186-231
3486|code|LDR.W           R3, =(optind_ptr - 0x12F54)|223-248-244-54
3490|code|STR             R4, [SP,#0x9C0+var_9A8]|6-148
3492|code|LDR.W           R10, [R6,R3]; optind|86-248-3-160
3496|code|LDR.W           R7, [R10]|218-248-0-112
3500|code|CMP             R8, R7|184-69
3502|code|BLE             loc_E1C|53-221
3504|code|LDR             R3, [SP,#0x9C0+s]|5-155
3506|code|LDRB.W          R11, [R3]|147-248-0-176
3510|code|CMP.W           R11, #0|187-241-0-15
3514|code|BEQ             loc_DFE|32-208
3516|code|LDR.W           R3, =(stderr_ptr - 0x12F54)|223-248-184-54
3520|code|MOV             R5, R10|85-70
3522|code|LDR.W           R4, =(aUnexpectedExtr - 0xDCC); "Unexpected extra argument: %s\n"|223-248-212-70
3526|code|LDR             R7, [R6,R3]; stderr|247-88
3528|code|ADD             R4, PC; "Unexpected extra argument: %s\n"|124-68
3530|code|B               loc_DE0|9-224
3532|code|LDR.W           R3, [R9,R3,LSL#2]|89-248-35-48
3536|code|MOVS            R1, #1|1-33
3538|code|LDR             R0, [R7]|56-104
3540|code|MOV             R2, R4|34-70
3542|code|BLX             __fprintf_chk|255-247-210-238
3546|code|LDR             R3, [R5]|43-104
3548|code|ADDS            R3, #1|1-51
3550|code|STR             R3, [R5]|43-96
3552|code|LDR.W           R3, [R10]|218-248-0-48
3556|code|CMP             R8, R3|152-69
3558|code|BGT             loc_DCC|241-220
3560|code|LDR.W           R0, =(aUsageSmpRepBro - 0xDF8); "Usage: smp_rep_broadcast [--broadcast=B"...|223-248-176-6
3564|code|MOVS            R1, #1; size|1-33
3566|code|LDR             R3, [R7]; s|59-104
3568|code|MOVW            R2, #0x37E; n|64-242-126-50
3572|code|ADD             R0, PC; "Usage: smp_rep_broadcast [--broadcast=B"...|120-68
3574|code|BLX             fwrite|255-247-104-238
3578|code|MOVS            R0, #0x5B ; '['|91-32
3580|code|B               loc_D14|138-231
3582|code|LDR             R4, [SP,#0x9C0+s]|5-156
3584|code|MOVW            R2, #0x1FF; n|64-242-255-18
3588|code|LDR.W           R1, [R9,R7,LSL#2]; src|89-248-39-16
3592|code|ADDS            R7, #1|1-55
3594|code|MOV             R0, R4; dest|32-70
3596|code|BLX             strncpy|255-247-164-238
3600|code|CMP             R8, R7|184-69
3602|code|STRB.W          R11, [R4,#0x1FF]|132-248-255-177
3606|code|STR.W           R7, [R10]|202-248-0-112
3610|code|BGT             loc_DBC|207-220
3612|code|LDR             R3, [SP,#0x9C0+s]|5-155
3614|code|LDRB            R3, [R3]|27-120
3616|code|CMP             R3, #0|0-43
3618|code|BEQ.W           loc_FFA|0-240-234-128
3622|code|LDR             R0, [SP,#0x9C0+s]; s|5-152
3624|code|MOVS            R1, #0x2C ; ','; c|44-33
3626|code|BLX             strchr|255-247-114-238
3630|code|CBZ             R0, loc_E60|184-177
3632|code|LDR.W           R1, =(aD - 0xE3C); "%d"|223-248-108-22
3636|code|MOVS            R3, #0|0-35
3638|code|LDR             R2, [SP,#0x9C0+var_98C]|13-154
3640|code|ADD             R1, PC; "%d"|121-68
3642|code|STRB.W          R3, [R0],#1|0-248-1-59
3646|code|BLX             __isoc99_sscanf|255-247-122-238
3650|code|CMP             R0, #1|1-40
3652|code|BEQ             loc_E60|12-208
3654|code|LDR.W           R3, =(stderr_ptr - 0x12F54)|223-248-48-54
3658|code|MOVS            R1, #1; size|1-33
3660|code|LDR.W           R0, =(aExpectedNumber - 0xE58); "expected number after separator in SMP_"...|223-248-84-6
3664|code|MOVS            R2, #0x33 ; '3'; n|51-34
3666|code|LDR             R3, [R6,R3]; stderr|243-88
3668|code|ADD             R0, PC; "expected number after separator in SMP_"...|120-68
3670|code|LDR             R3, [R3]; s|27-104
3672|code|BLX             fwrite|255-247-54-238
3676|code|MOVS            R0, #0x5B ; '['|91-32
3678|code|B               loc_D14|89-231
3680|code|LDRD.W          R2, R3, [SP,#0x9C0+var_998]|221-233-10-35
3684|code|ORRS            R3, R2|19-67
3686|code|BEQ.W           loc_1056|0-240-246-128
3690|code|LDRD.W          R0, R1, [SP,#0x9C0+var_998]|221-233-10-1
3694|code|BLX             smp_is_naa5|255-247-38-238
3698|code|CMP             R0, #0|0-40
3700|code|BEQ.W           loc_115C|0-240-114-129
3704|code|ADD.W           R8, SP, #0x9C0+dest|13-245-200-120
3708|code|LDRD.W          R2, R3, [SP,#0x9C0+var_998]|221-233-10-35
3712|code|ADD.W           R10, SP, #0x9C0+var_958|13-241-104-10
3716|code|STR             R5, [SP,#0x9C0+var_9B4]|3-149
3718|code|LDR             R0, [SP,#0x9C0+s]|5-152
3720|code|STRD.W          R2, R3, [SP,#0x9C0+longind]|205-233-0-35
3724|code|MOV             R2, R8|66-70
3726|code|LDR             R3, [SP,#0x9C0+var_98C]|13-155
3728|code|LDR             R1, [R3]|25-104
3730|code|STR.W           R10, [SP,#0x9C0+var_9B8]|205-248-8-160
3734|code|BLX             smp_initiator_open|255-247-144-238
3738|code|CMP             R0, #0|0-40
3740|code|BLT.W           loc_1038|192-242-204-128
3744|code|LDR             R0, [SP,#0x9C0+var_988]|14-152
3746|code|MOVS            R2, #0xFF|255-34
3748|code|LDR             R3, [SP,#0x9C0+var_990]|12-155
3750|code|STRB            R2, [R0,#2]|130-112
3752|code|AND.W           R3, R3, #0xF|3-240-15-3
3756|code|STRB            R3, [R0,#4]|3-113
3758|code|CMP             R5, #0|0-45
3760|code|BNE.W           loc_10B4|64-240-0-129
3764|code|LDR             R4, [SP,#0x9C0+var_9A8]|6-156
3766|code|MOV             R1, R5; c|41-70
3768|code|MOVS            R2, #0x18; n|24-34
3770|code|ADD.W           R8, SP, #0x9C0+var_430|13-245-178-104
3774|code|MOVS            R7, #0xC|12-39
3776|code|MOV             R0, R4; s|32-70
3778|code|BLX             memset|255-247-62-238
3782|code|LDR             R3, [SP,#0x9C0+var_988]|14-155
3784|code|MOV             R0, R10|80-70
3786|code|MOV             R1, R4|33-70
3788|code|MOV             R2, R5|42-70
3790|code|STR             R4, [SP,#0x9C0+var_9A8]|6-148
3792|code|STR             R3, [R4,#4]|99-96
3794|code|MOVW            R3, #0x404|64-242-4-67
3798|code|STR.W           R8, [R4,#0xC]|196-248-12-128
3802|code|STR             R7, [R4]|39-96
3804|code|STR             R3, [R4,#8]|163-96
3806|code|BLX             smp_send_req|255-247-30-238
3810|code|CMP             R0, #0|0-40
3812|code|BNE.W           loc_1432|64-240-165-130
3816|code|LDR             R3, [SP,#0x9C0+var_9A8]|6-155
3818|code|LDR             R3, [R3,#0x14]|91-105
3820|code|CMP             R3, #0|0-43
3822|code|BNE.W           loc_118E|64-240-78-129
3826|code|LDR             R3, [SP,#0x9C0+var_9A8]|6-155
3828|code|LDR             R4, [R3,#0x10]|28-105
3830|code|CMP             R4, #3|3-44
3832|code|BLS.W           loc_11CC|64-242-104-129
3836|code|LDRB.W          R9, [R8,#3]|152-248-3-144
3840|code|CMP.W           R9, #0|185-241-0-15
3844|code|BNE             loc_F10|4-209
3846|code|LDRB.W          R3, [R8,#2]|152-248-2-48
3850|code|CMP             R3, #0|0-43
3852|code|BEQ.W           loc_1292|0-240-193-129
3856|code|ADD.W           R0, R9, #1|9-241-1-0
3860|code|LSLS            R0, R0, #2|128-0
3862|code|CMP             R0, R4|160-66
3864|code|BLE.W           loc_11C8|64-243-86-129
3868|code|CMP             R4, #0|0-44
3870|code|BLT.W           loc_11C8|192-242-83-129
3874|code|CBZ             R5, loc_F3C|93-177
3876|code|LDR.W           R7, =(stderr_ptr - 0x12F54)|223-248-80-117
3880|code|MOVS            R1, #1|1-33
3882|code|LDR.W           R2, =(aActualResponse - 0xF36); "actual response length [%d] less than d"...|223-248-124-37
3886|code|MOV             R3, R4|35-70
3888|code|LDR             R7, [R6,R7]; stderr|247-89
3890|code|ADD             R2, PC; "actual response length [%d] less than d"...|122-68
3892|code|STR             R0, [SP,#0x9C0+longind]|0-144
3894|code|LDR             R0, [R7]|56-104
3896|code|BLX             __fprintf_chk|255-247-32-238
3900|code|LDR             R3, [SP,#0x9C0+var_9A0]|8-155
3902|code|LDR             R2, [SP,#0x9C0+var_99C]|9-154
3904|code|ORRS            R3, R2|19-67
3906|code|BEQ.W           loc_11A0|0-240-45-129
3910|code|LDR             R3, [SP,#0x9C0+var_9A0]|8-155
3912|code|CMP             R3, #0|0-43
3914|code|BEQ.W           loc_1246|0-240-124-129
3918|code|MOV             R1, R4; len|33-70
3920|code|MOV             R0, R8; str|64-70
3922|code|MOVS            R2, #1; no_ascii|1-34
3924|code|BLX             dStrHex|255-247-160-237
3928|code|LDR             R2, [SP,#0x9C0+var_988]|14-154
3930|code|LDRB.W          R1, [R8]|152-248-0-16
3934|code|LDRB.W          R3, [R8,#2]|152-248-2-48
3938|code|CMP             R1, #0x41 ; 'A'|65-41
3940|code|LDRB            R2, [R2,#1]|82-120
3942|code|LDRB.W          R1, [R8,#1]|152-248-1-16
3946|code|ITE EQ|12-191
3948|code|MOVEQ           R4, #0|0-36
3950|code|MOVNE           R4, #0x61 ; 'a'|97-36
3952|code|CMP             R1, R2|145-66
3954|code|IT NE|24-191
3956|code|MOVNE           R4, #0x61 ; 'a'|97-36
3958|code|CMP             R3, #0|0-43
3960|code|BEQ.W           loc_1214|0-240-76-129
3964|code|MOV             R4, R3|28-70
3966|code|CBZ             R5, loc_FA4|141-177
3968|code|LDR.W           R3, =(stderr_ptr - 0x12F54)|223-248-244-52
3972|code|MOV.W           R1, #0x100|79-244-128-113
3976|code|ADD             R2, SP, #0x9C0+var_730|164-170
3978|code|MOV             R0, R4|32-70
3980|code|LDR             R7, [R6,R3]; stderr|247-88
3982|code|LDR             R7, [R7]|63-104
3984|code|BLX             smp_get_func_res_str|255-247-12-238
3988|code|LDR.W           R2, =(aReportBroadcas - 0xF9E); "Report broadcast result: %s\n"|223-248-20-37
3992|code|MOVS            R1, #1|1-33
3994|code|ADD             R2, PC; "Report broadcast result: %s\n"|122-68
3996|code|MOV             R3, R0|3-70
3998|code|MOV             R0, R7|56-70
4000|code|BLX             __fprintf_chk|255-247-236-237
4004|code|MOV             R0, R10|80-70
4006|code|BLX             smp_initiator_close|255-247-114-237
4010|code|CMP             R0, #0|0-40
4012|code|BLT             loc_FD0|16-219
4014|code|CBZ             R4, loc_FB2|4-177
4016|code|CBNZ            R5, loc_FB6|13-185
4018|code|MOV             R0, R4|32-70
4020|code|B               loc_D14|174-230
4022|code|LDR.W           R0, =(stderr_ptr - 0x12F54)|223-248-192-4
4026|code|MOVS            R1, #1|1-33
4028|code|LDR.W           R2, =(aExitStatusDInd - 0xFC8); "Exit status %d indicates error detected"...|223-248-240-36
4032|code|MOV             R3, R4|35-70
4034|code|LDR             R0, [R6,R0]; stderr|48-88
4036|code|ADD             R2, PC; "Exit status %d indicates error detected"...|122-68
4038|code|LDR             R0, [R0]|0-104
4040|code|BLX             __fprintf_chk|255-247-216-237
4044|code|MOV             R0, R4|32-70
4046|code|B               loc_D14|161-230
4048|code|LDR.W           R3, =(stderr_ptr - 0x12F54)|223-248-164-52
4052|code|LDR             R7, [R6,R3]; stderr|247-88
4054|code|BLX             __errno_location|255-247-168-237
4058|code|LDR             R7, [R7]|63-104
4060|code|LDR             R0, [R0]; errnum|0-104
4062|code|BLX             safe_strerror|255-247-218-237
4066|code|LDR.W           R2, =(aCloseErrorS - 0xFEC); "close error: %s\n"|223-248-208-36
4070|code|MOVS            R1, #1|1-33
4072|code|ADD             R2, PC; "close error: %s\n"|122-68
4074|code|MOV             R3, R0|3-70
4076|code|MOV             R0, R7|56-70
4078|code|BLX             __fprintf_chk|255-247-198-237
4082|code|ADDS            R3, R4, #1|99-28
4084|code|BNE             loc_FAE|219-209
4086|code|MOVS            R4, #0x63 ; 'c'|99-36
4088|code|B               loc_FAE|217-231
4090|code|LDR.W           R0, =(aSmpUtilsDevice - 0x1002); "SMP_UTILS_DEVICE"|223-248-188-4
4094|code|ADD             R0, PC; "SMP_UTILS_DEVICE"|120-68
4096|code|BLX             getenv|255-247-104-237
4100|code|CMP             R0, #0|0-40
4102|code|BEQ             loc_108A|64-208
4104|code|MOV             R1, R0; src|1-70
4106|code|MOVW            R2, #0x1FF; n|64-242-255-18
4110|code|LDR             R0, [SP,#0x9C0+s]; dest|5-152
4112|code|BLX             strncpy|255-247-162-237
4116|code|B               loc_E26|7-231
4118|code|LDR.W           R3, =(stderr_ptr - 0x12F54)|223-248-96-52
4122|code|LDR             R3, [R6,R3]; stderr|243-88
4124|code|LDR             R4, [R3]|28-104
4126|code|BLX             __errno_location|255-247-132-237
4130|code|LDR             R0, [R0]; errnum|0-104
4132|code|BLX             safe_strerror|255-247-182-237
4136|code|LDR.W           R2, =(aCloseErrorS - 0x1032); "close error: %s\n"|223-248-144-36
4140|code|MOVS            R1, #1|1-33
4142|code|ADD             R2, PC; "close error: %s\n"|122-68
4144|code|MOV             R3, R0|3-70
4146|code|MOV             R0, R4|32-70
4148|code|BLX             __fprintf_chk|255-247-162-237
4152|code|MOVS            R0, #0x5C ; '\'|92-32
4154|code|B               loc_D14|107-230
4156|code|LDR.W           R3, =(stderr_ptr - 0x12F54)|223-248-56-52
4160|code|MOVS            R1, #1; size|1-33
4162|code|LDR.W           R0, =(aBadArgumentToS - 0x104E); "bad argument to '--sa'\n"|223-248-124-4
4166|code|MOVS            R2, #0x17; n|23-34
4168|code|LDR             R3, [R6,R3]; stderr|243-88
4170|code|ADD             R0, PC; "bad argument to '--sa'\n"|120-68
4172|code|LDR             R3, [R3]; s|27-104
4174|code|BLX             fwrite|255-247-60-237
4178|code|MOVS            R0, #0x5B ; '['|91-32
4180|code|B               loc_D14|94-230
4182|code|LDR.W           R0, =(aSmpUtilsSasAdd - 0x105E); "SMP_UTILS_SAS_ADDR"|223-248-108-4
4186|code|ADD             R0, PC; "SMP_UTILS_SAS_ADDR"|120-68
4188|code|BLX             getenv|255-247-58-237
4192|code|CBZ             R0, loc_1080|112-177
4194|code|BLX             smp_get_llnum|255-247-158-237
4198|code|ADDS            R2, R1, #1|74-28
4200|code|IT EQ|8-191
4202|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
4206|code|BEQ.W           loc_126C|0-240-253-128
4210|code|MOV             R2, R0|2-70
4212|code|MOV             R3, R1|11-70
4214|code|STRD.W          R2, R3, [SP,#0x9C0+var_998]|205-233-10-35
4218|code|ORRS            R3, R2|19-67
4220|code|BNE.W           loc_E6A|127-244-245-174
4224|code|MOVS            R2, #0|0-34
4226|code|MOVS            R3, #0|0-35
4228|code|STRD.W          R2, R3, [SP,#0x9C0+var_998]|205-233-10-35
4232|code|B               loc_E78|246-230
4234|code|LDR             R3, =(stderr_ptr - 0x12F54)|251-75
4236|code|MOVS            R1, #1; size|1-33
4238|code|LDR.W           R0, =(aMissingDeviceN - 0x109A); "missing device name on command line\n  "...|223-248-56-4
4242|code|MOVS            R2, #0x62 ; 'b'; n|98-34
4244|code|LDR             R4, [R6,R3]; stderr|244-88
4246|code|ADD             R0, PC; "missing device name on command line\n  "...|120-68
4248|code|LDR             R3, [R4]; s|35-104
4250|code|BLX             fwrite|255-247-22-237
4254|code|LDR.W           R0, =(aUsageSmpRepBro - 0x10AA); "Usage: smp_rep_broadcast [--broadcast=B"...|223-248-44-4
4258|code|LDR             R3, [R4]; s|35-104
4260|code|MOVS            R1, #1; size|1-33
4262|code|ADD             R0, PC; "Usage: smp_rep_broadcast [--broadcast=B"...|120-68
4264|code|MOVW            R2, #0x37E; n|64-242-126-50
4268|code|BLX             fwrite|255-247-12-237
4272|code|MOVS            R0, #0x5B ; '['|91-32
4274|code|B               loc_D14|47-230
4276|code|LDR             R3, =(stderr_ptr - 0x12F54)|240-75
4278|code|MOVS            R1, #1; size|1-33
4280|code|LDR.W           R0, =(aReportBroadcas_0 - 0x10CC); "    Report broadcast request: "|223-248-20-4
4284|code|MOVS            R2, #0x1E; n|30-34
4286|code|LDR.W           R8, =(a02x - 0x10CE); "%02x "|223-248-20-132
4290|code|MOV.W           R11, #0|79-240-0-11
4294|code|LDR             R7, [R6,R3]; stderr|247-88
4296|code|ADD             R0, PC; "    Report broadcast request: "|120-68
4298|code|ADD             R8, PC; "%02x "|248-68
4300|code|LDR             R3, [R7]; s|59-104
4302|code|BLX             fwrite|255-247-252-236
4306|code|LDR.W           R9, [SP,#0x9C0+var_9A8]|221-248-24-144
4310|code|LDR             R4, [SP,#0x9C0+var_988]|14-156
4312|code|STR             R5, [SP,#0x9C0+s]|5-149
4314|code|MOV             R5, R11|93-70
4316|code|MOV             R11, R7|187-70
4318|code|MOVS            R1, #1|1-33
4320|code|LDRB            R3, [R4,R5]|99-93
4322|code|LDR             R0, [R7]|56-104
4324|code|ADD             R5, R1|13-68
4326|code|MOV             R2, R8|66-70
4328|code|BLX             __fprintf_chk|255-247-72-237
4332|code|CMP             R5, #0xC|12-45
4334|code|BNE             loc_10DE|246-209
4336|code|MOV             R4, R9|76-70
4338|code|STR.W           R9, [SP,#0x9C0+var_9A8]|205-248-24-144
4342|code|MOV             R9, R11|217-70
4344|code|MOVS            R0, #0xA; c|10-32
4346|code|LDR.W           R1, [R9]; stream|217-248-0-16
4350|code|MOV             R11, R5|171-70
4352|code|LDR             R5, [SP,#0x9C0+s]|5-157
4354|code|BLX             fputc|255-247-66-237
4358|code|MOV             R0, R4; s|32-70
4360|code|MOVS            R1, #0; c|0-33
4362|code|MOVS            R2, #0x18; n|24-34
4364|code|ADD.W           R8, SP, #0x9C0+var_430|13-245-178-104
4368|code|BLX             memset|255-247-22-237
4372|code|MOV             R1, R4|33-70
4374|code|STR             R4, [SP,#0x9C0+var_9A8]|6-148
4376|code|MOV             R0, R10|80-70
4378|code|STR.W           R11, [R4]|196-248-0-176
4382|code|MOV             R2, R5|42-70
4384|code|LDR             R4, [SP,#0x9C0+var_988]|14-156
4386|code|MOVW            LR, #0x404|64-242-4-78
4390|code|STR.W           R8, [R1,#0xC]|193-248-12-128
4394|code|STR.W           LR, [R1,#8]|193-248-8-224
4398|code|STR             R4, [R1,#4]|76-96
4400|code|BLX             smp_send_req|255-247-244-236
4404|code|MOV             R3, R0|3-70
4406|code|CMP             R0, #0|0-40
4408|code|BEQ.W           loc_EE8|63-244-214-174
4412|code|LDR             R2, =(aSmpSendReqFail - 0x1148); "smp_send_req failed, res=%d\n"|230-74
4414|code|MOVS            R1, #1|1-33
4416|code|LDR.W           R0, [R9]|217-248-0-0
4420|code|ADD             R2, PC; "smp_send_req failed, res=%d\n"|122-68
4422|code|BLX             __fprintf_chk|255-247-26-237
4426|code|MOV             R0, R10|80-70
4428|code|BLX             smp_initiator_close|255-247-158-236
4432|code|CMP             R0, #0|0-40
4434|code|BGE.W           loc_FF6|191-246-80-175
4438|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
4442|code|B               loc_FD6|60-231
4444|code|LDR             R3, =(stderr_ptr - 0x12F54)|198-75
4446|code|ADD.W           R8, SP, #0x9C0+dest|13-245-200-120
4450|code|LDR             R0, =(aSasTargetAddre - 0x116E); "SAS (target) address not in naa-5 forma"...|222-72
4452|code|MOVS            R1, #1; size|1-33
4454|code|MOVS            R2, #0x41 ; 'A'; n|65-34
4456|code|LDR             R7, [R6,R3]; stderr|247-88
4458|code|ADD             R0, PC; "SAS (target) address not in naa-5 forma"...|120-68
4460|code|LDR             R3, [R7]; s|59-104
4462|code|BLX             fwrite|255-247-172-236
4466|code|LDRB.W          R3, [R8]|152-248-0-48
4470|code|CMP             R3, #0|0-43
4472|code|BNE.W           loc_E7C|127-244-128-174
4476|code|LDR             R0, =(aUseInterfaceTo - 0x1188); "    use '--interface=' to override\n"|216-72
4478|code|MOVS            R1, #1; size|1-33
4480|code|LDR             R3, [R7]; s|59-104
4482|code|MOVS            R2, #0x23 ; '#'; n|35-34
4484|code|ADD             R0, PC; "    use '--interface=' to override\n"|120-68
4486|code|BLX             fwrite|255-247-160-236
4490|code|MOVS            R0, #0x5B ; '['|91-32
4492|code|B               loc_D14|194-229
4494|code|LDR             R0, =(stderr_ptr - 0x12F54)|186-72
4496|code|MOVS            R1, #1|1-33
4498|code|LDR             R2, =(aSmpSendReqTran - 0x119A); "smp_send_req transport_error=%d\n"|212-74
4500|code|LDR             R7, [R6,R0]; stderr|55-88
4502|code|ADD             R2, PC; "smp_send_req transport_error=%d\n"|122-68
4504|code|LDR             R0, [R7]|56-104
4506|code|BLX             __fprintf_chk|255-247-240-236
4510|code|B               loc_114A|212-231
4512|code|LDRB.W          R3, [R8]|152-248-0-48
4516|code|CMP             R3, #0x41 ; 'A'|65-43
4518|code|BEQ             loc_11E0|27-208
4520|code|LDR             R0, =(stderr_ptr - 0x12F54)|179-72
4522|code|MOVS            R1, #1|1-33
4524|code|LDR             R2, =(aExpectedSmpFra - 0x11B4); "expected SMP frame response type, got=0"...|206-74
4526|code|LDR             R7, [R6,R0]; stderr|55-88
4528|code|ADD             R2, PC; "expected SMP frame response type, got=0"...|122-68
4530|code|LDR             R0, [R7]|56-104
4532|code|BLX             __fprintf_chk|255-247-226-236
4536|code|MOV             R0, R10|80-70
4538|code|MOVS            R4, #0x61 ; 'a'|97-36
4540|code|BLX             smp_initiator_close|255-247-102-236
4544|code|CMP             R0, #0|0-40
4546|code|BGE.W           loc_FAE|191-246-244-174
4550|code|B               loc_FD6|6-231
4552|code|MOV             R4, R0|4-70
4554|code|B               loc_F3C|183-230
4556|code|LDR             R0, =(stderr_ptr - 0x12F54)|170-72
4558|code|MOV             R3, R4|35-70
4560|code|LDR             R2, =(aResponseTooSho - 0x11DA); "response too short, len=%d\n"|198-74
4562|code|MOVS            R1, #1|1-33
4564|code|LDR             R7, [R6,R0]; stderr|55-88
4566|code|ADD             R2, PC; "response too short, len=%d\n"|122-68
4568|code|LDR             R0, [R7]|56-104
4570|code|BLX             __fprintf_chk|255-247-208-236
4574|code|B               loc_11B8|235-231
4576|code|LDR             R3, [SP,#0x9C0+var_988]|14-155
4578|code|LDRB.W          R4, [R8,#1]|152-248-1-64
4582|code|LDRB            R3, [R3,#1]|91-120
4584|code|CMP             R4, R3|156-66
4586|code|BNE             loc_1258|53-209
4588|code|LDRB.W          R0, [R8,#2]|152-248-2-0
4592|code|CMP             R0, #0|0-40
4594|code|BEQ             loc_12A8|89-208
4596|code|MOV.W           R1, #0x100|79-244-128-113
4600|code|ADD             R2, SP, #0x9C0+var_730|164-170
4602|code|BLX             smp_get_func_res_str|255-247-216-236
4606|code|LDR             R4, =(stderr_ptr - 0x12F54)|158-76
4608|code|LDR             R2, =(aReportBroadcas - 0x1208); "Report broadcast result: %s\n"|187-74
4610|code|MOVS            R1, #1|1-33
4612|code|ADD             R2, PC; "Report broadcast result: %s\n"|122-68
4614|code|MOV             R3, R0|3-70
4616|code|LDR             R0, [R6,R4]; stderr|48-89
4618|code|LDR             R0, [R0]|0-104
4620|code|BLX             __fprintf_chk|255-247-182-236
4624|code|LDRB.W          R4, [R8,#2]|152-248-2-64
4628|code|MOV             R0, R10|80-70
4630|code|BLX             smp_initiator_close|255-247-58-236
4634|code|CMP             R0, #0|0-40
4636|code|BGE.W           loc_FAE|191-246-199-174
4640|code|LDR             R3, =(stderr_ptr - 0x12F54)|149-75
4642|code|LDR             R3, [R6,R3]; stderr|243-88
4644|code|LDR             R7, [R3]|31-104
4646|code|BLX             __errno_location|255-247-128-236
4650|code|LDR             R0, [R0]; errnum|0-104
4652|code|BLX             safe_strerror|255-247-178-236
4656|code|LDR             R2, =(aCloseErrorS - 0x1238); "close error: %s\n"|176-74
4658|code|MOVS            R1, #1|1-33
4660|code|ADD             R2, PC; "close error: %s\n"|122-68
4662|code|MOV             R3, R0|3-70
4664|code|MOV             R0, R7|56-70
4666|code|BLX             __fprintf_chk|255-247-160-236
4670|code|CMP             R4, #0|0-44
4672|code|BEQ.W           loc_1038|63-244-250-174
4676|code|B               loc_FAE|179-230
4678|code|LDR             R7, [SP,#0x9C0+var_9A0]|8-159
4680|code|LDRB.W          R0, [R8,R7]; c|24-248-7-0
4684|code|ADDS            R7, #1|1-55
4686|code|BLX             putchar|255-247-126-236
4690|code|CMP             R7, R4|167-66
4692|code|BNE             loc_1248|248-209
4694|code|B               loc_F58|127-230
4696|code|LDR             R0, =(stderr_ptr - 0x12F54)|135-72
4698|code|MOVS            R1, #1|1-33
4700|code|LDR             R2, =(aExpectedFuncti - 0x1264); "Expected function code=0x%x, got=0x%x\n"|166-74
4702|code|LDR             R7, [R6,R0]; stderr|55-88
4704|code|ADD             R2, PC; "Expected function code=0x%x, got=0x%x\n"|122-68
4706|code|STR             R4, [SP,#0x9C0+longind]|0-148
4708|code|LDR             R0, [R7]|56-104
4710|code|BLX             __fprintf_chk|255-247-138-236
4714|code|B               loc_11B8|165-231
4716|code|LDR             R3, =(stderr_ptr - 0x12F54)|130-75
4718|code|MOVS            R1, #1; size|1-33
4720|code|LDR             R0, =(aBadValueInEnvi - 0x127E); "bad value in environment variable SMP_U"...|162-72
4722|code|MOVS            R2, #0x35 ; '5'; n|53-34
4724|code|ADD.W           R8, SP, #0x9C0+dest|13-245-200-120
4728|code|LDR             R7, [R6,R3]; stderr|247-88
4730|code|ADD             R0, PC; "bad value in environment variable SMP_U"...|120-68
4732|code|LDR             R3, [R7]; s|59-104
4734|code|BLX             fwrite|255-247-36-236
4738|code|LDR             R0, =(aUse0 - 0x128E); "    use 0\n"|159-72
4740|code|LDR             R3, [R7]; s|59-104
4742|code|MOVS            R1, #1; size|1-33
4744|code|MOVS            R2, #0xA; n|10-34
4746|code|ADD             R0, PC; "    use 0\n"|120-68
4748|code|BLX             fwrite|255-247-28-236
4752|code|B               loc_E7C|244-229
4754|code|LDRB.W          R0, [R8,#1]|152-248-1-0
4758|code|BLX             smp_get_func_def_resp_len|255-247-6-236
4762|code|CMP             R0, #0|0-40
4764|code|BLT.W           loc_1418|192-242-188-128
4768|code|MOV             R9, R0|129-70
4770|code|B               loc_F10|53-230
4772|code|BLX             __stack_chk_fail|255-247-4-236
4776|code|LDR             R0, =(aReportBroadcas_1 - 0x12AE); "Report broadcast response:"|150-72
4778|code|ADD             R0, PC; "Report broadcast response:"|120-68
4780|code|BLX             puts|255-247-24-236
4784|code|LDRB.W          R2, [R8,#4]|152-248-4-32
4788|code|LDRB.W          R3, [R8,#5]|152-248-5-48
4792|code|ADD.W           R2, R3, R2,LSL#8|3-235-2-34
4796|code|ORRS.W          R3, R5, R2|85-234-2-3
4800|code|BNE.W           loc_1454|64-240-200-128
4804|code|LDRB.W          R7, [R8,#6]|152-248-6-112
4808|code|AND.W           R7, R7, #0xF|7-240-15-7
4812|code|CMP             R7, #8|8-47
4814|code|BHI.W           loc_13FE|0-242-150-128
4818|code|LDR             R3, =(off_12E28 - 0x12D8); "Broadcast (Change)"|141-75
4820|code|ADD             R3, PC; off_12E28|123-68
4822|code|LDR.W           R3, [R3,R7,LSL#2]|83-248-39-48
4826|code|LDR             R1, =(aBroadcastTypeD - 0x12E4); "  broadcast type: %d [%s]\n"|140-73
4828|code|MOV             R2, R7|58-70
4830|code|MOVS            R0, #1|1-32
4832|code|ADD             R1, PC; "  broadcast type: %d [%s]\n"|121-68
4834|code|BLX             __printf_chk|255-247-64-236
4838|code|LDR             R1, =(aBroadcastDescr - 0x12F2); "  broadcast descriptor length: %d dword"...|138-73
4840|code|LDRB.W          R2, [R8,#0xA]|152-248-10-32
4844|code|MOVS            R0, #1|1-32
4846|code|ADD             R1, PC; "  broadcast descriptor length: %d dword"...|121-68
4848|code|BLX             __printf_chk|255-247-56-236
4852|code|LDRB.W          R3, [R8,#0xA]|152-248-10-48
4856|code|LDRB.W          R2, [R8,#0xB]|152-248-11-32
4860|code|MOVS            R0, #1|1-32
4862|code|LDR             R1, =(aNumberOfBroadc - 0x1308); "  number of broadcast descriptors: %d\n"|133-73
4864|code|MOV.W           R8, R3,LSL#2|79-234-131-8
4868|code|ADD             R1, PC; "  number of broadcast descriptors: %d\n"|121-68
4870|code|STR             R2, [SP,#0x9C0+var_9A8]|6-146
4872|code|BLX             __printf_chk|255-247-44-236
4876|code|CMP.W           R8, #7|184-241-7-15
4880|code|BLE             loc_1404|120-221
4882|code|LDR             R3, =(aDescriptorD - 0x1320); "   Descriptor %d:\n"|129-75
4884|code|ADDW            R4, SP, #0x9C0+var_424|13-242-156-84
4888|code|MOV.W           R9, #0|79-240-0-9
4892|code|ADD             R3, PC; "   Descriptor %d:\n"|123-68
4894|code|STR             R3, [SP,#0x9C0+var_9A0]|8-147
4896|code|LDR             R3, =(aBroadcastTypeD_0 - 0x1326); "     broadcast type: %d [%s]\n"|126-75
4898|code|ADD             R3, PC; "     broadcast type: %d [%s]\n"|123-68
4900|code|STR             R3, [SP,#0x9C0+var_99C]|9-147
4902|code|LDR             R3, =(aUnknown - 0x132C); "unknown"|126-75
4904|code|ADD             R3, PC; "unknown"|123-68
4906|code|STR             R3, [SP,#0x9C0+var_998]|10-147
4908|code|LDR             R3, =(off_12E28 - 0x1332); "Broadcast (Change)"|125-75
4910|code|ADD             R3, PC; off_12E28|123-68
4912|code|STR             R3, [SP,#0x9C0+var_990]|12-147
4914|code|LDR             R3, =(aPhyIdD - 0x1338); "     phy id: %d\n"|125-75
4916|code|ADD             R3, PC; "     phy id: %d\n"|123-68
4918|code|STR             R3, [SP,#0x9C0+var_98C]|13-147
4920|code|LDR             R3, =(aNoSpecificPhyI - 0x133E); "     no specific phy id"|124-75
4922|code|ADD             R3, PC; "     no specific phy id"|123-68
4924|code|STR             R3, [SP,#0x9C0+var_988]|14-147
4926|code|LDR             R3, =(aBroadcastReaso - 0x1344); "     broadcast reason: %d\n"|124-75
4928|code|ADD             R3, PC; "     broadcast reason: %d\n"|123-68
4930|code|STR             R3, [SP,#0x9C0+var_984]|15-147
4932|code|LDR             R3, =(aBroadcastCount - 0x134A); "     broadcast count: %d\n"|123-75
4934|code|ADD             R3, PC; "     broadcast count: %d\n"|123-68
4936|code|STR             R3, [SP,#0x9C0+var_980]|16-147
4938|code|LDR             R3, =(asc_1F80 - 0x1350); "     "|123-75
4940|code|ADD             R3, PC; "     "|123-68
4942|code|STR             R3, [SP,#0x9C0+var_97C]|17-147
4944|code|LDR             R3, =(a02x - 0x1356); "%02x "|122-75
4946|code|ADD             R3, PC; "%02x "|123-68
4948|code|STR             R3, [SP,#0x9C0+s]|5-147
4950|code|LDR             R3, [SP,#0x9C0+var_9A8]|6-155
4952|code|CMP             R9, R3|153-69
4954|code|BGE             loc_13EE|72-218
4956|code|ADD.W           R9, R9, #1|9-241-1-9
4960|code|MOVS            R0, #1|1-32
4962|code|LDR             R1, [SP,#0x9C0+var_9A0]|8-153
4964|code|MOV             R2, R9|74-70
4966|code|BLX             __printf_chk|255-247-254-235
4970|code|LDRB            R2, [R4]|34-120
4972|code|AND.W           R2, R2, #0xF|2-240-15-2
4976|code|CMP             R7, R2|151-66
4978|code|BNE             loc_13AA|26-209
4980|code|CBNZ            R5, loc_13AA|205-185
4982|code|LDRB            R2, [R4,#1]|98-120
4984|code|CMP             R2, #0xFF|255-42
4986|code|BEQ             loc_13E6|52-208
4988|code|MOVS            R0, #1|1-32
4990|code|LDR             R1, [SP,#0x9C0+var_98C]|13-153
4992|code|BLX             __printf_chk|255-247-240-235
4996|code|LDRB            R2, [R4,#2]|162-120
4998|code|MOVS            R0, #1|1-32
5000|code|LDR             R1, [SP,#0x9C0+var_984]|15-153
5002|code|AND.W           R2, R2, #0xF|2-240-15-2
5006|code|BLX             __printf_chk|255-247-234-235
5010|code|LDRB            R2, [R4,#4]|34-121
5012|code|LDRB            R3, [R4,#5]|99-121
5014|code|MOVS            R0, #1|1-32
5016|code|LDR             R1, [SP,#0x9C0+var_980]|16-153
5018|code|ADD.W           R2, R3, R2,LSL#8|3-235-2-34
5022|code|BLX             __printf_chk|255-247-226-235
5026|code|CMP             R5, #1|1-45
5028|code|BGT             loc_13C2|13-220
5030|code|ADD             R4, R8|68-68
5032|code|B               loc_1356|213-231
5034|code|CMP             R2, #8|8-42
5036|code|LDR             R1, [SP,#0x9C0+var_99C]|9-153
5038|code|MOV.W           R0, #1|79-240-1-0
5042|code|ITET LS|150-191
5044|code|LDRLS           R3, [SP,#0x9C0+var_990]|12-155
5046|code|LDRHI           R3, [SP,#0x9C0+var_998]|10-155
5048|code|LDRLS.W         R3, [R3,R2,LSL#2]|83-248-34-48
5052|code|BLX             __printf_chk|255-247-210-235
5056|code|B               loc_1376|217-231
5058|code|MOVS            R0, #1|1-32
5060|code|LDR             R1, [SP,#0x9C0+var_97C]|17-153
5062|code|BLX             __printf_chk|255-247-206-235
5066|code|MOV             R11, R4|163-70
5068|code|ADD             R4, R8|68-68
5070|code|LDRB.W          R2, [R11],#1|27-248-1-43
5074|code|MOVS            R0, #1|1-32
5076|code|LDR             R1, [SP,#0x9C0+s]|5-153
5078|code|BLX             __printf_chk|255-247-198-235
5082|code|CMP             R4, R11|92-69
5084|code|BNE             loc_13CE|247-209
5086|code|MOVS            R0, #0xA; c|10-32
5088|code|BLX             putchar|255-247-180-235
5092|code|B               loc_1356|183-231
5094|code|LDR             R0, [SP,#0x9C0+var_988]; s|14-152
5096|code|BLX             puts|255-247-122-235
5100|code|B               loc_1384|202-231
5102|code|MOV             R0, R10|80-70
5104|code|BLX             smp_initiator_close|255-247-76-235
5108|code|CMP             R0, #0|0-40
5110|code|BLT.W           loc_1016|255-246-14-174
5114|code|MOVS            R4, #0|0-36
5116|code|B               loc_FAE|215-229
5118|code|LDR             R3, =(aUnknown - 0x1404); "unknown"|80-75
5120|code|ADD             R3, PC; "unknown"|123-68
5122|code|B               loc_12DA|106-231
5124|code|LDR             R0, =(stderr_ptr - 0x12F54)|28-72
5126|code|MOV             R3, R8|67-70
5128|code|LDR             R2, =(aUnexpectedlyLo - 0x1412); "Unexpectedly low descriptor length: %d "...|78-74
5130|code|MOVS            R1, #1|1-33
5132|code|LDR             R7, [R6,R0]; stderr|55-88
5134|code|ADD             R2, PC; "Unexpectedly low descriptor length: %d "...|122-68
5136|code|LDR             R0, [R7]|56-104
5138|code|BLX             __fprintf_chk|255-247-180-235
5142|code|B               loc_114A|152-230
5144|code|CMP             R5, #0|0-45
5146|code|BEQ.W           loc_F10|63-244-121-173
5150|code|LDR             R3, =(stderr_ptr - 0x12F54)|22-75
5152|code|MOVS            R1, #1; size|1-33
5154|code|LDR             R0, =(aUnableToDeterm - 0x142C); "unable to determine response length\n"|73-72
5156|code|MOVS            R2, #0x24 ; '$'; n|36-34
5158|code|LDR             R7, [R6,R3]; stderr|247-88
5160|code|ADD             R0, PC; "unable to determine response length\n"|120-68
5162|code|LDR             R3, [R7]; s|59-104
5164|code|BLX             fwrite|255-247-76-235
5168|code|B               loc_F10|110-229
5170|code|LDR             R4, =(stderr_ptr - 0x12F54)|17-76
5172|code|MOV             R3, R0|3-70
5174|code|LDR             R2, =(aSmpSendReqFail - 0x1440); "smp_send_req failed, res=%d\n"|69-74
5176|code|MOVS            R1, #1|1-33
5178|code|LDR             R7, [R6,R4]; stderr|55-89
5180|code|ADD             R2, PC; "smp_send_req failed, res=%d\n"|122-68
5182|code|LDR             R0, [R7]|56-104
5184|code|BLX             __fprintf_chk|255-247-156-235
5188|code|LDR             R0, =(aTryAddingVOpti - 0x1450); "    try adding '-v' option for more deb"...|66-72
5190|code|LDR             R3, [R7]; s|59-104
5192|code|MOVS            R1, #1; size|1-33
5194|code|MOVS            R2, #0x2A ; '*'; n|42-34
5196|code|ADD             R0, PC; "    try adding '-v' option for more deb"...|120-68
5198|code|BLX             fwrite|255-247-60-235
5202|code|B               loc_114A|122-230
5204|code|LDR             R1, =(aExpanderChange - 0x145C); "  Expander change count: %d\n"|63-73
5206|code|MOVS            R0, #1|1-32
5208|code|ADD             R1, PC; "  Expander change count: %d\n"|121-68
5210|code|BLX             __printf_chk|255-247-132-235
5214|code|B               loc_12C4|49-231
5216|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xBE8|108-35-1-0
5220|data|DCD __stack_chk_guard_ptr - 0x12F54|136-0-0-0
5224|data|DCD dword_16E4 - 0xBF2|242-10-0-0
5228|data|DCD aBHhiRsVv - 0xC34; "b:hHI:rs:vV"|196-10-0-0
5232|data|DCD off_13008 - 0xC38; "broadcast"|208-35-1-0
5236|data|DCD optarg_ptr - 0x12F54|168-0-0-0
5240|data|DCD stderr_ptr - 0x12F54|144-0-0-0
5244|data|DCD aBadArgumentToB - 0xCF0; "bad argument to '--broadcast', expect v"...|20-10-0-0
5248|data|DCD aVersionS - 0xD0C; "version: %s\n"|204-13-0-0
5252|data|DCD a10420130604 - 0xD0E; "1.04 20130604"|218-13-0-0
5256|data|DCD aUsageSmpRepBro - 0xD6A; "Usage: smp_rep_broadcast [--broadcast=B"...|214-9-0-0
5260|data|DCD aUnrecognisedSw - 0xD84; "unrecognised switch code 0x%x ??\n"|116-13-0-0
5264|data|DCD aUsageSmpRepBro - 0xD94; "Usage: smp_rep_broadcast [--broadcast=B"...|172-9-0-0
5268|data|DCD optind_ptr - 0x12F54|140-0-0-0
5272|data|DCD aUnexpectedExtr - 0xDCC; "Unexpected extra argument: %s\n"|80-13-0-0
5276|data|DCD aUsageSmpRepBro - 0xDF8; "Usage: smp_rep_broadcast [--broadcast=B"...|72-9-0-0
5280|data|DCD aD - 0xE3C; "%d"|120-13-0-0
5284|data|DCD aExpectedNumber - 0xE58; "expected number after separator in SMP_"...|96-13-0-0
5288|data|DCD aActualResponse - 0xF36; "actual response length [%d] less than d"...|38-14-0-0
5292|data|DCD aReportBroadcas - 0xF9E; "Report broadcast result: %s\n"|250-13-0-0
5296|data|DCD aExitStatusDInd - 0xFC8; "Exit status %d indicates error detected"...|212-15-0-0
5300|data|DCD aCloseErrorS - 0xFEC; "close error: %s\n"|156-15-0-0
5304|data|DCD aSmpUtilsDevice - 0x1002; "SMP_UTILS_DEVICE"|58-11-0-0
5308|data|DCD aCloseErrorS - 0x1032; "close error: %s\n"|86-15-0-0
5312|data|DCD aBadArgumentToS - 0x104E; "bad argument to '--sa'\n"|114-10-0-0
5316|data|DCD aSmpUtilsSasAdd - 0x105E; "SMP_UTILS_SAS_ADDR"|142-11-0-0
5320|data|DCD aMissingDeviceN - 0x109A; "missing device name on command line\n  "...|182-10-0-0
5324|data|DCD aUsageSmpRepBro - 0x10AA; "Usage: smp_rep_broadcast [--broadcast=B"...|150-6-0-0
5328|data|DCD aReportBroadcas_0 - 0x10CC; "    Report broadcast request: "|224-11-0-0
5332|data|DCD a02x - 0x10CE; "%02x "|254-11-0-0
5336|data|DCD aSmpSendReqFail - 0x1148; "smp_send_req failed, res=%d\n"|140-11-0-0
5340|data|DCD aSasTargetAddre - 0x116E; "SAS (target) address not in naa-5 forma"...|214-10-0-0
5344|data|DCD aUseInterfaceTo - 0x1188; "    use '--interface=' to override\n"|0-11-0-0
5348|data|DCD aSmpSendReqTran - 0x119A; "smp_send_req transport_error=%d\n"|90-11-0-0
5352|data|DCD aExpectedSmpFra - 0x11B4; "expected SMP frame response type, got=0"...|4-12-0-0
5356|data|DCD aResponseTooSho - 0x11DA; "response too short, len=%d\n"|62-11-0-0
5360|data|DCD aReportBroadcas - 0x1208; "Report broadcast result: %s\n"|144-11-0-0
5364|data|DCD aCloseErrorS - 0x1238; "close error: %s\n"|80-13-0-0
5368|data|DCD aExpectedFuncti - 0x1264; "Expected function code=0x%x, got=0x%x\n"|128-11-0-0
5372|data|DCD aBadValueInEnvi - 0x127E; "bad value in environment variable SMP_U"...|130-9-0-0
5376|data|DCD aUse0 - 0x128E; "    use 0\n"|170-9-0-0
5380|data|DCD aReportBroadcas_1 - 0x12AE; "Report broadcast response:"|94-11-0-0
5384|data|DCD off_12E28 - 0x12D8; "Broadcast (Change)"|80-27-1-0
5388|data|DCD aBroadcastTypeD - 0x12E4; "  broadcast type: %d [%s]\n"|100-11-0-0
5392|data|DCD aBroadcastDescr - 0x12F2; "  broadcast descriptor length: %d dword"...|114-11-0-0
5396|data|DCD aNumberOfBroadc - 0x1308; "  number of broadcast descriptors: %d\n"|136-11-0-0
5400|data|DCD aDescriptorD - 0x1320; "   Descriptor %d:\n"|200-11-0-0
5404|data|DCD aBroadcastTypeD_0 - 0x1326; "     broadcast type: %d [%s]\n"|214-11-0-0
5408|data|DCD aUnknown - 0x132C; "unknown"|196-3-0-0
5412|data|DCD off_12E28 - 0x1332; "Broadcast (Change)"|246-26-1-0
5416|data|DCD aPhyIdD - 0x1338; "     phy id: %d\n"|252-11-0-0
5420|data|DCD aNoSpecificPhyI - 0x133E; "     no specific phy id"|222-11-0-0
5424|data|DCD aBroadcastReaso - 0x1344; "     broadcast reason: %d\n"|4-12-0-0
5428|data|DCD aBroadcastCount - 0x134A; "     broadcast count: %d\n"|26-12-0-0
5432|data|DCD asc_1F80 - 0x1350; "     "|48-12-0-0
5436|data|DCD a02x - 0x1356; "%02x "|118-9-0-0
5440|data|DCD aUnknown - 0x1404; "unknown"|236-2-0-0
5444|data|DCD aUnexpectedlyLo - 0x1412; "Unexpectedly low descriptor length: %d "...|166-10-0-0
5448|data|DCD aUnableToDeterm - 0x142C; "unable to determine response length\n"|8-9-0-0
5452|data|DCD aSmpSendReqFail - 0x1440; "smp_send_req failed, res=%d\n"|148-8-0-0
5456|data|DCD aTryAddingVOpti - 0x1450; "    try adding '-v' option for more deb"...|120-11-0-0
5460|data|DCD aExpanderChange - 0x145C; "  Expander change count: %d\n"|204-9-0-0
5464|code|MOV.W           R11, #0|79-240-0-11
5468|code|MOV.W           LR, #0|79-240-0-14
5472|code|POP             {R1}; argc|2-188
5474|code|MOV             R2, SP; ubp_av|106-70
5476|code|PUSH            {R2}; stack_end|4-180
5478|code|PUSH            {R0}; rtld_fini|1-180
5480|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1590)|223-248-36-160
5484|code|ADR             R3, off_1590|8-163
5486|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
5488|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x12F54)|223-248-32-192
5492|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
5496|code|PUSH.W          {R12}; fini|77-248-4-205
5500|code|LDR             R3, =(__libc_csu_init_ptr - 0x12F54)|6-75
5502|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
5506|code|LDR             R0, =(main_ptr - 0x12F54)|6-72
5508|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
5512|code|BLX             __libc_start_main|255-247-176-234
5516|code|BLX             abort|255-247-26-235
5520|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1590|196-25-1-0
5524|data|DCD __libc_csu_fini_ptr - 0x12F54|124-0-0-0
5528|data|DCD __libc_csu_init_ptr - 0x12F54|152-0-0-0
5532|data|DCD main_ptr - 0x12F54|156-0-0-0
5536|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x15B0)|20-48-159-229
5540|code|LDR             R2, =(__gmon_start___ptr_0 - 0x12F54)|20-32-159-229
5544|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
5548|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
5552|code|CMP             R2, #0|0-0-82-227
5556|code|BXEQ            LR|30-255-47-1
5560|code|B               __gmon_start__|78-253-255-234
5564|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x15B0|164-25-1-0
5568|data|DCD __gmon_start___ptr_0 - 0x12F54|148-0-0-0
5572|code|LDR             R3, =(__bss_start__ - 0x15CC)|7-75
5574|code|LDR             R0, =(__bss_start__ - 0x15D0)|8-72
5576|code|ADD             R3, PC; __bss_start__|123-68
5578|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x15D6)|8-74
5580|code|ADD             R0, PC; __bss_start__|120-68
5582|code|ADDS            R3, #3|3-51
5584|code|SUBS            R3, R3, R0|27-26
5586|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
5588|code|CMP             R3, #6|6-43
5590|code|BLS             locret_15E0|3-217
5592|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x12F54)|5-75
5594|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
5596|code|CBZ             R3, locret_15E0|3-177
5598|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
5600|code|BX              LR|112-71
5602|data|ALIGN 4|0-191
5604|data|DCD __bss_start__ - 0x15CC|204-26-1-0
5608|data|DCD __bss_start__ - 0x15D0|200-26-1-0
5612|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x15D6|126-25-1-0
5616|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x12F54|132-0-0-0
5620|code|LDR             R1, =(__bss_start__ - 0x15FC)|8-73
5622|code|LDR             R0, =(__bss_start__ - 0x1600)|9-72
5624|code|ADD             R1, PC; __bss_start__|121-68
5626|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1604)|9-75
5628|code|ADD             R0, PC; __bss_start__|120-68
5630|code|SUBS            R1, R1, R0|9-26
5632|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5634|code|ASRS            R1, R1, #2|137-16
5636|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
5640|code|ASRS            R1, R1, #1|73-16
5642|code|BEQ             locret_1614|3-208
5644|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x12F54)|5-74
5646|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
5648|code|CBZ             R3, locret_1614|3-177
5650|code|BX              R3; _ITM_registerTMCloneTable|24-71
5652|code|BX              LR|112-71
5654|data|ALIGN 4|0-191
5656|data|DCD __bss_start__ - 0x15FC|156-26-1-0
5660|data|DCD __bss_start__ - 0x1600|152-26-1-0
5664|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1604|80-25-1-0
5668|data|DCD _ITM_registerTMCloneTable_ptr - 0x12F54|164-0-0-0
5672|code|PUSH            {R3,LR}|8-181
5674|code|LDR             R3, =(__bss_start__ - 0x1632)|10-75
5676|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1634)|10-74
5678|code|ADD             R3, PC; __bss_start__|123-68
5680|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
5682|code|LDRB            R3, [R3]|27-120
5684|code|CBNZ            R3, locret_1652|107-185
5686|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x12F54)|9-75
5688|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
5690|code|CBZ             R3, loc_1646|35-177
5692|code|LDR             R3, =(off_13004 - 0x1642)|8-75
5694|code|ADD             R3, PC; off_13004|123-68
5696|code|LDR             R0, [R3]; off_13004 ; void *|24-104
5698|code|BLX             __cxa_finalize|255-247-30-234
5702|code|BL              sub_15C4|255-247-189-255
5706|code|LDR             R3, =(__bss_start__ - 0x1652)|6-75
5708|code|MOVS            R2, #1|1-34
5710|code|ADD             R3, PC; __bss_start__|123-68
5712|code|STRB            R2, [R3]|26-112
5714|code|POP             {R3,PC}|8-189
5716|data|DCD __bss_start__ - 0x1632|102-26-1-0
5720|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1634|32-25-1-0
5724|data|DCD __cxa_finalize_ptr_0 - 0x12F54|128-0-0-0
5728|data|DCD off_13004 - 0x1642|194-25-1-0
5732|data|DCD __bss_start__ - 0x1652|70-26-1-0
5736|code|LDR             R0, =(dword_12E24 - 0x1670)|7-72
5738|code|PUSH            {R3,LR}|8-181
5740|code|ADD             R0, PC; dword_12E24|120-68
5742|code|LDR             R2, [R0]|2-104
5744|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1676)|6-75
5746|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5748|code|CBNZ            R2, loc_167C|18-185
5750|code|POP.W           {R3,LR}|189-232-8-64
5754|code|B               sub_15F4|187-231
5756|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x12F54)|4-74
5758|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
5760|code|CMP             R3, #0|0-43
5762|code|BEQ             loc_1676|248-208
5764|code|BLX             R3; _Jv_RegisterClasses|152-71
5766|code|B               loc_1676|246-231
5768|data|DCD dword_12E24 - 0x1670|180-23-1-0
5772|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1676|222-24-1-0
5776|data|DCD _Jv_RegisterClasses_ptr - 0x12F54|160-0-0-0
5780|code|PUSH.W          {R3-R9,LR}|45-233-248-67
5784|code|MOV             R7, R0|7-70
5786|code|LDR             R6, =(off_12E20 - 0x16A6)|12-78
5788|code|MOV             R8, R1|136-70
5790|code|LDR             R5, =(off_12E1C - 0x16AC)|12-77
5792|code|MOV             R9, R2|145-70
5794|code|ADD             R6, PC; off_12E20|126-68
5796|code|BLX             .init_proc|255-247-220-233
5800|code|ADD             R5, PC; off_12E1C|125-68
5802|code|SUBS            R6, R6, R5|118-27
5804|code|ASRS            R6, R6, #2|182-16
5806|code|BEQ             locret_16C6|10-208
5808|code|SUBS            R5, #4|4-61
5810|code|MOVS            R4, #0|0-36
5812|code|ADDS            R4, #1|1-52
5814|code|LDR.W           R3, [R5,#4]!|85-248-4-63
5818|code|MOV             R0, R7|56-70
5820|code|MOV             R1, R8|65-70
5822|code|MOV             R2, R9|74-70
5824|code|BLX             R3|152-71
5826|code|CMP             R4, R6|180-66
5828|code|BNE             loc_16B4|246-209
5830|code|POP.W           {R3-R9,PC}|189-232-248-131
5834|data|ALIGN 4|0-191
5836|data|DCD off_12E20 - 0x16A6|122-23-1-0
5840|data|DCD off_12E1C - 0x16AC|112-23-1-0
5844|code|BX              LR|112-71
5846|data|ALIGN 4|0-191
5848|code|PUSH            {R3,LR}; _fini|8-64-45-233
5852|code|POP             {R3,PC}|8-128-189-232
77340|data|DCD sub_1668+1|105-22-0-0
77344|data|DCD sub_1628+1|41-22-0-0
77348|data|DCD 0|0-0-0-0
77352|data|DCD aBroadcastChang; "Broadcast (Change)"|48-32-0-0
77356|data|DCD aBroadcastReser; "Broadcast (Reserved Change 0)"|68-32-0-0
77360|data|DCD aBroadcastReser_0; "Broadcast (Reserved Change 1)"|100-32-0-0
77364|data|DCD aBroadcastSes; "Broadcast (SES)"|132-32-0-0
77368|data|DCD aBroadcastExpan; "Broadcast (Expander)"|148-32-0-0
77372|data|DCD aBroadcastAsync; "Broadcast (Asynchronous event)"|172-32-0-0
77376|data|DCD aBroadcastReser_1; "Broadcast (Reserved 3)"|204-32-0-0
77380|data|DCD aBroadcastReser_2; "Broadcast (Reserved 4)"|228-32-0-0
77384|data|DCD aBroadcastZoneA; "Broadcast (Zone activate)"|252-32-0-0
77388|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsmputils1.so.1|1-0-0-0-1-0-0-0
77396|data|Elf32_Dyn <1, <0x10D>>; DT_NEEDED libc.so.6|1-0-0-0-13-1-0-0
77404|data|Elf32_Dyn <1, <0x1E3>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-227-1-0-0
77412|data|Elf32_Dyn <0xC, <0xA60>>; DT_INIT|12-0-0-0-96-10-0-0
77420|data|Elf32_Dyn <0xD, <0x16D8>>; DT_FINI|13-0-0-0-216-22-0-0
77428|data|Elf32_Dyn <0x19, <0x12E1C>>; DT_INIT_ARRAY|25-0-0-0-28-46-1-0
77436|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
77444|data|Elf32_Dyn <0x1A, <0x12E20>>; DT_FINI_ARRAY|26-0-0-0-32-46-1-0
77452|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
77460|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
77468|data|Elf32_Dyn <5, <0x544>>; DT_STRTAB|5-0-0-0-68-5-0-0
77476|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
77484|data|Elf32_Dyn <0xA, <0x284>>; DT_STRSZ|10-0-0-0-132-2-0-0
77492|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
77500|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
77508|data|Elf32_Dyn <3, <0x12F54>>; DT_PLTGOT|3-0-0-0-84-47-1-0
77516|data|Elf32_Dyn <2, <0xE0>>; DT_PLTRELSZ|2-0-0-0-224-0-0-0
77524|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
77532|data|Elf32_Dyn <0x17, <0x980>>; DT_JMPREL|23-0-0-0-128-9-0-0
77540|data|Elf32_Dyn <0x11, <0x880>>; DT_REL|17-0-0-0-128-8-0-0
77548|data|Elf32_Dyn <0x12, <0x100>>; DT_RELSZ|18-0-0-0-0-1-0-0
77556|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
77564|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
77572|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
77580|data|Elf32_Dyn <0x6FFFFFFE, <0x830>>; DT_VERNEED|254-255-255-111-48-8-0-0
77588|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
77596|data|Elf32_Dyn <0x6FFFFFF0, <0x7C8>>; DT_VERSYM|240-255-255-111-200-7-0-0
77604|data|Elf32_Dyn <0x6FFFFFFA, <0x17>>; DT_RELCOUNT|250-255-255-111-23-0-0-0
77612|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
77620|data|ALIGN 8|0-0-0-0
77652|data|DCD stru_12E4C|76-46-1-0
77656|data|DCD 0|0-0-0-0
77660|data|DCD dword_0|0-0-0-0
77664|data|DCD __imp___cxa_finalize|160-48-1-0
77668|data|DCD __imp_smp_initiator_close|164-48-1-0
77672|data|DCD __imp_dStrHex|168-48-1-0
77676|data|DCD __imp_smp_get_func_def_resp_len|176-48-1-0
77680|data|DCD __imp___stack_chk_fail|184-48-1-0
77684|data|DCD __imp_smp_is_naa5|188-48-1-0
77688|data|DCD __imp_fwrite|196-48-1-0
77692|data|DCD __imp_getenv|200-48-1-0
77696|data|DCD __imp_puts|204-48-1-0
77700|data|DCD __imp___libc_start_main|208-48-1-0
77704|data|DCD __imp___gmon_start__|32-49-1-0
77708|data|DCD __imp_getopt_long|212-48-1-0
77712|data|DCD __imp_strchr|216-48-1-0
77716|data|DCD __imp_smp_send_req|220-48-1-0
77720|data|DCD __imp___errno_location|224-48-1-0
77724|data|DCD __imp___isoc99_sscanf|228-48-1-0
77728|data|DCD __imp_memset|232-48-1-0
77732|data|DCD __imp_putchar|236-48-1-0
77736|data|DCD __imp_strncpy|240-48-1-0
77740|data|DCD __imp___printf_chk|244-48-1-0
77744|data|DCD __imp_smp_get_dhnum|248-48-1-0
77748|data|DCD __imp___fprintf_chk|252-48-1-0
77752|data|DCD __imp_fputc|0-49-1-0
77756|data|DCD __imp_safe_strerror|4-49-1-0
77760|data|DCD __imp_smp_get_llnum|8-49-1-0
77764|data|DCD __imp_smp_get_func_res_str|12-49-1-0
77768|data|DCD __imp_smp_initiator_open|16-49-1-0
77772|data|DCD __imp_abort|24-49-1-0
77776|data|DCD __libc_csu_fini+1|213-22-0-0
77780|data|DCD __imp___cxa_finalize|160-48-1-0
77784|data|DCD _ITM_deregisterTMCloneTable|28-49-1-0
77788|data|DCD __stack_chk_guard|172-48-1-0
77792|data|DCD optind|180-48-1-0
77796|data|DCD stderr|192-48-1-0
77800|data|DCD __imp___gmon_start__|32-49-1-0
77804|data|DCD __libc_csu_init+1|149-22-0-0
77808|data|DCD main+1|209-11-0-0
77812|data|DCD _Jv_RegisterClasses|36-49-1-0
77816|data|DCD _ITM_registerTMCloneTable|40-49-1-0
77820|data|DCD optarg|20-49-1-0
77976|data|% 1; Alternative name is '__bss_start'|255
