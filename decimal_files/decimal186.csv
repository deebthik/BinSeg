address|type|disassembly|bytes
32768|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
32772|data|DCB 1; File class: 32-bit|1
32773|data|DCB 1; Data encoding: little-endian|1
32774|data|DCB 1; File version|1
32775|data|DCB 0; OS/ABI: UNIX System V ABI|0
32776|data|DCB 0; ABI Version|0
32777|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
32784|data|DCW 2; File type: Executable|2-0
32786|data|DCW 0x28; Machine: ARM|40-0
32788|data|DCD 1; File version|1-0-0-0
32792|data|DCD start+1; Entry point|121-142-0-0
32796|data|DCD 0x34; PHT file offset|52-0-0-0
32800|data|DCD 0x7B2C; SHT file offset|44-123-0-0
32804|data|DCD 0x5000002; Processor-specific flags|2-0-0-5
32808|data|DCW 0x34; ELF header size|52-0
32810|data|DCW 0x20; PHT entry size|32-0
32812|data|DCW 8; Number of entries in PHT|8-0
32814|data|DCW 0x28; SHT entry size|40-0
32816|data|DCW 0x1C; Number of entries in SHT|28-0
32818|data|DCW 0x1B; SHT entry index for string table|27-0
32820|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
32824|data|DCD 0x7824; File offset|36-120-0-0
32828|data|DCD unk_F824; Virtual address|36-248-0-0
32832|data|DCD 0xF824; Physical address|36-248-0-0
32836|data|DCD 8; Size in file image|8-0-0-0
32840|data|DCD 8; Size in memory image|8-0-0-0
32844|data|DCD 4; Flags|4-0-0-0
32848|data|DCD 4; Alignment|4-0-0-0
32852|data|DCD 6; Type: PHDR|6-0-0-0
32856|data|DCD 0x34; File offset|52-0-0-0
32860|data|DCD dword_8034; Virtual address|52-128-0-0
32864|data|DCD 0x8034; Physical address|52-128-0-0
32868|data|DCD 0x100; Size in file image|0-1-0-0
32872|data|DCD 0x100; Size in memory image|0-1-0-0
32876|data|DCD 5; Flags|5-0-0-0
32880|data|DCD 4; Alignment|4-0-0-0
32884|data|DCD 3; Type: INTERP|3-0-0-0
32888|data|DCD 0x134; File offset|52-1-0-0
32892|data|DCD aLibArmLinuxGnu; Virtual address|52-129-0-0
32896|data|DCD 0x8134; Physical address|52-129-0-0
32900|data|DCD 0x27; Size in file image|39-0-0-0
32904|data|DCD 0x27; Size in memory image|39-0-0-0
32908|data|DCD 4; Flags|4-0-0-0
32912|data|DCD 1; Alignment|1-0-0-0
32916|data|DCD 1; Type: LOAD|1-0-0-0
32920|data|DCD 0; File offset|0-0-0-0
32924|data|DCD dword_8000; Virtual address|0-128-0-0
32928|data|DCD 0x8000; Physical address|0-128-0-0
32932|data|DCD 0x7830; Size in file image|48-120-0-0
32936|data|DCD 0x7830; Size in memory image|48-120-0-0
32940|data|DCD 5; Flags|5-0-0-0
32944|data|DCD 0x8000; Alignment|0-128-0-0
32948|data|DCD 1; Type: LOAD|1-0-0-0
32952|data|DCD 0x7830; File offset|48-120-0-0
32956|data|DCD off_17830; Virtual address|48-120-1-0
32960|data|DCD 0x17830; Physical address|48-120-1-0
32964|data|DCD 0x1D8; Size in file image|216-1-0-0
32968|data|DCD 0x32C; Size in memory image|44-3-0-0
32972|data|DCD 6; Flags|6-0-0-0
32976|data|DCD 0x8000; Alignment|0-128-0-0
32980|data|DCD 2; Type: DYNAMIC|2-0-0-0
32984|data|DCD 0x783C; File offset|60-120-0-0
32988|data|DCD stru_1783C; Virtual address|60-120-1-0
32992|data|DCD 0x1783C; Physical address|60-120-1-0
32996|data|DCD 0xF8; Size in file image|248-0-0-0
33000|data|DCD 0xF8; Size in memory image|248-0-0-0
33004|data|DCD 6; Flags|6-0-0-0
33008|data|DCD 4; Alignment|4-0-0-0
33012|data|DCD 4; Type: NOTE|4-0-0-0
33016|data|DCD 0x15C; File offset|92-1-0-0
33020|data|DCD dword_815C; Virtual address|92-129-0-0
33024|data|DCD 0x815C; Physical address|92-129-0-0
33028|data|DCD 0x44; Size in file image|68-0-0-0
33032|data|DCD 0x44; Size in memory image|68-0-0-0
33036|data|DCD 4; Flags|4-0-0-0
33040|data|DCD 4; Alignment|4-0-0-0
33044|data|DCD 0x6474E551; Type: STACK|81-229-116-100
33048|data|DCD 0; File offset|0-0-0-0
33052|data|DCD 0; Virtual address|0-0-0-0
33056|data|DCD 0; Physical address|0-0-0-0
33060|data|DCD 0; Size in file image|0-0-0-0
33064|data|DCD 0; Size in memory image|0-0-0-0
33068|data|DCD 6; Flags|6-0-0-0
33072|data|DCD 4; Alignment|4-0-0-0
33076|data|DCB "/lib/arm-linux-gnueabihf/ld-linux.so.3",0|47-108-105-98-47-97-114-109-45-108-105-110-117-120-45-103-110-117-101-97-98-105-104-102-47-108-100-45-108-105-110-117-120-46-115-111-46-51-0
33115|data|DCB 0|0
33116|data|DCD 4; Name Size|4-0-0-0
33120|data|DCD 0x10; Desc Size|16-0-0-0
33124|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
33128|data|DCB "GNU",0; Name|71-78-85-0
33132|data|DCD 0, 2, 6, 0x1A; ABI: Linux 2.6.26|0-0-0-0-2-0-0-0-6-0-0-0-26-0-0-0
33148|data|DCD 4; Name Size|4-0-0-0
33152|data|DCD 0x14; Desc Size|20-0-0-0
33156|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
33160|data|DCB "GNU",0; Name|71-78-85-0
33164|data|DCB 0x81, 0x6F, 0xFF, 0x69, 0xA0, 0xA1, 0xFA, 0x24, 0x6E; Desc|129-111-255-105-160-161-250-36-110-86-22-106-73-115-15-68-234-106-166-86
33184|data|DCD 0x25|37-0-0-0
33188|data|DCD 0x33|51-0-0-0
33192|data|DCD 0x1F, 4, 0, 0, 0, 0x25, 0, 0, 1, 0xE, 0x27, 5, 0xC|31-0-0-0-4-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-37-0-0-0-0-0-0-0-0-0-0-0-1-0-0-0-14-0-0-0-39-0-0-0-5-0-0-0-12-0-0-0-0-0-0-0-13-0-0-0-35-0-0-0-0-0-0-0-23-0-0-0-49-0-0-0-38-0-0-0-0-0-0-0-44-0-0-0-0-0-0-0-48-0-0-0-0-0-0-0-0-0-0-0-26-0-0-0-32-0-0-0-21-0-0-0-17-0-0-0-41-0-0-0-11-0-0-0-33-0-0-0-18-0-0-0-0-0-0-0-34-0-0-0-30-0-0-0
33340|data|DCD 0, 0, 0x2D, 0x1D, 0x24, 0x18, 0, 0, 0, 0, 0, 0, 0|0-0-0-0-0-0-0-0-45-0-0-0-29-0-0-0-36-0-0-0-24-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-16-0-0-0-0-0-0-0-0-0-0-0-7-0-0-0-47-0-0-0-15-0-0-0-42-0-0-0-25-0-0-0-43-0-0-0-0-0-0-0-0-0-0-0-8-0-0-0-0-0-0-0-6-0-0-0-0-0-0-0-46-0-0-0-0-0-0-0-9-0-0-0-19-0-0-0-0-0-0-0-27-0-0-0-28-0-0-0-50-0-0-0-0-0-0-0-0-0-0-0-40-0-0-0-0-0-0-0-22-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-3-0-0-0-0-0-0-0-0-0-0-0-20-0-0-0-2-0-0-0-0-0-0-0-10-0-0-0
33544|data|DCD 0x25|37-0-0-0
33548|data|DCD 2|2-0-0-0
33552|data|DCD 0x10|16-0-0-0
33556|data|DCD 9|9-0-0-0
33560|data|DCD 0x40600101, 0x930B4085, 0x42000820, 0, 0x81800080|1-1-96-64-133-64-11-147-32-8-0-66-0-0-0-0-128-0-128-129-32-0-135-16-2-76-0-0-16-33-68-194-130-8-130-32-130-65-64-112-129-0-0-0-240-12-193-33-0-0-0-96-0-0-32-1-34-18-128-146-0-0-0-0
33624|data|DCD 2, 0, 0, 4, 6, 7, 9, 0xA, 0xC, 0xD, 0, 0xE, 0xF, 0x10|2-0-0-0-0-0-0-0-0-0-0-0-4-0-0-0-6-0-0-0-7-0-0-0-9-0-0-0-10-0-0-0-12-0-0-0-13-0-0-0-0-0-0-0-14-0-0-0-15-0-0-0-16-0-0-0-19-0-0-0-20-0-0-0-22-0-0-0-23-0-0-0-24-0-0-0-27-0-0-0-28-0-0-0-0-0-0-0-0-0-0-0-29-0-0-0-32-0-0-0-35-0-0-0-36-0-0-0-39-0-0-0-41-0-0-0-42-0-0-0-43-0-0-0-45-0-0-0-0-0-0-0-0-0-0-0-47-0-0-0-49-0-0-0-50-0-0-0
33772|data|DCD 0xD39AD3C, 0x7C9BD777, 0xA4F92300, 0xF742F17, 0x3E48FCE9|60-173-57-13-119-215-155-124-0-35-249-164-23-47-116-15-233-252-72-62-124-139-115-15-33-98-100-7-243-190-71-62-184-43-107-21-135-240-150-124-159-238-155-124-47-78-61-246-57-242-139-28-63-249-255-188-70-1-117-15-40-29-140-28-125-237-17-15-51-142-117-15-156-187-147-28-189-238-144-202-51-196-247-18-35-190-15-175-8-172-249-143-62-126-150-124-31-128-136-11-49-184-130-13-57-64-12-175-202-150-147-28-178-162-247-18-205-63-12-175-112-177-154-124-6-47-116-15-193-179-247-18-33-207-9-253-94-150-147-28-88-138-152-124-11-15-181-165-158-251-110-15-121-139-135-255-201-57-64-31-103-73-73-34-102-85-97-16-177-74-69-75-236-136-101-7-197-111-73-62-248-44-88-190-207-130-7-145-17-123-156-124-23-234-118-254
33968|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
33984|data|Elf32_Sym <aGmonStart - byte_87E0, 0, 0, 0x20, 0, 0>; "__gmon_start__"|1-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
34000|data|Elf32_Sym <aMalloc - byte_87E0, malloc, 0, 0x12, 0, 0>; "malloc"|240-0-0-0-136-140-0-0-0-0-0-0-18-0-0-0
34016|data|Elf32_Sym <aFopen+1 - byte_87E0, open, 0, 0x12, 0, 0>; "open"|47-0-0-0-188-140-0-0-0-0-0-0-18-0-0-0
34032|data|Elf32_Sym <aErrnoLocation - byte_87E0, __errno_location, 0, 0x12, 0, \; "__errno_location"|167-0-0-0-32-141-0-0-0-0-0-0-18-0-0-0
34048|data|Elf32_Sym <aFputs - byte_87E0, fputs, 0, 0x12, 0, 0>; "fputs"|210-0-0-0-216-141-0-0-0-0-0-0-18-0-0-0
34064|data|Elf32_Sym <aRegexec - byte_87E0, regexec, 0, 0x12, 0, 0>; "regexec"|67-0-0-0-60-140-0-0-0-0-0-0-18-0-0-0
34080|data|Elf32_Sym <aFopen - byte_87E0, fopen, 0, 0x12, 0, 0>; "fopen"|46-0-0-0-0-140-0-0-0-0-0-0-18-0-0-0
34096|data|Elf32_Sym <aStackChkGuard - byte_87E0, __stack_chk_guard, 4, 0x11, 0, \; "__stack_chk_guard"|135-1-0-0-8-122-1-0-4-0-0-0-17-0-25-0
34112|data|Elf32_Sym <aRegcomp - byte_87E0, regcomp, 0, 0x12, 0, 0>; "regcomp"|5-1-0-0-192-141-0-0-0-0-0-0-18-0-0-0
34128|data|Elf32_Sym <aFprintf+1 - byte_87E0, printf, 0, 0x12, 0, 0>; "printf"|64-1-0-0-244-139-0-0-0-0-0-0-18-0-0-0
34144|data|Elf32_Sym <aRegfree+3 - byte_87E0, free, 0, 0x12, 0, 0>; "free"|86-0-0-0-24-140-0-0-0-0-0-0-18-0-0-0
34160|data|Elf32_Sym <aOutb - byte_87E0, outb, 0, 0x12, 0, 0>; "outb"|27-1-0-0-168-141-0-0-0-0-0-0-18-0-0-0
34176|data|Elf32_Sym <aLibcStartMain - byte_87E0, __libc_start_main, 0, 0x12, 0, \; "__libc_start_main"|94-1-0-0-148-140-0-0-0-0-0-0-18-0-0-0
34192|data|Elf32_Sym <aStderr - byte_87E0, stderr, 4, 0x11, 0, 0x19>; "stderr"|20-1-0-0-16-122-1-0-4-0-0-0-17-0-25-0
34208|data|Elf32_Sym <aFprintf - byte_87E0, fprintf, 0, 0x12, 0, 0>; "fprintf"|63-1-0-0-20-141-0-0-0-0-0-0-18-0-0-0
34224|data|Elf32_Sym <aFread - byte_87E0, fread, 0, 0x12, 0, 0>; "fread"|48-1-0-0-108-140-0-0-0-0-0-0-18-0-0-0
34240|data|Elf32_Sym <aStdout - byte_87E0, stdout, 4, 0x11, 0, 0x19>; "stdout"|197-0-0-0-28-122-1-0-4-0-0-0-17-0-25-0
34256|data|Elf32_Sym <aAbort - byte_87E0, abort, 0, 0x12, 0, 0>; "abort"|116-0-0-0-240-141-0-0-0-0-0-0-18-0-0-0
34272|data|Elf32_Sym <aFseek - byte_87E0, fseek, 0, 0x12, 0, 0>; "fseek"|184-0-0-0-204-141-0-0-0-0-0-0-18-0-0-0
34288|data|Elf32_Sym <aStrlen - byte_87E0, strlen, 0, 0x12, 0, 0>; "strlen"|153-0-0-0-236-140-0-0-0-0-0-0-18-0-0-0
34304|data|Elf32_Sym <aPutchar - byte_87E0, putchar, 0, 0x12, 0, 0>; "putchar"|108-0-0-0-84-141-0-0-0-0-0-0-18-0-0-0
34320|data|Elf32_Sym <aOptind - byte_87E0, optind, 4, 0x11, 0, 0x19>; "optind"|60-0-0-0-12-122-1-0-4-0-0-0-17-0-25-0
34336|data|Elf32_Sym <aStrtoul - byte_87E0, strtoul, 0, 0x12, 0, 0>; "strtoul"|232-0-0-0-224-140-0-0-0-0-0-0-18-0-0-0
34352|data|Elf32_Sym <aStrerror - byte_87E0, strerror, 0, 0x12, 0, 0>; "strerror"|85-1-0-0-160-140-0-0-0-0-0-0-18-0-0-0
34368|data|Elf32_Sym <aExit - byte_87E0, exit, 0, 0x12, 0, 0>; "exit"|33-0-0-0-212-140-0-0-0-0-0-0-18-0-0-0
34384|data|Elf32_Sym <aInb - byte_87E0, inb, 0, 0x12, 0, 0>; "inb"|59-1-0-0-60-141-0-0-0-0-0-0-18-0-0-0
34400|data|Elf32_Sym <aMemset - byte_87E0, memset, 0, 0x12, 0, 0>; "memset"|160-0-0-0-72-141-0-0-0-0-0-0-18-0-0-0
34416|data|Elf32_Sym <aStrncpy - byte_87E0, strncpy, 0, 0x12, 0, 0>; "strncpy"|75-0-0-0-96-141-0-0-0-0-0-0-18-0-0-0
34432|data|Elf32_Sym <aStrcpy - byte_87E0, strcpy, 0, 0x12, 0, 0>; "strcpy"|26-0-0-0-96-140-0-0-0-0-0-0-18-0-0-0
34448|data|Elf32_Sym <aOptarg - byte_87E0, optarg, 4, 0x11, 0, 0x19>; "optarg"|13-1-0-0-36-122-1-0-4-0-0-0-17-0-25-0
34464|data|Elf32_Sym <aStrncmp - byte_87E0, strncmp, 0, 0x12, 0, 0>; "strncmp"|52-0-0-0-228-141-0-0-0-0-0-0-18-0-0-0
34480|data|Elf32_Sym <aMmap - byte_87E0, mmap, 0, 0x12, 0, 0>; "mmap"|142-0-0-0-248-140-0-0-0-0-0-0-18-0-0-0
34496|data|Elf32_Sym <aFputc - byte_87E0, fputc, 0, 0x12, 0, 0>; "fputc"|204-0-0-0-152-141-0-0-0-0-0-0-18-0-0-0
34512|data|Elf32_Sym <aOpterr - byte_87E0, opterr, 4, 0x11, 0, 0x19>; "opterr"|71-1-0-0-32-122-1-0-4-0-0-0-17-0-25-0
34528|data|Elf32_Sym <aFclose - byte_87E0, fclose, 0, 0x12, 0, 0>; "fclose"|225-0-0-0-124-141-0-0-0-0-0-0-18-0-0-0
34544|data|Elf32_Sym <aStrcmp - byte_87E0, strcmp, 0, 0x12, 0, 0>; "strcmp"|78-1-0-0-228-139-0-0-0-0-0-0-18-0-0-0
34560|data|Elf32_Sym <aIopl - byte_87E0, iopl, 0, 0x12, 0, 0>; "iopl"|54-1-0-0-136-141-0-0-0-0-0-0-18-0-0-0
34576|data|Elf32_Sym <aSprintf - byte_87E0, sprintf, 0, 0x12, 0, 0>; "sprintf"|38-0-0-0-180-141-0-0-0-0-0-0-18-0-0-0
34592|data|Elf32_Sym <aFgets - byte_87E0, fgets, 0, 0x12, 0, 0>; "fgets"|147-0-0-0-36-140-0-0-0-0-0-0-18-0-0-0
34608|data|Elf32_Sym <aGetopt - byte_87E0, getopt, 0, 0x12, 0, 0>; "getopt"|190-0-0-0-4-141-0-0-0-0-0-0-18-0-0-0
34624|data|Elf32_Sym <aStackChkFail - byte_87E0, __stack_chk_fail, 0, 0x12, 0, 0>; "__stack_chk_fail"|91-0-0-0-48-140-0-0-0-0-0-0-18-0-0-0
34640|data|Elf32_Sym <aCtypeBLoc - byte_87E0, __ctype_b_loc, 0, 0x12, 0, 0>; "__ctype_b_loc"|247-0-0-0-200-140-0-0-0-0-0-0-18-0-0-0
34656|data|Elf32_Sym <aStdin - byte_87E0, stdin, 4, 0x11, 0, 0x19>; "stdin"|122-0-0-0-24-122-1-0-4-0-0-0-17-0-25-0
34672|data|Elf32_Sym <aAssertFail - byte_87E0, __assert_fail, 0, 0x12, 0, 0>; "__assert_fail"|128-0-0-0-252-141-0-0-0-0-0-0-18-0-0-0
34688|data|Elf32_Sym <aRegerror - byte_87E0, regerror, 0, 0x12, 0, 0>; "regerror"|216-0-0-0-12-140-0-0-0-0-0-0-18-0-0-0
34704|data|Elf32_Sym <aRegfree - byte_87E0, regfree, 0, 0x12, 0, 0>; "regfree"|83-0-0-0-84-140-0-0-0-0-0-0-18-0-0-0
34720|data|Elf32_Sym <aSnprintf - byte_87E0, snprintf, 0, 0x12, 0, 0>; "snprintf"|112-1-0-0-44-141-0-0-0-0-0-0-18-0-0-0
34736|data|Elf32_Sym <aStrtoull - byte_87E0, strtoull, 0, 0x12, 0, 0>; "strtoull"|32-1-0-0-108-141-0-0-0-0-0-0-18-0-0-0
34752|data|Elf32_Sym <aFputs+1 - byte_87E0, puts, 0, 0x12, 0, 0>; "puts"|211-0-0-0-124-140-0-0-0-0-0-0-18-0-0-0
34768|data|Elf32_Sym <aFwrite - byte_87E0, fwrite, 0, 0x12, 0, 0>; "fwrite"|41-1-0-0-72-140-0-0-0-0-0-0-18-0-0-0
34784|data|DCB 0|0
34785|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
34800|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
34810|data|DCB "strcpy",0|115-116-114-99-112-121-0
34817|data|DCB "exit",0|101-120-105-116-0
34822|data|DCB "sprintf",0|115-112-114-105-110-116-102-0
34830|data|DCB "fopen",0|102-111-112-101-110-0
34836|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
34844|data|DCB "optind",0|111-112-116-105-110-100-0
34851|data|DCB "regexec",0|114-101-103-101-120-101-99-0
34859|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
34867|data|DCB "regfree",0|114-101-103-102-114-101-101-0
34875|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
34892|data|DCB "putchar",0|112-117-116-99-104-97-114-0
34900|data|DCB "abort",0|97-98-111-114-116-0
34906|data|DCB "stdin",0|115-116-100-105-110-0
34912|data|DCB "__assert_fail",0|95-95-97-115-115-101-114-116-95-102-97-105-108-0
34926|data|DCB "mmap",0|109-109-97-112-0
34931|data|DCB "fgets",0|102-103-101-116-115-0
34937|data|DCB "strlen",0|115-116-114-108-101-110-0
34944|data|DCB "memset",0|109-101-109-115-101-116-0
34951|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
34968|data|DCB "fseek",0|102-115-101-101-107-0
34974|data|DCB "getopt",0|103-101-116-111-112-116-0
34981|data|DCB "stdout",0|115-116-100-111-117-116-0
34988|data|DCB "fputc",0|102-112-117-116-99-0
34994|data|DCB "fputs",0|102-112-117-116-115-0
35000|data|DCB "regerror",0|114-101-103-101-114-114-111-114-0
35009|data|DCB "fclose",0|102-99-108-111-115-101-0
35016|data|DCB "strtoul",0|115-116-114-116-111-117-108-0
35024|data|DCB "malloc",0|109-97-108-108-111-99-0
35031|data|DCB "__ctype_b_loc",0|95-95-99-116-121-112-101-95-98-95-108-111-99-0
35045|data|DCB "regcomp",0|114-101-103-99-111-109-112-0
35053|data|DCB "optarg",0|111-112-116-97-114-103-0
35060|data|DCB "stderr",0|115-116-100-101-114-114-0
35067|data|DCB "outb",0|111-117-116-98-0
35072|data|DCB "strtoull",0|115-116-114-116-111-117-108-108-0
35081|data|DCB "fwrite",0|102-119-114-105-116-101-0
35088|data|DCB "fread",0|102-114-101-97-100-0
35094|data|DCB "iopl",0|105-111-112-108-0
35099|data|DCB "inb",0|105-110-98-0
35103|data|DCB "fprintf",0|102-112-114-105-110-116-102-0
35111|data|DCB "opterr",0|111-112-116-101-114-114-0
35118|data|DCB "strcmp",0|115-116-114-99-109-112-0
35125|data|DCB "strerror",0|115-116-114-101-114-114-111-114-0
35134|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
35152|data|DCB "snprintf",0|115-110-112-114-105-110-116-102-0
35161|data|DCB "ld-linux.so.3",0|108-100-45-108-105-110-117-120-46-115-111-46-51-0
35175|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
35193|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
35203|data|DCB 0|0
35204|data|DCW 0|0-0
35206|data|DCW 0; local  symbol: __gmon_start__|0-0
35208|data|DCW 2; malloc@@GLIBC_2.4|2-0
35210|data|DCW 2; open@@GLIBC_2.4|2-0
35212|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
35214|data|DCW 2; fputs@@GLIBC_2.4|2-0
35216|data|DCW 2; regexec@@GLIBC_2.4|2-0
35218|data|DCW 2; fopen@@GLIBC_2.4|2-0
35220|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
35222|data|DCW 2; regcomp@@GLIBC_2.4|2-0
35224|data|DCW 2; printf@@GLIBC_2.4|2-0
35226|data|DCW 2; free@@GLIBC_2.4|2-0
35228|data|DCW 2; outb@@GLIBC_2.4|2-0
35230|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
35232|data|DCW 2; stderr@@GLIBC_2.4|2-0
35234|data|DCW 2; fprintf@@GLIBC_2.4|2-0
35236|data|DCW 2; fread@@GLIBC_2.4|2-0
35238|data|DCW 2; stdout@@GLIBC_2.4|2-0
35240|data|DCW 2; abort@@GLIBC_2.4|2-0
35242|data|DCW 2; fseek@@GLIBC_2.4|2-0
35244|data|DCW 2; strlen@@GLIBC_2.4|2-0
35246|data|DCW 2; putchar@@GLIBC_2.4|2-0
35248|data|DCW 2; optind@@GLIBC_2.4|2-0
35250|data|DCW 2; strtoul@@GLIBC_2.4|2-0
35252|data|DCW 2; strerror@@GLIBC_2.4|2-0
35254|data|DCW 2; exit@@GLIBC_2.4|2-0
35256|data|DCW 2; inb@@GLIBC_2.4|2-0
35258|data|DCW 2; memset@@GLIBC_2.4|2-0
35260|data|DCW 2; strncpy@@GLIBC_2.4|2-0
35262|data|DCW 2; strcpy@@GLIBC_2.4|2-0
35264|data|DCW 2; optarg@@GLIBC_2.4|2-0
35266|data|DCW 2; strncmp@@GLIBC_2.4|2-0
35268|data|DCW 2; mmap@@GLIBC_2.4|2-0
35270|data|DCW 2; fputc@@GLIBC_2.4|2-0
35272|data|DCW 2; opterr@@GLIBC_2.4|2-0
35274|data|DCW 2; fclose@@GLIBC_2.4|2-0
35276|data|DCW 2; strcmp@@GLIBC_2.4|2-0
35278|data|DCW 2; iopl@@GLIBC_2.4|2-0
35280|data|DCW 2; sprintf@@GLIBC_2.4|2-0
35282|data|DCW 2; fgets@@GLIBC_2.4|2-0
35284|data|DCW 2; getopt@@GLIBC_2.4|2-0
35286|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
35288|data|DCW 2; __ctype_b_loc@@GLIBC_2.4|2-0
35290|data|DCW 2; stdin@@GLIBC_2.4|2-0
35292|data|DCW 2; __assert_fail@@GLIBC_2.4|2-0
35294|data|DCW 2; regerror@@GLIBC_2.4|2-0
35296|data|DCW 2; regfree@@GLIBC_2.4|2-0
35298|data|DCW 2; snprintf@@GLIBC_2.4|2-0
35300|data|DCW 2; strtoull@@GLIBC_2.4|2-0
35302|data|DCW 2; puts@@GLIBC_2.4|2-0
35304|data|DCW 2; fwrite@@GLIBC_2.4|2-0
35306|data|DCW 0|0-0
35308|data|Elf32_Verneed <1, 1, aLdLinuxSo3 - byte_87E0, 0x10, 0x20>; "ld-linux.so.3"|1-0-1-0-121-1-0-0-16-0-0-0-32-0-0-0
35324|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_87E0, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-153-1-0-0-0-0-0-0
35340|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_87E0, 0x10, 0>; "libc.so.6"|1-0-1-0-16-0-0-0-16-0-0-0-0-0-0-0
35356|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_87E0, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-153-1-0-0-0-0-0-0
35372|data|Elf32_Rel <0x179EC, 0x115>; R_ARM_GLOB_DAT __gmon_start__|236-121-1-0-21-1-0-0
35380|data|Elf32_Rel <0x17A08, 0x814>; R_ARM_COPY __stack_chk_guard|8-122-1-0-20-8-0-0
35388|data|Elf32_Rel <0x17A0C, 0x1614>; R_ARM_COPY optind|12-122-1-0-20-22-0-0
35396|data|Elf32_Rel <0x17A10, 0xE14>; R_ARM_COPY stderr|16-122-1-0-20-14-0-0
35404|data|Elf32_Rel <0x17A18, 0x2B14>; R_ARM_COPY stdin|24-122-1-0-20-43-0-0
35412|data|Elf32_Rel <0x17A1C, 0x1114>; R_ARM_COPY stdout|28-122-1-0-20-17-0-0
35420|data|Elf32_Rel <0x17A20, 0x2214>; R_ARM_COPY opterr|32-122-1-0-20-34-0-0
35428|data|Elf32_Rel <0x17A24, 0x1E14>; R_ARM_COPY optarg|36-122-1-0-20-30-0-0
35436|data|Elf32_Rel <0x17940, 0x2416>; R_ARM_JUMP_SLOT strcmp|64-121-1-0-22-36-0-0
35444|data|Elf32_Rel <0x17944, 0xA16>; R_ARM_JUMP_SLOT printf|68-121-1-0-22-10-0-0
35452|data|Elf32_Rel <0x17948, 0x716>; R_ARM_JUMP_SLOT fopen|72-121-1-0-22-7-0-0
35460|data|Elf32_Rel <0x1794C, 0x2D16>; R_ARM_JUMP_SLOT regerror|76-121-1-0-22-45-0-0
35468|data|Elf32_Rel <0x17950, 0xB16>; R_ARM_JUMP_SLOT free|80-121-1-0-22-11-0-0
35476|data|Elf32_Rel <0x17954, 0x2716>; R_ARM_JUMP_SLOT fgets|84-121-1-0-22-39-0-0
35484|data|Elf32_Rel <0x17958, 0x2916>; R_ARM_JUMP_SLOT __stack_chk_fail|88-121-1-0-22-41-0-0
35492|data|Elf32_Rel <0x1795C, 0x616>; R_ARM_JUMP_SLOT regexec|92-121-1-0-22-6-0-0
35500|data|Elf32_Rel <0x17960, 0x3216>; R_ARM_JUMP_SLOT fwrite|96-121-1-0-22-50-0-0
35508|data|Elf32_Rel <0x17964, 0x2E16>; R_ARM_JUMP_SLOT regfree|100-121-1-0-22-46-0-0
35516|data|Elf32_Rel <0x17968, 0x1D16>; R_ARM_JUMP_SLOT strcpy|104-121-1-0-22-29-0-0
35524|data|Elf32_Rel <0x1796C, 0x1016>; R_ARM_JUMP_SLOT fread|108-121-1-0-22-16-0-0
35532|data|Elf32_Rel <0x17970, 0x3116>; R_ARM_JUMP_SLOT puts|112-121-1-0-22-49-0-0
35540|data|Elf32_Rel <0x17974, 0x216>; R_ARM_JUMP_SLOT malloc|116-121-1-0-22-2-0-0
35548|data|Elf32_Rel <0x17978, 0xD16>; R_ARM_JUMP_SLOT __libc_start_main|120-121-1-0-22-13-0-0
35556|data|Elf32_Rel <0x1797C, 0x1816>; R_ARM_JUMP_SLOT strerror|124-121-1-0-22-24-0-0
35564|data|Elf32_Rel <0x17980, 0x116>; R_ARM_JUMP_SLOT __gmon_start__|128-121-1-0-22-1-0-0
35572|data|Elf32_Rel <0x17984, 0x316>; R_ARM_JUMP_SLOT open|132-121-1-0-22-3-0-0
35580|data|Elf32_Rel <0x17988, 0x2A16>; R_ARM_JUMP_SLOT __ctype_b_loc|136-121-1-0-22-42-0-0
35588|data|Elf32_Rel <0x1798C, 0x1916>; R_ARM_JUMP_SLOT exit|140-121-1-0-22-25-0-0
35596|data|Elf32_Rel <0x17990, 0x1716>; R_ARM_JUMP_SLOT strtoul|144-121-1-0-22-23-0-0
35604|data|Elf32_Rel <0x17994, 0x1416>; R_ARM_JUMP_SLOT strlen|148-121-1-0-22-20-0-0
35612|data|Elf32_Rel <0x17998, 0x2016>; R_ARM_JUMP_SLOT mmap|152-121-1-0-22-32-0-0
35620|data|Elf32_Rel <0x1799C, 0x2816>; R_ARM_JUMP_SLOT getopt|156-121-1-0-22-40-0-0
35628|data|Elf32_Rel <0x179A0, 0xF16>; R_ARM_JUMP_SLOT fprintf|160-121-1-0-22-15-0-0
35636|data|Elf32_Rel <0x179A4, 0x416>; R_ARM_JUMP_SLOT __errno_location|164-121-1-0-22-4-0-0
35644|data|Elf32_Rel <0x179A8, 0x2F16>; R_ARM_JUMP_SLOT snprintf|168-121-1-0-22-47-0-0
35652|data|Elf32_Rel <0x179AC, 0x1A16>; R_ARM_JUMP_SLOT inb|172-121-1-0-22-26-0-0
35660|data|Elf32_Rel <0x179B0, 0x1B16>; R_ARM_JUMP_SLOT memset|176-121-1-0-22-27-0-0
35668|data|Elf32_Rel <0x179B4, 0x1516>; R_ARM_JUMP_SLOT putchar|180-121-1-0-22-21-0-0
35676|data|Elf32_Rel <0x179B8, 0x1C16>; R_ARM_JUMP_SLOT strncpy|184-121-1-0-22-28-0-0
35684|data|Elf32_Rel <0x179BC, 0x3016>; R_ARM_JUMP_SLOT strtoull|188-121-1-0-22-48-0-0
35692|data|Elf32_Rel <0x179C0, 0x2316>; R_ARM_JUMP_SLOT fclose|192-121-1-0-22-35-0-0
35700|data|Elf32_Rel <0x179C4, 0x2516>; R_ARM_JUMP_SLOT iopl|196-121-1-0-22-37-0-0
35708|data|Elf32_Rel <0x179C8, 0x2116>; R_ARM_JUMP_SLOT fputc|200-121-1-0-22-33-0-0
35716|data|Elf32_Rel <0x179CC, 0xC16>; R_ARM_JUMP_SLOT outb|204-121-1-0-22-12-0-0
35724|data|Elf32_Rel <0x179D0, 0x2616>; R_ARM_JUMP_SLOT sprintf|208-121-1-0-22-38-0-0
35732|data|Elf32_Rel <0x179D4, 0x916>; R_ARM_JUMP_SLOT regcomp|212-121-1-0-22-9-0-0
35740|data|Elf32_Rel <0x179D8, 0x1316>; R_ARM_JUMP_SLOT fseek|216-121-1-0-22-19-0-0
35748|data|Elf32_Rel <0x179DC, 0x516>; R_ARM_JUMP_SLOT fputs|220-121-1-0-22-5-0-0
35756|data|Elf32_Rel <0x179E0, 0x1F16>; R_ARM_JUMP_SLOT strncmp|224-121-1-0-22-31-0-0
35764|data|Elf32_Rel <0x179E4, 0x1216>; R_ARM_JUMP_SLOT abort|228-121-1-0-22-18-0-0
35772|data|Elf32_Rel <0x179E8, 0x2C16>; R_ARM_JUMP_SLOT __assert_fail|232-121-1-0-22-44-0-0
35780|code|PUSH            {R3,LR}|8-181
35782|code|BL              sub_8EB0|0-240-115-249
35786|code|NOP|0-191
35788|code|POP             {R3,PC}|8-189
35790|data|DCW 0|0-0
35792|code|PUSH            {LR}|4-224-45-229
35796|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x8BE0)|4-224-159-229
35800|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
35804|code|LDR             PC, [LR,#8]!|8-240-190-229
35808|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8BE0|84-237-0-0
35812|code|ADR             R12, 0x8BEC|0-198-143-226
35816|code|ADD             R12, R12, #0xE000|14-202-140-226
35820|code|LDR             PC, [R12,#(strcmp_ptr - 0x16BEC)]!; __imp_strcmp|84-253-188-229
35824|code|BX              PC|120-71
35826|data|ALIGN 4|192-70
35828|code|ADR             R12, 0x8BFC|0-198-143-226
35832|code|ADD             R12, R12, #0xE000|14-202-140-226
35836|code|LDR             PC, [R12,#(printf_ptr - 0x16BFC)]!; __imp_printf|72-253-188-229
35840|code|ADR             R12, 0x8C08|0-198-143-226
35844|code|ADD             R12, R12, #0xE000|14-202-140-226
35848|code|LDR             PC, [R12,#(fopen_ptr - 0x16C08)]!; __imp_fopen|64-253-188-229
35852|code|ADR             R12, 0x8C14|0-198-143-226
35856|code|ADD             R12, R12, #0xE000|14-202-140-226
35860|code|LDR             PC, [R12,#(regerror_ptr - 0x16C14)]!; __imp_regerror|56-253-188-229
35864|code|ADR             R12, 0x8C20|0-198-143-226
35868|code|ADD             R12, R12, #0xE000|14-202-140-226
35872|code|LDR             PC, [R12,#(free_ptr - 0x16C20)]!; __imp_free|48-253-188-229
35876|code|ADR             R12, 0x8C2C|0-198-143-226
35880|code|ADD             R12, R12, #0xE000|14-202-140-226
35884|code|LDR             PC, [R12,#(fgets_ptr - 0x16C2C)]!; __imp_fgets|40-253-188-229
35888|code|ADR             R12, 0x8C38|0-198-143-226
35892|code|ADD             R12, R12, #0xE000|14-202-140-226
35896|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x16C38)]!; __imp___stack_chk_fail|32-253-188-229
35900|code|ADR             R12, 0x8C44|0-198-143-226
35904|code|ADD             R12, R12, #0xE000|14-202-140-226
35908|code|LDR             PC, [R12,#(regexec_ptr - 0x16C44)]!; __imp_regexec|24-253-188-229
35912|code|ADR             R12, 0x8C50|0-198-143-226
35916|code|ADD             R12, R12, #0xE000|14-202-140-226
35920|code|LDR             PC, [R12,#(fwrite_ptr - 0x16C50)]!; __imp_fwrite|16-253-188-229
35924|code|ADR             R12, 0x8C5C|0-198-143-226
35928|code|ADD             R12, R12, #0xE000|14-202-140-226
35932|code|LDR             PC, [R12,#(regfree_ptr - 0x16C5C)]!; __imp_regfree|8-253-188-229
35936|code|ADR             R12, 0x8C68|0-198-143-226
35940|code|ADD             R12, R12, #0xE000|14-202-140-226
35944|code|LDR             PC, [R12,#(strcpy_ptr - 0x16C68)]!; __imp_strcpy|0-253-188-229
35948|code|ADR             R12, 0x8C74|0-198-143-226
35952|code|ADD             R12, R12, #0xE000|14-202-140-226
35956|code|LDR             PC, [R12,#(fread_ptr - 0x16C74)]!; __imp_fread|248-252-188-229
35960|code|BX              PC|120-71
35962|data|ALIGN 4|192-70
35964|code|ADR             R12, 0x8C84|0-198-143-226
35968|code|ADD             R12, R12, #0xE000|14-202-140-226
35972|code|LDR             PC, [R12,#(puts_ptr - 0x16C84)]!; __imp_puts|236-252-188-229
35976|code|ADR             R12, 0x8C90|0-198-143-226
35980|code|ADD             R12, R12, #0xE000|14-202-140-226
35984|code|LDR             PC, [R12,#(malloc_ptr - 0x16C90)]!; __imp_malloc|228-252-188-229
35988|code|ADR             R12, 0x8C9C|0-198-143-226
35992|code|ADD             R12, R12, #0xE000|14-202-140-226
35996|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x16C9C)]!; __imp___libc_start_main|220-252-188-229
36000|code|ADR             R12, 0x8CA8|0-198-143-226
36004|code|ADD             R12, R12, #0xE000|14-202-140-226
36008|code|LDR             PC, [R12,#(strerror_ptr - 0x16CA8)]!; __imp_strerror|212-252-188-229
36012|code|BX              PC|120-71
36014|data|ALIGN 4|192-70
36016|code|ADR             R12, 0x8CB8|0-198-143-226
36020|code|ADD             R12, R12, #0xE000|14-202-140-226
36024|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x16CB8)]!; __imp___gmon_start__|200-252-188-229
36028|code|ADR             R12, 0x8CC4|0-198-143-226
36032|code|ADD             R12, R12, #0xE000|14-202-140-226
36036|code|LDR             PC, [R12,#(open_ptr - 0x16CC4)]!; __imp_open|192-252-188-229
36040|code|ADR             R12, 0x8CD0|0-198-143-226
36044|code|ADD             R12, R12, #0xE000|14-202-140-226
36048|code|LDR             PC, [R12,#(__ctype_b_loc_ptr - 0x16CD0)]!; __imp___ctype_b_loc|184-252-188-229
36052|code|ADR             R12, 0x8CDC|0-198-143-226
36056|code|ADD             R12, R12, #0xE000|14-202-140-226
36060|code|LDR             PC, [R12,#(exit_ptr - 0x16CDC)]!; __imp_exit|176-252-188-229
36064|code|ADR             R12, 0x8CE8|0-198-143-226
36068|code|ADD             R12, R12, #0xE000|14-202-140-226
36072|code|LDR             PC, [R12,#(strtoul_ptr - 0x16CE8)]!; __imp_strtoul|168-252-188-229
36076|code|ADR             R12, 0x8CF4|0-198-143-226
36080|code|ADD             R12, R12, #0xE000|14-202-140-226
36084|code|LDR             PC, [R12,#(strlen_ptr - 0x16CF4)]!; __imp_strlen|160-252-188-229
36088|code|ADR             R12, 0x8D00|0-198-143-226
36092|code|ADD             R12, R12, #0xE000|14-202-140-226
36096|code|LDR             PC, [R12,#(mmap_ptr - 0x16D00)]!; __imp_mmap|152-252-188-229
36100|code|ADR             R12, 0x8D0C|0-198-143-226
36104|code|ADD             R12, R12, #0xE000|14-202-140-226
36108|code|LDR             PC, [R12,#(getopt_ptr - 0x16D0C)]!; __imp_getopt|144-252-188-229
36112|code|BX              PC|120-71
36114|data|ALIGN 4|192-70
36116|code|ADR             R12, 0x8D1C|0-198-143-226
36120|code|ADD             R12, R12, #0xE000|14-202-140-226
36124|code|LDR             PC, [R12,#(fprintf_ptr - 0x16D1C)]!; __imp_fprintf|132-252-188-229
36128|code|ADR             R12, 0x8D28|0-198-143-226
36132|code|ADD             R12, R12, #0xE000|14-202-140-226
36136|code|LDR             PC, [R12,#(__errno_location_ptr - 0x16D28)]!; __imp___errno_location|124-252-188-229
36140|code|ADR             R12, 0x8D34|0-198-143-226
36144|code|ADD             R12, R12, #0xE000|14-202-140-226
36148|code|LDR             PC, [R12,#(snprintf_ptr - 0x16D34)]!; __imp_snprintf|116-252-188-229
36152|code|BX              PC|120-71
36154|data|ALIGN 4|192-70
36156|code|ADR             R12, 0x8D44|0-198-143-226
36160|code|ADD             R12, R12, #0xE000|14-202-140-226
36164|code|LDR             PC, [R12,#(inb_ptr - 0x16D44)]!; __imp_inb|104-252-188-229
36168|code|ADR             R12, 0x8D50|0-198-143-226
36172|code|ADD             R12, R12, #0xE000|14-202-140-226
36176|code|LDR             PC, [R12,#(memset_ptr - 0x16D50)]!; __imp_memset|96-252-188-229
36180|code|ADR             R12, 0x8D5C|0-198-143-226
36184|code|ADD             R12, R12, #0xE000|14-202-140-226
36188|code|LDR             PC, [R12,#(putchar_ptr - 0x16D5C)]!; __imp_putchar|88-252-188-229
36192|code|ADR             R12, 0x8D68|0-198-143-226
36196|code|ADD             R12, R12, #0xE000|14-202-140-226
36200|code|LDR             PC, [R12,#(strncpy_ptr - 0x16D68)]!; __imp_strncpy|80-252-188-229
36204|code|ADR             R12, 0x8D74|0-198-143-226
36208|code|ADD             R12, R12, #0xE000|14-202-140-226
36212|code|LDR             PC, [R12,#(strtoull_ptr - 0x16D74)]!; __imp_strtoull|72-252-188-229
36216|code|BX              PC|120-71
36218|data|ALIGN 4|192-70
36220|code|ADR             R12, 0x8D84|0-198-143-226
36224|code|ADD             R12, R12, #0xE000|14-202-140-226
36228|code|LDR             PC, [R12,#(fclose_ptr - 0x16D84)]!; __imp_fclose|60-252-188-229
36232|code|ADR             R12, 0x8D90|0-198-143-226
36236|code|ADD             R12, R12, #0xE000|14-202-140-226
36240|code|LDR             PC, [R12,#(iopl_ptr - 0x16D90)]!; __imp_iopl|52-252-188-229
36244|code|BX              PC|120-71
36246|data|ALIGN 4|192-70
36248|code|ADR             R12, 0x8DA0|0-198-143-226
36252|code|ADD             R12, R12, #0xE000|14-202-140-226
36256|code|LDR             PC, [R12,#(fputc_ptr - 0x16DA0)]!; __imp_fputc|40-252-188-229
36260|code|BX              PC|120-71
36262|data|ALIGN 4|192-70
36264|code|ADR             R12, 0x8DB0|0-198-143-226
36268|code|ADD             R12, R12, #0xE000|14-202-140-226
36272|code|LDR             PC, [R12,#(outb_ptr - 0x16DB0)]!; __imp_outb|28-252-188-229
36276|code|ADR             R12, 0x8DBC|0-198-143-226
36280|code|ADD             R12, R12, #0xE000|14-202-140-226
36284|code|LDR             PC, [R12,#(sprintf_ptr - 0x16DBC)]!; __imp_sprintf|20-252-188-229
36288|code|ADR             R12, 0x8DC8|0-198-143-226
36292|code|ADD             R12, R12, #0xE000|14-202-140-226
36296|code|LDR             PC, [R12,#(regcomp_ptr - 0x16DC8)]!; __imp_regcomp|12-252-188-229
36300|code|ADR             R12, 0x8DD4|0-198-143-226
36304|code|ADD             R12, R12, #0xE000|14-202-140-226
36308|code|LDR             PC, [R12,#(fseek_ptr - 0x16DD4)]!; __imp_fseek|4-252-188-229
36312|code|ADR             R12, 0x8DE0|0-198-143-226
36316|code|ADD             R12, R12, #0xE000|14-202-140-226
36320|code|LDR             PC, [R12,#(fputs_ptr - 0x16DE0)]!; __imp_fputs|252-251-188-229
36324|code|ADR             R12, 0x8DEC|0-198-143-226
36328|code|ADD             R12, R12, #0xE000|14-202-140-226
36332|code|LDR             PC, [R12,#(strncmp_ptr - 0x16DEC)]!; __imp_strncmp|244-251-188-229
36336|code|ADR             R12, 0x8DF8|0-198-143-226
36340|code|ADD             R12, R12, #0xE000|14-202-140-226
36344|code|LDR             PC, [R12,#(abort_ptr - 0x16DF8)]!; __imp_abort|236-251-188-229
36348|code|ADR             R12, 0x8E04|0-198-143-226
36352|code|ADD             R12, R12, #0xE000|14-202-140-226
36356|code|LDR             PC, [R12,#(__assert_fail_ptr - 0x16E04)]!; __imp___assert_fail|228-251-188-229
36360|code|LDR             R3, =stderr|7-75
36362|code|PUSH            {LR}|0-181
36364|code|SUB             SP, SP, #0xC|131-176
36366|code|LDR             R2, =aNvramtool; "nvramtool"|7-74
36368|code|STMEA.W         SP, {R0,R1}|141-232-3-0
36372|code|LDR             R0, [R3]; stream|24-104
36374|code|LDR             R3, =dword_17A38|6-75
36376|code|LDR             R1, =aSErrorOnLineDO_6; "%s: Error on line %d of CMOS layout fil"...|6-73
36378|code|LDR             R3, [R3]|27-104
36380|code|BLX             fprintf|255-247-122-239
36384|code|MOVS            R0, #1; status|1-32
36386|code|BLX             exit|255-247-88-239
36390|data|ALIGN 4|0-191
36392|data|DCD stderr|16-122-1-0
36396|data|DCD aNvramtool; "nvramtool"|124-197-0-0
36400|data|DCD dword_17A38|56-122-1-0
36404|data|DCD aSErrorOnLineDO_6; "%s: Error on line %d of CMOS layout fil"...|84-210-0-0
36408|code|PUSH            {R3,LR}|8-181
36410|code|BL              sub_C10C|3-240-103-249
36414|code|LDR             R3, =dword_17B30|9-75
36416|code|LDR             R0, =(sub_AFFC+1)|9-72
36418|code|LDR             R2, [R3,#(dword_17B3C - 0x17B30)]|218-104
36420|code|CBZ             R2, loc_8E4E|26-177
36422|code|LDR             R0, [R3,#(dword_17B44 - 0x17B30)]|88-105
36424|code|BL              sub_A82C|1-240-240-252
36428|code|LDR             R0, =(sub_A83C+1)|7-72
36430|code|BL              sub_9C20|0-240-231-254
36434|code|LDR             R3, =dword_17B54|7-75
36436|code|LDR             R2, [R3]|26-104
36438|code|LDR             R3, =unk_F204|7-75
36440|code|ADD.W           R3, R3, R2,LSL#2|3-235-130-3
36444|code|LDR             R3, [R3,#0x44]|91-108
36446|code|BLX             R3|152-71
36448|code|MOVS            R0, #0|0-32
36450|code|POP             {R3,PC}|8-189
36452|data|DCD dword_17B30|48-123-1-0
36456|data|DCD sub_AFFC+1|253-175-0-0
36460|data|DCD sub_A83C+1|61-168-0-0
36464|data|DCD dword_17B54|84-123-1-0
36468|data|DCD unk_F204|4-242-0-0
36472|code|MOV.W           R11, #0|79-240-0-11
36476|code|MOV.W           LR, #0|79-240-0-14
36480|code|POP.W           {R1}; argc|93-248-4-27
36484|code|MOV             R2, SP; ubp_av|106-70
36486|code|PUSH.W          {R2}; stack_end|77-248-4-45
36490|code|PUSH.W          {R0}; rtld_fini|77-248-4-13
36494|code|LDR.W           R12, =(nullsub_1+1)|223-248-20-192
36498|code|PUSH.W          {R12}; fini|77-248-4-205
36502|code|LDR             R0, =(sub_8E38+1); main|4-72
36504|code|LDR             R3, =(sub_C3A0+1); init|4-75
36506|code|BLX             __libc_start_main|255-247-252-238
36510|code|BLX             abort|255-247-168-239
36514|data|ALIGN 4|0-0
36516|data|DCD nullsub_1+1|229-195-0-0
36520|data|DCD sub_8E38+1|57-142-0-0
36524|data|DCD sub_C3A0+1|161-195-0-0
36528|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x8EB8)|3-75
36530|code|LDR             R2, =(__gmon_start___ptr_0 - 0x17934)|4-74
36532|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
36534|code|LDR             R3, [R3,R2]; __imp___gmon_start__|155-88
36536|code|CBZ             R3, locret_8EBE|11-177
36538|code|B.W             j___gmon_start__|255-247-247-190
36542|code|BX              LR|112-71
36544|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8EB8|124-234-0-0
36548|data|DCD __gmon_start___ptr_0 - 0x17934|184-0-0-0
36552|code|LDR             R3, =byte_17A28|2-75
36554|code|LDRB            R2, [R3]|26-120
36556|code|CBNZ            R2, locret_8ED2|10-185
36558|code|MOVS            R2, #1|1-34
36560|code|STRB            R2, [R3]|26-112
36562|code|BX              LR|112-71
36564|data|DCD byte_17A28|40-122-1-0
36568|code|LDR             R0, =dword_17838|3-72
36570|code|PUSH            {R3,LR}|8-181
36572|code|LDR             R3, [R0]|3-104
36574|code|CBZ             R3, locret_8EE6|19-177
36576|code|LDR             R3, =0|2-75
36578|code|CBZ             R3, locret_8EE6|3-177
36580|code|BLX             R3|152-71
36582|code|POP             {R3,PC}|8-189
36584|data|DCD dword_17838|56-120-1-0
36588|data|DCD 0|0-0-0-0
36592|code|SUB.W           R3, R0, #0xE|160-241-14-3
36596|code|CMP             R3, #0xF1|241-43
36598|code|PUSH            {R4,LR}|16-181
36600|code|BHI             loc_8F18|14-216
36602|code|CMP             R0, #0x7F|127-40
36604|code|UXTB            R0, R0|192-178
36606|code|ITE HI|140-191
36608|code|MOVHI           R1, #0x72 ; 'r'|114-33
36610|code|MOVLS           R1, #0x70 ; 'p'|112-33
36612|code|ITE HI|140-191
36614|code|MOVHI           R4, #0x73 ; 's'|115-36
36616|code|MOVLS           R4, #0x71 ; 'q'|113-36
36618|code|BLX             outb|255-247-78-239
36622|code|MOV             R0, R4|32-70
36624|code|POP.W           {R4,LR}|189-232-16-64
36628|code|B.W             j_inb|255-247-16-191
36632|code|LDR             R0, =aVerifyCmosByte; "!verify_cmos_byte_index(index)"|2-72
36634|code|MOVS            R2, #0xA8; line|168-34
36636|code|LDR             R1, =aCmosLowlevelC; "cmos_lowlevel.c"|2-73
36638|code|LDR             R3, =aCmosReadByte; "cmos_read_byte"|3-75
36640|code|BLX             __assert_fail|255-247-108-239
36644|data|DCD aVerifyCmosByte; "!verify_cmos_byte_index(index)"|56-196-0-0
36648|data|DCD aCmosLowlevelC; "cmos_lowlevel.c"|88-196-0-0
36652|data|DCD aCmosReadByte; "cmos_read_byte"|244-195-0-0
36656|code|PUSH            {R3-R5,LR}|56-181
36658|code|SUB.W           R3, R0, #0xE|160-241-14-3
36662|code|CMP             R3, #0xF1|241-43
36664|code|MOV             R4, R1|12-70
36666|code|BHI             loc_8F5C|15-216
36668|code|CMP             R0, #0x7F|127-40
36670|code|UXTB            R0, R0|192-178
36672|code|ITE HI|140-191
36674|code|MOVHI           R1, #0x72 ; 'r'|114-33
36676|code|MOVLS           R1, #0x70 ; 'p'|112-33
36678|code|ITE HI|140-191
36680|code|MOVHI           R5, #0x73 ; 's'|115-37
36682|code|MOVLS           R5, #0x71 ; 'q'|113-37
36684|code|BLX             outb|255-247-44-239
36688|code|MOV             R0, R4|32-70
36690|code|MOV             R1, R5|41-70
36692|code|POP.W           {R3-R5,LR}|189-232-56-64
36696|code|B.W             j_outb|255-247-36-191
36700|code|LDR             R0, =aVerifyCmosByte; "!verify_cmos_byte_index(index)"|2-72
36702|code|MOVS            R2, #0xC4; line|196-34
36704|code|LDR             R1, =aCmosLowlevelC; "cmos_lowlevel.c"|2-73
36706|code|LDR             R3, =aCmosWriteByte; "cmos_write_byte"|3-75
36708|code|BLX             __assert_fail|255-247-74-239
36712|data|DCD aVerifyCmosByte; "!verify_cmos_byte_index(index)"|56-196-0-0
36716|data|DCD aCmosLowlevelC; "cmos_lowlevel.c"|88-196-0-0
36720|data|DCD aCmosWriteByte; "cmos_write_byte"|4-196-0-0
36724|code|CMP             R1, #8|8-41
36726|code|PUSH            {R4-R6,LR}|112-181
36728|code|MOV             R4, R0|4-70
36730|code|MOV             R5, R1|13-70
36732|code|MOV             R6, R2|22-70
36734|code|LDR             R0, [R0]|0-104
36736|code|BEQ             loc_8FAE|21-208
36738|code|BL              sub_8EF0|255-247-181-255
36742|code|MOVS            R3, #1|1-35
36744|code|LDR             R2, [R4,#4]|98-104
36746|code|LSLS            R3, R5|171-64
36748|code|LDR             R4, [R4]|36-104
36750|code|SUBS            R3, #1|1-59
36752|code|LSLS            R6, R2|150-64
36754|code|UXTB            R3, R3|219-178
36756|code|LSLS            R3, R2|147-64
36758|code|UXTB            R3, R3|219-178
36760|code|BIC.W           R1, R0, R3|32-234-3-1
36764|code|ANDS            R3, R6|51-64
36766|code|MOV             R0, R4|32-70
36768|code|UXTAB.W         R1, R3, R1|83-250-129-241
36772|code|UXTB            R1, R1|201-178
36774|code|POP.W           {R4-R6,LR}|189-232-112-64
36778|code|B.W             sub_8F30|255-247-193-191
36782|code|MOV             R1, R2|17-70
36784|code|POP.W           {R4-R6,LR}|189-232-112-64
36788|code|B.W             sub_8F30|255-247-188-191
36792|code|PUSH            {R3-R5,LR}|56-181
36794|code|MOVS            R4, #0|0-36
36796|code|MOV             R5, R0|5-70
36798|code|MOV             R3, R4|35-70
36800|code|STRB            R3, [R5,R4]|43-85
36802|code|ADDS            R4, #1|1-52
36804|code|CMP             R4, #0xE|14-44
36806|code|BNE             loc_8FC0|251-209
36808|code|MOV             R0, R4|32-70
36810|code|BL              sub_8EF0|255-247-145-255
36814|code|STRB            R0, [R5,R4]|40-85
36816|code|ADDS            R4, #1|1-52
36818|code|CMP.W           R4, #0x100|180-245-128-127
36822|code|BNE             loc_8FC8|247-209
36824|code|POP             {R3-R5,PC}|56-189
36826|data|ALIGN 4|0-191
36828|code|PUSH            {R3-R5,LR}|56-181
36830|code|MOVS            R4, #0xE|14-36
36832|code|MOV             R5, R0|5-70
36834|code|LDRB            R1, [R5,R4]|41-93
36836|code|MOV             R0, R4|32-70
36838|code|ADDS            R4, #1|1-52
36840|code|BL              sub_8F30|255-247-162-255
36844|code|CMP.W           R4, #0x100|180-245-128-127
36848|code|BNE             loc_8FE2|247-209
36850|code|POP             {R3-R5,PC}|56-189
36852|code|CMP             R0, #3|3-40
36854|code|PUSH            {R3,LR}|8-181
36856|code|BHI             loc_9002|3-216
36858|code|BLX             iopl|255-247-198-238
36862|code|CBNZ            R0, loc_900E|48-185
36864|code|POP             {R3,PC}|8-189
36866|code|LDR             R0, =aLevel0Level3; "(level >= 0) && (level <= 3)"|7-72
36868|code|MOVS            R2, #0xFB; line|251-34
36870|code|LDR             R1, =aCmosLowlevelC; "cmos_lowlevel.c"|7-73
36872|code|LDR             R3, =aSetIopl; "set_iopl"|7-75
36874|code|BLX             __assert_fail|255-247-248-238
36878|code|LDR             R3, =stderr|7-75
36880|code|LDR             R1, =aSIoplSystemCal; "%s: iopl() system call failed.  You mus"...|7-73
36882|code|LDR             R2, =aNvramtool; "nvramtool"|8-74
36884|code|LDR             R0, [R3]; stream|24-104
36886|code|BLX             fprintf|255-247-126-238
36890|code|MOVS            R0, #1; status|1-32
36892|code|BLX             exit|255-247-90-238
36896|data|DCD aLevel0Level3; "(level >= 0) && (level <= 3)"|104-196-0-0
36900|data|DCD aCmosLowlevelC; "cmos_lowlevel.c"|88-196-0-0
36904|data|DCD aSetIopl; "set_iopl"|20-196-0-0
36908|data|DCD stderr|16-122-1-0
36912|data|DCD aSIoplSystemCal; "%s: iopl() system call failed.  You mus"...|136-196-0-0
36916|data|DCD aNvramtool; "nvramtool"|124-197-0-0
36920|code|CMP.W           R0, #0x800|176-245-0-111
36924|code|BCC             loc_9044|2-211
36926|code|MOV.W           R0, #0x30000|79-244-64-48
36930|code|BX              LR|112-71
36932|code|ADDS            R3, R1, R0|11-24
36934|code|CMP.W           R3, #0x800|179-245-0-111
36938|code|BLS             loc_9052|2-217
36940|code|MOV.W           R0, #0x30000|79-244-64-48
36944|code|BX              LR|112-71
36946|code|CMP             R0, #0x6F ; 'o'|111-40
36948|code|BHI             loc_905E|3-216
36950|code|MOVS            R0, #0x30001|1-32-192-242-3-0
36956|code|BX              LR|112-71
36958|code|CMP             R2, #2|2-42
36960|code|BEQ             loc_9070|6-208
36962|code|MOVS            R0, #0x30002|2-32-192-242-3-0
36968|code|CMP             R1, #0x40 ; '@'|64-41
36970|code|IT LS|152-191
36972|code|MOVLS           R0, #0|0-32
36974|code|BX              LR|112-71
36976|code|MOVS            R0, #0|0-32
36978|code|BX              LR|112-71
36980|code|PUSH.W          {R4-R11,LR}|45-233-240-79
36984|code|MOV             R4, R2|20-70
36986|code|LDR             R7, [R0,#4]|71-104
36988|code|SUB             SP, SP, #0xC|131-176
36990|code|LDR             R6, [R0,#8]|134-104
36992|code|MOV             R8, R3|152-70
36994|code|LDR.W           R10, [R0]|208-248-0-160
36998|code|MOV             R1, R7|57-70
37000|code|MOV             R2, R6|50-70
37002|code|MOV             R0, R10|80-70
37004|code|BL              sub_9038|255-247-212-255
37008|code|CMP             R0, #0|0-40
37010|code|BNE             loc_9174|111-209
37012|code|CMP             R6, #2|2-46
37014|code|BEQ             loc_90FA|48-208
37016|code|CBZ             R7, loc_90F4|103-179
37018|code|MOV             R9, SP|233-70
37020|code|MOV             R5, R0|5-70
37022|code|MOV.W           R11, #1|79-240-1-11
37026|code|ADD.W           LR, R5, R10|5-235-10-14
37030|code|RSB.W           R2, R5, #0x20 ; ' '|197-241-32-2
37034|code|AND.W           R3, LR, #7|14-240-7-3
37038|code|SUB.W           R0, R5, #0x20 ; ' '|165-241-32-0
37042|code|RSB.W           R6, R3, #8|195-241-8-6
37046|code|LSRS.W          R1, R4, R5|52-250-5-241
37050|code|CMP             R6, R7|190-66
37052|code|IT CS|40-191
37054|code|MOVCS           R6, R7|62-70
37056|code|LSL.W           R2, R8, R2|8-250-2-242
37060|code|LSR.W           R12, R8, R0|40-250-0-252
37064|code|ORRS            R1, R2|17-67
37066|code|LSL.W           R2, R11, R6|11-250-6-242
37070|code|ANDS.W          R1, R1, R0,ASR#32|17-234-32-1
37074|code|IT CC|56-191
37076|code|MOVCC           R1, R12|97-70
37078|code|SUBS            R2, #1|1-58
37080|code|MOV             R0, SP|104-70
37082|code|ANDS            R2, R1|10-64
37084|code|MOV             R1, R6|49-70
37086|code|MOV.W           LR, LR,LSR#3|79-234-222-14
37090|code|STR             R3, [SP,#0x30+var_2C]|1-147
37092|code|UXTB            R2, R2|210-178
37094|code|STR.W           LR, [SP,#0x30+var_30]|205-248-0-224
37098|code|BL              sub_8F74|255-247-67-255
37102|code|SUBS            R7, R7, R6|191-27
37104|code|ADD             R5, R6|53-68
37106|code|BNE             loc_90A2|214-209
37108|code|ADD             SP, SP, #0xC|3-176
37110|code|POP.W           {R4-R11,PC}|189-232-240-143
37114|code|CMP             R7, #0|0-47
37116|code|BEQ             loc_90F4|250-208
37118|code|MOV             R9, SP|233-70
37120|code|MOV             R5, R0|5-70
37122|code|MOV.W           R8, #1|79-240-1-8
37126|code|LSRS            R1, R5, #6|169-9
37128|code|ADD.W           LR, R5, R10|5-235-10-14
37132|code|AND.W           R2, R5, #0x3F|5-240-63-2
37136|code|AND.W           R3, LR, #7|14-240-7-3
37140|code|ADD.W           R6, R4, R1,LSL#3|4-235-193-6
37144|code|LDR.W           R1, [R4,R1,LSL#3]|84-248-49-16
37148|code|RSB.W           R0, R3, #8|195-241-8-0
37152|code|RSB.W           R11, R2, #0x20 ; ' '|194-241-32-11
37156|code|LDR.W           R12, [R6,#4]|214-248-4-192
37160|code|CMP             R7, #0x40 ; '@'|64-47
37162|code|ITE CC|52-191
37164|code|MOVCC           R6, R7|62-70
37166|code|MOVCS           R6, #0x40 ; '@'|64-38
37168|code|CMP             R6, R0|134-66
37170|code|IT CS|40-191
37172|code|MOVCS           R6, R0|6-70
37174|code|LSRS            R1, R2|209-64
37176|code|SUB.W           R0, R2, #0x20 ; ' '|162-241-32-0
37180|code|LSL.W           R2, R8, R6|8-250-6-242
37184|code|LSL.W           R11, R12, R11|12-250-11-251
37188|code|LSR.W           R12, R12, R0|44-250-0-252
37192|code|ORR.W           R1, R11, R1|75-234-1-1
37196|code|SUBS            R2, #1|1-58
37198|code|ANDS.W          R1, R1, R0,ASR#32|17-234-32-1
37202|code|IT CC|56-191
37204|code|MOVCC           R1, R12|97-70
37206|code|MOV             R0, SP|104-70
37208|code|ANDS            R2, R1|10-64
37210|code|MOV             R1, R6|49-70
37212|code|MOV.W           LR, LR,LSR#3|79-234-222-14
37216|code|STR             R3, [SP,#0x30+var_2C]|1-147
37218|code|UXTB            R2, R2|210-178
37220|code|STR.W           LR, [SP,#0x30+var_30]|205-248-0-224
37224|code|BL              sub_8F74|255-247-4-255
37228|code|SUBS            R7, R7, R6|191-27
37230|code|ADD             R5, R6|53-68
37232|code|BNE             loc_9106|201-209
37234|code|B               loc_90F4|191-231
37236|code|LDR             R0, =aVerifyCmosOpBi; "!verify_cmos_op(bit, length, e->config)"|2-72
37238|code|MOVS            R2, #0x83; line|131-34
37240|code|LDR             R1, =aCmosLowlevelC; "cmos_lowlevel.c"|2-73
37242|code|LDR             R3, =aCmosWrite; "cmos_write"|3-75
37244|code|BLX             __assert_fail|255-247-62-238
37248|data|DCD aVerifyCmosOpBi; "!verify_cmos_op(bit, length, e->config)"|200-196-0-0
37252|data|DCD aCmosLowlevelC; "cmos_lowlevel.c"|88-196-0-0
37256|data|DCD aCmosWrite; "cmos_write"|32-196-0-0
37260|code|PUSH.W          {R4-R11,LR}|45-233-240-79
37264|code|SUB             SP, SP, #0x1C|135-176
37266|code|LDR             R6, [R0,#4]|70-104
37268|code|LDR             R4, [R0,#8]|132-104
37270|code|LDR.W           R11, [R0]|208-248-0-176
37274|code|MOV             R1, R6|49-70
37276|code|MOV             R2, R4|34-70
37278|code|MOV             R0, R11|88-70
37280|code|BL              sub_9038|255-247-74-255
37284|code|CMP             R0, #0|0-40
37286|code|BNE.W           loc_92CC|64-240-145-128
37290|code|CMP             R4, #2|2-44
37292|code|BEQ             loc_9220|56-208
37294|code|MOVS            R2, #0|0-34
37296|code|MOVS            R3, #0|0-35
37298|code|STRD.W          R2, R3, [SP,#0x40+var_40]|205-233-0-35
37302|code|CBZ             R6, loc_9216|118-179
37304|code|MOV             R4, R0|4-70
37306|code|MOV.W           R10, #1|79-240-1-10
37310|code|ADD.W           R0, R4, R11|4-235-11-0
37314|code|AND.W           R7, R0, #7|0-240-7-7
37318|code|LSRS            R0, R0, #3|192-8
37320|code|RSB.W           R5, R7, #8|199-241-8-5
37324|code|BL              sub_8EF0|255-247-144-254
37328|code|CMP             R5, R6|181-66
37330|code|IT CS|40-191
37332|code|MOVCS           R5, R6|53-70
37334|code|LSL.W           R2, R10, R5|10-250-5-242
37338|code|SUB.W           R3, R4, #0x20 ; ' '|164-241-32-3
37342|code|SUBS            R2, #1|1-58
37344|code|RSB.W           R1, R4, #0x20 ; ' '|196-241-32-1
37348|code|ASRS.W          R7, R0, R7|80-250-7-247
37352|code|ANDS            R7, R2|23-64
37354|code|UXTB            R7, R7|255-178
37356|code|LSLS.W          R2, R7, R3|23-250-3-242
37360|code|LSR.W           R9, R7, R1|39-250-1-249
37364|code|ANDS.W          R9, R9, R3,ASR#32|25-234-35-9
37368|code|IT CC|56-191
37370|code|MOVCC           R9, R2|145-70
37372|code|LDRD.W          R2, R3, [SP,#0x40+var_40]|221-233-0-35
37376|code|LSL.W           R8, R7, R4|7-250-4-248
37380|code|ADDS            R4, R4, R5|100-25
37382|code|ADDS.W          R2, R2, R8|18-235-8-2
37386|code|ADC.W           R3, R3, R9|67-235-9-3
37390|code|SUBS            R6, R6, R5|118-27
37392|code|STRD.W          R2, R3, [SP,#0x40+var_40]|205-233-0-35
37396|code|BNE             loc_91BE|211-209
37398|code|LDMFD.W         SP, {R0,R1}|157-232-3-0
37402|code|ADD             SP, SP, #0x1C|7-176
37404|code|POP.W           {R4-R11,PC}|189-232-240-143
37408|code|ADDS            R0, R6, #7|240-29
37410|code|LSRS            R0, R0, #3; size|192-8
37412|code|BLX             malloc|255-247-48-237
37416|code|MOV             R10, R0|130-70
37418|code|CMP             R0, #0|0-40
37420|code|BEQ             loc_92BC|70-208
37422|code|CMP             R6, #0|0-46
37424|code|BEQ             loc_92C2|71-208
37426|code|MOVS            R2, #0|0-34
37428|code|MOV             R9, R6|177-70
37430|code|STR.W           R10, [SP,#0x40+var_40]|205-248-0-160
37434|code|MOV             R4, R2|20-70
37436|code|STR             R2, [SP,#0x40+var_3C]|1-146
37438|code|STR.W           R11, [SP,#0x40+var_38]|205-248-8-176
37442|code|STR.W           R10, [SP,#0x40+var_34]|205-248-12-160
37446|code|LDR             R3, [SP,#0x40+var_38]|2-155
37448|code|MOV.W           R8, R4,LSR#6|79-234-148-24
37452|code|AND.W           R6, R4, #0x3F|4-240-63-6
37456|code|ADDS            R0, R4, R3|224-24
37458|code|CMP.W           R9, #0x40 ; '@'|185-241-64-15
37462|code|ITE CC|52-191
37464|code|MOVCC           R3, R9|75-70
37466|code|MOVCS           R3, #0x40 ; '@'|64-35
37468|code|AND.W           R5, R0, #7|0-240-7-5
37472|code|RSB.W           R7, R5, #8|197-241-8-7
37476|code|LSRS            R0, R0, #3|192-8
37478|code|CMP             R3, R7|187-66
37480|code|IT CC|56-191
37482|code|MOVCC           R7, R3|31-70
37484|code|BL              sub_8EF0|255-247-64-254
37488|code|MOVS            R2, #1|1-34
37490|code|LDR             R3, [SP,#0x40+var_34]|3-155
37492|code|SUB.W           R12, R6, #0x20 ; ' '|166-241-32-12
37496|code|ADDS            R4, R4, R7|228-25
37498|code|LSLS.W          R1, R2, R7|18-250-7-241
37502|code|ADD.W           R8, R3, R8,LSL#3|3-235-200-8
37506|code|SUBS            R1, #1|1-57
37508|code|LDRD.W          R2, R3, [R8]|216-233-0-35
37512|code|ASRS.W          R5, R0, R5|80-250-5-245
37516|code|ANDS            R1, R5|41-64
37518|code|RSB.W           R5, R6, #0x20 ; ' '|198-241-32-5
37522|code|UXTB            R1, R1|201-178
37524|code|LSL.W           R0, R1, R12|1-250-12-240
37528|code|LSR.W           R11, R1, R5|33-250-5-251
37532|code|LSL.W           R10, R1, R6|1-250-6-250
37536|code|ANDS.W          R11, R11, R12,ASR#32|27-234-44-11
37540|code|IT CC|56-191
37542|code|MOVCC           R11, R0|131-70
37544|code|ADDS.W          R2, R2, R10|18-235-10-2
37548|code|ADC.W           R3, R3, R11|67-235-11-3
37552|code|SUBS.W          R9, R9, R7|185-235-7-9
37556|code|STRD.W          R2, R3, [R8]|200-233-0-35
37560|code|BNE             loc_9246|197-209
37562|code|B               loc_9216|172-231
37564|code|BL              sub_9560|0-240-80-249
37568|code|B               loc_922E|181-231
37570|code|MOVS            R2, #0|0-34
37572|code|MOVS            R3, #0|0-35
37574|code|STRD.W          R2, R3, [SP,#0x40+var_40]|205-233-0-35
37578|code|B               loc_9216|164-231
37580|code|LDR             R0, =aVerifyCmosOpBi; "!verify_cmos_op(bit, length, e->config)"|2-72
37582|code|MOVS            R2, #0x58 ; 'X'; line|88-34
37584|code|LDR             R1, =aCmosLowlevelC; "cmos_lowlevel.c"|2-73
37586|code|LDR             R3, =aCmosRead; "cmos_read"|3-75
37588|code|BLX             __assert_fail|255-247-146-237
37592|data|DCD aVerifyCmosOpBi; "!verify_cmos_op(bit, length, e->config)"|200-196-0-0
37596|data|DCD aCmosLowlevelC; "cmos_lowlevel.c"|88-196-0-0
37600|data|DCD aCmosRead; "cmos_read"|44-196-0-0
37604|code|LDR             R2, [R0,#8]|130-104
37606|code|PUSH            {R4,LR}|16-181
37608|code|MOV             R4, R0|4-70
37610|code|MOVS            R0, #3|3-32
37612|code|CMP             R2, #3|3-42
37614|code|MOVT.W          R0, #4|192-242-4-0
37618|code|BNE             loc_92F6|0-209
37620|code|POP             {R4,PC}|16-189
37622|code|LDM.W           R4, {R0,R1}|148-232-3-0
37626|code|BL              sub_9038|255-247-157-254
37630|code|CMP             R0, #0|0-40
37632|code|BNE             locret_92F4|248-209
37634|code|LDR             R3, [R4,#4]|99-104
37636|code|CMP             R3, #0|0-43
37638|code|BNE             locret_92F4|245-209
37640|code|LDR             R0, =aELength0; "e->length > 0"|2-72
37642|code|MOVS            R2, #0x34 ; '4'; line|52-34
37644|code|LDR             R1, =aCmosOpsC; "cmos_ops.c"|2-73
37646|code|LDR             R3, =aPrepareCmosOpC; "prepare_cmos_op_common"|3-75
37648|code|BLX             __assert_fail|255-247-116-237
37652|data|DCD aELength0; "e->length > 0"|48-197-0-0
37656|data|DCD aCmosOpsC; "cmos_ops.c"|64-197-0-0
37660|data|DCD aPrepareCmosOpC; "prepare_cmos_op_common"|240-196-0-0
37664|code|PUSH            {R4,LR}|16-181
37666|code|MOV             R4, R0|4-70
37668|code|BL              sub_92E4|255-247-222-255
37672|code|CBNZ            R0, locret_933C|64-185
37674|code|LDR             R3, [R4,#8]|163-104
37676|code|CMP             R3, #2|2-43
37678|code|BLS             locret_933C|5-217
37680|code|LDR             R0, =(aELength0+0xC); assertion|3-72
37682|code|MOVS            R2, #0x4C ; 'L'; line|76-34
37684|code|LDR             R1, =aCmosOpsC; "cmos_ops.c"|3-73
37686|code|LDR             R3, =aPrepareCmosRea; "prepare_cmos_read"|4-75
37688|code|BLX             __assert_fail|255-247-96-237
37692|code|POP             {R4,PC}|16-189
37694|data|ALIGN 0x10|0-191
37696|data|DCD aELength0+0xC; "0"|60-197-0-0
37700|data|DCD aCmosOpsC; "cmos_ops.c"|64-197-0-0
37704|data|DCD aPrepareCmosRea; "prepare_cmos_read"|8-197-0-0
37708|code|PUSH.W          {R4-R11,LR}|45-233-240-79
37712|code|SUB             SP, SP, #0xC|131-176
37714|code|MOV             R6, R0|6-70
37716|code|MOV             R7, R1|15-70
37718|code|MOV             R8, R2|144-70
37720|code|BL              sub_92E4|255-247-196-255
37724|code|MOV             R4, R0|4-70
37726|code|CBNZ            R0, loc_9378|88-185
37728|code|LDR             R3, [R6,#8]|179-104
37730|code|CMP             R3, #1|1-43
37732|code|BEQ             loc_93E6|63-208
37734|code|BCS             loc_93D6|54-210
37736|code|LDR             R0, [R6,#0xC]|240-104
37738|code|BL              sub_9EC0|0-240-169-253
37742|code|MOV             R5, R0|5-70
37744|code|CBNZ            R0, loc_938C|96-185
37746|code|MOVS            R4, #0x40005|5-36-192-242-4-4
37752|code|MOV             R0, R4|32-70
37754|code|ADD             SP, SP, #0xC|3-176
37756|code|POP.W           {R4-R11,PC}|189-232-240-143
37760|code|MOV             R0, R5|40-70
37762|code|BL              sub_9EE8|0-240-177-253
37766|code|MOV             R5, R0|5-70
37768|code|CMP             R0, #0|0-40
37770|code|BEQ             loc_9454|99-208
37772|code|ADD.W           R0, R5, #0x10; s1|5-241-16-0
37776|code|MOV             R1, R7; s2|57-70
37778|code|MOVS            R2, #0x20 ; ' '; n|32-34
37780|code|BLX             strncmp|255-247-38-237
37784|code|CMP             R0, #0|0-40
37786|code|BNE             loc_9380|241-209
37788|code|CMP             R5, #0|0-45
37790|code|BEQ             loc_9454|89-208
37792|code|LDRD.W          R10, R11, [R5,#8]|213-233-2-171
37796|code|LDR             R1, [R6,#4]|113-104
37798|code|CMP             R1, #0x3F ; '?'|63-41
37800|code|BHI             loc_944E|81-216
37802|code|MOVS            R0, #1|1-32
37804|code|SUB.W           R5, R1, #0x20 ; ' '|161-241-32-5
37808|code|RSB.W           R7, R1, #0x20 ; ' '|193-241-32-7
37812|code|LSLS.W          R6, R0, R5|16-250-5-246
37816|code|LSRS.W          R3, R0, R7|48-250-7-243
37820|code|ANDS.W          R3, R3, R5,ASR#32|19-234-37-3
37824|code|IT CC|56-191
37826|code|MOVCC           R3, R6|51-70
37828|code|LSLS.W          R2, R0, R1|16-250-1-242
37832|code|CMP             R10, R2|146-69
37834|code|SBCS.W          R1, R11, R3|123-235-3-1
37838|code|BCC             loc_944E|62-211
37840|code|MOV.W           R4, #0x40004|79-240-4-20
37844|code|B               loc_9378|208-231
37846|code|CMP             R3, #2|2-43
37848|code|BEQ             loc_941C|32-208
37850|code|LDR             R0, =(aELength0+0xC); assertion|35-72
37852|code|MOVS            R2, #0x99; line|153-34
37854|code|LDR             R1, =aCmosOpsC; "cmos_ops.c"|35-73
37856|code|LDR             R3, =aPrepareCmosWri; "prepare_cmos_write"|35-75
37858|code|BLX             __assert_fail|255-247-12-237
37862|code|STR             R7, [SP,#0x30+endptr]|1-151
37864|code|BLX             __ctype_b_loc|255-247-110-236
37868|code|MOV             R3, R7|59-70
37870|code|LDR             R1, [R0]|1-104
37872|code|B               loc_93F4|0-224
37874|code|STR             R3, [SP,#0x30+endptr]|1-147
37876|code|LDRB.W          R5, [R3],#1|19-248-1-91
37880|code|LDRH.W          R2, [R1,R5,LSL#1]|49-248-21-32
37884|code|ANDS.W          R2, R2, #0x2000; base|18-244-0-82
37888|code|BNE             loc_93F2|247-209
37890|code|MOV             R0, R7; nptr|56-70
37892|code|ADD             R1, SP, #0x30+endptr; endptr|1-169
37894|code|BLX             strtoull|255-247-178-236
37898|code|LDR             R3, [SP,#0x30+endptr]|1-155
37900|code|LDRB            R3, [R3]|27-120
37902|code|MOV             R10, R0|130-70
37904|code|MOV             R11, R1|139-70
37906|code|CBZ             R3, loc_945A|19-179
37908|code|MOVS            R4, #0x40002|2-36-192-242-4-4
37914|code|B               loc_9378|173-231
37916|code|MOV             R0, R7; s|56-70
37918|code|LDR             R5, [R6,#4]|117-104
37920|code|BLX             strlen|255-247-100-236
37924|code|CMP.W           R5, R0,LSL#3|181-235-192-15
37928|code|BCC             loc_93D0|210-211
37930|code|MOV.W           R9, R5,LSR#3|79-234-213-9
37934|code|MOV.W           R11, #0|79-240-0-11
37938|code|MOV             R0, R9; size|72-70
37940|code|BLX             malloc|255-247-40-236
37944|code|MOV             R1, R4; c|33-70
37946|code|MOV             R2, R9; n|74-70
37948|code|MOV             R5, R0|5-70
37950|code|BLX             memset|255-247-132-236
37954|code|MOV             R0, R5; dest|40-70
37956|code|MOV             R1, R7; src|57-70
37958|code|BLX             strcpy|255-247-12-236
37962|code|MOV             R10, R5|170-70
37964|code|B               loc_93A4|170-231
37966|code|STRD.W          R10, R11, [R8]|200-233-0-171
37970|code|B               loc_9378|145-231
37972|code|MOV.W           R4, #0x40000|79-244-128-36
37976|code|B               loc_9378|142-231
37978|code|CMP             R5, #0x2D ; '-'|45-45
37980|code|BNE             loc_93A4|162-209
37982|code|MOVS            R4, #0x40001|1-36-192-242-4-4
37988|code|B               loc_9378|136-231
37990|data|ALIGN 4|0-191
37992|data|DCD aELength0+0xC; "0"|60-197-0-0
37996|data|DCD aCmosOpsC; "cmos_ops.c"|64-197-0-0
38000|data|DCD aPrepareCmosWri; "prepare_cmos_write"|28-197-0-0
38004|code|PUSH            {R3-R5,LR}|56-181
38006|code|MOV             R4, #0x179FC|71-246-252-20-192-242-1-4
38014|code|LDR             R0, [R4]|32-104
38016|code|BL              sub_8EF0|255-247-54-253
38020|code|MOV             R5, R0|5-70
38022|code|LDR             R0, [R4]|32-104
38024|code|ADDS            R0, #1|1-48
38026|code|BL              sub_8EF0|255-247-49-253
38030|code|ADD.W           R0, R0, R5,LSL#8|0-235-5-32
38034|code|UXTH            R0, R0|128-178
38036|code|POP             {R3-R5,PC}|56-189
38038|data|ALIGN 4|0-191
38040|code|PUSH            {R3-R5,LR}|56-181
38042|code|MOV             R4, #0x179FC|71-246-252-20-192-242-1-4
38050|code|MOV             R5, R0|5-70
38052|code|LSRS            R1, R5, #8|41-10
38054|code|LDR             R0, [R4]|32-104
38056|code|BL              sub_8F30|255-247-66-253
38060|code|LDR             R0, [R4]|32-104
38062|code|UXTB            R1, R5|233-178
38064|code|ADDS            R0, #1|1-48
38066|code|POP.W           {R3-R5,LR}|189-232-56-64
38070|code|B.W             sub_8F30|255-247-59-189
38074|data|ALIGN 4|0-191
38076|code|PUSH            {R4-R6,LR}|112-181
38078|code|LDR             R3, =dword_17A04|10-75
38080|code|LDR             R6, =dword_17A00|10-78
38082|code|LDR             R4, [R3]|28-104
38084|code|LDR             R3, [R6]|51-104
38086|code|CMP             R4, R3|156-66
38088|code|BHI             loc_94E2|11-216
38090|code|MOVS            R5, #0|0-37
38092|code|MOV             R0, R4|32-70
38094|code|ADDS            R4, #1|1-52
38096|code|BL              sub_8EF0|255-247-14-253
38100|code|LDR             R3, [R6]|51-104
38102|code|CMP             R3, R4|163-66
38104|code|ADD             R5, R0|5-68
38106|code|BCS             loc_94CC|247-210
38108|code|MVNS            R5, R5|237-67
38110|code|UXTH            R0, R5|168-178
38112|code|POP             {R4-R6,PC}|112-189
38114|code|MOVW            R0, #0xFFFF|79-246-255-112
38118|code|POP             {R4-R6,PC}|112-189
38120|data|DCD dword_17A04|4-122-1-0
38124|data|DCD dword_17A00|0-122-1-0
38128|code|PUSH            {R3-R5,LR}|56-181
38130|code|MOVS            R0, #3|3-32
38132|code|BL              sub_8FF4|255-247-126-253
38136|code|BL              sub_94BC|255-247-224-255
38140|code|MOV             R5, R0|5-70
38142|code|BL              sub_9474|255-247-185-255
38146|code|MOV             R4, R0|4-70
38148|code|MOVS            R0, #0|0-32
38150|code|BL              sub_8FF4|255-247-117-253
38154|code|CMP             R5, R4|165-66
38156|code|BNE             loc_9510|0-209
38158|code|POP             {R3-R5,PC}|56-189
38160|code|LDR             R3, =stderr|4-75
38162|code|LDR             R1, =aSWarningCorebo; "%s: Warning: Coreboot CMOS checksum is "...|5-73
38164|code|LDR             R2, =aNvramtool; "nvramtool"|5-74
38166|code|LDR             R0, [R3]; stream|24-104
38168|code|BLX             fprintf|255-247-252-235
38172|code|MOVS            R0, #1; status|1-32
38174|code|BLX             exit|255-247-218-235
38178|data|ALIGN 4|0-191
38180|data|DCD stderr|16-122-1-0
38184|data|DCD aSWarningCorebo; "%s: Warning: Coreboot CMOS checksum is "...|76-197-0-0
38188|data|DCD aNvramtool; "nvramtool"|124-197-0-0
38192|code|PUSH            {R3-R5,LR}|56-181
38194|code|MOV             R3, R0|3-70
38196|code|MOV             R5, R1|13-70
38198|code|MOV             R4, R2|20-70
38200|code|MOV             R0, R1; s|8-70
38202|code|MOV             R1, R2; n|17-70
38204|code|MOV             R2, R3; stream|26-70
38206|code|BLX             fgets|255-247-114-235
38210|code|CBZ             R0, loc_9558|72-177
38212|code|MOV             R0, R5; s|40-70
38214|code|SUBS            R4, #1|1-60
38216|code|BLX             strlen|255-247-208-235
38220|code|CMP             R0, R4|160-66
38222|code|ITE EQ|12-191
38224|code|MOVEQ.W         R0, #0x10001|79-240-1-16
38228|code|MOVNE           R0, #0|0-32
38230|code|POP             {R3-R5,PC}|56-189
38232|code|MOV.W           R0, #0x10000|79-244-128-48
38236|code|POP             {R3-R5,PC}|56-189
38238|data|ALIGN 0x10|0-191
38240|code|PUSH            {R3,LR}|8-181
38242|code|MOV             R3, #0x17A10|71-246-16-35-192-242-1-3
38250|code|MOVW            R1, #0xC58C|76-242-140-81
38254|code|MOVW            R2, #0xC57C|76-242-124-82
38258|code|MOVT.W          R1, #0; format|192-242-0-1
38262|code|LDR             R0, [R3]; stream|24-104
38264|code|MOVT.W          R2, #0|192-242-0-2
38268|code|BLX             fprintf|255-247-202-235
38272|code|MOVS            R0, #1; status|1-32
38274|code|BLX             exit|255-247-168-235
38278|data|ALIGN 4|0-191
38280|code|PUSH            {R4,LR}|16-181
38282|code|MOVW            R1, #0xC5A0|76-242-160-81
38286|code|MOVW            R2, #0xC57C|76-242-124-82
38290|code|MOVT.W          R1, #0; format|192-242-0-1
38294|code|MOVT.W          R2, #0|192-242-0-2
38298|code|MOV             R4, R0|4-70
38300|code|BLX             fprintf|255-247-186-235
38304|code|MOV             R3, #0x17A10|71-246-16-35-192-242-1-3
38312|code|LDR             R0, [R3]|24-104
38314|code|SUBS            R3, R4, R0|35-26
38316|code|NEGS            R0, R3|88-66
38318|code|ADC.W           R0, R0, R3; status|64-235-3-0
38322|code|BLX             exit|255-247-144-235
38326|data|ALIGN 4|0-191
38328|code|PUSH            {R4,R5}|48-180
38330|code|MOV             R3, R1|11-70
38332|code|SUB             SP, SP, #8|130-176
38334|code|MOV             R2, R1|10-70
38336|code|CBZ             R1, loc_95F2|185-177
38338|code|MOVS            R2, #0|0-34
38340|code|LDRB            R4, [R0]|4-120
38342|code|MOVW            R5, #0xFFFF|79-246-255-117
38346|code|MOV             R3, R2|19-70
38348|code|B               loc_95DA|5-224
38350|code|LDRB.W          R4, [R0,#1]!|16-248-1-79
38354|code|TST.W           R2, #1|18-240-1-15
38358|code|IT NE|24-191
38360|code|LSLNE           R4, R4, #8|36-2
38362|code|ADDS            R3, R3, R4|27-25
38364|code|ADDS            R2, #1|1-50
38366|code|CMP             R3, R5|171-66
38368|code|ADD.W           R4, R3, R3,LSR#16|3-235-19-68
38372|code|IT HI|136-191
38374|code|UXTHHI          R3, R4|163-178
38376|code|CMP             R2, R1|138-66
38378|code|BNE             loc_95CE|240-209
38380|code|UXTB            R2, R3|218-178
38382|code|UBFX.W          R3, R3, #8, #8|195-243-7-35
38386|code|STRB.W          R2, [SP,#0x10+var_C]|141-248-4-32
38390|code|STRB.W          R3, [SP,#0x10+var_C+1]|141-248-5-48
38394|code|LDRH.W          R0, [SP,#0x10+var_C]|189-248-4-0
38398|code|MVNS            R0, R0|192-67
38400|code|UXTH            R0, R0|128-178
38402|code|ADD             SP, SP, #8|2-176
38404|code|POP             {R4,R5}|48-188
38406|code|BX              LR|112-71
38408|code|SUBS            R0, #0x20 ; ' '|32-56
38410|code|UXTB            R0, R0|192-178
38412|code|CMP             R0, #0x5E ; '^'|94-40
38414|code|ITE HI|140-191
38416|code|MOVHI           R0, #0|0-32
38418|code|MOVLS           R0, #1|1-32
38420|code|BX              LR|112-71
38422|data|ALIGN 4|0-191
38424|code|PUSH            {R4-R6,LR}|112-181
38426|code|SUB             SP, SP, #0x18|134-176
38428|code|LDR             R6, =__stack_chk_guard|24-78
38430|code|MOV             R5, R0|5-70
38432|code|LDR             R1, [SP,#0x28+arg_0]|10-153
38434|code|MOVS            R4, #0xE|14-36
38436|code|LDR             R0, [R6]|48-104
38438|code|CMP             R1, #0|0-41
38440|code|STR             R0, [SP,#0x28+var_14]|5-144
38442|code|BLE             loc_963A|6-221
38444|code|CMP             R1, #8|8-41
38446|code|ITE LT|180-191
38448|code|MOVLT           R4, R1|12-70
38450|code|MOVGE           R4, #8|8-36
38452|code|RSB.W           R4, R4, #8|196-241-8-4
38456|code|LSLS            R4, R4, #1|100-0
38458|code|MOV             R0, SP; s|104-70
38460|code|LDR             R1, =a016llx; "%016llx"|17-73
38462|code|BLX             sprintf|255-247-186-235
38466|code|LDRB.W          R0, [SP,R4]; c|29-248-4-0
38470|code|MOV             R1, R5; stream|41-70
38472|code|ADDS            R4, #1|1-52
38474|code|BLX             fputc|255-247-166-235
38478|code|CMP             R4, #0x10|16-44
38480|code|BEQ             loc_966E|13-208
38482|code|LSLS            R3, R4, #0x1E|163-7
38484|code|BNE             loc_9642|245-209
38486|code|MOVS            R0, #0x3A ; ':'; c|58-32
38488|code|MOV             R1, R5; stream|41-70
38490|code|BLX             fputc|255-247-158-235
38494|code|LDRB.W          R0, [SP,R4]; c|29-248-4-0
38498|code|MOV             R1, R5; stream|41-70
38500|code|ADDS            R4, #1|1-52
38502|code|BLX             fputc|255-247-152-235
38506|code|CMP             R4, #0x10|16-44
38508|code|BNE             loc_9652|241-209
38510|code|LDR             R2, [SP,#0x28+var_14]|5-154
38512|code|LDR             R3, [R6]|51-104
38514|code|CMP             R2, R3|154-66
38516|code|BNE             loc_967A|1-209
38518|code|ADD             SP, SP, #0x18|6-176
38520|code|POP             {R4-R6,PC}|112-189
38522|code|BLX             __stack_chk_fail|255-247-218-234
38526|data|ALIGN 0x10|0-191
38528|data|DCD __stack_chk_guard|8-122-1-0
38532|data|DCD a016llx; "%016llx"|140-202-0-0
38536|code|LSRS            R2, R1, #4|10-9
38538|code|MOVW            R3, #0xCA7C|76-246-124-35
38542|code|PUSH            {R4}|16-180
38544|code|MOVT.W          R3, #0|192-242-0-3
38548|code|AND.W           R4, R1, #0xF|1-240-15-4
38552|code|MOVW            R1, #0xCA94|76-246-148-33
38556|code|LDRB            R2, [R3,R2]|154-92
38558|code|MOVT.W          R1, #0|192-242-0-1
38562|code|LDRB            R3, [R3,R4]|27-93
38564|code|POP             {R4}|16-188
38566|code|B.W             j_fprintf|255-247-51-187
38570|data|ALIGN 4|0-191
38572|code|PUSH.W          {R4-R11,LR}|45-233-240-79
38576|code|SUB             SP, SP, #0x1C|135-176
38578|code|MOV             R8, R0|128-70
38580|code|LDR             R4, [SP,#0x40+arg_4]|17-156
38582|code|STRD.W          R2, R3, [SP,#0x40+var_30]|205-233-4-35
38586|code|LDR             R7, [SP,#0x40+stream]|16-159
38588|code|LDR             R2, [R4]|34-104
38590|code|CMP             R2, #0|0-42
38592|code|ITE GT|204-191
38594|code|MOVGT           R3, #0|0-35
38596|code|MOVLE           R3, #1|1-35
38598|code|ORRS.W          R5, R3, R1,LSR#31|83-234-209-117
38602|code|BNE             loc_9772|82-209
38604|code|LDR.W           R9, [R4,#0x1C]|212-248-28-144
38608|code|LDR             R3, =(sub_9608+1)|96-75
38610|code|STR             R1, [SP,#0x40+var_34]|3-145
38612|code|CMP.W           R9, #0|185-241-0-15
38616|code|IT EQ|8-191
38618|code|MOVEQ           R9, R3|153-70
38620|code|CMP             R2, R1|138-66
38622|code|BGT             loc_976E|70-220
38624|code|MOV             R1, R7; stream|57-70
38626|code|LDR             R0, [R4,#8]; s|160-104
38628|code|BLX             fputs|255-247-120-235
38632|code|LDRD.W          R2, R3, [SP,#0x40+var_30]|221-233-4-35
38636|code|LDR             R1, [R4,#4]|97-104
38638|code|MOVS            R6, #0|0-38
38640|code|ADDS            R2, R2, R5|82-25
38642|code|MOV             R0, R7|56-70
38644|code|ADC.W           R3, R3, R5,ASR#31|67-235-229-115
38648|code|STR             R1, [SP,#0x40+var_40]|0-145
38650|code|BL              sub_9618|255-247-141-255
38654|code|LDR             R0, [R4,#0xC]; s|224-104
38656|code|MOV             R1, R7; stream|57-70
38658|code|BLX             fputs|255-247-106-235
38662|code|B               loc_9710|3-224
38664|code|LDR             R0, [R4,#0x10]; s|32-105
38666|code|MOV             R1, R7; stream|57-70
38668|code|BLX             fputs|255-247-100-235
38672|code|LDRB.W          R1, [R8,R5]|24-248-5-16
38676|code|MOV             R0, R7|56-70
38678|code|BL              sub_9688|255-247-183-255
38682|code|LDR             R3, [R4]|35-104
38684|code|ADDS            R6, #1|1-54
38686|code|ADDS            R5, #1|1-53
38688|code|CMP             R6, R3|158-66
38690|code|BLT             loc_9708|241-219
38692|code|LDR             R0, [R4,#0x14]; s|96-105
38694|code|MOV             R1, R7; stream|57-70
38696|code|SUBS            R5, R5, R3|237-26
38698|code|BLX             fputs|255-247-86-235
38702|code|LDR             R3, [R4]|35-104
38704|code|CMP             R3, #0|0-43
38706|code|BLE             loc_975A|18-221
38708|code|MOVS            R6, #0|0-38
38710|code|LDRB.W          R10, [R8,R5]|24-248-5-160
38714|code|ADDS            R6, #1|1-54
38716|code|LDRB.W          R11, [R4,#0x18]|148-248-24-176
38720|code|ADDS            R5, #1|1-53
38722|code|MOV             R0, R10|80-70
38724|code|BLX             R9; sub_9608|200-71
38726|code|MOV             R1, R7; stream|57-70
38728|code|CMP             R0, #0|0-40
38730|code|ITE EQ|12-191
38732|code|MOVEQ           R0, R11|88-70
38734|code|MOVNE           R0, R10; c|80-70
38736|code|BLX             fputc|255-247-34-235
38740|code|LDR             R3, [R4]|35-104
38742|code|CMP             R3, R6|179-66
38744|code|BGT             loc_9736|237-220
38746|code|MOVS            R0, #0xA; c|10-32
38748|code|MOV             R1, R7; stream|57-70
38750|code|BLX             fputc|255-247-28-235
38754|code|LDR             R3, [R4]|35-104
38756|code|LDR             R2, [SP,#0x40+var_34]|3-154
38758|code|SUBS            R2, R2, R3|210-26
38760|code|STR             R2, [SP,#0x40+var_34]|3-146
38762|code|CMP             R3, R2|147-66
38764|code|BLE             loc_96E0|184-221
38766|code|LDR             R3, [SP,#0x40+var_34]|3-155
38768|code|CBNZ            R3, loc_9778|19-185
38770|code|ADD             SP, SP, #0x1C|7-176
38772|code|POP.W           {R4-R11,PC}|189-232-240-143
38776|code|MOV             R1, R7; stream|57-70
38778|code|LDR             R0, [R4,#8]; s|160-104
38780|code|BLX             fputs|255-247-44-235
38784|code|LDRD.W          R2, R3, [SP,#0x40+var_30]|221-233-4-35
38788|code|LDR             R1, [R4,#4]|97-104
38790|code|MOV             R0, R7|56-70
38792|code|ADDS            R2, R2, R5|82-25
38794|code|ADC.W           R3, R3, R5,ASR#31|67-235-229-115
38798|code|MOVS            R6, #0|0-38
38800|code|STR             R1, [SP,#0x40+var_40]|0-145
38802|code|BL              sub_9618|255-247-65-255
38806|code|LDR             R0, [R4,#0xC]; s|224-104
38808|code|MOV             R1, R7; stream|57-70
38810|code|BLX             fputs|255-247-30-235
38814|code|LDR             R2, [SP,#0x40+var_34]|3-154
38816|code|CMP             R2, #0|0-42
38818|code|BLE             loc_97E4|31-221
38820|code|ADD.W           R10, R8, R5|8-235-5-10
38824|code|MOVS            R6, #0|0-38
38826|code|LDRB.W          R1, [R10,R6]|26-248-6-16
38830|code|MOV             R0, R7|56-70
38832|code|BL              sub_9688|255-247-106-255
38836|code|LDR             R0, [R4,#0x10]; s|32-105
38838|code|MOV             R1, R7; stream|57-70
38840|code|ADDS            R6, #1|1-54
38842|code|BLX             fputs|255-247-14-235
38846|code|LDR             R3, [SP,#0x40+var_34]|3-155
38848|code|CMP             R6, R3|158-66
38850|code|BNE             loc_97AA|242-209
38852|code|MOV             R6, R3|30-70
38854|code|MOVS            R2, #2; n|2-34
38856|code|MOVS            R1, #1; size|1-33
38858|code|ADDS            R5, R5, R3|237-24
38860|code|LDR             R0, =asc_CA9C; ptr|34-72
38862|code|MOV             R3, R7; s|59-70
38864|code|BLX             fwrite|255-247-58-234
38868|code|LDR             R3, [R4]|35-104
38870|code|ADDS            R6, #1|1-54
38872|code|CMP             R6, R3|158-66
38874|code|BGE             loc_97F8|13-218
38876|code|LDR             R0, [R4,#0x10]; s|32-105
38878|code|MOV             R1, R7; stream|57-70
38880|code|BLX             fputs|255-247-250-234
38884|code|MOVS            R2, #2; n|2-34
38886|code|MOV             R3, R7; s|59-70
38888|code|MOVS            R1, #1; size|1-33
38890|code|LDR             R0, =asc_CA9C; ptr|27-72
38892|code|BLX             fwrite|255-247-44-234
38896|code|LDR             R3, [R4]|35-104
38898|code|ADDS            R6, #1|1-54
38900|code|CMP             R6, R3|158-66
38902|code|BLT             loc_97DC|241-219
38904|code|LDR             R0, [R4,#0x14]; s|96-105
38906|code|MOV             R1, R7; stream|57-70
38908|code|BLX             fputs|255-247-236-234
38912|code|LDR             R2, [SP,#0x40+var_34]|3-154
38914|code|MOVS            R6, #0|0-38
38916|code|CMP             R2, #0|0-42
38918|code|BLE             loc_9830|19-221
38920|code|SUBS            R5, R5, R2|173-26
38922|code|MOVS            R6, #0|0-38
38924|code|ADD             R8, R5|168-68
38926|code|LDRB.W          R5, [R8,R6]|24-248-6-80
38930|code|ADDS            R6, #1|1-54
38932|code|LDRB.W          R10, [R4,#0x18]|148-248-24-160
38936|code|MOV             R0, R5|40-70
38938|code|BLX             R9; sub_9608|200-71
38940|code|MOV             R1, R7; stream|57-70
38942|code|CMP             R0, #0|0-40
38944|code|ITE EQ|12-191
38946|code|MOVEQ           R0, R10|80-70
38948|code|MOVNE           R0, R5; c|40-70
38950|code|BLX             fputc|255-247-184-234
38954|code|LDR             R3, [SP,#0x40+var_34]|3-155
38956|code|CMP             R6, R3|158-66
38958|code|BNE             loc_980E|238-209
38960|code|LDR             R3, [R4]|35-104
38962|code|CMP             R6, R3|158-66
38964|code|BGE             loc_9846|7-218
38966|code|MOVS            R0, #0x20 ; ' '; c|32-32
38968|code|MOV             R1, R7; stream|57-70
38970|code|BLX             fputc|255-247-174-234
38974|code|LDR             R3, [R4]|35-104
38976|code|ADDS            R6, #1|1-54
38978|code|CMP             R3, R6|179-66
38980|code|BGT             loc_9836|247-220
38982|code|MOVS            R0, #0xA|10-32
38984|code|MOV             R1, R7|57-70
38986|code|ADD             SP, SP, #0x1C|7-176
38988|code|POP.W           {R4-R11,LR}|189-232-240-79
38992|code|B.W             j_fputc|255-247-160-186
38996|data|DCD sub_9608+1|9-150-0-0
39000|data|DCD asc_CA9C; "  "|156-202-0-0
39004|code|PUSH.W          {R4-R11,LR}|45-233-240-79
39008|code|SUB             SP, SP, #0x7C|159-176
39010|code|LDR.W           R11, =__stack_chk_guard|223-248-240-178
39014|code|LDR             R4, =aSpaceSpaceSpac; "^[[:space:]]*([^[:space:]]+)[[:space:]]"...|168-76
39016|code|ADD             R7, SP, #0x10|4-175
39018|code|SUB             SP, SP, #0x108|194-176
39020|code|LDR             R6, =dword_17A2C|167-78
39022|code|LDR.W           LR, [R11]|219-248-0-224
39026|code|ADD             R5, SP, #0x184+var_174|4-173
39028|code|SUB             SP, SP, #0x28 ; '('|138-176
39030|code|MOVS            R1, #2|2-33
39032|code|SUB.W           R2, R4, #0x28 ; '('|164-241-40-2
39036|code|MOV             R10, R0|130-70
39038|code|ADD.W           R3, R7, #0x18|7-241-24-3
39042|code|MOVS            R0, #5; cflags|5-32
39044|code|STR.W           LR, [R7,#0x6C+var_8]|199-248-100-224
39048|code|ADD.W           R9, R7, #0x38 ; '8'|7-241-56-9
39052|code|STR             R4, [SP,#0x1AC+eflags]|0-148
39054|code|MOVS            R4, #0|0-36
39056|code|STR.W           R9, [SP,#0x1AC+var_1A8]|205-248-4-144
39060|code|ADD.W           R8, SP, #0x1AC+var_19C|13-241-16-8
39064|code|STR             R4, [R7,#0x6C+var_C]|60-102
39066|code|ADD.W           R4, R7, #0x60 ; '`'|7-241-96-4
39070|code|STR             R4, [R7,#0x6C+var_5C]|60-97
39072|code|BL              sub_C2D8|2-240-26-253
39076|code|MOV             R0, R10; stream|80-70
39078|code|MOV             R1, R5; s|41-70
39080|code|MOV.W           R2, #0x100; n|79-244-128-114
39084|code|MOVS            R3, #1|1-35
39086|code|STR             R3, [R6]|51-96
39088|code|BL              sub_9530|255-247-62-254
39092|code|CMP.W           R0, #0x10000|176-245-128-63
39096|code|MOV             R4, R0|4-70
39098|code|BEQ             loc_98F4|27-208
39100|code|CMP.W           R0, #0x10001|176-241-1-31
39104|code|BEQ             loc_9924|48-208
39106|code|CMP             R0, #0|0-40
39108|code|BNE             loc_9918|40-209
39110|code|ADD.W           R0, R7, #0x18; preg|7-241-24-0
39114|code|MOV             R1, R5; string|41-70
39116|code|MOV             R2, R4; nmatch|34-70
39118|code|MOV             R3, R4; pmatch|35-70
39120|code|STR             R4, [SP,#0x1AC+eflags]; eflags|0-148
39122|code|BLX             regexec|255-247-180-233
39126|code|CMP             R0, #0|0-40
39128|code|BNE             loc_993C|48-209
39130|code|LDR             R3, [R6]|51-104
39132|code|MOV             R0, R10; stream|80-70
39134|code|MOV             R1, R5; s|41-70
39136|code|MOV.W           R2, #0x100; n|79-244-128-114
39140|code|ADDS            R3, #1|1-51
39142|code|STR             R3, [R6]|51-96
39144|code|BL              sub_9530|255-247-34-254
39148|code|CMP.W           R0, #0x10000|176-245-128-63
39152|code|MOV             R4, R0|4-70
39154|code|BNE             loc_98BC|227-209
39156|code|MOVS            R0, #2|2-32
39158|code|MOV             R2, R9|74-70
39160|code|ADD.W           R1, R7, #0x18|7-241-24-1
39164|code|BL              sub_C370|2-240-56-253
39168|code|LDR             R2, [R7,#0x6C+var_8]|122-110
39170|code|LDR.W           R3, [R11]|219-248-0-48
39174|code|LDR             R0, [R7,#0x6C+var_C]|56-110
39176|code|CMP             R2, R3|154-66
39178|code|BNE.W           loc_9B5E|64-240-40-129
39182|code|ADD.W           R7, R7, #0x6C ; 'l'|7-241-108-7
39186|code|MOV             SP, R7|189-70
39188|code|POP.W           {R4-R11,PC}|189-232-240-143
39192|code|LDR             R0, =(aELength0+0xC); assertion|125-72
39194|code|MOVS            R2, #0xC9; line|201-34
39196|code|LDR             R1, =aInputFileC; "input_file.c"|125-73
39198|code|LDR             R3, =aGetInputFileLi; "get_input_file_line"|126-75
39200|code|BLX             __assert_fail|255-247-108-234
39204|code|MOVS            R2, #0xFE|254-34
39206|code|STR             R2, [SP,#0x1AC+eflags]|0-146
39208|code|LDR             R2, =stderr|124-74
39210|code|LDR             R3, [R6]|51-104
39212|code|LDR             R1, =aSErrorOnLineDO; "%s: Error on line %d of input file: Max"...|124-73
39214|code|LDR             R0, [R2]; stream|16-104
39216|code|LDR             R2, =aNvramtool; "nvramtool"|124-74
39218|code|BLX             fprintf|255-247-240-233
39222|code|MOVS            R0, #1; status|1-32
39224|code|BLX             exit|255-247-204-233
39228|code|MOV             R3, R8; pmatch|67-70
39230|code|MOV             R0, R9; preg|72-70
39232|code|MOV             R1, R5; string|41-70
39234|code|MOVS            R2, #4; nmatch|4-34
39236|code|STR             R4, [SP,#0x1AC+eflags]; eflags|0-148
39238|code|BLX             regexec|255-247-122-233
39242|code|MOV             R3, R0|3-70
39244|code|CMP             R0, #0|0-40
39246|code|BNE.W           loc_9B62|64-240-8-129
39250|code|LDR.W           R1, [R8,#0xC]|216-248-12-16
39254|code|LDR.W           R2, [R8,#0x14]|216-248-20-32
39258|code|LDR.W           R0, [R8,#8]|216-248-8-0
39262|code|LDR.W           R4, [R8,#0x10]|216-248-16-64
39266|code|ADDS            R0, R5, R0|40-24
39268|code|STRB            R3, [R5,R1]|107-84
39270|code|STRB            R3, [R5,R2]|171-84
39272|code|STR             R0, [R7,#0x6C+s2]|120-97
39274|code|STR             R4, [R7,#0x6C+var_60]|252-96
39276|code|BL              sub_9F00|0-240-200-250
39280|code|CMP             R0, #0|0-40
39282|code|BNE.W           loc_9B76|64-240-0-129
39286|code|LDR             R0, [R7,#0x6C+s2]; s2|120-105
39288|code|BL              sub_9D48|0-240-230-249
39292|code|MOV             R4, R0|4-70
39294|code|CMP             R0, #0|0-40
39296|code|BEQ.W           loc_9B76|0-240-249-128
39300|code|MOVS            R0, #0x20 ; ' '; size|32-32
39302|code|BLX             malloc|255-247-128-233
39306|code|STR             R0, [R7,#0x6C+s2]|120-97
39308|code|CMP             R0, #0|0-40
39310|code|BEQ.W           loc_9B58|0-240-227-128
39314|code|LDR             R3, [R4]|35-104
39316|code|MOV             R0, R4|32-70
39318|code|LDR.W           LR, [R7,#0x6C+s2]|215-248-20-224
39322|code|LDR             R2, [R7,#0x6C+var_60]|250-104
39324|code|STR.W           R3, [LR]|206-248-0-48
39328|code|ADD.W           R12, R5, R2|5-235-2-12
39332|code|LDR             R3, [R4,#4]|99-104
39334|code|ADD.W           R2, R7, #0x58 ; 'X'|7-241-88-2
39338|code|MOV             R1, R12|97-70
39340|code|STR.W           R3, [LR,#4]|206-248-4-48
39344|code|LDR             R3, [R4,#8]|163-104
39346|code|STR.W           R3, [LR,#8]|206-248-8-48
39350|code|STR.W           R12, [R7,#0x6C+var_64]|199-248-8-192
39354|code|BL              sub_934C|255-247-199-252
39358|code|LDR.W           R12, [R7,#0x6C+var_64]|215-248-8-192
39362|code|CMP.W           R0, #0x40000|176-245-128-47
39366|code|BEQ             loc_9A26|46-208
39368|code|BGT             loc_99F8|22-220
39370|code|CMP.W           R0, #0x30000|176-245-64-63
39374|code|BEQ             loc_9A90|95-208
39376|code|BLE             loc_9A4A|59-221
39378|code|MOVS            R3, #0x30001|1-35-192-242-3-3
39384|code|CMP             R0, R3|152-66
39386|code|BEQ             loc_9AB4|107-208
39388|code|MOVS            R3, #0x30002|2-35-192-242-3-3
39394|code|CMP             R0, R3|152-66
39396|code|BEQ             loc_9AA2|93-208
39398|code|LDR             R5, =stderr|77-77
39400|code|ADD.W           R3, R4, #0x10|4-241-16-3
39404|code|LDR             R1, =aSUnknownErrorE; "%s: Unknown error encountered while att"...|78-73
39406|code|LDR             R2, =aNvramtool; "nvramtool"|77-74
39408|code|LDR             R0, [R5]; stream|40-104
39410|code|BLX             fprintf|255-247-144-233
39414|code|B               loc_9A38|31-224
39416|code|MOVS            R3, #0x40003|3-35-192-242-4-3
39422|code|CMP             R0, R3|152-66
39424|code|BEQ             loc_9AC6|97-208
39426|code|BLE             loc_9A68|49-221
39428|code|CMP.W           R0, #0x40004|176-241-4-31
39432|code|BEQ             loc_9AEA|111-208
39434|code|MOVS            R3, #0x40005|5-35-192-242-4-3
39440|code|CMP             R0, R3|152-66
39442|code|BNE             loc_99E6|232-209
39444|code|LDR             R5, =stderr|65-77
39446|code|ADD.W           R3, R4, #0x10|4-241-16-3
39450|code|LDR             R1, =aSCorebootParam; "%s: coreboot parameter %s has no matchi"...|68-73
39452|code|LDR             R2, =aNvramtool; "nvramtool"|65-74
39454|code|LDR             R0, [R5]; stream|40-104
39456|code|BLX             fprintf|255-247-120-233
39460|code|B               loc_9A38|8-224
39462|code|LDR             R5, =stderr|61-77
39464|code|ADDS            R4, #0x10|16-52
39466|code|LDR             R3, [R6]|51-104
39468|code|STR             R4, [SP,#0x1AC+eflags]|0-148
39470|code|LDR             R1, =aSErrorOnLineDO_0; "%s: Error on line %d of input file: Bad"...|64-73
39472|code|LDR             R0, [R5]; stream|40-104
39474|code|LDR             R2, =aNvramtool; "nvramtool"|60-74
39476|code|BLX             fprintf|255-247-110-233
39480|code|LDR             R3, [R5]; s|43-104
39482|code|MOVS            R1, #1; size|1-33
39484|code|LDR             R0, =aNoCmosWritesPe; "  No CMOS writes performed.\n"|61-72
39486|code|MOVS            R2, #0x1C; n|28-34
39488|code|BLX             fwrite|255-247-2-233
39492|code|MOVS            R0, #1; status|1-32
39494|code|BLX             exit|255-247-70-233
39498|code|CMP             R0, #0|0-40
39500|code|BNE             loc_99E6|203-209
39502|code|LDR             R4, [R7,#0x6C+s2]|124-105
39504|code|LDR.W           LR, [R7,#0x6C+var_5C]|215-248-16-224
39508|code|LDRD.W          R2, R3, [R7,#0x6C+var_14]|215-233-22-35
39512|code|STR             R0, [R4,#0x18]|160-97
39514|code|STRD.W          R2, R3, [R4,#0x10]|196-233-4-35
39518|code|STR.W           R4, [LR]|206-248-0-64
39522|code|ADDS            R4, #0x18|24-52
39524|code|STR             R4, [R7,#0x6C+var_5C]|60-97
39526|code|B               loc_98DA|56-231
39528|code|MOVS            R3, #0x40001|1-35-192-242-4-3
39534|code|CMP             R0, R3|152-66
39536|code|BEQ             loc_9ADA|51-208
39538|code|MOVS            R3, #0x40002|2-35-192-242-4-3
39544|code|CMP             R0, R3|152-66
39546|code|BNE             loc_99E6|180-209
39548|code|LDR             R5, =stderr|39-77
39550|code|STR.W           R12, [SP,#0x1AC+eflags]|205-248-0-192
39554|code|LDR             R3, [R6]|51-104
39556|code|LDR             R0, [R5]; stream|40-104
39558|code|LDR             R1, =aSErrorOnLineDO_1; "%s: Error on line %d of input file: %s "...|44-73
39560|code|LDR             R2, =aNvramtool; "nvramtool"|38-74
39562|code|BLX             fprintf|255-247-68-233
39566|code|B               loc_9A38|211-231
39568|code|LDR             R5, =stderr|34-77
39570|code|ADD.W           R3, R4, #0x10|4-241-16-3
39574|code|LDR             R1, =aSTheCmosAreaSp; "%s: The CMOS area specified by the layo"...|41-73
39576|code|LDR             R2, =aNvramtool; "nvramtool"|34-74
39578|code|LDR             R0, [R5]; stream|40-104
39580|code|BLX             fprintf|255-247-58-233
39584|code|B               loc_9A38|202-231
39586|code|LDR             R5, =stderr|30-77
39588|code|ADD.W           R3, R4, #0x10|4-241-16-3
39592|code|LDR             R1, =aSTheCmosAreaSp_0; "%s: The CMOS area specified by the layo"...|37-73
39594|code|LDR             R2, =aNvramtool; "nvramtool"|30-74
39596|code|LDR             R0, [R5]; stream|40-104
39598|code|BLX             fprintf|255-247-50-233
39602|code|B               loc_9A38|193-231
39604|code|LDR             R5, =stderr|25-77
39606|code|ADD.W           R3, R4, #0x10|4-241-16-3
39610|code|LDR             R1, =aSTheCmosAreaSp_1; "%s: The CMOS area specified by the layo"...|34-73
39612|code|LDR             R2, =aNvramtool; "nvramtool"|25-74
39614|code|LDR             R0, [R5]; stream|40-104
39616|code|BLX             fprintf|255-247-40-233
39620|code|B               loc_9A38|184-231
39622|code|LDR             R5, =stderr|21-77
39624|code|ADDS            R4, #0x10|16-52
39626|code|LDR             R3, [R6]|51-104
39628|code|STR             R4, [SP,#0x1AC+eflags]|0-148
39630|code|LDR             R1, =aSErrorOnLineDO_2; "%s: Error on line %d of input file: Can"...|30-73
39632|code|LDR             R0, [R5]; stream|40-104
39634|code|LDR             R2, =aNvramtool; "nvramtool"|20-74
39636|code|BLX             fprintf|255-247-30-233
39640|code|B               loc_9A38|174-231
39642|code|LDR             R5, =stderr|16-77
39644|code|LDR             R3, [R6]|51-104
39646|code|LDR             R1, =aSErrorOnLineDO_3; "%s: Error on line %d of input file: Thi"...|27-73
39648|code|LDR             R0, [R5]; stream|40-104
39650|code|LDR             R2, =aNvramtool; "nvramtool"|16-74
39652|code|BLX             fprintf|255-247-22-233
39656|code|B               loc_9A38|166-231
39658|code|ADD.W           R2, R4, #0x10|4-241-16-2
39662|code|STR.W           R12, [SP,#0x1AC+eflags]|205-248-0-192
39666|code|STR             R2, [SP,#0x1AC+var_1A8]|1-146
39668|code|LDR             R5, =stderr|9-77
39670|code|LDR             R2, [R4,#4]|98-104
39672|code|LDR             R3, [R6]|51-104
39674|code|LDR             R0, [R5]; stream|40-104
39676|code|LDR             R1, =aSErrorOnLineDO_4; "%s: Error on line %d of input file: Can"...|20-73
39678|code|STR             R2, [SP,#0x1AC+var_1A4]|2-146
39680|code|LDR             R2, =aNvramtool; "nvramtool"|8-74
39682|code|BLX             fprintf|255-247-8-233
39686|code|B               loc_9A38|151-231
39688|data|DCD aSpaceSpaceSpac; "^[[:space:]]*([^[:space:]]+)[[:space:]]"...|200-202-0-0
39692|data|DCD dword_17A2C|44-122-1-0
39696|data|DCD aELength0+0xC; "0"|60-197-0-0
39700|data|DCD aInputFileC; "input_file.c"|152-207-0-0
39704|data|DCD aGetInputFileLi; "get_input_file_line"|56-203-0-0
39708|data|DCD stderr|16-122-1-0
39712|data|DCD aSErrorOnLineDO; "%s: Error on line %d of input file: Max"...|60-207-0-0
39716|data|DCD aNvramtool; "nvramtool"|124-197-0-0
39720|data|DCD aSUnknownErrorE; "%s: Unknown error encountered while att"...|204-206-0-0
39724|data|DCD aSCorebootParam; "%s: coreboot parameter %s has no matchi"...|120-205-0-0
39728|data|DCD aSErrorOnLineDO_0; "%s: Error on line %d of input file: Bad"...|188-203-0-0
39732|data|DCD aNoCmosWritesPe; "  No CMOS writes performed.\n"|28-207-0-0
39736|data|DCD aSErrorOnLineDO_1; "%s: Error on line %d of input file: %s "...|120-204-0-0
39740|data|DCD aSTheCmosAreaSp; "%s: The CMOS area specified by the layo"...|172-205-0-0
39744|data|DCD aSTheCmosAreaSp_0; "%s: The CMOS area specified by the layo"...|116-206-0-0
39748|data|DCD aSTheCmosAreaSp_1; "%s: The CMOS area specified by the layo"...|8-206-0-0
39752|data|DCD aSErrorOnLineDO_2; "%s: Error on line %d of input file: Can"...|184-204-0-0
39756|data|DCD aSErrorOnLineDO_3; "%s: Error on line %d of input file: Thi"...|252-203-0-0
39760|data|DCD aSErrorOnLineDO_4; "%s: Error on line %d of input file: Can"...|12-205-0-0
39764|data|DCD __stack_chk_guard|8-122-1-0
39768|code|BL              sub_9560|255-247-2-253
39772|code|B               loc_9992|25-231
39774|code|BLX             __stack_chk_fail|255-247-104-232
39778|code|LDR             R3, =stderr|11-75
39780|code|LDR             R1, =aSSyntaxErrorOn; "%s: Syntax error on line %d of input fi"...|11-73
39782|code|LDR             R2, =aNvramtool; "nvramtool"|12-74
39784|code|LDR             R0, [R3]; stream|24-104
39786|code|LDR             R3, [R6]|51-104
39788|code|BLX             fprintf|255-247-210-232
39792|code|MOVS            R0, #1; status|1-32
39794|code|BLX             exit|255-247-176-232
39798|code|LDR             R1, [R7,#0x6C+s2]|121-105
39800|code|LDR             R3, =stderr|5-75
39802|code|LDR             R2, =aNvramtool; "nvramtool"|7-74
39804|code|STR             R1, [SP,#0x1AC+eflags]|0-145
39806|code|LDR             R1, =aSErrorOnLineDO_5; "%s: Error on line %d of input file: CMO"...|7-73
39808|code|LDR             R0, [R3]; stream|24-104
39810|code|LDR             R3, [R6]|51-104
39812|code|BLX             fprintf|255-247-198-232
39816|code|MOVS            R0, #1; status|1-32
39818|code|BLX             exit|255-247-164-232
39822|data|ALIGN 0x10|0-191
39824|data|DCD stderr|16-122-1-0
39828|data|DCD aSSyntaxErrorOn; "%s: Syntax error on line %d of input fi"...|76-203-0-0
39832|data|DCD aNvramtool; "nvramtool"|124-197-0-0
39836|data|DCD aSErrorOnLineDO_5; "%s: Error on line %d of input file: CMO"...|120-203-0-0
39840|code|PUSH            {R4-R7,LR}|240-181
39842|code|SUB             SP, SP, #0x3C|143-176
39844|code|LDR             R6, =__stack_chk_guard|20-78
39846|code|MOV             R4, R0|4-70
39848|code|MOVS            R0, #3|3-32
39850|code|LDR             R3, [R6]|51-104
39852|code|STR             R3, [SP,#0x50+var_1C]|13-147
39854|code|BL              sub_8FF4|255-247-33-250
39858|code|CBNZ            R4, loc_9BB8|12-185
39860|code|B               loc_9BDA|17-224
39862|code|MOV             R4, R5|44-70
39864|code|LDR             R0, [R4,#4]|96-104
39866|code|LDR             R7, [R4]|39-104
39868|code|LDR             R1, [R4,#8]|161-104
39870|code|LDR             R5, [R4,#0x18]|165-105
39872|code|STR             R0, [SP,#0x50+var_4C]|1-144
39874|code|MOV             R0, SP|104-70
39876|code|LDRD.W          R2, R3, [R4,#0x10]|212-233-4-35
39880|code|STR             R7, [SP,#0x50+var_50]|0-151
39882|code|STR             R1, [SP,#0x50+var_48]|2-145
39884|code|BL              sub_9074|255-247-82-250
39888|code|MOV             R0, R4; ptr|32-70
39890|code|BLX             free|255-247-34-232
39894|code|CMP             R5, #0|0-45
39896|code|BNE             loc_9BB6|237-209
39898|code|BL              sub_94BC|255-247-111-252
39902|code|BL              sub_9498|255-247-91-252
39906|code|MOVS            R0, #0|0-32
39908|code|BL              sub_8FF4|255-247-6-250
39912|code|LDR             R2, [SP,#0x50+var_1C]|13-154
39914|code|LDR             R3, [R6]|51-104
39916|code|CMP             R2, R3|154-66
39918|code|BNE             loc_9BF4|1-209
39920|code|ADD             SP, SP, #0x3C ; '<'|15-176
39922|code|POP             {R4-R7,PC}|240-189
39924|code|BLX             __stack_chk_fail|255-247-28-232
39928|data|DCD __stack_chk_guard|8-122-1-0
39932|code|PUSH            {R3,LR}|8-181
39934|code|MOVW            R0, #0xC53C|76-242-60-80
39938|code|MOVW            R1, #0xCFD0|76-246-208-113
39942|code|MOVW            R3, #0xCFA8|76-246-168-115
39946|code|MOVT.W          R0, #0; assertion|192-242-0-0
39950|code|MOVT.W          R1, #0; file|192-242-0-1
39954|code|MOVT.W          R3, #0; function|192-242-0-3
39958|code|MOVW            R2, #0x1E1; line|64-242-225-18
39962|code|BLX             __assert_fail|255-247-240-232
39966|data|ALIGN 0x10|0-191
39968|code|MOV             R3, #0x179F8|71-246-248-19-192-242-1-3
39976|code|STR             R0, [R3]|24-96
39978|code|BX              LR|112-71
39980|code|PUSH            {R3,LR}|8-181
39982|code|MOV             R3, #0x179F8|71-246-248-19-192-242-1-3
39990|code|LDR             R3, [R3]; sub_9BFC|27-104
39992|code|BLX             R3; sub_9BFC|152-71
39994|code|POP             {R3,PC}|8-189
39996|code|PUSH.W          {R3-R9,LR}|45-233-248-67
40000|code|MOVS            R2, #0|0-34
40002|code|LDR             R3, [R0,#4]|67-104
40004|code|MOV             R7, R0|7-70
40006|code|MOV             R8, R1|136-70
40008|code|STR             R2, [R1]|10-96
40010|code|CBNZ            R3, loc_9C56|35-185
40012|code|MOVS            R0, #0x20001|1-32-192-242-2-0
40018|code|POP.W           {R3-R9,PC}|189-232-248-131
40022|code|MOVS            R0, #0x38 ; '8'; size|56-32
40024|code|BLX             malloc|255-247-22-232
40028|code|MOV             R9, R0|129-70
40030|code|CMP             R0, #0|0-40
40032|code|BEQ             loc_9D3E|109-208
40034|code|MOV             R6, R7|62-70
40036|code|MOV             R5, R9|77-70
40038|code|LDM             R6!, {R0-R3}|15-206
40040|code|LDR.W           R12, =dword_17A30|223-248-216-192
40044|code|STM             R5!, {R0-R3}|15-197
40046|code|LDM             R6!, {R0-R3}|15-206
40048|code|LDR.W           R4, [R12]|220-248-0-64
40052|code|STM             R5!, {R0-R3}|15-197
40054|code|LDM             R6!, {R0-R3}|15-206
40056|code|LDR             R6, [R6]|54-104
40058|code|STM             R5!, {R0-R3}|15-197
40060|code|STR             R6, [R5]|46-96
40062|code|CMP             R4, #0|0-44
40064|code|BEQ             loc_9D22|79-208
40066|code|LDR             R3, [R4]|35-104
40068|code|LDR             R1, [R7]|57-104
40070|code|CMP             R1, R3|153-66
40072|code|BHI             loc_9C94|4-216
40074|code|B               loc_9CF4|51-224
40076|code|LDR             R2, [R3]|26-104
40078|code|CMP             R2, R1|138-66
40080|code|BCS             loc_9C9A|3-210
40082|code|MOV             R4, R3|28-70
40084|code|LDR             R3, [R4,#0x34]|99-107
40086|code|CMP             R3, #0|0-43
40088|code|BNE             loc_9C8C|248-209
40090|code|LDM.W           R4, {R2,R5}|148-232-36-0
40094|code|LDR             R0, [R7,#4]|120-104
40096|code|ADDS            R5, R2, R5|85-25
40098|code|SUBS            R5, #1|1-61
40100|code|ADDS            R0, R1, R0|8-24
40102|code|SUBS            R0, #1|1-56
40104|code|CMP             R1, R5|169-66
40106|code|ITE HI|140-191
40108|code|MOVHI           R5, #0|0-37
40110|code|MOVLS           R5, #1|1-37
40112|code|CMP             R2, R0|130-66
40114|code|ITE HI|140-191
40116|code|MOVHI           R2, #0|0-34
40118|code|ANDLS.W         R2, R5, #1|5-240-1-2
40122|code|CBZ             R2, loc_9CCE|66-177
40124|code|STR.W           R4, [R8]|200-248-0-64
40128|code|MOV             R0, R9; ptr|72-70
40130|code|BLX             free|254-247-170-239
40134|code|MOV.W           R0, #0x20000|79-244-0-48
40138|code|POP.W           {R3-R9,PC}|189-232-248-131
40142|code|CMP             R3, #0|0-43
40144|code|BEQ             loc_9D30|46-208
40146|code|LDM.W           R3, {R2,R5}|147-232-36-0
40150|code|CMP             R0, R2|144-66
40152|code|ADD             R2, R5|42-68
40154|code|ITE CC|52-191
40156|code|MOVCC           R0, #0|0-32
40158|code|MOVCS           R0, #1|1-32
40160|code|SUBS            R2, #1|1-58
40162|code|CMP             R1, R2|145-66
40164|code|ITE HI|140-191
40166|code|MOVHI           R1, #0|0-33
40168|code|ANDLS.W         R1, R0, #1|0-240-1-1
40172|code|CBZ             R1, loc_9D30|1-179
40174|code|STR.W           R3, [R8]|200-248-0-48
40178|code|B               loc_9CC0|229-231
40180|code|LDR             R2, [R7,#4]|122-104
40182|code|LDR             R0, [R4,#4]|96-104
40184|code|ADDS            R2, R1, R2|138-24
40186|code|ADDS            R0, R3, R0|24-24
40188|code|SUBS            R2, #1|1-58
40190|code|SUBS            R0, #1|1-56
40192|code|CMP             R2, R3|154-66
40194|code|ITE CC|52-191
40196|code|MOVCC           R3, #0|0-35
40198|code|MOVCS           R3, #1|1-35
40200|code|CMP             R1, R0|129-66
40202|code|ITE HI|140-191
40204|code|MOVHI           R0, #0|0-32
40206|code|ANDLS.W         R0, R3, #1|3-240-1-0
40210|code|CMP             R0, #0|0-40
40212|code|BNE             loc_9CBC|210-209
40214|code|STR.W           R4, [R9,#0x34]|201-248-52-64
40218|code|STR.W           R9, [R12]|204-248-0-144
40222|code|POP.W           {R3-R9,PC}|189-232-248-131
40226|code|STR.W           R4, [R9,#0x34]|201-248-52-64
40230|code|MOV             R0, R4|32-70
40232|code|STR.W           R9, [R12]|204-248-0-144
40236|code|POP.W           {R3-R9,PC}|189-232-248-131
40240|code|STR.W           R3, [R9,#0x34]|201-248-52-48
40244|code|MOVS            R0, #0|0-32
40246|code|STR.W           R9, [R4,#0x34]|196-248-52-144
40250|code|POP.W           {R3-R9,PC}|189-232-248-131
40254|code|BL              sub_9560|255-247-15-252
40258|code|B               loc_9C62|142-231
40260|data|DCD dword_17A30|48-122-1-0
40264|code|PUSH            {R3-R5,LR}|56-181
40266|code|MOV             R5, R0|5-70
40268|code|LDR             R3, =dword_17A30|7-75
40270|code|LDR             R4, [R3]|28-104
40272|code|CBNZ            R4, loc_9D58|20-185
40274|code|B               loc_9D66|8-224
40276|code|LDR             R4, [R4,#0x34]|100-107
40278|code|CBZ             R4, loc_9D66|52-177
40280|code|ADD.W           R0, R4, #0x10; s1|4-241-16-0
40284|code|MOV             R1, R5; s2|41-70
40286|code|BLX             strcmp|254-247-66-239
40290|code|CMP             R0, #0|0-40
40292|code|BNE             loc_9D54|246-209
40294|code|MOV             R0, R4|32-70
40296|code|POP             {R3-R5,PC}|56-189
40298|data|ALIGN 4|0-191
40300|data|DCD dword_17A30|48-122-1-0
40304|code|LDR             R3, =dword_17A30|1-75
40306|code|LDR             R0, [R3]|24-104
40308|code|BX              LR|112-71
40310|data|ALIGN 4|0-191
40312|data|DCD dword_17A30|48-122-1-0
40316|code|LDR             R0, [R0,#0x34]|64-107
40318|code|BX              LR|112-71
40320|code|PUSH.W          {R4-R8,LR}|45-233-240-65
40324|code|MOV             R8, R0|128-70
40326|code|MOVS            R0, #0x40 ; '@'; size|64-32
40328|code|BLX             malloc|254-247-126-239
40332|code|MOV             R4, R0|4-70
40334|code|CMP             R0, #0|0-40
40336|code|BEQ             loc_9E24|72-208
40338|code|MOV             R7, R8|71-70
40340|code|MOV             R6, R4|38-70
40342|code|LDM             R7!, {R0-R3}|15-207
40344|code|LDR.W           R12, =dword_17A30|223-248-192-192
40348|code|STM             R6!, {R0-R3}|15-198
40350|code|LDM             R7!, {R0-R3}|15-207
40352|code|LDR.W           R5, [R12,#(dword_17A34 - 0x17A30)]|220-248-4-80
40356|code|STM             R6!, {R0-R3}|15-198
40358|code|LDM             R7!, {R0-R3}|15-207
40360|code|STM             R6!, {R0-R3}|15-198
40362|code|LDM.W           R7, {R0,R1}|151-232-3-0
40366|code|STM.W           R6, {R0,R1}|134-232-3-0
40370|code|CMP             R5, #0|0-45
40372|code|BEQ             loc_9E18|48-208
40374|code|LDR             R3, [R5]|43-104
40376|code|LDR.W           R0, [R8]|216-248-0-0
40380|code|CMP             R0, R3|152-66
40382|code|BHI             loc_9DCA|4-216
40384|code|B               loc_9DDA|11-224
40386|code|LDR             R3, [R1]|11-104
40388|code|CMP             R3, R0|131-66
40390|code|BCS             loc_9DDE|10-210
40392|code|MOV             R5, R1|13-70
40394|code|LDR             R1, [R5,#0x38]|169-107
40396|code|CMP             R1, #0|0-41
40398|code|BNE             loc_9DC2|248-209
40400|code|STR             R1, [R4,#0x38]|161-99
40402|code|MOV             R0, R1|8-70
40404|code|STR             R4, [R5,#0x38]|172-99
40406|code|POP.W           {R4-R8,PC}|189-232-240-129
40410|code|MOV             R1, R5|41-70
40412|code|MOVS            R5, #0|0-37
40414|code|CMP             R3, R0|131-66
40416|code|BHI             loc_9E0C|20-216
40418|code|LDRD.W          R6, R7, [R8,#8]|216-233-2-103
40422|code|B               loc_9DEA|0-224
40424|code|MOV             R1, R3|25-70
40426|code|LDRD.W          R2, R3, [R1,#8]|209-233-2-35
40430|code|CMP             R2, R6|178-66
40432|code|SBCS.W          R8, R3, R7|115-235-7-8
40436|code|BCS             loc_9E34|30-210
40438|code|LDR             R3, [R1,#0x38]|139-107
40440|code|MOV             R5, R1|13-70
40442|code|CBZ             R3, loc_9E02|19-177
40444|code|LDR             R2, [R3]|26-104
40446|code|CMP             R2, R0|130-66
40448|code|BEQ             loc_9DE8|242-208
40450|code|STR             R3, [R4,#0x38]|163-99
40452|code|MOVS            R0, #0|0-32
40454|code|STR             R4, [R1,#0x38]|140-99
40456|code|POP.W           {R4-R8,PC}|189-232-240-129
40460|code|STR             R1, [R4,#0x38]|161-99
40462|code|CBZ             R5, loc_9E2A|101-177
40464|code|STR             R4, [R5,#0x38]|172-99
40466|code|MOVS            R0, #0|0-32
40468|code|POP.W           {R4-R8,PC}|189-232-240-129
40472|code|STR             R5, [R4,#0x38]|165-99
40474|code|MOV             R0, R5|40-70
40476|code|STR.W           R4, [R12,#(dword_17A34 - 0x17A30)]|204-248-4-64
40480|code|POP.W           {R4-R8,PC}|189-232-240-129
40484|code|BL              sub_9560|255-247-156-251
40488|code|B               loc_9D92|179-231
40490|code|STR.W           R4, [R12,#(dword_17A34 - 0x17A30)]|204-248-4-64
40494|code|MOV             R0, R5|40-70
40496|code|POP.W           {R4-R8,PC}|189-232-240-129
40500|code|EORS            R2, R6|114-64
40502|code|EORS            R3, R7|123-64
40504|code|ORRS.W          R0, R2, R3|82-234-3-0
40508|code|BEQ             loc_9E4C|6-208
40510|code|STR             R1, [R4,#0x38]|161-99
40512|code|CMP             R5, #0|0-45
40514|code|BEQ             loc_9E2A|242-208
40516|code|MOVS            R0, #0|0-32
40518|code|STR             R4, [R5,#0x38]|172-99
40520|code|POP.W           {R4-R8,PC}|189-232-240-129
40524|code|MOV             R0, R4; ptr|32-70
40526|code|BLX             free|254-247-228-238
40530|code|MOV.W           R0, #0x20002|79-240-2-16
40534|code|POP.W           {R4-R8,PC}|189-232-240-129
40538|data|ALIGN 4|0-191
40540|data|DCD dword_17A30|48-122-1-0
40544|code|PUSH            {R4-R6}|112-180
40546|code|MOV             R5, R3|29-70
40548|code|LDR             R3, =dword_17A30|17-75
40550|code|MOV             R4, R2|20-70
40552|code|LDR             R1, [R3,#(dword_17A34 - 0x17A30)]|89-104
40554|code|CBNZ            R1, loc_9E72|17-185
40556|code|B               loc_9E96|19-224
40558|code|LDR             R1, [R1,#0x38]|137-107
40560|code|CBZ             R1, loc_9E96|137-177
40562|code|LDR             R3, [R1]|11-104
40564|code|CMP             R0, R3|152-66
40566|code|BHI             loc_9E6E|250-216
40568|code|CMP             R0, R3|152-66
40570|code|BCC             loc_9E92|10-211
40572|code|LDRD.W          R2, R3, [R1,#8]|209-233-2-35
40576|code|CMP             R2, R4|162-66
40578|code|SBCS.W          R6, R3, R5|115-235-5-6
40582|code|BCS             loc_9E9C|9-210
40584|code|LDR             R1, [R1,#0x38]|137-107
40586|code|CBZ             R1, loc_9E96|33-177
40588|code|LDR             R3, [R1]|11-104
40590|code|CMP             R3, R0|131-66
40592|code|BEQ             loc_9E7C|244-208
40594|code|MOVS            R0, #0|0-32
40596|code|B               loc_9E98|0-224
40598|code|MOV             R0, R1|8-70
40600|code|POP             {R4-R6}|112-188
40602|code|BX              LR|112-71
40604|code|EORS            R2, R4|98-64
40606|code|EORS            R3, R5|107-64
40608|code|ORRS.W          R0, R2, R3|82-234-3-0
40612|code|ITE EQ|12-191
40614|code|MOVEQ           R0, R1|8-70
40616|code|MOVNE           R0, #0|0-32
40618|code|B               loc_9E98|245-231
40620|data|DCD dword_17A30|48-122-1-0
40624|code|LDR             R3, =dword_17A30|1-75
40626|code|LDR             R0, [R3,#(dword_17A34 - 0x17A30)]|88-104
40628|code|BX              LR|112-71
40630|data|ALIGN 4|0-191
40632|data|DCD dword_17A30|48-122-1-0
40636|code|LDR             R0, [R0,#0x38]|128-107
40638|code|BX              LR|112-71
40640|code|LDR             R3, =dword_17A30|8-75
40642|code|LDR             R3, [R3,#(dword_17A34 - 0x17A30)]|91-104
40644|code|CBNZ            R3, loc_9ECC|19-185
40646|code|B               loc_9EE0|11-224
40648|code|LDR             R3, [R3,#0x38]|155-107
40650|code|CBZ             R3, loc_9EDC|59-177
40652|code|LDR             R2, [R3]|26-104
40654|code|CMP             R0, R2|144-66
40656|code|BHI             loc_9EC8|250-216
40658|code|CMP             R0, R2|144-66
40660|code|ITE CS|44-191
40662|code|MOVCS           R0, R3|24-70
40664|code|MOVCC           R0, #0|0-32
40666|code|BX              LR|112-71
40668|code|MOV             R0, R3|24-70
40670|code|BX              LR|112-71
40672|code|MOV             R0, R3|24-70
40674|code|BX              LR|112-71
40676|data|DCD dword_17A30|48-122-1-0
40680|code|LDR             R3, [R0,#0x38]|131-107
40682|code|CBZ             R3, loc_9EFA|51-177
40684|code|LDR             R1, [R3]|25-104
40686|code|LDR             R2, [R0]|2-104
40688|code|CMP             R1, R2|145-66
40690|code|ITE EQ|12-191
40692|code|MOVEQ           R0, R3|24-70
40694|code|MOVNE           R0, #0|0-32
40696|code|BX              LR|112-71
40698|code|MOV             R0, R3|24-70
40700|code|BX              LR|112-71
40702|data|ALIGN 0x10|0-191
40704|code|PUSH            {R3,LR}|8-181
40706|code|LDR             R1, =aCheckSum; "check_sum"|4-73
40708|code|BLX             strcmp|254-247-110-238
40712|code|RSBS.W          R0, R0, #1|208-241-1-0
40716|code|IT CC|56-191
40718|code|MOVCC           R0, #0|0-32
40720|code|POP             {R3,PC}|8-189
40722|data|ALIGN 4|0-191
40724|data|DCD aCheckSum; "check_sum"|196-207-0-0
40728|code|LDR             R2, [R0]|2-104
40730|code|MOV             R3, R0|3-70
40732|code|LDR             R1, [R0,#4]|65-104
40734|code|TST.W           R2, #7|18-240-7-15
40738|code|LDR             R0, [R0,#8]|128-104
40740|code|PUSH            {R4}|16-180
40742|code|BEQ             loc_9F32|4-208
40744|code|MOVS            R0, #0x20003|3-32-192-242-2-0
40750|code|POP             {R4}|16-188
40752|code|BX              LR|112-71
40754|code|AND.W           R4, R1, #7|1-240-7-4
40758|code|CMP             R4, #7|7-44
40760|code|BEQ             loc_9F42|3-208
40762|code|MOVS            R0, #0x20004|4-32-192-242-2-0
40768|code|B               loc_9F2E|245-231
40770|code|TST.W           R0, #7|16-240-7-15
40774|code|BEQ             loc_9F50|3-208
40776|code|MOVS            R0, #0x20005|5-32-192-242-2-0
40782|code|B               loc_9F2E|238-231
40784|code|CMP             R2, R1|138-66
40786|code|BCC             loc_9F5C|3-211
40788|code|MOVS            R0, #0x20006|6-32-192-242-2-0
40794|code|B               loc_9F2E|232-231
40796|code|LSRS            R2, R2, #3|210-8
40798|code|SUB.W           R4, R2, #0xE|162-241-14-4
40802|code|CMP             R4, #0xF1|241-44
40804|code|BLS             loc_9F6E|3-217
40806|code|MOVS            R0, #0x20008|8-32-192-242-2-0
40812|code|B               loc_9F2E|223-231
40814|code|LSRS            R1, R1, #3|201-8
40816|code|SUB.W           R4, R1, #0xE|161-241-14-4
40820|code|CMP             R4, #0xF1|241-44
40822|code|BHI             loc_9F66|246-216
40824|code|LSRS            R4, R0, #3|196-8
40826|code|SUB.W           R0, R4, #0xE|164-241-14-0
40830|code|CMP             R0, #0xF1|241-40
40832|code|BLS             loc_9F8A|3-217
40834|code|MOVS            R0, #0x20009|9-32-192-242-2-0
40840|code|B               loc_9F2E|209-231
40842|code|CMP.W           R2, R4,LSL#1|178-235-68-15
40846|code|ITE HI|140-191
40848|code|MOVHI           R0, #0|0-32
40850|code|MOVLS           R0, #1|1-32
40852|code|CMP             R1, R4|161-66
40854|code|ITE CC|52-191
40856|code|MOVCC           R0, #0|0-32
40858|code|ANDCS.W         R0, R0, #1|0-240-1-0
40862|code|CBZ             R0, loc_9FA8|24-177
40864|code|MOVS            R0, #0x20007|7-32-192-242-2-0
40870|code|B               loc_9F2E|194-231
40872|code|STR             R2, [R3]|26-96
40874|code|STR             R1, [R3,#4]|89-96
40876|code|STR             R4, [R3,#8]|156-96
40878|code|B               loc_9F2E|190-231
40880|code|LDM.W           R0, {R1-R3}|144-232-14-0
40884|code|LSLS            R2, R2, #3|210-0
40886|code|LSLS            R3, R3, #3|219-0
40888|code|LSLS            R1, R1, #3|201-0
40890|code|ADDS            R2, #7|7-50
40892|code|STM.W           R0, {R1-R3}|128-232-14-0
40896|code|BX              LR|112-71
40898|data|ALIGN 4|0-191
40900|code|PUSH            {R4,LR}|16-181
40902|code|SUB             SP, SP, #8|130-176
40904|code|MOV             R4, R1|12-70
40906|code|MOVS            R2, #0; base|0-34
40908|code|ADD             R1, SP, #0x10+endptr; endptr|1-169
40910|code|BLX             strtoul|254-247-136-238
40914|code|LDR             R3, [SP,#0x10+endptr]|1-155
40916|code|LDRB            R3, [R3]|27-120
40918|code|CBNZ            R3, loc_9FDC|11-185
40920|code|ADD             SP, SP, #8|2-176
40922|code|POP             {R4,PC}|16-189
40924|code|MOV             R0, R4|32-70
40926|code|LDR             R1, =(aCmosOptionTabl+0xA0); ""|1-73
40928|code|BL              sub_8E08|254-247-18-255
40932|data|DCD aCmosOptionTabl+0xA0; ""|56-229-0-0
40936|code|PUSH            {LR}|0-181
40938|code|MOV.W           R2, #0x100; n|79-244-128-114
40942|code|SUB             SP, SP, #0xC|131-176
40944|code|BL              sub_9530|255-247-158-250
40948|code|CMP.W           R0, #0x10000|176-245-128-63
40952|code|BEQ             loc_A002|3-208
40954|code|CMP.W           R0, #0x10001|176-241-1-31
40958|code|BEQ             loc_A006|2-208
40960|code|CBNZ            R0, loc_A01A|88-185
40962|code|ADD             SP, SP, #0xC|3-176
40964|code|POP             {PC}|0-189
40966|code|MOVS            R3, #0xFE|254-35
40968|code|STR             R3, [SP,#0x10+var_10]|0-147
40970|code|LDR             R3, =stderr|5-75
40972|code|LDR             R1, =aSErrorOnLineDO_7; "%s: Error on line %d of CMOS layout fil"...|5-73
40974|code|LDR             R2, =aNvramtool; "nvramtool"|6-74
40976|code|LDR             R0, [R3]; stream|24-104
40978|code|LDR             R3, =dword_17A38|6-75
40980|code|LDR             R3, [R3]|27-104
40982|code|BLX             fprintf|254-247-126-238
40986|code|MOVS            R0, #1; status|1-32
40988|code|BLX             exit|254-247-90-238
40992|data|DCD stderr|16-122-1-0
40996|data|DCD aSErrorOnLineDO_7; "%s: Error on line %d of CMOS layout fil"...|168-210-0-0
41000|data|DCD aNvramtool; "nvramtool"|124-197-0-0
41004|data|DCD dword_17A38|56-122-1-0
41008|code|PUSH.W          {R4-R11,LR}|45-233-240-79
41012|code|SUB             SP, SP, #0x1C|135-176
41014|code|ADD             R7, SP, #8|2-175
41016|code|SUB             SP, SP, #0x108|194-176
41018|code|MOVW            R1, #0x7A08|71-246-8-33
41022|code|ADD.W           R10, SP, #0x124+var_115|13-241-15-10
41026|code|MOVT.W          R1, #1|192-242-1-1
41030|code|MOV             R11, R0|131-70
41032|code|SUB             SP, SP, #0x28 ; '('|138-176
41034|code|MOV.W           R10, R10,LSR#3|79-234-218-10
41038|code|LDR             R3, [R1]|11-104
41040|code|MOV             R0, R11|88-70
41042|code|LDR.W           R9, =dword_17A38|223-248-20-146
41046|code|MOV.W           R5, R10,LSL#3|79-234-202-5
41050|code|ADD             R6, SP, #0x14C+var_144|2-174
41052|code|STR             R3, [R7,#0x14+var_8]|251-96
41054|code|MOV             R1, R5|41-70
41056|code|BL              sub_9FE8|255-247-194-255
41060|code|MOV             R4, R0|4-70
41062|code|CBNZ            R0, loc_A096|176-185
41064|code|LDR.W           R8, =dword_17A38|223-248-252-129
41068|code|MOV             R2, R0; nmatch|2-70
41070|code|MOV             R3, R0; pmatch|3-70
41072|code|MOV             R1, R5; string|41-70
41074|code|ADD.W           R0, R8, #4; preg|8-241-4-0
41078|code|STR             R4, [SP,#0x14C+eflags]; eflags|0-148
41080|code|BLX             regexec|254-247-224-237
41084|code|CBNZ            R0, loc_A0A8|160-185
41086|code|LDR.W           R3, [R9]|217-248-0-48
41090|code|MOV             R0, R11|88-70
41092|code|MOV             R1, R5|41-70
41094|code|ADDS            R3, #1|1-51
41096|code|STR.W           R3, [R9]|201-248-0-48
41100|code|BL              sub_9FE8|255-247-172-255
41104|code|MOV             R4, R0|4-70
41106|code|CMP             R0, #0|0-40
41108|code|BEQ             loc_A068|232-208
41110|code|LDR             R3, =stderr|96-75
41112|code|LDR             R1, =aSUnexpectedEnd; "%s: Unexpected end of CMOS layout file "...|96-73
41114|code|LDR             R2, =aNvramtool; "nvramtool"|97-74
41116|code|LDR             R0, [R3]; stream|24-104
41118|code|BLX             fprintf|254-247-58-238
41122|code|MOVS            R0, #1; status|1-32
41124|code|BLX             exit|254-247-22-238
41128|code|MOV             R3, R6; pmatch|51-70
41130|code|ADD.W           R0, R8, #0x24 ; '$'; preg|8-241-36-0
41134|code|MOV             R1, R5; string|41-70
41136|code|MOVS            R2, #4; nmatch|4-34
41138|code|STR             R4, [SP,#0x14C+eflags]; eflags|0-148
41140|code|BLX             regexec|254-247-194-237
41144|code|MOV             R3, R0|3-70
41146|code|CMP             R0, #0|0-40
41148|code|BNE.W           loc_A202|64-240-161-128
41152|code|LDR.W           LR, [R6,#0xC]|214-248-12-224
41156|code|LDR             R2, [R6,#0x1C]|242-105
41158|code|LDR             R1, [R6,#0x14]|113-105
41160|code|LDR             R0, [R6,#8]|176-104
41162|code|STRB.W          R3, [LR,R10,LSL#3]|14-248-58-48
41166|code|ADDS            R0, R5, R0|40-24
41168|code|STRB.W          R3, [R1,R10,LSL#3]|1-248-58-48
41172|code|STRB.W          R3, [R2,R10,LSL#3]|2-248-58-48
41176|code|LDR             R1, =aCmosChecksumme; "CMOS checksummed area start"|82-73
41178|code|LDR             R4, [R6,#0x10]|52-105
41180|code|LDR             R6, [R6,#0x18]|182-105
41182|code|BL              sub_9FC4|255-247-113-255
41186|code|ADDS            R4, R5, R4|44-25
41188|code|LDR             R1, =aCmosChecksumme_0; "CMOS checksummed area end"|80-73
41190|code|ADDS            R5, R5, R6|173-25
41192|code|MOV             R3, R0|3-70
41194|code|MOV             R0, R4|32-70
41196|code|STR             R3, [R7,#0x14+var_14]|59-96
41198|code|BL              sub_9FC4|255-247-105-255
41202|code|LDR             R1, =aCmosChecksumLo; "CMOS checksum location"|78-73
41204|code|MOV             R3, R0|3-70
41206|code|MOV             R0, R5|40-70
41208|code|STR             R3, [R7,#0x14+var_10]|123-96
41210|code|BL              sub_9FC4|255-247-99-255
41214|code|STR             R0, [R7,#0x14+var_C]|184-96
41216|code|MOV             R0, R7|56-70
41218|code|BL              sub_9F18|255-247-9-255
41222|code|MOVS            R3, #0x20005|5-35-192-242-2-3
41228|code|CMP             R0, R3|152-66
41230|code|BEQ             loc_A1DA|100-208
41232|code|BLE             loc_A140|22-221
41234|code|MOVS            R3, #0x20007|7-35-192-242-2-3
41240|code|CMP             R0, R3|152-66
41242|code|BEQ             loc_A1C8|85-208
41244|code|BLT             loc_A192|57-219
41246|code|MOVS            R3, #0x20008|8-35-192-242-2-3
41252|code|CMP             R0, R3|152-66
41254|code|BEQ             loc_A1B6|70-208
41256|code|MOVS            R3, #0x20009|9-35-192-242-2-3
41262|code|CMP             R0, R3|152-66
41264|code|BEQ             loc_A1A4|56-208
41266|code|LDR             R0, =(aELength0+0xC); assertion|63-72
41268|code|MOV.W           R2, #0x2E0; line|79-244-56-114
41272|code|LDR             R1, =aLayoutFileC; "layout_file.c"|62-73
41274|code|LDR             R3, =aSetChecksumInf; "set_checksum_info"|63-75
41276|code|BLX             __assert_fail|254-247-94-238
41280|code|MOVS            R3, #0x20003|3-35-192-242-2-3
41286|code|CMP             R0, R3|152-66
41288|code|BEQ             loc_A1EC|80-208
41290|code|BGT             loc_A17C|23-220
41292|code|CMP             R0, #0|0-40
41294|code|BNE             loc_A132|240-209
41296|code|MOV             R1, #0x17A08|71-246-8-33-192-242-1-1
41304|code|LDR             R2, [R7,#0x14+var_8]|250-104
41306|code|LDR             R0, [R7,#0x14+var_14]|56-104
41308|code|LDR             R3, [R1]|11-104
41310|code|LDR             R1, =dword_17A04|55-73
41312|code|CMP             R2, R3|154-66
41314|code|STR             R0, [R1]|8-96
41316|code|LDR             R0, [R7,#0x14+var_10]|120-104
41318|code|LDR             R1, =dword_17A00|54-73
41320|code|STR             R0, [R1]|8-96
41322|code|LDR             R0, [R7,#0x14+var_C]|184-104
41324|code|LDR             R1, =dword_179FC|53-73
41326|code|STR             R0, [R1]|8-96
41328|code|BNE             loc_A1FE|69-209
41330|code|ADD.W           R7, R7, #0x14|7-241-20-7
41334|code|MOV             SP, R7|189-70
41336|code|POP.W           {R4-R11,PC}|189-232-240-143
41340|code|LDR             R2, =stderr|38-74
41342|code|LDR.W           R3, [R8]|216-248-0-48
41346|code|LDR             R1, =aSErrorOnLineDO_8; "%s: Error on line %d of CMOS layout fil"...|49-73
41348|code|LDR             R0, [R2]; stream|16-104
41350|code|LDR             R2, =aNvramtool; "nvramtool"|38-74
41352|code|BLX             fprintf|254-247-196-237
41356|code|MOVS            R0, #1; status|1-32
41358|code|BLX             exit|254-247-162-237
41362|code|LDR             R2, =stderr|33-74
41364|code|LDR.W           R3, [R8]|216-248-0-48
41368|code|LDR             R1, =aSErrorOnLineDO_9; "%s: Error on line %d of CMOS layout fil"...|44-73
41370|code|LDR             R0, [R2]; stream|16-104
41372|code|LDR             R2, =aNvramtool; "nvramtool"|32-74
41374|code|BLX             fprintf|254-247-186-237
41378|code|B               loc_A18C|243-231
41380|code|LDR             R2, =stderr|28-74
41382|code|LDR.W           R3, [R8]|216-248-0-48
41386|code|LDR             R1, =aSErrorOnLineDO_10; "%s: Error on line %d of CMOS layout fil"...|41-73
41388|code|LDR             R0, [R2]; stream|16-104
41390|code|LDR             R2, =aNvramtool; "nvramtool"|28-74
41392|code|BLX             fprintf|254-247-176-237
41396|code|B               loc_A18C|234-231
41398|code|LDR             R2, =stderr|24-74
41400|code|LDR.W           R3, [R8]|216-248-0-48
41404|code|LDR             R1, =aSErrorOnLineDO_11; "%s: Error on line %d of CMOS layout fil"...|37-73
41406|code|LDR             R0, [R2]; stream|16-104
41408|code|LDR             R2, =aNvramtool; "nvramtool"|23-74
41410|code|BLX             fprintf|254-247-168-237
41414|code|B               loc_A18C|225-231
41416|code|LDR             R2, =stderr|19-74
41418|code|LDR.W           R3, [R8]|216-248-0-48
41422|code|LDR             R1, =aSErrorOnLineDO_12; "%s: Error on line %d of CMOS layout fil"...|34-73
41424|code|LDR             R0, [R2]; stream|16-104
41426|code|LDR             R2, =aNvramtool; "nvramtool"|19-74
41428|code|BLX             fprintf|254-247-158-237
41432|code|B               loc_A18C|216-231
41434|code|LDR             R2, =stderr|15-74
41436|code|LDR.W           R3, [R8]|216-248-0-48
41440|code|LDR             R1, =aSErrorOnLineDO_13; "%s: Error on line %d of CMOS layout fil"...|30-73
41442|code|LDR             R0, [R2]; stream|16-104
41444|code|LDR             R2, =aNvramtool; "nvramtool"|14-74
41446|code|BLX             fprintf|254-247-150-237
41450|code|B               loc_A18C|207-231
41452|code|LDR             R2, =stderr|10-74
41454|code|LDR.W           R3, [R8]|216-248-0-48
41458|code|LDR             R1, =aSErrorOnLineDO_14; "%s: Error on line %d of CMOS layout fil"...|27-73
41460|code|LDR             R0, [R2]; stream|16-104
41462|code|LDR             R2, =aNvramtool; "nvramtool"|10-74
41464|code|BLX             fprintf|254-247-140-237
41468|code|B               loc_A18C|198-231
41470|code|BLX             __stack_chk_fail|254-247-24-237
41474|code|LDR             R3, =stderr|5-75
41476|code|LDR             R1, =aSSyntaxErrorOn_0; "%s: Syntax error on line %d of CMOS lay"...|23-73
41478|code|LDR             R2, =aNvramtool; "nvramtool"|6-74
41480|code|LDR             R0, [R3]; stream|24-104
41482|code|LDR.W           R3, [R8]|216-248-0-48
41486|code|BLX             fprintf|254-247-130-237
41490|code|MOVS            R0, #1; status|1-32
41492|code|BLX             exit|254-247-94-237
41496|data|DCD stderr|16-122-1-0
41500|data|DCD aSUnexpectedEnd; "%s: Unexpected end of CMOS layout file "...|8-211-0-0
41504|data|DCD aNvramtool; "nvramtool"|124-197-0-0
41508|data|DCD aCmosChecksumme; "CMOS checksummed area start"|172-211-0-0
41512|data|DCD aCmosChecksumme_0; "CMOS checksummed area end"|200-211-0-0
41516|data|DCD aCmosChecksumLo; "CMOS checksum location"|228-211-0-0
41520|data|DCD aELength0+0xC; "0"|60-197-0-0
41524|data|DCD aLayoutFileC; "layout_file.c"|132-214-0-0
41528|data|DCD aSetChecksumInf; "set_checksum_info"|220-207-0-0
41532|data|DCD dword_17A04|4-122-1-0
41536|data|DCD dword_17A00|0-122-1-0
41540|data|DCD dword_179FC|252-121-1-0
41544|data|DCD aSErrorOnLineDO_8; "%s: Error on line %d of CMOS layout fil"...|92-212-0-0
41548|data|DCD aSErrorOnLineDO_9; "%s: Error on line %d of CMOS layout fil"...|16-213-0-0
41552|data|DCD aSErrorOnLineDO_10; "%s: Error on line %d of CMOS layout fil"...|48-214-0-0
41556|data|DCD aSErrorOnLineDO_11; "%s: Error on line %d of CMOS layout fil"...|224-213-0-0
41560|data|DCD aSErrorOnLineDO_12; "%s: Error on line %d of CMOS layout fil"...|136-213-0-0
41564|data|DCD aSErrorOnLineDO_13; "%s: Error on line %d of CMOS layout fil"...|184-212-0-0
41568|data|DCD aSErrorOnLineDO_14; "%s: Error on line %d of CMOS layout fil"...|252-211-0-0
41572|data|DCD aSSyntaxErrorOn_0; "%s: Syntax error on line %d of CMOS lay"...|92-211-0-0
41576|data|DCD dword_17A38|56-122-1-0
41580|code|PUSH.W          {R4-R11,LR}|45-233-240-79
41584|code|SUB             SP, SP, #0x5C|151-176
41586|code|ADD             R7, SP, #8|2-175
41588|code|SUB             SP, SP, #0x108|194-176
41590|code|MOVW            R2, #0x7A08|71-246-8-34
41594|code|ADD.W           R3, SP, #0x164+var_155|13-241-15-3
41598|code|MOVT.W          R2, #1|192-242-1-2
41602|code|MOV             R10, R0|130-70
41604|code|SUB             SP, SP, #0x28|138-176
41606|code|LSRS            R3, R3, #3|219-8
41608|code|STR             R3, [R7,#0x54+var_50]|123-96
41610|code|LDR             R4, [R7,#0x54+var_50]|124-104
41612|code|MOV             R11, R1|139-70
41614|code|LDR             R3, [R2]|19-104
41616|code|MOV             R0, R10|80-70
41618|code|LDR.W           R8, =dword_17A38|223-248-120-129
41622|code|ADD.W           R9, SP, #0x18C+var_184|13-241-8-9
41626|code|LSLS            R5, R4, #3|229-0
41628|code|STR             R3, [R7,#0x54+var_8]|251-100
41630|code|MOV             R1, R5|41-70
41632|code|BL              sub_9FE8|255-247-162-254
41636|code|MOV             R4, R0|4-70
41638|code|CBNZ            R0, loc_A2D2|160-185
41640|code|LDR             R6, =dword_17A38|88-78
41642|code|MOV             R2, R0; nmatch|2-70
41644|code|MOV             R3, R0; pmatch|3-70
41646|code|MOV             R1, R5; string|41-70
41648|code|ADDS            R0, R6, #4; preg|48-29
41650|code|STR             R4, [SP,#0x18C+eflags]; eflags|0-148
41652|code|BLX             regexec|254-247-194-236
41656|code|CBNZ            R0, loc_A2E4|160-185
41658|code|LDR.W           R3, [R8]|216-248-0-48
41662|code|MOV             R0, R10|80-70
41664|code|MOV             R1, R5|41-70
41666|code|ADDS            R3, #1|1-51
41668|code|STR.W           R3, [R8]|200-248-0-48
41672|code|BL              sub_9FE8|255-247-142-254
41676|code|MOV             R4, R0|4-70
41678|code|CMP             R0, #0|0-40
41680|code|BEQ             loc_A2A8|234-208
41682|code|LDR             R3, =stderr|79-75
41684|code|LDR             R1, =aSUnexpectedEnd_0; "%s: Unexpected end of CMOS layout file "...|79-73
41686|code|LDR             R2, =aNvramtool; "nvramtool"|80-74
41688|code|LDR             R0, [R3]; stream|24-104
41690|code|BLX             fprintf|254-247-28-237
41694|code|MOVS            R0, #1; status|1-32
41696|code|BLX             exit|254-247-248-236
41700|code|ADD.W           R0, R6, #0x44 ; 'D'; preg|6-241-68-0
41704|code|MOV             R1, R5; string|41-70
41706|code|MOVS            R2, #4; nmatch|4-34
41708|code|MOV             R3, R9; pmatch|75-70
41710|code|STR             R4, [SP,#0x18C+eflags]; eflags|0-148
41712|code|BLX             regexec|254-247-164-236
41716|code|CMP             R0, #0|0-40
41718|code|BNE             loc_A3A4|85-209
41720|code|CMP.W           R11, #0|187-241-0-15
41724|code|BEQ             loc_A31E|15-208
41726|code|MOV             R4, #0x17A08|71-246-8-36-192-242-1-4
41734|code|LDR             R1, [R6]|49-104
41736|code|LDR             R2, [R7,#0x54+var_8]|250-108
41738|code|LDR             R3, [R4]|35-104
41740|code|ADDS            R1, #1|1-49
41742|code|STR             R1, [R6]|49-96
41744|code|CMP             R2, R3|154-66
41746|code|BNE             loc_A3D2|94-209
41748|code|ADD.W           R7, R7, #0x54 ; 'T'|7-241-84-7
41752|code|MOV             SP, R7|189-70
41754|code|POP.W           {R4-R11,PC}|189-232-240-143
41758|code|LDR.W           LR, [R7,#0x54+var_50]|215-248-4-224
41762|code|LDR.W           R1, [R9,#0xC]|217-248-12-16
41766|code|LDR.W           R2, [R9,#0x14]|217-248-20-32
41770|code|LDR.W           R3, [R9,#0x1C]|217-248-28-48
41774|code|LDR.W           R0, [R9,#8]|217-248-8-0
41778|code|LDR.W           R4, [R9,#0x10]|217-248-16-64
41782|code|STRB.W          R11, [R1,LR,LSL#3]|1-248-62-176
41786|code|ADDS            R0, R5, R0|40-24
41788|code|STRB.W          R11, [R2,LR,LSL#3]|2-248-62-176
41792|code|ADD.W           R8, R5, R4|5-235-4-8
41796|code|STRB.W          R11, [R3,LR,LSL#3]|3-248-62-176
41800|code|LDR             R1, =aId; "ID"|52-73
41802|code|LDR.W           R4, [R9,#0x18]|217-248-24-64
41806|code|BL              sub_9FC4|255-247-57-254
41810|code|MOV             R2, R11; base|90-70
41812|code|ADD.W           R1, R7, #0xC; endptr|7-241-12-1
41816|code|MOV             R3, R0|3-70
41818|code|MOV             R0, R8; nptr|64-70
41820|code|STR             R3, [R7,#0x54+var_44]|59-97
41822|code|BLX             strtoul|254-247-192-236
41826|code|LDR             R3, [R7,#0x54+var_48]|251-104
41828|code|LDRB            R3, [R3]|27-120
41830|code|CMP             R3, #0|0-43
41832|code|BNE             loc_A3D6|53-209
41834|code|ADDS            R5, R5, R4|45-25
41836|code|STR             R0, [R7,#0x54+var_3C]|184-97
41838|code|STR.W           R11, [R7,#0x54+var_38]|199-248-28-176
41842|code|MOV             R0, R5; s|40-70
41844|code|BLX             strlen|254-247-186-236
41848|code|CMP             R0, #0x1F|31-40
41850|code|BHI             loc_A3DE|48-216
41852|code|MOV             R1, R5; src|41-70
41854|code|ADD.W           R0, R7, #0x20 ; ' '; dest|7-241-32-0
41858|code|BLX             strcpy|254-247-110-236
41862|code|ADD.W           R0, R7, #0x10|7-241-16-0
41866|code|BL              sub_9D80|255-247-249-252
41870|code|CBZ             R0, loc_A3BA|160-177
41872|code|CMP.W           R0, #0x20002|176-241-2-31
41876|code|BEQ             loc_A3BE|19-208
41878|code|LDR             R0, =(aELength0+0xC); assertion|34-72
41880|code|MOVW            R2, #0x29B; line|64-242-155-34
41884|code|LDR             R1, =aLayoutFileC; "layout_file.c"|33-73
41886|code|LDR             R3, =aTryAddCmosEnum; "try_add_cmos_enum"|34-75
41888|code|BLX             __assert_fail|254-247-44-237
41892|code|MOV             R2, R4; nmatch|34-70
41894|code|ADD.W           R0, R6, #0x64 ; 'd'; preg|6-241-100-0
41898|code|MOV             R1, R5; string|41-70
41900|code|MOV             R3, R4; pmatch|35-70
41902|code|STR             R4, [SP,#0x18C+eflags]; eflags|0-148
41904|code|BLX             regexec|254-247-68-236
41908|code|CBNZ            R0, loc_A3F6|248-185
41910|code|MOVS            R0, #1|1-32
41912|code|B               loc_A2FE|161-231
41914|code|MOV             R0, R11|88-70
41916|code|B               loc_A2FE|159-231
41918|code|LDR             R2, =stderr|20-74
41920|code|LDR             R3, [R6]|51-104
41922|code|LDR             R1, =aSErrorOnLineDO_15; "%s: Error on line %d of CMOS layout fil"...|26-73
41924|code|LDR             R0, [R2]; stream|16-104
41926|code|LDR             R2, =aNvramtool; "nvramtool"|20-74
41928|code|BLX             fprintf|254-247-164-236
41932|code|MOVS            R0, #1; status|1-32
41934|code|BLX             exit|254-247-130-236
41938|code|BLX             __stack_chk_fail|254-247-46-236
41942|code|LDR             R0, =aValue; "value"|22-72
41944|code|LDR             R1, =aLong; " long"|22-73
41946|code|BL              sub_8E08|254-247-21-253
41950|code|MOVS            R3, #0x1F|31-35
41952|code|STR             R3, [SP,#0x18C+eflags]|0-147
41954|code|LDR             R3, =stderr|11-75
41956|code|LDR             R1, =aSErrorOnLineDO_16; "%s: Error on line %d of CMOS layout fil"...|20-73
41958|code|LDR             R2, =aNvramtool; "nvramtool"|12-74
41960|code|LDR             R0, [R3]; stream|24-104
41962|code|LDR             R3, [R6]|51-104
41964|code|BLX             fprintf|254-247-146-236
41968|code|MOVS            R0, #1; status|1-32
41970|code|BLX             exit|254-247-112-236
41974|code|LDR             R3, =stderr|6-75
41976|code|LDR             R1, =aSSyntaxErrorOn_1; "%s: Syntax error on line %d of CMOS lay"...|16-73
41978|code|LDR             R2, =aNvramtool; "nvramtool"|7-74
41980|code|LDR             R0, [R3]; stream|24-104
41982|code|LDR             R3, [R6]|51-104
41984|code|BLX             fprintf|254-247-136-236
41988|code|MOVS            R0, #1; status|1-32
41990|code|BLX             exit|254-247-102-236
41994|data|ALIGN 4|0-191
41996|data|DCD dword_17A38|56-122-1-0
42000|data|DCD stderr|16-122-1-0
42004|data|DCD aSUnexpectedEnd_0; "%s: Unexpected end of CMOS layout file "...|148-214-0-0
42008|data|DCD aNvramtool; "nvramtool"|124-197-0-0
42012|data|DCD aId; "ID"|32-215-0-0
42016|data|DCD aELength0+0xC; "0"|60-197-0-0
42020|data|DCD aLayoutFileC; "layout_file.c"|132-214-0-0
42024|data|DCD aTryAddCmosEnum; "try_add_cmos_enum"|240-207-0-0
42028|data|DCD aSErrorOnLineDO_15; "%s: Error on line %d of CMOS layout fil"...|132-215-0-0
42032|data|DCD aValue; "value"|36-215-0-0
42036|data|DCD aLong; " long"|44-215-0-0
42040|data|DCD aSErrorOnLineDO_16; "%s: Error on line %d of CMOS layout fil"...|52-215-0-0
42044|data|DCD aSSyntaxErrorOn_1; "%s: Syntax error on line %d of CMOS lay"...|236-214-0-0
42048|code|PUSH.W          {R4-R11,LR}|45-233-240-79
42052|code|SUB             SP, SP, #0x54|149-176
42054|code|ADD             R7, SP, #8|2-175
42056|code|SUB             SP, SP, #0x108|194-176
42058|code|MOVW            R2, #0x7A08|71-246-8-34
42062|code|ADD.W           R11, SP, #0x15C+var_14D|13-241-15-11
42066|code|MOVT.W          R2, #1|192-242-1-2
42070|code|MOV             R10, R0|130-70
42072|code|SUB             SP, SP, #0x38 ; '8'|142-176
42074|code|MOV.W           R11, R11,LSR#3|79-234-219-11
42078|code|LDR             R3, [R2]|19-104
42080|code|STR             R1, [R7,#0x4C+var_48]|121-96
42082|code|MOV             R0, R10|80-70
42084|code|MOV.W           R5, R11,LSL#3|79-234-203-5
42088|code|LDR.W           R8, =dword_17A38|223-248-48-130
42092|code|STR             R3, [R7,#0x4C+var_8]|123-100
42094|code|ADD.W           R9, SP, #0x194+var_18C|13-241-8-9
42098|code|MOV             R1, R5|41-70
42100|code|BL              sub_9FE8|255-247-184-253
42104|code|MOV             R4, R0|4-70
42106|code|CBNZ            R0, loc_A4A6|160-185
42108|code|LDR             R6, =dword_17A38|135-78
42110|code|MOV             R2, R0; nmatch|2-70
42112|code|MOV             R3, R0; pmatch|3-70
42114|code|MOV             R1, R5; string|41-70
42116|code|ADDS            R0, R6, #4; preg|48-29
42118|code|STR             R4, [SP,#0x194+eflags]; eflags|0-148
42120|code|BLX             regexec|254-247-216-235
42124|code|CBNZ            R0, loc_A4B8|160-185
42126|code|LDR.W           R3, [R8]|216-248-0-48
42130|code|MOV             R0, R10|80-70
42132|code|MOV             R1, R5|41-70
42134|code|ADDS            R3, #1|1-51
42136|code|STR.W           R3, [R8]|200-248-0-48
42140|code|BL              sub_9FE8|255-247-164-253
42144|code|MOV             R4, R0|4-70
42146|code|CMP             R0, #0|0-40
42148|code|BEQ             loc_A47C|234-208
42150|code|LDR             R3, =stderr|126-75
42152|code|LDR             R1, =aSUnexpectedEnd_1; "%s: Unexpected end of CMOS layout file "...|126-73
42154|code|LDR             R2, =aNvramtool; "nvramtool"|127-74
42156|code|LDR             R0, [R3]; stream|24-104
42158|code|BLX             fprintf|254-247-50-236
42162|code|MOVS            R0, #1; status|1-32
42164|code|BLX             exit|254-247-14-236
42168|code|ADD.W           R0, R6, #0x84; preg|6-241-132-0
42172|code|MOV             R1, R5; string|41-70
42174|code|MOVS            R2, #6; nmatch|6-34
42176|code|MOV             R3, R9; pmatch|75-70
42178|code|STR             R4, [SP,#0x194+eflags]; eflags|0-148
42180|code|BLX             regexec|254-247-186-235
42184|code|CMP             R0, #0|0-40
42186|code|BNE             loc_A578|85-209
42188|code|LDR             R4, [R7,#0x4C+var_48]|124-104
42190|code|CBZ             R4, loc_A4F4|140-177
42192|code|MOV             R8, #0x17A08|71-246-8-40-192-242-1-8
42200|code|LDR             R1, [R6]|49-104
42202|code|LDR             R2, [R7,#0x4C+var_8]|122-108
42204|code|LDR.W           R3, [R8]|216-248-0-48
42208|code|ADDS            R1, #1|1-49
42210|code|STR             R1, [R6]|49-96
42212|code|CMP             R2, R3|154-66
42214|code|BNE.W           loc_A66C|64-240-193-128
42218|code|ADD.W           R7, R7, #0x4C ; 'L'|7-241-76-7
42222|code|MOV             SP, R7|189-70
42224|code|POP.W           {R4-R11,PC}|189-232-240-143
42228|code|LDR.W           LR, [R9,#0xC]|217-248-12-224
42232|code|LDR.W           R8, [R7,#0x4C+var_48]|215-248-4-128
42236|code|LDR.W           R4, [R9,#0x10]|217-248-16-64
42240|code|LDR.W           R1, [R9,#0x14]|217-248-20-16
42244|code|STRB.W          R8, [LR,R11,LSL#3]|14-248-59-128
42248|code|ADD.W           R8, R5, R4|5-235-4-8
42252|code|LDR             R4, [R7,#0x4C+var_48]|124-104
42254|code|LDR.W           R2, [R9,#0x1C]|217-248-28-32
42258|code|LDR.W           R3, [R9,#0x24]|217-248-36-48
42262|code|STRB.W          R4, [R1,R11,LSL#3]|1-248-59-64
42266|code|LDR             R1, [R7,#0x4C+var_48]|121-104
42268|code|LDR.W           R12, [R9,#0x2C]|217-248-44-192
42272|code|LDR.W           R0, [R9,#8]|217-248-8-0
42276|code|STRB.W          R1, [R2,R11,LSL#3]|2-248-59-16
42280|code|LDR             R2, [R7,#0x4C+var_48]|122-104
42282|code|ADDS            R0, R5, R0|40-24
42284|code|LDR             R1, =aStartBit; "start-bit"|95-73
42286|code|LDR.W           R4, [R9,#0x18]|217-248-24-64
42290|code|STRB.W          R2, [R3,R11,LSL#3]|3-248-59-32
42294|code|STRB.W          R2, [R12,R11,LSL#3]|12-248-59-32
42298|code|LDR.W           R10, [R9,#0x20]|217-248-32-160
42302|code|LDR.W           R9, [R9,#0x28]|217-248-40-144
42306|code|BL              sub_9FC4|255-247-63-253
42310|code|LDR             R1, =aLength; "length"|90-73
42312|code|MOV             R3, R0|3-70
42314|code|MOV             R0, R8|64-70
42316|code|STR             R3, [R7,#0x4C+var_3C]|59-97
42318|code|BL              sub_9FC4|255-247-57-253
42322|code|ADDS            R3, R5, R4|43-25
42324|code|LDRB            R3, [R3,#1]|91-120
42326|code|STR             R0, [R7,#0x4C+var_38]|120-97
42328|code|CBNZ            R3, def_A564; jumptable 0000A564 default case, cases 102,103,105-113|211-185
42330|code|LDRB.W          R3, [R4,R11,LSL#3]|20-248-59-48
42334|code|SUBS            R3, #0x65 ; 'e'; switch 15 cases|101-59
42336|code|CMP             R3, #0xE|14-43
42338|code|BHI             def_A564; jumptable 0000A564 default case, cases 102,103,105-113|21-216
42340|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
42344|data|DCB 0x58; jump table for switch statement|88
42345|data|DCB 0x14|20
42346|data|DCB 0x14|20
42347|data|DCB 0x55|85
42348|data|DCB 0x14|20
42349|data|DCB 0x14|20
42350|data|DCB 0x14|20
42351|data|DCB 0x14|20
42352|data|DCB 0x14|20
42353|data|DCB 0x14|20
42354|data|DCB 0x14|20
42355|data|DCB 0x14|20
42356|data|DCB 0x14|20
42357|data|DCB 0x52|82
42358|data|DCB 0x1E|30
42359|data|ALIGN 2|0
42360|code|MOV             R2, R4; nmatch|34-70
42362|code|ADD.W           R0, R6, #0xA4; preg|6-241-164-0
42366|code|MOV             R1, R5; string|41-70
42368|code|MOV             R3, R4; pmatch|35-70
42370|code|STR             R4, [SP,#0x194+eflags]; eflags|0-148
42372|code|BLX             regexec|254-247-90-235
42376|code|CMP             R0, #0|0-40
42378|code|BNE             loc_A688|125-209
42380|code|MOVS            R0, #1|1-32
42382|code|B               loc_A4D0|159-231
42384|code|LDR             R2, =stderr; jumptable 0000A564 default case, cases 102,103,105-113|67-74
42386|code|LDR             R3, [R6]|51-104
42388|code|LDR             R1, =aSErrorOnLineDO_17; "%s: Error on line %d of CMOS layout fil"...|71-73
42390|code|LDR             R0, [R2]; stream|16-104
42392|code|LDR             R2, =aNvramtool; "nvramtool"|67-74
42394|code|BLX             fprintf|254-247-188-235
42398|code|MOVS            R0, #1; status|1-32
42400|code|BLX             exit|254-247-152-235
42404|code|MOVS            R3, #2; jumptable 0000A564 case 115|2-35
42406|code|STR             R3, [R7,#0x4C+var_34]|187-97
42408|code|ADD.W           R0, R5, R10|5-235-10-0
42412|code|LDR             R1, =aConfigId; "config-ID"|66-73
42414|code|BL              sub_9FC4|255-247-9-253
42418|code|ADD             R5, R9|77-68
42420|code|MOV             R3, R0|3-70
42422|code|MOV             R0, R5; s|40-70
42424|code|STR             R3, [R7,#0x4C+var_30]|251-97
42426|code|BLX             strlen|254-247-152-235
42430|code|CMP             R0, #0x1F|31-40
42432|code|BHI             loc_A670|86-216
42434|code|MOV             R1, R5; src|41-70
42436|code|ADD.W           R0, R7, #0x20 ; ' '; dest|7-241-32-0
42440|code|BLX             strcpy|254-247-74-235
42444|code|ADD.W           R0, R7, #0x10|7-241-16-0
42448|code|ADD.W           R1, R7, #0xC|7-241-12-1
42452|code|BL              sub_9C3C|255-247-50-251
42456|code|MOVS            R3, #0x20001|1-35-192-242-2-3
42462|code|CMP             R0, R3|152-66
42464|code|BEQ             loc_A63C|44-208
42466|code|BGT             loc_A61E|28-220
42468|code|CBZ             R0, loc_A63C|80-179
42470|code|CMP.W           R0, #0x20000|176-245-0-63
42474|code|BNE             loc_A62E|32-209
42476|code|LDR             R2, =stderr|44-74
42478|code|ADD.W           R4, R7, #0x20 ; ' '|7-241-32-4
42482|code|LDR             R3, [R6]|51-104
42484|code|LDR             R1, =aSErrorOnLineDO_18; "%s: Error on line %d of CMOS layout fil"...|49-73
42486|code|LDR             R0, [R2]; stream|16-104
42488|code|LDR             R2, [R7,#0x4C+var_40]|250-104
42490|code|STR             R4, [SP,#0x194+eflags]|0-148
42492|code|ADDS            R2, #0x10|16-50
42494|code|STR             R2, [SP,#0x194+var_190]|1-146
42496|code|LDR             R2, =aNvramtool; "nvramtool"|41-74
42498|code|BLX             fprintf|254-247-136-235
42502|code|MOVS            R0, #1; status|1-32
42504|code|BLX             exit|254-247-100-235
42508|code|MOVS            R3, #3; jumptable 0000A564 case 114|3-35
42510|code|STR             R3, [R7,#0x4C+var_34]|187-97
42512|code|B               loc_A5A8|202-231
42514|code|MOVS            R3, #1; jumptable 0000A564 case 104|1-35
42516|code|STR             R3, [R7,#0x4C+var_34]|187-97
42518|code|B               loc_A5A8|199-231
42520|code|MOVS            R3, #0; jumptable 0000A564 case 101|0-35
42522|code|STR             R3, [R7,#0x4C+var_34]|187-97
42524|code|B               loc_A5A8|196-231
42526|code|CMP.W           R0, #0x30000|176-245-64-63
42530|code|BEQ             loc_A656|24-208
42532|code|MOVS            R3, #0x30002|2-35-192-242-3-3
42538|code|CMP             R0, R3|152-66
42540|code|BEQ             loc_A640|8-208
42542|code|LDR             R0, =(aELength0+0xC); assertion|36-72
42544|code|MOVW            R2, #0x26E; line|64-242-110-34
42548|code|LDR             R1, =aLayoutFileC; "layout_file.c"|35-73
42550|code|LDR             R3, =aTryAddLayoutFi; "try_add_layout_file_entry"|36-75
42552|code|BLX             __assert_fail|254-247-224-235
42556|code|MOVS            R0, #0|0-32
42558|code|B               loc_A4D0|71-231
42560|code|ADD.W           R2, R7, #0x20 ; ' '|7-241-32-2
42564|code|STR             R2, [SP,#0x194+eflags]|0-146
42566|code|LDR             R2, =stderr|22-74
42568|code|LDR             R3, [R6]|51-104
42570|code|LDR             R1, =aSErrorOnLineDO_19; "%s: Error on line %d of CMOS layout fil"...|32-73
42572|code|LDR             R0, [R2]; stream|16-104
42574|code|LDR             R2, =aNvramtool; "nvramtool"|22-74
42576|code|BLX             fprintf|254-247-96-235
42580|code|B               loc_A606|215-231
42582|code|LDR             R2, =stderr|18-74
42584|code|ADD.W           R1, R7, #0x20 ; ' '|7-241-32-1
42588|code|LDR             R3, [R6]|51-104
42590|code|STR             R1, [SP,#0x194+eflags]|0-145
42592|code|LDR             R1, =aSErrorOnLineDO_20; "%s: Error on line %d of CMOS layout fil"...|27-73
42594|code|LDR             R0, [R2]; stream|16-104
42596|code|LDR             R2, =aNvramtool; "nvramtool"|16-74
42598|code|BLX             fprintf|254-247-86-235
42602|code|B               loc_A606|204-231
42604|code|BLX             __stack_chk_fail|254-247-224-234
42608|code|MOVS            R3, #0x1F|31-35
42610|code|STR             R3, [SP,#0x194+eflags]|0-147
42612|code|LDR             R3, =stderr|10-75
42614|code|LDR             R1, =aSErrorOnLineDO_21; "%s: Error on line %d of CMOS layout fil"...|23-73
42616|code|LDR             R2, =aNvramtool; "nvramtool"|11-74
42618|code|LDR             R0, [R3]; stream|24-104
42620|code|LDR             R3, [R6]|51-104
42622|code|BLX             fprintf|254-247-74-235
42626|code|MOVS            R0, #1; status|1-32
42628|code|BLX             exit|254-247-38-235
42632|code|LDR             R3, =stderr|5-75
42634|code|LDR             R1, =aSSyntaxErrorOn_1; "%s: Syntax error on line %d of CMOS lay"...|19-73
42636|code|LDR             R2, =aNvramtool; "nvramtool"|6-74
42638|code|LDR             R0, [R3]; stream|24-104
42640|code|LDR             R3, [R6]|51-104
42642|code|BLX             fprintf|254-247-64-235
42646|code|MOVS            R0, #1; status|1-32
42648|code|BLX             exit|254-247-28-235
42652|data|DCD dword_17A38|56-122-1-0
42656|data|DCD stderr|16-122-1-0
42660|data|DCD aSUnexpectedEnd_1; "%s: Unexpected end of CMOS layout file "...|232-215-0-0
42664|data|DCD aNvramtool; "nvramtool"|124-197-0-0
42668|data|DCD aStartBit; "start-bit"|60-216-0-0
42672|data|DCD aLength; "length"|72-216-0-0
42676|data|DCD aSErrorOnLineDO_17; "%s: Error on line %d of CMOS layout fil"...|172-216-0-0
42680|data|DCD aConfigId; "config-ID"|80-216-0-0
42684|data|DCD aSErrorOnLineDO_18; "%s: Error on line %d of CMOS layout fil"...|176-217-0-0
42688|data|DCD aELength0+0xC; "0"|60-197-0-0
42692|data|DCD aLayoutFileC; "layout_file.c"|132-214-0-0
42696|data|DCD aTryAddLayoutFi; "try_add_layout_file_entry"|4-208-0-0
42700|data|DCD aSErrorOnLineDO_19; "%s: Error on line %d of CMOS layout fil"...|92-217-0-0
42704|data|DCD aSErrorOnLineDO_20; "%s: Error on line %d of CMOS layout fil"...|4-217-0-0
42708|data|DCD aSErrorOnLineDO_21; "%s: Error on line %d of CMOS layout fil"...|92-216-0-0
42712|data|DCD aSSyntaxErrorOn_1; "%s: Syntax error on line %d of CMOS lay"...|236-214-0-0
42716|code|PUSH.W          {R4-R10,LR}|45-233-240-71
42720|code|SUB             SP, SP, #0x10|132-176
42722|code|LDR.W           R10, =__stack_chk_guard|223-248-132-160
42726|code|LDR             R3, =dword_17A38|28-75
42728|code|ADD             R7, SP, #8|2-175
42730|code|SUB             SP, SP, #0x108|194-176
42732|code|MOV             R9, R0|129-70
42734|code|LDR.W           R1, [R10]|218-248-0-16
42738|code|ADD             R5, SP, #0x118+var_110|2-173
42740|code|LDR             R2, [R3]|26-104
42742|code|MOV             R6, R3|30-70
42744|code|ADDS            R2, #1|1-50
42746|code|STR             R1, [R7,#8+var_4]|121-96
42748|code|STR             R2, [R3]|26-96
42750|code|B               loc_A71C|13-224
42752|code|LDR.W           R8, =dword_17A38|223-248-84-128
42756|code|MOV             R2, R4; nmatch|34-70
42758|code|MOV             R1, R5; string|41-70
42760|code|MOV             R3, R4; pmatch|35-70
42762|code|ADD.W           R0, R8, #4; preg|8-241-4-0
42766|code|STR             R4, [SP,#0x118+eflags]; eflags|0-148
42768|code|BLX             regexec|254-247-148-234
42772|code|CBNZ            R0, loc_A73E|152-185
42774|code|LDR             R3, [R6]|51-104
42776|code|ADDS            R3, #1|1-51
42778|code|STR             R3, [R6]|51-96
42780|code|MOV             R0, R9|72-70
42782|code|MOV             R1, R5|41-70
42784|code|BL              sub_9FE8|255-247-98-252
42788|code|MOV             R4, R0|4-70
42790|code|CMP             R0, #0|0-40
42792|code|BEQ             loc_A700|234-208
42794|code|LDR             R2, [R7,#8+var_4]|122-104
42796|code|LDR.W           R3, [R10]|218-248-0-48
42800|code|CMP             R2, R3|154-66
42802|code|BNE             loc_A754|15-209
42804|code|ADD.W           R7, R7, #8|7-241-8-7
42808|code|MOV             SP, R7|189-70
42810|code|POP.W           {R4-R10,PC}|189-232-240-135
42814|code|LDR             R2, =stderr|7-74
42816|code|LDR.W           R3, [R8]|216-248-0-48
42820|code|LDR             R1, =aSSyntaxErrorOn_2; "%s: Syntax error on line %d of CMOS lay"...|6-73
42822|code|LDR             R0, [R2]; stream|16-104
42824|code|LDR             R2, =aNvramtool; "nvramtool"|6-74
42826|code|BLX             fprintf|254-247-228-234
42830|code|MOVS            R0, #1; status|1-32
42832|code|BLX             exit|254-247-192-234
42836|code|BLX             __stack_chk_fail|254-247-108-234
42840|data|DCD dword_17A38|56-122-1-0
42844|data|DCD stderr|16-122-1-0
42848|data|DCD aSSyntaxErrorOn_2; "%s: Syntax error on line %d of CMOS lay"...|4-218-0-0
42852|data|DCD aNvramtool; "nvramtool"|124-197-0-0
42856|data|DCD __stack_chk_guard|8-122-1-0
42860|code|PUSH.W          {R4-R10,LR}|45-233-240-71
42864|code|SUB             SP, SP, #0x10|132-176
42866|code|LDR.W           R10, =__stack_chk_guard|223-248-180-160
42870|code|ADD             R7, SP, #8|2-175
42872|code|SUB             SP, SP, #0x108|194-176
42874|code|ADD             R6, SP, #0x118+var_110|2-174
42876|code|MOV             R9, R0|129-70
42878|code|LDR.W           R3, [R10]|218-248-0-48
42882|code|MOV             R0, R9|72-70
42884|code|MOV             R1, R6|49-70
42886|code|LDR.W           R8, =dword_17A38|223-248-140-128
42890|code|STR             R3, [R7,#8+var_4]|123-96
42892|code|BL              sub_9FE8|255-247-44-252
42896|code|MOV             R4, R0|4-70
42898|code|CBNZ            R0, loc_A7BE|160-185
42900|code|LDR             R5, =dword_17A38|31-77
42902|code|MOV             R2, R0; nmatch|2-70
42904|code|MOV             R3, R0; pmatch|3-70
42906|code|MOV             R1, R6; string|49-70
42908|code|ADDS            R0, R5, #4; preg|40-29
42910|code|STR             R4, [SP,#0x118+eflags]; eflags|0-148
42912|code|BLX             regexec|254-247-76-234
42916|code|CBNZ            R0, loc_A7D0|160-185
42918|code|LDR.W           R3, [R8]|216-248-0-48
42922|code|MOV             R0, R9|72-70
42924|code|MOV             R1, R6|49-70
42926|code|ADDS            R3, #1|1-51
42928|code|STR.W           R3, [R8]|200-248-0-48
42932|code|BL              sub_9FE8|255-247-24-252
42936|code|MOV             R4, R0|4-70
42938|code|CMP             R0, #0|0-40
42940|code|BEQ             loc_A794|234-208
42942|code|LDR             R3, =stderr|22-75
42944|code|LDR             R1, =aSEntriesLineNo; "%s: \"entries\" line not found in CMOS "...|22-73
42946|code|LDR             R2, =aNvramtool; "nvramtool"|23-74
42948|code|LDR             R0, [R3]; stream|24-104
42950|code|BLX             fprintf|254-247-166-234
42954|code|MOVS            R0, #1; status|1-32
42956|code|BLX             exit|254-247-130-234
42960|code|MOV             R2, R4; nmatch|34-70
42962|code|ADD.W           R0, R5, #0xC4; preg|5-241-196-0
42966|code|MOV             R1, R6; string|49-70
42968|code|MOV             R3, R4; pmatch|35-70
42970|code|STR             R4, [SP,#0x118+eflags]; eflags|0-148
42972|code|BLX             regexec|254-247-46-234
42976|code|CBNZ            R0, loc_A800|112-185
42978|code|LDR             R1, [R5]|41-104
42980|code|LDR             R2, [R7,#8+var_4]|122-104
42982|code|LDR.W           R3, [R10]|218-248-0-48
42986|code|ADDS            R1, #1|1-49
42988|code|STR             R1, [R5]|41-96
42990|code|CMP             R2, R3|154-66
42992|code|BNE             loc_A7FC|4-209
42994|code|ADD.W           R7, R7, #8|7-241-8-7
42998|code|MOV             SP, R7|189-70
43000|code|POP.W           {R4-R10,PC}|189-232-240-135
43004|code|BLX             __stack_chk_fail|254-247-24-234
43008|code|LDR             R3, =stderr|5-75
43010|code|LDR             R1, =aSSyntaxErrorOn_3; "%s: Syntax error on line %d of CMOS lay"...|8-73
43012|code|LDR             R2, =aNvramtool; "nvramtool"|6-74
43014|code|LDR             R0, [R3]; stream|24-104
43016|code|LDR             R3, [R5]|43-104
43018|code|BLX             fprintf|254-247-132-234
43022|code|MOVS            R0, #1; status|1-32
43024|code|BLX             exit|254-247-96-234
43028|data|DCD dword_17A38|56-122-1-0
43032|data|DCD stderr|16-122-1-0
43036|data|DCD aSEntriesLineNo; "%s: \"entries\" line not found in CMOS "...|120-218-0-0
43040|data|DCD aNvramtool; "nvramtool"|124-197-0-0
43044|data|DCD aSSyntaxErrorOn_3; "%s: Syntax error on line %d of CMOS lay"...|172-218-0-0
43048|data|DCD __stack_chk_guard|8-122-1-0
43052|code|MOV             R3, #0x17A38|71-246-56-35-192-242-1-3
43060|code|STR.W           R0, [R3,#(dword_17B1C - 0x17A38)]|195-248-228-0
43064|code|BX              LR|112-71
43066|data|ALIGN 4|0-191
43068|code|PUSH.W          {R4-R11,LR}|45-233-240-79
43072|code|SUB             SP, SP, #0x34|141-176
43074|code|LDR             R5, =dword_17A38|91-77
43076|code|LDR.W           R0, [R5,#(dword_17B1C - 0x17A38)]; filename|213-248-228-0
43080|code|CMP             R0, #0|0-40
43082|code|BEQ.W           loc_A95A|0-240-134-128
43086|code|LDR             R1, =(aAssembler_0+8); modes|89-73
43088|code|BLX             fopen|254-247-214-233
43092|code|MOV             R4, R0|4-70
43094|code|CMP             R0, #0|0-40
43096|code|BEQ.W           loc_A98A|0-240-151-128
43100|code|LDR             R7, =aSpaceEntriesSp; "^[[:space:]]*entries[[:space:]]*$"|86-79
43102|code|ADDS            R3, R5, #4|43-29
43104|code|MOVS            R0, #5; cflags|5-32
43106|code|MOVS            R1, #7|7-33
43108|code|SUB.W           R2, R7, #0x28 ; '('|167-241-40-2
43112|code|ADD.W           R6, R7, #0x24 ; '$'|7-241-36-6
43116|code|ADD.W           R12, R7, #0xBC|7-241-188-12
43120|code|ADD.W           LR, R7, #0xE4|7-241-228-14
43124|code|ADD.W           R10, R7, #0x144|7-245-162-122
43128|code|ADD.W           R11, R7, #0x168|7-245-180-123
43132|code|STR             R7, [SP,#0x58+var_58]|0-151
43134|code|ADD.W           R8, R5, #0x64 ; 'd'|5-241-100-8
43138|code|ADD.W           R7, R5, #0xC4|5-241-196-7
43142|code|STR             R6, [SP,#0x58+var_50]|2-150
43144|code|STR             R7, [SP,#0x58+var_54]|1-151
43146|code|ADD.W           R6, R5, #0x84|5-241-132-6
43150|code|ADD.W           R7, R5, #0xA4|5-241-164-7
43154|code|STR             R6, [SP,#0x58+var_4C]|3-150
43156|code|STR.W           R12, [SP,#0x58+var_48]|205-248-16-192
43160|code|ADD.W           R6, R5, #0x44 ; 'D'|5-241-68-6
43164|code|STR             R7, [SP,#0x58+var_44]|5-151
43166|code|ADD.W           R9, R5, #0x24 ; '$'|5-241-36-9
43170|code|STR.W           LR, [SP,#0x58+var_40]|205-248-24-224
43174|code|STR             R6, [SP,#0x58+var_3C]|7-150
43176|code|STR.W           R10, [SP,#0x58+var_38]|205-248-32-160
43180|code|STR.W           R8, [SP,#0x58+var_34]|205-248-36-128
43184|code|STR.W           R11, [SP,#0x58+var_30]|205-248-40-176
43188|code|STR.W           R9, [SP,#0x58+var_2C]|205-248-44-144
43192|code|BL              sub_C2D8|1-240-14-253
43196|code|MOVS            R3, #1|1-35
43198|code|MOV             R0, R4|32-70
43200|code|STR             R3, [R5]|43-96
43202|code|BL              sub_A76C|255-247-83-255
43206|code|MOV             R0, R4|32-70
43208|code|MOVS            R1, #1|1-33
43210|code|BL              sub_A440|255-247-185-253
43214|code|CMP             R0, #0|0-40
43216|code|BEQ             loc_A8C6|249-208
43218|code|MOV             R0, R4|32-70
43220|code|MOVS            R1, #0|0-33
43222|code|BL              sub_A26C|255-247-201-252
43226|code|CMP             R0, #0|0-40
43228|code|BNE             loc_A978|76-209
43230|code|MOV             R0, R4|32-70
43232|code|MOVS            R1, #0|0-33
43234|code|BL              sub_A26C|255-247-195-252
43238|code|CMP             R0, #0|0-40
43240|code|BEQ             loc_A8DE|249-208
43242|code|MOVS            R1, #0; off|0-33
43244|code|MOV             R0, R4; stream|32-70
43246|code|MOV.W           R10, #1|79-240-1-10
43250|code|STR.W           R10, [R5]|197-248-0-160
43254|code|MOV             R2, R1; whence|10-70
43256|code|BLX             fseek|254-247-104-234
43260|code|MOV             R0, R4|32-70
43262|code|BL              sub_A76C|255-247-53-255
43266|code|MOV             R0, R4|32-70
43268|code|MOVS            R1, #0|0-33
43270|code|BL              sub_A440|255-247-155-253
43274|code|CMP             R0, #0|0-40
43276|code|BNE             loc_A966|43-209
43278|code|MOV             R0, R4|32-70
43280|code|MOVS            R1, #0|0-33
43282|code|BL              sub_A440|255-247-149-253
43286|code|CMP             R0, #0|0-40
43288|code|BEQ             loc_A90E|249-208
43290|code|MOV             R0, R4|32-70
43292|code|MOVS            R1, #1|1-33
43294|code|BL              sub_A26C|255-247-165-252
43298|code|CMP             R0, #0|0-40
43300|code|BEQ             loc_A91A|249-208
43302|code|MOV             R0, R4|32-70
43304|code|BL              sub_A030|255-247-130-251
43308|code|MOV             R0, R4|32-70
43310|code|BL              sub_A6DC|255-247-213-254
43314|code|LDR             R1, =unk_17A3C|34-73
43316|code|MOVS            R0, #7|7-32
43318|code|STR             R7, [SP,#0x58+var_58]|0-151
43320|code|ADD.W           R2, R1, #0xC0|1-241-192-2
43324|code|ADD.W           R3, R1, #0x80|1-241-128-3
43328|code|STR             R6, [SP,#0x58+var_54]|1-150
43330|code|STR.W           R8, [SP,#0x58+var_50]|205-248-8-128
43334|code|STR.W           R9, [SP,#0x58+var_4C]|205-248-12-144
43338|code|BL              sub_C370|1-240-17-253
43342|code|MOV             R0, R4|32-70
43344|code|ADD             SP, SP, #0x34 ; '4'|13-176
43346|code|POP.W           {R4-R11,LR}|189-232-240-79
43350|code|B.W             j_fclose|254-247-15-186
43354|code|LDR             R0, =aLayoutFilename; "layout_filename != ((void *)0)"|25-72
43356|code|MOVS            R2, #0xD0; line|208-34
43358|code|LDR             R1, =aLayoutFileC; "layout_file.c"|25-73
43360|code|LDR             R3, =aGetLayoutFromF; "get_layout_from_file"|25-75
43362|code|BLX             __assert_fail|254-247-76-234
43366|code|LDR             R3, =stderr|25-75
43368|code|LDR             R1, =aSErrorCmosLayo; "%s: Error: CMOS layout file contains no"...|25-73
43370|code|LDR             R2, =aNvramtool; "nvramtool"|26-74
43372|code|LDR             R0, [R3]; stream|24-104
43374|code|BLX             fprintf|254-247-210-233
43378|code|MOV             R0, R10; status|80-70
43380|code|BLX             exit|254-247-174-233
43384|code|LDR             R3, =stderr|20-75
43386|code|LDR             R1, =aSErrorCmosLayo_0; "%s: Error: CMOS layout file contains no"...|23-73
43388|code|LDR             R2, =aNvramtool; "nvramtool"|21-74
43390|code|LDR             R0, [R3]; stream|24-104
43392|code|BLX             fprintf|254-247-200-233
43396|code|MOVS            R0, #1; status|1-32
43398|code|BLX             exit|254-247-166-233
43402|code|LDR             R3, =stderr|16-75
43404|code|LDR.W           R4, [R5,#(dword_17B1C - 0x17A38)]|213-248-228-64
43408|code|LDR             R5, [R3]|29-104
43410|code|BLX             __errno_location|254-247-198-233
43414|code|LDR             R0, [R0]; errnum|0-104
43416|code|BLX             strerror|254-247-130-233
43420|code|LDR             R1, =aSCanNotOpenCmo; "%s: Can not open CMOS layout file %s fo"...|15-73
43422|code|LDR             R2, =aNvramtool; "nvramtool"|13-74
43424|code|MOV             R3, R4|35-70
43426|code|STR             R0, [SP,#0x58+var_58]|0-144
43428|code|MOV             R0, R5; stream|40-70
43430|code|BLX             fprintf|254-247-182-233
43434|code|MOVS            R0, #1; status|1-32
43436|code|BLX             exit|254-247-146-233
43440|data|DCD dword_17A38|56-122-1-0
43444|data|DCD aAssembler_0+8; "r"|196-241-0-0
43448|data|DCD aSpaceEntriesSp; "^[[:space:]]*entries[[:space:]]*$"|96-208-0-0
43452|data|DCD unk_17A3C|60-122-1-0
43456|data|DCD aLayoutFilename; "layout_filename != ((void *)0)"|248-218-0-0
43460|data|DCD aLayoutFileC; "layout_file.c"|132-214-0-0
43464|data|DCD aGetLayoutFromF; "get_layout_from_file"|32-208-0-0
43468|data|DCD stderr|16-122-1-0
43472|data|DCD aSErrorCmosLayo; "%s: Error: CMOS layout file contains no"...|136-219-0-0
43476|data|DCD aNvramtool; "nvramtool"|124-197-0-0
43480|data|DCD aSErrorCmosLayo_0; "%s: Error: CMOS layout file contains no"...|80-219-0-0
43484|data|DCD aSCanNotOpenCmo; "%s: Can not open CMOS layout file %s fo"...|24-219-0-0
43488|code|PUSH            {R4-R7,LR}|240-181
43490|code|MOV             R3, R0; s|3-70
43492|code|SUB             SP, SP, #0x24|137-176
43494|code|MOVS            R1, #1; size|1-33
43496|code|MOVS            R2, #8; n|8-34
43498|code|MOV             R5, R0|5-70
43500|code|LDR             R0, =aEntries; "entries\n"|47-72
43502|code|BLX             fwrite|254-247-44-233
43506|code|BL              sub_9D70|255-247-189-249
43510|code|MOV             R4, R0|4-70
43512|code|CBZ             R0, loc_AA2E|200-177
43514|code|LDR             R1, [R4,#8]|161-104
43516|code|LDM.W           R4, {R2,R3}|148-232-12-0
43520|code|CMP             R1, #3; switch 4 cases|3-41
43522|code|BHI             def_AA04; jumptable 0000AA04 default case|76-216
43524|code|TBB.W           [PC,R1]; switch jump|223-232-1-240
43528|data|DCB 0x49; jump table for switch statement|73
43529|data|DCB 0x47|71
43530|data|DCB 0x45|69
43531|data|DCB 2|2
43532|code|MOVS            R1, #0x72 ; 'r'; jumptable 0000AA04 case 3|114-33
43534|code|STR             R1, [SP,#0x38+var_38]|0-145
43536|code|MOV             R0, R5; stream|40-70
43538|code|LDR             R6, [R4,#0xC]|230-104
43540|code|ADD.W           R7, R4, #0x10|4-241-16-7
43544|code|LDR             R1, =aUUCUS; "%u %u %c %u %s\n"|37-73
43546|code|STR             R7, [SP,#0x38+var_30]|2-151
43548|code|STR             R6, [SP,#0x38+var_34]|1-150
43550|code|BLX             fprintf|254-247-122-233
43554|code|MOV             R0, R4|32-70
43556|code|BL              sub_9D7C|255-247-170-249
43560|code|MOV             R4, R0|4-70
43562|code|CMP             R0, #0|0-40
43564|code|BNE             loc_A9FA|229-209
43566|code|MOVS            R1, #1; size|1-33
43568|code|MOVS            R2, #0xE; n|14-34
43570|code|MOV             R3, R5; s|43-70
43572|code|LDR             R0, =aEnumerations; "\nenumerations\n"|31-72
43574|code|BLX             fwrite|254-247-8-233
43578|code|BL              sub_9EB0|255-247-57-250
43582|code|MOV             R4, R0|4-70
43584|code|CBZ             R0, loc_AA66|136-177
43586|code|LDRD.W          R6, R7, [R4,#8]|212-233-2-103
43590|code|MOV             R0, R5; stream|40-70
43592|code|LDR             R2, [R4]|34-104
43594|code|ADD.W           R3, R4, #0x10|4-241-16-3
43598|code|LDR             R1, =aULluS; "%u %llu %s\n"|26-73
43600|code|STR             R3, [SP,#0x38+var_30]|2-147
43602|code|STRD.W          R6, R7, [SP,#0x38+var_38]|205-233-0-103
43606|code|BLX             fprintf|254-247-94-233
43610|code|MOV             R0, R4|32-70
43612|code|BL              sub_9EBC|255-247-46-250
43616|code|MOV             R4, R0|4-70
43618|code|CMP             R0, #0|0-40
43620|code|BNE             loc_AA42|237-209
43622|code|LDR             R3, =dword_17A04|21-75
43624|code|ADD             R0, SP, #0x38+var_24|5-168
43626|code|LDR             R1, [R3]|25-104
43628|code|LDR             R3, =dword_17A00|20-75
43630|code|STR             R1, [SP,#0x38+var_24]|5-145
43632|code|LDR             R2, [R3]|26-104
43634|code|LDR             R3, =dword_179FC|20-75
43636|code|STR             R2, [SP,#0x38+var_20]|6-146
43638|code|LDR             R3, [R3]|27-104
43640|code|STR             R3, [SP,#0x38+var_1C]|7-147
43642|code|BL              sub_9FB0|255-247-153-250
43646|code|LDR             R3, [SP,#0x38+var_1C]|7-155
43648|code|MOV             R0, R5; stream|40-70
43650|code|LDR             R1, =aChecksumsCheck; "\nchecksums\nchecksum %u %u %u\n"|17-73
43652|code|LDR             R2, [SP,#0x38+var_24]|5-154
43654|code|STR             R3, [SP,#0x38+var_38]|0-147
43656|code|LDR             R3, [SP,#0x38+var_20]|6-155
43658|code|BLX             fprintf|254-247-68-233
43662|code|ADD             SP, SP, #0x24 ; '$'|9-176
43664|code|POP             {R4-R7,PC}|240-189
43666|code|MOVS            R1, #0x73 ; 's'; jumptable 0000AA04 case 2|115-33
43668|code|B               loc_AA0E|187-231
43670|code|MOVS            R1, #0x68 ; 'h'; jumptable 0000AA04 case 1|104-33
43672|code|B               loc_AA0E|185-231
43674|code|MOVS            R1, #0x65 ; 'e'; jumptable 0000AA04 case 0|101-33
43676|code|B               loc_AA0E|183-231
43678|code|LDR             R0, =(aELength0+0xC); jumptable 0000AA04 default case|11-72
43680|code|MOV.W           R2, #0x300; line|79-244-64-114
43684|code|LDR             R1, =aLayoutFileC; "layout_file.c"|10-73
43686|code|LDR             R3, =aCmosEntryCharV; "cmos_entry_char_value"|11-75
43688|code|BLX             __assert_fail|254-247-168-233
43692|data|DCD aEntries; "entries\n"|188-219-0-0
43696|data|DCD aUUCUS; "%u %u %c %u %s\n"|200-219-0-0
43700|data|DCD aEnumerations; "\nenumerations\n"|216-219-0-0
43704|data|DCD aULluS; "%u %llu %s\n"|232-219-0-0
43708|data|DCD dword_17A04|4-122-1-0
43712|data|DCD dword_17A00|0-122-1-0
43716|data|DCD dword_179FC|252-121-1-0
43720|data|DCD aChecksumsCheck; "\nchecksums\nchecksum %u %u %u\n"|244-219-0-0
43724|data|DCD aELength0+0xC; "0"|60-197-0-0
43728|data|DCD aLayoutFileC; "layout_file.c"|132-214-0-0
43732|data|DCD aCmosEntryCharV; "cmos_entry_char_value"|60-210-0-0
43736|code|LDR             R1, [R0,#8]|129-104
43738|code|LDR             R2, [R0,#0xC]|194-104
43740|code|LDR             R3, [R0,#0x10]|3-105
43742|code|LDR             R0, [R0,#0x14]|64-105
43744|code|PUSH            {R4,R5,LR}|48-181
43746|code|MOVW            R5, #0xE2D8|78-242-216-37
43750|code|SUB             SP, SP, #0xC|131-176
43752|code|MOVT.W          R5, #0|192-242-0-5
43756|code|MOV             R4, #0xE2D0|78-242-208-36-192-242-0-4
43764|code|CMP             R0, #1|1-40
43766|code|IT NE|24-191
43768|code|MOVNE           R4, R5|44-70
43770|code|LDR             R0, =aCmosChecksumFr; "CMOS checksum from bit %d to bit %d\nat"...|3-72
43772|code|STR             R4, [SP]|0-148
43774|code|BLX             printf|254-247-122-232
43778|code|ADD             SP, SP, #0xC|3-176
43780|code|POP             {R4,R5,PC}|48-189
43782|data|ALIGN 4|0-191
43784|data|DCD aCmosChecksumFr; "CMOS checksum from bit %d to bit %d\nat"...|224-226-0-0
43788|code|MOV             R3, R0|3-70
43790|code|MOVW            R0, #0xE320|78-242-32-48
43794|code|LDRB            R1, [R3,#8]|25-122
43796|code|MOVT.W          R0, #0|192-242-0-0
43800|code|LDRB            R2, [R3,#9]|90-122
43802|code|ADDS            R1, R3, R1|89-24
43804|code|ADDS            R2, R3, R2|154-24
43806|code|ADDS            R1, #0xA|10-49
43808|code|ADDS            R2, #0xA|10-50
43810|code|B.W             j_printf|254-247-101-184
43814|data|ALIGN 4|0-191
43816|code|ADDS            R0, #8|8-48
43818|code|B.W             j_puts|254-247-165-184
43822|data|ALIGN 0x10|0-191
43824|code|PUSH.W          {R4-R9,LR}|45-233-240-67
43828|code|SUB             SP, SP, #0x34|141-176
43830|code|LDR.W           R8, =__stack_chk_guard|223-248-184-128
43834|code|ADD             R7, SP, #0x28|10-175
43836|code|SUB             SP, SP, #0x58|150-176
43838|code|LDR             R3, [R0,#0x10]|3-105
43840|code|ADD             R5, SP, #0x8C+s|10-173
43842|code|LDR.W           R2, [R8]|216-248-0-32
43846|code|MOV             R4, R0|4-70
43848|code|CMP             R3, #0x68 ; 'h'|104-43
43850|code|STR             R2, [R7,#0xC+var_8]|122-96
43852|code|ITTT EQ|2-191
43854|code|MOVEQW          R3, #0x4548|68-242-72-83
43858|code|MOVTEQ.W        R3, #0x58 ; 'X'|192-242-88-3
43862|code|STREQ           R3, [R5]|43-96
43864|code|BEQ             loc_AB6E|9-208
43866|code|CMP             R3, #0x72 ; 'r'|114-43
43868|code|BEQ             loc_ABCA|53-208
43870|code|CMP             R3, #0x65 ; 'e'|101-43
43872|code|BEQ             loc_ABBE|45-208
43874|code|MOV             R0, R5; s|40-70
43876|code|MOVS            R1, #0x50 ; 'P'; maxlen|80-33
43878|code|LDR             R2, =aUnknownValueIs; "UNKNOWN: value is 0x%x (decimal: %d)"|29-74
43880|code|STR             R3, [SP,#0x8C+var_8C]|0-147
43882|code|BLX             snprintf|254-247-224-232
43886|code|LDR             R3, =dword_17B20|28-75
43888|code|ADD.W           R9, R4, #0x18|4-241-24-9
43892|code|LDM.W           R4, {R2,R12}|148-232-4-16
43896|code|LDR.W           LR, [R4,#8]|212-248-8-224
43900|code|LDR             R1, [R3]|25-104
43902|code|LDR             R6, [R4,#0xC]|230-104
43904|code|MOV             R3, R2|19-70
43906|code|SUBS            R1, R4, R1|97-26
43908|code|LDR             R4, [R4,#0x14]|100-105
43910|code|LDR             R0, =aOptionRecordAt; "    OPTION record at physical address 0"...|23-72
43912|code|STR.W           R12, [SP,#0x8C+var_8C]|205-248-0-192
43916|code|STR.W           R12, [SP,#0x8C+var_88]|205-248-4-192
43920|code|STR.W           LR, [SP,#0x8C+var_84]|205-248-8-224
43924|code|STR.W           LR, [SP,#0x8C+var_80]|205-248-12-224
43928|code|STR             R6, [SP,#0x8C+var_7C]|4-150
43930|code|STR             R6, [SP,#0x8C+var_78]|5-150
43932|code|STR             R5, [SP,#0x8C+var_74]|6-149
43934|code|STR             R4, [SP,#0x8C+var_70]|7-148
43936|code|STR             R4, [SP,#0x8C+var_6C]|8-148
43938|code|STR.W           R9, [SP,#0x8C+var_68]|205-248-36-144
43942|code|BLX             printf|254-247-38-232
43946|code|LDR             R2, [R7,#0xC+var_8]|122-104
43948|code|LDR.W           R3, [R8]|216-248-0-48
43952|code|CMP             R2, R3|154-66
43954|code|BNE             loc_ABD6|16-209
43956|code|ADD.W           R7, R7, #0xC|7-241-12-7
43960|code|MOV             SP, R7|189-70
43962|code|POP.W           {R4-R9,PC}|189-232-240-131
43966|code|LDR             R3, =aEnum; "ENUM"|10-75
43968|code|LDM.W           R3, {R0,R1}; "ENUM"|147-232-3-0
43972|code|STR             R0, [R5]|40-96
43974|code|STRB            R1, [R5,#4]|41-113
43976|code|B               loc_AB6E|209-231
43978|code|LDR             R2, =aReserved; "RESERVED"|8-74
43980|code|MOV             R3, R5|43-70
43982|code|LDM             R2, {R0-R2}; "RESERVED"|7-202
43984|code|STM             R3!, {R0,R1}|3-195
43986|code|STRB            R2, [R3]|26-112
43988|code|B               loc_AB6E|203-231
43990|code|BLX             __stack_chk_fail|254-247-44-232
43994|data|ALIGN 4|0-191
43996|data|DCD aUnknownValueIs; "UNKNOWN: value is 0x%x (decimal: %d)"|88-227-0-0
44000|data|DCD dword_17B20|32-123-1-0
44004|data|DCD aOptionRecordAt; "    OPTION record at physical address 0"...|128-227-0-0
44008|data|DCD aEnum; "ENUM"|68-227-0-0
44012|data|DCD aReserved; "RESERVED"|76-227-0-0
44016|data|DCD __stack_chk_guard|8-122-1-0
44020|code|PUSH.W          {R4-R11,LR}|45-233-240-79
44024|code|SUB             SP, SP, #0x24 ; '$'|137-176
44026|code|LDR             R7, =dword_17B20|77-79
44028|code|MOV             R4, R0|4-70
44030|code|LDR             R2, [R0]|2-104
44032|code|LDR             R5, [R0,#8]|133-104
44034|code|LDR             R1, [R7]|57-104
44036|code|LDR.W           R8, [R0,#4]|208-248-4-128
44040|code|MOV             R3, R2|19-70
44042|code|SUBS            R1, R0, R1|65-26
44044|code|LDR             R0, =aCmosOptionTabl; "CMOS option table at physical address 0"...|73-72
44046|code|STR             R5, [SP,#8]|2-149
44048|code|ADDS            R6, R4, R5|102-25
44050|code|STR.W           R8, [SP]|205-248-0-128
44054|code|STR.W           R8, [SP,#4]|205-248-4-128
44058|code|STR             R5, [SP,#0xC]|3-149
44060|code|BLX             printf|253-247-234-239
44064|code|LDR             R2, [R4,#8]|162-104
44066|code|LDR             R3, [R4,#4]|99-104
44068|code|CMP             R2, R3|154-66
44070|code|BHI             loc_AD18|119-216
44072|code|SUBS.W          R8, R8, R5|184-235-5-8
44076|code|BEQ             loc_AD24|122-208
44078|code|LDR.W           R9, =stdout|223-248-28-145
44082|code|MOVS            R5, #0|0-37
44084|code|LDR.W           R11, =unk_DC14|223-248-24-177
44088|code|B               loc_AC88|38-224
44090|code|CMP.W           LR, #0xCB|190-241-203-15
44094|code|MOV             R2, LR|114-70
44096|code|LDR             R0, =aUnknownRecordA; "    UNKNOWN record at physical address "...|61-72
44098|code|MOV             R3, LR|115-70
44100|code|BEQ             loc_ACD2|69-208
44102|code|CMP.W           LR, #0xC9|190-241-201-15
44106|code|BEQ             loc_ACCA|62-208
44108|code|LDR             R1, [R7]|57-104
44110|code|LDR.W           LR, [R4,#4]|212-248-4-224
44114|code|SUBS            R1, R4, R1|97-26
44116|code|STR.W           LR, [SP]|205-248-0-224
44120|code|STR.W           LR, [SP,#4]|205-248-4-224
44124|code|BLX             printf|253-247-202-239
44128|code|LDR.W           R3, [R9]|217-248-0-48
44132|code|ADD.W           R0, R4, #8|4-241-8-0
44136|code|LDR             R1, [R4,#4]|97-104
44138|code|LDR             R2, [R7]|58-104
44140|code|SUBS            R1, #8|8-57
44142|code|STMEA.W         SP, {R3,R11}|141-232-8-8
44146|code|SUBS            R2, R0, R2|130-26
44148|code|MOVS            R3, #0|0-35
44150|code|BL              sub_96AC|254-247-25-253
44154|code|LDR             R3, [R4,#4]|99-104
44156|code|ADDS            R5, R5, R3|237-24
44158|code|CMP             R8, R5|168-69
44160|code|BLS             loc_ACC4|32-217
44162|code|MOVS            R0, #0xA|10-32
44164|code|BLX             putchar|254-247-102-232
44168|code|LDR.W           LR, [R6,R5]|86-248-5-224
44172|code|ADDS            R4, R6, R5|116-25
44174|code|CMP.W           LR, #0xCA|190-241-202-15
44178|code|BNE             loc_AC3A|210-209
44180|code|LDR             R0, [R4,#4]|96-104
44182|code|ADD.W           R12, R4, #0x10|4-241-16-12
44186|code|LDR             R2, [R4,#8]|162-104
44188|code|LDR             R3, [R4,#0xC]|227-104
44190|code|LDR             R1, [R7]|57-104
44192|code|STR             R0, [SP]|0-144
44194|code|STR             R0, [SP,#4]|1-144
44196|code|SUBS            R1, R4, R1|97-26
44198|code|STR             R2, [SP,#8]|2-146
44200|code|STR             R2, [SP,#0xC]|3-146
44202|code|MOV             R2, LR|114-70
44204|code|STR             R3, [SP,#0x10]|4-147
44206|code|STR             R3, [SP,#0x14]|5-147
44208|code|MOV             R3, LR|115-70
44210|code|LDR             R0, =aEnumRecordAtPh; "    ENUM record at physical address 0x%"...|34-72
44212|code|STR.W           R12, [SP,#0x18]|205-248-24-192
44216|code|BLX             printf|253-247-156-239
44220|code|LDR             R3, [R4,#4]|99-104
44222|code|ADDS            R5, R5, R3|237-24
44224|code|CMP             R8, R5|168-69
44226|code|BHI             loc_AC82|222-216
44228|code|ADD             SP, SP, #0x24 ; '$'|9-176
44230|code|POP.W           {R4-R11,PC}|189-232-240-143
44234|code|MOV             R0, R4|32-70
44236|code|BL              sub_AB30|255-247-48-255
44240|code|B               loc_AC7A|211-231
44242|code|LDR             R1, [R7]|57-104
44244|code|MOV             R2, LR|114-70
44246|code|LDR.W           R12, [R4,#4]|212-248-4-192
44250|code|ADD.W           LR, R4, #0xC|4-241-12-14
44254|code|LDR.W           R10, [R4,#8]|212-248-8-160
44258|code|SUBS            R1, R4, R1|97-26
44260|code|LDR             R0, =aDefaultsRecord; "    DEFAULTS record at physical address"...|22-72
44262|code|STR.W           R12, [SP]|205-248-0-192
44266|code|STR.W           R12, [SP,#4]|205-248-4-192
44270|code|STR.W           R10, [SP,#8]|205-248-8-160
44274|code|STR.W           R10, [SP,#0xC]|205-248-12-160
44278|code|STR.W           LR, [SP,#0x10]|205-248-16-224
44282|code|BLX             printf|253-247-124-239
44286|code|LDR.W           R3, [R9]|217-248-0-48
44290|code|ADD.W           R0, R4, #0x2C ; ','|4-241-44-0
44294|code|LDR             R2, [R7]|58-104
44296|code|MOVS            R1, #0x80|128-33
44298|code|STMEA.W         SP, {R3,R11}|141-232-8-8
44302|code|SUBS            R2, R0, R2|130-26
44304|code|MOVS            R3, #0|0-35
44306|code|BL              sub_96AC|254-247-203-252
44310|code|B               loc_AC7A|176-231
44312|code|LDR             R0, =aHeaderLengthFo; "Header length for CMOS option table is "...|10-72
44314|code|ADD             SP, SP, #0x24 ; '$'|9-176
44316|code|POP.W           {R4-R11,LR}|189-232-240-79
44320|code|B.W             j_puts|253-247-170-191
44324|code|LDR             R0, =aTheCmosOptionT; "The CMOS option table is empty!!!"|8-72
44326|code|ADD             SP, SP, #0x24 ; '$'|9-176
44328|code|POP.W           {R4-R11,LR}|189-232-240-79
44332|code|B.W             j_puts|253-247-164-191
44336|data|DCD dword_17B20|32-123-1-0
44340|data|DCD aCmosOptionTabl; "CMOS option table at physical address 0"...|152-228-0-0
44344|data|DCD aUnknownRecordA; "    UNKNOWN record at physical address "...|124-231-0-0
44348|data|DCD aEnumRecordAtPh; "    ENUM record at physical address 0x%"...|200-229-0-0
44352|data|DCD aDefaultsRecord; "    DEFAULTS record at physical address"...|164-230-0-0
44356|data|DCD aHeaderLengthFo; "Header length for CMOS option table is "...|60-229-0-0
44360|data|DCD aTheCmosOptionT; "The CMOS option table is empty!!!"|164-229-0-0
44364|data|DCD stdout|28-122-1-0
44368|data|DCD unk_DC14|20-220-0-0
44372|code|MOV             R1, R0|1-70
44374|code|ADDS            R0, #2; s|2-48
44376|code|PUSH            {R4,LR}|16-181
44378|code|MOVS            R4, #0x30 ; '0'|48-36
44380|code|STRB            R4, [R1]|12-112
44382|code|MOVS            R4, #0x78 ; 'x'|120-36
44384|code|STRB            R4, [R1,#1]|76-112
44386|code|LDR             R1, =a016llx; "%016llx"|6-73
44388|code|BLX             sprintf|254-247-38-232
44392|code|CMP             R0, #0x10|16-40
44394|code|BNE             loc_AD6E|0-209
44396|code|POP             {R4,PC}|16-189
44398|code|LDR             R0, =aCharsPrinted16; "chars_printed == 16"|4-72
44400|code|MOVW            R2, #0x4F9; line|64-242-249-66
44404|code|LDR             R1, =aLbtableC; "lbtable.c"|3-73
44406|code|LDR             R3, =aUint64ToHexStr; "uint64_to_hex_string"|4-75
44408|code|BLX             __assert_fail|254-247-64-232
44412|data|DCD a016llx; "%016llx"|140-202-0-0
44416|data|DCD aCharsPrinted16; "chars_printed == 16"|252-231-0-0
44420|data|DCD aLbtableC; "lbtable.c"|16-232-0-0
44424|data|DCD aUint64ToHexStr; "uint64_to_hex_string"|52-220-0-0
44428|code|LDR             R3, [R0,#4]|67-104
44430|code|MOV             R2, #0xCCCCCCCD|76-246-205-66-204-246-204-66
44438|code|MOVW            R1, #0x7A08|71-246-8-33
44442|code|SUBS            R3, #8|8-59
44444|code|MOVT.W          R1, #1|192-242-1-1
44448|code|PUSH.W          {R4-R11,LR}|45-233-240-79
44452|code|MOV             R5, R0|5-70
44454|code|UMULL.W         R0, R3, R2, R3|162-251-3-3
44458|code|LDR             R2, [R1]|10-104
44460|code|SUB             SP, SP, #0x6C ; 'l'|155-176
44462|code|STR             R2, [SP,#0x64]|25-146
44464|code|LSRS            R3, R3, #4|27-9
44466|code|STR             R3, [SP,#0x24]|9-147
44468|code|BEQ             loc_AE7A|97-208
44470|code|ADD             R6, SP, #0x50 ; 'P'|20-174
44472|code|MOVS            R4, #0|0-36
44474|code|B               loc_ADC2|2-224
44476|code|MOVS            R0, #0xA|10-32
44478|code|BLX             putchar|253-247-202-239
44482|code|ADD.W           R2, R4, R4,LSL#2|4-235-132-2
44486|code|MOV.W           R10, #0|79-240-0-10
44490|code|STR.W           R10, [SP,#0x18]|205-248-24-160
44494|code|ADD             R0, SP, #0x28 ; '('|10-168
44496|code|LSLS            R2, R2, #2|146-0
44498|code|ADDS            R2, #8|8-50
44500|code|ADDS            R3, R5, R2|171-24
44502|code|LDR             R2, [R5,R2]|170-88
44504|code|LDR             R1, [R3,#0x10]|25-105
44506|code|LDR.W           R11, [R3,#0xC]|211-248-12-176
44510|code|SUBS            R1, #1|1-57
44512|code|CMP             R1, #0xF|15-41
44514|code|ITTTE LS|157-191
44516|code|MOVLSW          R8, #0xDC14|77-246-20-72
44520|code|MOVTLS.W        R8, #0|192-242-0-8
44524|code|ADDLS.W         R1, R8, R1,LSL#2|8-235-129-1
44528|code|LDRHI           R7, =aUnknown; "UNKNOWN"|37-79
44530|code|IT LS|152-191
44532|code|LDRLS           R7, [R1,#0x38]|143-107
44534|code|ADDS            R4, #1|1-52
44536|code|LDR             R1, [R3,#4]|89-104
44538|code|LDR             R3, [R3,#8]|155-104
44540|code|STR             R1, [SP,#0x1C]|7-145
44542|code|LDRD.W          R8, R9, [SP,#0x18]|221-233-6-137
44546|code|ADDS.W          R8, R8, R2|24-235-2-8
44550|code|ADC.W           R9, R9, #0|73-241-0-9
44554|code|STRD.W          R8, R9, [SP,#0x10]|205-233-4-137
44558|code|ADDS.W          R8, R10, R3|26-235-3-8
44562|code|LDRD.W          R2, R3, [SP,#0x10]|221-233-4-35
44566|code|ADC.W           R9, R11, #0|75-241-0-9
44570|code|BL              sub_AD54|255-247-155-255
44574|code|LDRD.W          R2, R3, [SP,#0x10]|221-233-4-35
44578|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
44582|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
44586|code|ADDS.W          R2, R2, R8|18-235-8-2
44590|code|ADC.W           R3, R3, R9|67-235-9-3
44594|code|ADDS            R2, R2, R0|18-24
44596|code|ADC.W           R3, R3, R1|67-235-1-3
44600|code|ADD             R0, SP, #0x3C ; '<'|15-168
44602|code|BL              sub_AD54|255-247-139-255
44606|code|MOV             R2, R8|66-70
44608|code|MOV             R0, R6|48-70
44610|code|MOV             R3, R9|75-70
44612|code|BL              sub_AD54|255-247-134-255
44616|code|LDR             R0, =aSMemoryFromPhy; "%s memory:\n    from physical addresses"...|16-72
44618|code|MOV             R1, R7|57-70
44620|code|ADD             R2, SP, #0x28 ; '('|10-170
44622|code|ADD             R3, SP, #0x3C ; '<'|15-171
44624|code|STRD.W          R8, R9, [SP,#8]|205-233-2-137
44628|code|STR             R6, [SP]|0-150
44630|code|BLX             printf|253-247-206-238
44634|code|LDR.W           R8, [SP,#0x24]|221-248-36-128
44638|code|CMP             R8, R4|160-69
44640|code|BGT             loc_ADBC|172-220
44642|code|MOV             R9, #0x17A08|71-246-8-41-192-242-1-9
44650|code|LDR             R2, [SP,#0x64]|25-154
44652|code|LDR.W           R3, [R9]|217-248-0-48
44656|code|CMP             R2, R3|154-66
44658|code|BNE             loc_AE82|6-209
44660|code|ADD             SP, SP, #0x6C ; 'l'|27-176
44662|code|POP.W           {R4-R11,PC}|189-232-240-143
44666|code|LDR             R0, =aNoMemoryRanges; "No memory ranges were found."|5-72
44668|code|BLX             puts|253-247-254-238
44672|code|B               loc_AE62|239-231
44674|code|BLX             __stack_chk_fail|253-247-214-238
44678|data|ALIGN 4|0-191
44680|data|DCD aUnknown; "UNKNOWN"|28-232-0-0
44684|data|DCD aSMemoryFromPhy; "%s memory:\n    from physical addresses"...|68-232-0-0
44688|data|DCD aNoMemoryRanges; "No memory ranges were found."|36-232-0-0
44692|code|PUSH.W          {R4-R11,LR}|45-233-240-79
44696|code|SUB             SP, SP, #0x1C|135-176
44698|code|LDR             R4, =dword_17B20|76-76
44700|code|LDR             R5, [R4,#(dword_17B24 - 0x17B20)]|101-104
44702|code|CBZ             R5, loc_AEA6|21-177
44704|code|ADD             SP, SP, #0x1C|7-176
44706|code|POP.W           {R4-R11,PC}|189-232-240-143
44710|code|LDR             R0, =aDevMem; "/dev/mem"|74-72
44712|code|MOV             R1, R5; oflag|41-70
44714|code|MOV             R2, R5|42-70
44716|code|BLX             open|253-247-6-239
44720|code|CMP             R0, #0|0-40
44722|code|MOV             R6, R0|6-70
44724|code|BLT             loc_AFAC|122-219
44726|code|MOVS            R2, #1; prot|1-34
44728|code|MOV             R0, R5; addr|40-70
44730|code|MOV.W           R1, #0x100000; len|79-244-128-17
44734|code|STR             R6, [SP,#0x40+fd]; fd|0-150
44736|code|MOV             R3, R2; flags|19-70
44738|code|STR             R5, [SP,#0x40+offset]; offset|1-149
44740|code|BLX             mmap|253-247-24-239
44744|code|ADDS            R3, R0, #1|67-28
44746|code|STR             R0, [R4]|32-96
44748|code|BEQ             loc_AF8C|94-208
44750|code|LDR.W           R11, =unk_DC8C|223-248-40-177
44754|code|MOV             R9, R5|169-70
44756|code|STR             R5, [SP,#0x40+var_30]|4-149
44758|code|STR             R5, [SP,#0x40+var_34]|3-149
44760|code|ADD.W           R3, R11, R9|11-235-9-3
44764|code|LDR.W           R5, [R11,R9]|91-248-9-80
44768|code|LDR             R7, [R3,#4]|95-104
44770|code|ADDS            R5, R0, R5|69-25
44772|code|ADDS            R7, R0, R7|199-25
44774|code|CMP             R5, R7|189-66
44776|code|BHI             loc_AF7E|73-216
44778|code|SUBS            R6, R7, R5|126-27
44780|code|LDR             R2, =aLbiotryAddCmos; "LBIOtry_add_cmos_table_enum"|57-74
44782|code|CMP             R6, #2|2-46
44784|code|MOV.W           R10, #0|79-240-0-10
44788|code|STR.W           R10, [SP,#0x40+var_2C]|205-248-20-160
44792|code|LDR.W           R8, [R2]; "LBIOtry_add_cmos_table_enum"|210-248-0-128
44796|code|BHI             loc_AF0C|6-216
44798|code|B               loc_AF22|16-224
44800|code|ADDS            R5, #0x10|16-53
44802|code|CMP             R5, R7|189-66
44804|code|BHI             loc_AF22|13-216
44806|code|SUBS            R6, #0x10|16-62
44808|code|CMP             R6, #2|2-46
44810|code|BLS             loc_AF22|10-217
44812|code|LDR             R3, [R5]|43-104
44814|code|CMP             R8, R3|152-69
44816|code|BNE             loc_AF00|246-209
44818|code|MOV             R0, R5|40-70
44820|code|MOVS            R1, #0x18|24-33
44822|code|BL              sub_95B8|254-247-79-251
44826|code|CBZ             R0, loc_AF42|144-177
44828|code|ADD.W           R10, R10, #1|10-241-1-10
44832|code|B               loc_AF00|238-231
44834|code|MOVS            R3, #0|0-35
44836|code|STR             R3, [R4,#(dword_17B24 - 0x17B20)]|99-96
44838|code|LDR             R3, [SP,#0x40+var_34]|3-155
44840|code|ADD.W           R9, R9, #8|9-241-8-9
44844|code|LDR             R2, [SP,#0x40+var_30]|4-154
44846|code|CMP.W           R9, #0x10|185-241-16-15
44850|code|ADD             R3, R10|83-68
44852|code|STR             R3, [SP,#0x40+var_34]|3-147
44854|code|LDR             R3, [SP,#0x40+var_2C]|5-155
44856|code|ADD             R2, R3|26-68
44858|code|STR             R2, [SP,#0x40+var_30]|4-146
44860|code|BEQ             loc_AF5E|15-208
44862|code|LDR             R0, [R4]|32-104
44864|code|B               loc_AED8|202-231
44866|code|LDR             R3, [R5,#0x10]|43-105
44868|code|ADD.W           R0, R5, #0x18|5-241-24-0
44872|code|LDR             R1, [R5,#0xC]|233-104
44874|code|STR             R3, [SP,#0x40+var_38]|2-147
44876|code|BL              sub_95B8|254-247-52-251
44880|code|LDR             R3, [SP,#0x40+var_38]|2-155
44882|code|CMP             R3, R0|131-66
44884|code|BEQ             loc_AF76|15-208
44886|code|LDR             R3, [SP,#0x40+var_2C]|5-155
44888|code|ADDS            R3, #1|1-51
44890|code|STR             R3, [SP,#0x40+var_2C]|5-147
44892|code|B               loc_AF00|208-231
44894|code|LDR             R2, [SP,#0x40+var_30]|4-154
44896|code|LDR             R3, =stderr|29-75
44898|code|LDR             R1, =aSCorebootTable; "%s: coreboot table not found.  coreboot"...|30-73
44900|code|STR             R2, [SP,#0x40+fd]|0-146
44902|code|LDR             R2, =aNvramtool; "nvramtool"|30-74
44904|code|LDR             R0, [R3]; stream|24-104
44906|code|LDR             R3, [SP,#0x40+var_34]|3-155
44908|code|BLX             fprintf|253-247-210-238
44912|code|MOVS            R0, #1; status|1-32
44914|code|BLX             exit|253-247-176-238
44918|code|STR             R5, [R4,#(dword_17B24 - 0x17B20)]|101-96
44920|code|CMP             R5, #0|0-45
44922|code|BEQ             loc_AF26|212-208
44924|code|B               loc_AEA0|144-231
44926|code|LDR             R0, =aEndStart; "end >= start"|25-72
44928|code|MOV.W           R2, #0x1F4; line|79-244-250-114
44932|code|LDR             R1, =aLbtableC; "lbtable.c"|24-73
44934|code|LDR             R3, =aLbtableScan; "lbtable_scan"|25-75
44936|code|BLX             __assert_fail|253-247-56-239
44940|code|LDR             R3, =stderr|18-75
44942|code|LDR             R4, [R3]|28-104
44944|code|BLX             __errno_location|253-247-198-238
44948|code|LDR             R0, [R0]; errnum|0-104
44950|code|BLX             strerror|253-247-132-238
44954|code|LDR             R1, =aSFailedToMmapD; "%s: Failed to mmap /dev/mem: %s\n"|21-73
44956|code|LDR             R2, =aNvramtool; "nvramtool"|16-74
44958|code|MOV             R3, R0|3-70
44960|code|MOV             R0, R4; stream|32-70
44962|code|BLX             fprintf|253-247-184-238
44966|code|MOVS            R0, #1; status|1-32
44968|code|BLX             exit|253-247-148-238
44972|code|LDR             R3, =stderr|10-75
44974|code|LDR             R4, [R3]|28-104
44976|code|BLX             __errno_location|253-247-182-238
44980|code|LDR             R0, [R0]; errnum|0-104
44982|code|BLX             strerror|253-247-116-238
44986|code|LDR             R1, =aSCanNotOpenDev; "%s: Can not open /dev/mem for reading: "...|14-73
44988|code|LDR             R2, =aNvramtool; "nvramtool"|8-74
44990|code|MOV             R3, R0|3-70
44992|code|MOV             R0, R4; stream|32-70
44994|code|BLX             fprintf|253-247-168-238
44998|code|MOVS            R0, #1; status|1-32
45000|code|BLX             exit|253-247-132-238
45004|data|DCD dword_17B20|32-123-1-0
45008|data|DCD aDevMem; "/dev/mem"|156-232-0-0
45012|data|DCD aLbiotryAddCmos; "LBIOtry_add_cmos_table_enum"|172-220-0-0
45016|data|DCD stderr|16-122-1-0
45020|data|DCD aSCorebootTable; "%s: coreboot table not found.  coreboot"...|8-233-0-0
45024|data|DCD aNvramtool; "nvramtool"|124-197-0-0
45028|data|DCD aEndStart; "end >= start"|248-232-0-0
45032|data|DCD aLbtableC; "lbtable.c"|16-232-0-0
45036|data|DCD aLbtableScan; "lbtable_scan"|156-220-0-0
45040|data|DCD aSFailedToMmapD; "%s: Failed to mmap /dev/mem: %s\n"|212-232-0-0
45044|data|DCD aSCanNotOpenDev; "%s: Can not open /dev/mem for reading: "...|168-232-0-0
45048|data|DCD unk_DC8C|140-220-0-0
45052|code|PUSH.W          {R4-R9,LR}|45-233-240-67
45056|code|SUB             SP, SP, #0x8C|163-176
45058|code|LDR             R7, =__stack_chk_guard|148-79
45060|code|LDR             R5, =dword_17B20|148-77
45062|code|LDR             R3, [R7]|59-104
45064|code|STR             R3, [SP,#0xA8+var_24]|33-147
45066|code|BL              sub_AE94|255-247-67-255
45070|code|LDR             R3, [R5,#(dword_17B24 - 0x17B20)]|107-104
45072|code|LDR             R4, [R3,#0xC]|220-104
45074|code|LDR             R2, [R3,#4]|90-104
45076|code|CBZ             R4, loc_B034|116-177
45078|code|LDR             R1, [R3,R2]|153-88
45080|code|ADDS            R2, R3, R2|154-24
45082|code|CMP             R1, #0xC8|200-41
45084|code|MOV             R1, R2|17-70
45086|code|BEQ             loc_B04A|20-208
45088|code|MOVS            R3, #0|0-35
45090|code|B               loc_B02C|3-224
45092|code|LDR             R0, [R2,R3]|208-88
45094|code|ADDS            R1, R2, R3|209-24
45096|code|CMP             R0, #0xC8|200-40
45098|code|BEQ             loc_B04A|14-208
45100|code|LDR             R1, [R1,#4]|73-104
45102|code|ADDS            R3, R3, R1|91-24
45104|code|CMP             R3, R4|163-66
45106|code|BCC             loc_B024|247-211
45108|code|MOVS            R3, #0|0-35
45110|code|STR             R3, [R5,#(dword_17B28 - 0x17B20)]|171-96
45112|code|LDR             R3, =stderr|136-75
45114|code|LDR             R1, =aSCmosOptionTab; "%s: CMOS option table not found in core"...|137-73
45116|code|LDR             R2, =aNvramtool; "nvramtool"|137-74
45118|code|LDR             R0, [R3]; stream|24-104
45120|code|BLX             fprintf|253-247-104-238
45124|code|MOVS            R0, #1; status|1-32
45126|code|BLX             exit|253-247-70-238
45130|code|LDR             R3, [R1,#8]|139-104
45132|code|LDR             R0, [R1,#4]|72-104
45134|code|STR             R1, [R5,#(dword_17B28 - 0x17B20)]|169-96
45136|code|ADDS            R2, R1, R3|202-24
45138|code|SUBS            R0, R0, R3|192-26
45140|code|BEQ             loc_B092|29-208
45142|code|LDR             R3, [R1,R3]|203-88
45144|code|MOV             R4, R2|20-70
45146|code|CMP             R3, #0xCA|202-43
45148|code|BEQ             loc_B114|90-208
45150|code|MOVS            R3, #0|0-35
45152|code|B               loc_B06A|3-224
45154|code|LDR             R1, [R2,R3]|209-88
45156|code|ADDS            R4, R2, R3|212-24
45158|code|CMP             R1, #0xCA|202-41
45160|code|BEQ             loc_B114|84-208
45162|code|LDR             R1, [R4,#4]|97-104
45164|code|ADDS            R3, R3, R1|91-24
45166|code|CMP             R0, R3|152-66
45168|code|BHI             loc_B062|247-216
45170|code|LDR             R3, [R2]|19-104
45172|code|MOV             R4, R2|20-70
45174|code|CMP             R3, #0xC9|201-43
45176|code|BEQ.W           loc_B192|0-240-139-128
45180|code|MOVS            R3, #0|0-35
45182|code|B               loc_B08A|4-224
45184|code|LDR             R1, [R2,R3]|209-88
45186|code|ADDS            R4, R2, R3|212-24
45188|code|CMP             R1, #0xC9|201-41
45190|code|BEQ.W           loc_B192|0-240-132-128
45194|code|LDR             R1, [R4,#4]|97-104
45196|code|ADDS            R3, R3, R1|91-24
45198|code|CMP             R3, R0|131-66
45200|code|BCC             loc_B080|246-211
45202|code|LDR             R3, [R5,#(dword_17B24 - 0x17B20)]|107-104
45204|code|LDR             R1, [R3,#0xC]|217-104
45206|code|LDR             R0, [R3,#4]|88-104
45208|code|CBZ             R1, loc_B0BC|129-177
45210|code|LDR             R2, [R3,R0]|26-88
45212|code|ADDS            R0, R3, R0|24-24
45214|code|CMP             R2, #0xCC|204-42
45216|code|BEQ.W           loc_B2E6|0-240-33-129
45220|code|MOV             R2, R0|2-70
45222|code|MOVS            R3, #0|0-35
45224|code|B               loc_B0B4|4-224
45226|code|LDR             R4, [R0,R3]|196-88
45228|code|ADDS            R2, R0, R3|194-24
45230|code|CMP             R4, #0xCC|204-44
45232|code|BEQ.W           loc_B2E4|0-240-24-129
45236|code|LDR             R2, [R2,#4]|82-104
45238|code|ADDS            R3, R3, R2|155-24
45240|code|CMP             R3, R1|139-66
45242|code|BCC             loc_B0AA|246-211
45244|code|LDR             R0, =aCheckSum; "check_sum"|106-72
45246|code|BL              sub_9D48|254-247-67-254
45250|code|CBZ             R0, loc_B104|248-177
45252|code|LDR             R3, [R0]|3-104
45254|code|LSLS            R2, R3, #0x1D|90-7
45256|code|BNE.W           loc_B39E|64-240-105-129
45260|code|LSRS            R3, R3, #3|219-8
45262|code|SUB.W           R2, R3, #0xE|163-241-14-2
45266|code|CMP             R2, #0xF1|241-42
45268|code|BHI.W           loc_B38C|0-242-90-129
45272|code|CMP             R3, #0xFF|255-43
45274|code|BEQ.W           loc_B38C|0-240-87-129
45278|code|LDR             R2, =dword_17A04|99-74
45280|code|LDR             R1, [R2]|17-104
45282|code|CMP             R3, R1|139-66
45284|code|BCC             loc_B0F0|4-211
45286|code|LDR             R2, =dword_17A00|98-74
45288|code|LDR             R2, [R2]|18-104
45290|code|CMP             R3, R2|147-66
45292|code|BLS.W           loc_B3AC|64-242-94-129
45296|code|ADDS            R2, R3, #1|90-28
45298|code|CMP             R2, R1|138-66
45300|code|BCC             loc_B100|4-211
45302|code|LDR             R1, =dword_17A00|94-73
45304|code|LDR             R1, [R1]|9-104
45306|code|CMP             R2, R1|138-66
45308|code|BLS.W           loc_B3AC|64-242-86-129
45312|code|LDR             R2, =dword_179FC|92-74
45314|code|STR             R3, [R2]|19-96
45316|code|LDR             R2, [SP,#0xA8+var_24]|33-154
45318|code|LDR             R3, [R7]|59-104
45320|code|CMP             R2, R3|154-66
45322|code|BNE.W           loc_B3BE|64-240-88-129
45326|code|ADD             SP, SP, #0x8C|35-176
45328|code|POP.W           {R4-R9,PC}|189-232-240-131
45332|code|ADD.W           R9, SP, #0xA8+var_90|13-241-24-9
45336|code|ADD.W           R8, SP, #0xA8+dest|13-241-40-8
45340|code|MOVS            R6, #0|0-38
45342|code|LDR.W           LR, [R4,#8]|212-248-8-224
45346|code|ADD.W           R1, R4, #0x10; src|4-241-16-1
45350|code|LDR             R3, [R4,#0xC]|227-104
45352|code|MOVS            R2, #0x20 ; ' '; n|32-34
45354|code|MOV             R0, R8; dest|64-70
45356|code|STR             R6, [SP,#0xA8+var_84]|9-150
45358|code|STR.W           LR, [SP,#0xA8+var_90]|205-248-24-224
45362|code|STR             R3, [SP,#0xA8+var_88]|8-147
45364|code|BLX             strncpy|253-247-20-238
45368|code|MOV             R0, R9|72-70
45370|code|STRB.W          R6, [SP,#0xA8+var_60]|141-248-72-96
45374|code|BL              sub_9D80|254-247-31-254
45378|code|CBNZ            R0, loc_B16A|144-185
45380|code|LDR             R2, [R5,#(dword_17B28 - 0x17B20)]|170-104
45382|code|LDR             R3, [R4,#4]|99-104
45384|code|LDR             R1, [R2,#8]|145-104
45386|code|LDR             R0, [R2,#4]|80-104
45388|code|ADDS            R2, R2, R1|82-24
45390|code|SUBS            R4, R4, R2|164-26
45392|code|SUBS            R0, R0, R1|64-26
45394|code|ADDS            R3, R4, R3|227-24
45396|code|CMP             R0, R3|152-66
45398|code|BLS             loc_B228|103-217
45400|code|LDR             R1, [R2,R3]|209-88
45402|code|ADDS            R4, R2, R3|212-24
45404|code|CMP             R1, #0xCA|202-41
45406|code|BEQ             loc_B11E|222-208
45408|code|LDR             R1, [R4,#4]|97-104
45410|code|ADDS            R3, R3, R1|91-24
45412|code|CMP             R0, R3|152-66
45414|code|BHI             loc_B158|247-216
45416|code|B               loc_B072|131-231
45418|code|CMP.W           R0, #0x20002|176-241-2-31
45422|code|BEQ             loc_B17E|6-208
45424|code|LDR             R0, =(aELength0+0xC); assertion|65-72
45426|code|MOVW            R2, #0x2E6; line|64-242-230-34
45430|code|LDR             R1, =aLbtableC; "lbtable.c"|65-73
45432|code|LDR             R3, =(aLbiotryAddCmos+4); function|65-75
45434|code|BLX             __assert_fail|253-247-64-238
45438|code|LDR             R3, =stderr|55-75
45440|code|LDR             R1, =aSDuplicateEnum; "%s: Duplicate enum %s found in CMOS opt"...|64-73
45442|code|LDR             R2, =aNvramtool; "nvramtool"|56-74
45444|code|LDR             R0, [R3]; stream|24-104
45446|code|MOV             R3, R8|67-70
45448|code|BLX             fprintf|253-247-196-237
45452|code|MOVS            R0, #1; status|1-32
45454|code|BLX             exit|253-247-162-237
45458|code|MOVS            R6, #1|1-38
45460|code|MOV.W           R9, #2|79-240-2-9
45464|code|MOVT.W          R6, #2|192-242-2-6
45468|code|MOV.W           R8, #3|79-240-3-8
45472|code|ADD.W           R1, R4, #8|4-241-8-1
45476|code|LDM             R1, {R1-R3}|14-201
45478|code|SUBS            R3, #0x65 ; 'e'; switch 15 cases|101-59
45480|code|STR             R1, [SP,#0xA8+var_58]|20-145
45482|code|STR             R2, [SP,#0xA8+var_54]|21-146
45484|code|CMP             R3, #0xE|14-43
45486|code|BHI             def_B1B0; jumptable 0000B1B0 default case, cases 102,103,105-113|50-216
45488|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
45492|data|DCB 0x2E; jump table for switch statement|46
45493|data|DCB 0x31|49
45494|data|DCB 0x31|49
45495|data|DCB 0x2B|43
45496|data|DCB 0x31|49
45497|data|DCB 0x31|49
45498|data|DCB 0x31|49
45499|data|DCB 0x31|49
45500|data|DCB 0x31|49
45501|data|DCB 0x31|49
45502|data|DCB 0x31|49
45503|data|DCB 0x31|49
45504|data|DCB 0x31|49
45505|data|DCB 0x28|40
45506|data|DCB 8|8
45507|data|ALIGN 2|0
45508|code|STR.W           R9, [SP,#0xA8+var_50]; jumptable 0000B1B0 case 115|205-248-88-144
45512|code|LDR             R3, [R4,#0x14]|99-105
45514|code|MOVS            R2, #0x20 ; ' '; n|32-34
45516|code|ADD.W           R1, R4, #0x18; src|4-241-24-1
45520|code|ADD             R0, SP, #0xA8+var_48; dest|24-168
45522|code|STR             R3, [SP,#0xA8+var_4C]|23-147
45524|code|BLX             strncpy|253-247-196-237
45528|code|ADD             R0, SP, #0xA8+var_58|20-168
45530|code|ADD             R1, SP, #0xA8+var_94|5-169
45532|code|MOVS            R3, #0|0-35
45534|code|STRB.W          R3, [SP,#0xA8+var_28]|141-248-128-48
45538|code|BL              sub_9C3C|254-247-43-253
45542|code|CMP             R0, R6|176-66
45544|code|BEQ             loc_B294|84-208
45546|code|BGT             loc_B230|33-220
45548|code|CMP             R0, #0|0-40
45550|code|BEQ             loc_B294|81-208
45552|code|CMP.W           R0, #0x20000|176-245-0-63
45556|code|BEQ             loc_B2BE|99-208
45558|code|LDR             R0, =(aELength0+0xC); assertion|32-72
45560|code|MOVW            R2, #0x313; line|64-242-19-50
45564|code|LDR             R1, =aLbtableC; "lbtable.c"|31-73
45566|code|LDR             R3, =aTryAddCmosTabl; "try_add_cmos_table_entry"|34-75
45568|code|BLX             __assert_fail|253-247-252-237
45572|code|STR.W           R8, [SP,#0xA8+var_50]; jumptable 0000B1B0 case 114|205-248-88-128
45576|code|B               loc_B1C8|222-231
45578|code|MOVS            R3, #1; jumptable 0000B1B0 case 104|1-35
45580|code|STR             R3, [SP,#0xA8+var_50]|22-147
45582|code|B               loc_B1C8|219-231
45584|code|MOVS            R3, #0; jumptable 0000B1B0 case 101|0-35
45586|code|STR             R3, [SP,#0xA8+var_50]|22-147
45588|code|B               loc_B1C8|216-231
45590|code|LDR             R3, =stderr; jumptable 0000B1B0 default case, cases 102,103,105-113|17-75
45592|code|LDR             R1, =aSEntryInCmosOp; "%s: Entry in CMOS option table has unkn"...|28-73
45594|code|LDR             R2, =aNvramtool; "nvramtool"|18-74
45596|code|LDR             R0, [R3]; stream|24-104
45598|code|BLX             fprintf|253-247-122-237
45602|code|MOVS            R0, #1; status|1-32
45604|code|BLX             exit|253-247-86-237
45608|code|CMP             R0, #0|0-40
45610|code|BEQ.W           loc_B092|63-244-50-175
45614|code|B               loc_B072|32-231
45616|code|CMP.W           R0, #0x30000|176-245-64-63
45620|code|BEQ             loc_B2D4|78-208
45622|code|MOVS            R3, #0x30002|2-35-192-242-3-3
45628|code|CMP             R0, R3|152-66
45630|code|BNE             loc_B1F6|218-209
45632|code|LDR             R3, =stderr|6-75
45634|code|LDR             R1, =aSAreaTooWideFo; "%s: Area too wide for CMOS option table"...|19-73
45636|code|LDR             R2, =aNvramtool; "nvramtool"|7-74
45638|code|LDR             R0, [R3]; stream|24-104
45640|code|ADD             R3, SP, #0xA8+var_48|24-171
45642|code|BLX             fprintf|253-247-100-237
45646|code|MOVS            R0, #1; status|1-32
45648|code|BLX             exit|253-247-64-237
45652|data|DCD __stack_chk_guard|8-122-1-0
45656|data|DCD dword_17B20|32-123-1-0
45660|data|DCD stderr|16-122-1-0
45664|data|DCD aSCmosOptionTab; "%s: CMOS option table not found in core"...|112-237-0-0
45668|data|DCD aNvramtool; "nvramtool"|124-197-0-0
45672|data|DCD aCheckSum; "check_sum"|196-207-0-0
45676|data|DCD dword_17A04|4-122-1-0
45680|data|DCD dword_17A00|0-122-1-0
45684|data|DCD dword_179FC|252-121-1-0
45688|data|DCD aELength0+0xC; "0"|60-197-0-0
45692|data|DCD aLbtableC; "lbtable.c"|16-232-0-0
45696|data|DCD aLbiotryAddCmos+4; "try_add_cmos_table_enum"|176-220-0-0
45700|data|DCD aSDuplicateEnum; "%s: Duplicate enum %s found in CMOS opt"...|52-234-0-0
45704|data|DCD aTryAddCmosTabl; "try_add_cmos_table_entry"|200-220-0-0
45708|data|DCD aSEntryInCmosOp; "%s: Entry in CMOS option table has unkn"...|104-234-0-0
45712|data|DCD aSAreaTooWideFo; "%s: Area too wide for CMOS option table"...|224-234-0-0
45716|code|LDR             R2, [R5,#(dword_17B28 - 0x17B20)]|170-104
45718|code|LDR             R3, [R4,#4]|99-104
45720|code|LDR             R1, [R2,#8]|145-104
45722|code|LDR             R0, [R2,#4]|80-104
45724|code|ADDS            R2, R2, R1|82-24
45726|code|SUBS            R4, R4, R2|164-26
45728|code|SUBS            R0, R0, R1|64-26
45730|code|ADDS            R3, R4, R3|227-24
45732|code|CMP             R0, R3|152-66
45734|code|BLS.W           loc_B092|127-246-244-174
45738|code|LDR             R1, [R2,R3]|209-88
45740|code|ADDS            R4, R2, R3|212-24
45742|code|CMP             R1, #0xC9|201-41
45744|code|BEQ.W           loc_B1A0|63-244-118-175
45748|code|LDR             R1, [R4,#4]|97-104
45750|code|ADDS            R3, R3, R1|91-24
45752|code|CMP             R0, R3|152-66
45754|code|BHI             loc_B2AA|246-216
45756|code|B               loc_B092|233-230
45758|code|LDR             R3, =stderr|75-75
45760|code|LDR             R1, =aSCmosOptionTab_0; "%s: CMOS option table entries %s and %s"...|75-73
45762|code|LDR             R2, =aNvramtool; "nvramtool"|76-74
45764|code|LDR             R0, [R3]; stream|24-104
45766|code|LDR             R3, [SP,#0xA8+var_94]|5-155
45768|code|ADDS            R3, #0x10|16-51
45770|code|STR             R3, [SP,#0xA8+var_A8]|0-147
45772|code|ADD             R3, SP, #0xA8+var_48|24-171
45774|code|BLX             fprintf|253-247-34-237
45778|code|B               loc_B24E|188-231
45780|code|LDR             R3, =stderr|69-75
45782|code|LDR             R1, =aSBadCmosOption; "%s: Bad CMOS option layout in CMOS opti"...|72-73
45784|code|LDR             R2, =aNvramtool; "nvramtool"|70-74
45786|code|LDR             R0, [R3]; stream|24-104
45788|code|ADD             R3, SP, #0xA8+var_48|24-171
45790|code|BLX             fprintf|253-247-26-237
45794|code|B               loc_B24E|180-231
45796|code|MOV             R0, R2|16-70
45798|code|ADD.W           R1, R0, #8|0-241-8-1
45802|code|ADD             R0, SP, #0xA8+var_A0|2-168
45804|code|LDM             R1, {R1-R3}|14-201
45806|code|STR             R3, [SP,#0xA8+var_98]|4-147
45808|code|STR             R1, [SP,#0xA8+var_A0]|2-145
45810|code|STR             R2, [SP,#0xA8+var_9C]|3-146
45812|code|BL              sub_9F18|254-247-16-254
45816|code|MOVS            R3, #0x20005|5-35-192-242-2-3
45822|code|CMP             R0, R3|152-66
45824|code|BEQ             loc_B3C2|95-208
45826|code|BGT             loc_B31E|12-220
45828|code|MOVS            R3, #0x20003|3-35-192-242-2-3
45834|code|CMP             R0, R3|152-66
45836|code|BEQ             loc_B3DE|103-208
45838|code|BLE             loc_B338|19-221
45840|code|LDR             R3, =stderr|54-75
45842|code|LDR             R1, =aSCmosChecksumm; "%s: CMOS checksummed area end is not by"...|58-73
45844|code|LDR             R2, =aNvramtool; "nvramtool"|55-74
45846|code|LDR             R0, [R3]; stream|24-104
45848|code|BLX             fprintf|253-247-252-236
45852|code|B               loc_B24E|151-231
45854|code|MOVS            R3, #0x20007|7-35-192-242-2-3
45860|code|CMP             R0, R3|152-66
45862|code|BEQ             loc_B3D0|83-208
45864|code|BGE             loc_B34E|17-218
45866|code|LDR             R3, =stderr|48-75
45868|code|LDR             R1, =aSCmosChecksumm_0; "%s: CMOS checksummed area end must be g"...|52-73
45870|code|LDR             R2, =aNvramtool; "nvramtool"|49-74
45872|code|LDR             R0, [R3]; stream|24-104
45874|code|BLX             fprintf|253-247-240-236
45878|code|B               loc_B24E|138-231
45880|code|CBNZ            R0, loc_B362|152-185
45882|code|LDR             R2, [SP,#0xA8+var_A0]|2-154
45884|code|LDR             R3, =dword_17A04|49-75
45886|code|STR             R2, [R3]|26-96
45888|code|LDR             R2, [SP,#0xA8+var_9C]|3-154
45890|code|LDR             R3, =dword_17A00|49-75
45892|code|STR             R2, [R3]|26-96
45894|code|LDR             R2, [SP,#0xA8+var_98]|4-154
45896|code|LDR             R3, =dword_179FC|48-75
45898|code|STR             R2, [R3]|26-96
45900|code|B               loc_B104|218-230
45902|code|MOVS            R3, #0x20008|8-35-192-242-2-3
45908|code|CMP             R0, R3|152-66
45910|code|BEQ             loc_B37E|18-208
45912|code|MOVS            R3, #0x20009|9-35-192-242-2-3
45918|code|CMP             R0, R3|152-66
45920|code|BEQ             loc_B370|6-208
45922|code|LDR             R0, =(aELength0+0xC); assertion|43-72
45924|code|MOVW            R2, #0x2CF; line|64-242-207-34
45928|code|LDR             R1, =aLbtableC; "lbtable.c"|42-73
45930|code|LDR             R3, =aTryConvertChec; "try_convert_checksum_layout"|43-75
45932|code|BLX             __assert_fail|253-247-70-237
45936|code|LDR             R3, =stderr|30-75
45938|code|LDR             R1, =aSCmosChecksumL; "%s: CMOS checksum location out of range"...|42-73
45940|code|LDR             R2, =aNvramtool; "nvramtool"|31-74
45942|code|LDR             R0, [R3]; stream|24-104
45944|code|BLX             fprintf|253-247-204-236
45948|code|B               loc_B24E|103-231
45950|code|LDR             R3, =stderr|27-75
45952|code|LDR             R1, =aSCmosChecksumm_1; "%s: CMOS checksummed area out of range."...|39-73
45954|code|LDR             R2, =aNvramtool; "nvramtool"|28-74
45956|code|LDR             R0, [R3]; stream|24-104
45958|code|BLX             fprintf|253-247-198-236
45962|code|B               loc_B24E|96-231
45964|code|LDR             R3, =stderr|23-75
45966|code|LDR             R1, =aSErrorCmosChec; "%s: Error: CMOS checksum location out o"...|37-73
45968|code|LDR             R2, =aNvramtool; "nvramtool"|24-74
45970|code|LDR             R0, [R3]; stream|24-104
45972|code|BLX             fprintf|253-247-190-236
45976|code|MOVS            R0, #1; status|1-32
45978|code|BLX             exit|253-247-156-236
45982|code|LDR             R3, =stderr|19-75
45984|code|LDR             R1, =aSErrorCmosChec_0; "%s: Error: CMOS checksum is not byte-al"...|33-73
45986|code|LDR             R2, =aNvramtool; "nvramtool"|20-74
45988|code|LDR             R0, [R3]; stream|24-104
45990|code|BLX             fprintf|253-247-182-236
45994|code|B               loc_B24E|80-231
45996|code|LDR             R3, =stderr|15-75
45998|code|LDR             R1, =aSErrorCmosChec_1; "%s: Error: CMOS checksum overlaps check"...|31-73
46000|code|LDR             R2, =aNvramtool; "nvramtool"|16-74
46002|code|LDR             R0, [R3]; stream|24-104
46004|code|BLX             fprintf|253-247-174-236
46008|code|MOVS            R0, #1; status|1-32
46010|code|BLX             exit|253-247-140-236
46014|code|BLX             __stack_chk_fail|253-247-56-236
46018|code|LDR             R3, =stderr|10-75
46020|code|LDR             R1, =aSCmosChecksumL_0; "%s: CMOS checksum location is not byte-"...|26-73
46022|code|LDR             R2, =aNvramtool; "nvramtool"|11-74
46024|code|LDR             R0, [R3]; stream|24-104
46026|code|BLX             fprintf|253-247-164-236
46030|code|B               loc_B24E|62-231
46032|code|LDR             R3, =stderr|6-75
46034|code|LDR             R1, =aSCmosChecksumO; "%s: CMOS checksum overlaps checksummed "...|24-73
46036|code|LDR             R2, =aNvramtool; "nvramtool"|7-74
46038|code|LDR             R0, [R3]; stream|24-104
46040|code|BLX             fprintf|253-247-156-236
46044|code|B               loc_B24E|55-231
46046|code|LDR             R3, =stderr|3-75
46048|code|LDR             R1, =aSCmosChecksumm_2; "%s: CMOS checksummed area start is not "...|21-73
46050|code|LDR             R2, =aNvramtool; "nvramtool"|4-74
46052|code|LDR             R0, [R3]; stream|24-104
46054|code|BLX             fprintf|253-247-150-236
46058|code|B               loc_B24E|48-231
46060|data|DCD stderr|16-122-1-0
46064|data|DCD aSCmosOptionTab_0; "%s: CMOS option table entries %s and %s"...|20-235-0-0
46068|data|DCD aNvramtool; "nvramtool"|124-197-0-0
46072|data|DCD aSBadCmosOption; "%s: Bad CMOS option layout in CMOS opti"...|164-234-0-0
46076|data|DCD aSCmosChecksumm; "%s: CMOS checksummed area end is not by"...|144-235-0-0
46080|data|DCD aSCmosChecksumm_0; "%s: CMOS checksummed area end must be g"...|248-235-0-0
46084|data|DCD dword_17A04|4-122-1-0
46088|data|DCD dword_17A00|0-122-1-0
46092|data|DCD dword_179FC|252-121-1-0
46096|data|DCD aELength0+0xC; "0"|60-197-0-0
46100|data|DCD aLbtableC; "lbtable.c"|16-232-0-0
46104|data|DCD aTryConvertChec; "try_convert_checksum_layout"|228-220-0-0
46108|data|DCD aSCmosChecksumL; "%s: CMOS checksum location out of range"...|168-236-0-0
46112|data|DCD aSCmosChecksumm_1; "%s: CMOS checksummed area out of range."...|124-236-0-0
46116|data|DCD aSErrorCmosChec; "%s: Error: CMOS checksum location out o"...|4-237-0-0
46120|data|DCD aSErrorCmosChec_0; "%s: Error: CMOS checksum is not byte-al"...|212-236-0-0
46124|data|DCD aSErrorCmosChec_1; "%s: Error: CMOS checksum overlaps check"...|56-237-0-0
46128|data|DCD aSCmosChecksumL_0; "%s: CMOS checksum location is not byte-"...|196-235-0-0
46132|data|DCD aSCmosChecksumO; "%s: CMOS checksum overlaps checksummed "...|76-236-0-0
46136|data|DCD aSCmosChecksumm_2; "%s: CMOS checksummed area start is not "...|88-235-0-0
46140|code|PUSH.W          {R4-R10,LR}|45-233-240-71
46144|code|SUB             SP, SP, #0x38|142-176
46146|code|LDR             R6, =dword_17B20|94-78
46148|code|LDR             R0, =aCorebootTableA; "Coreboot table at physical address 0x%l"...|94-72
46150|code|LDM.W           R6, {R1,R4}|150-232-18-0
46154|code|ADD.W           R8, R4, #0xC|4-241-12-8
46158|code|SUBS            R1, R4, R1|97-26
46160|code|LDRB.W          R12, [R4,#1]|148-248-1-192
46164|code|LDM.W           R4, {R2,R5}|148-232-36-0
46168|code|LDRB            R3, [R4]|35-120
46170|code|LDR.W           LR, [R4,#8]|212-248-8-224
46174|code|ADDS            R7, R4, R5|103-25
46176|code|LDM.W           R8, {R8-R10}|152-232-0-7
46180|code|STR.W           R12, [SP,#0x58+var_58]|205-248-0-192
46184|code|LDRB.W          R12, [R4,#2]|148-248-2-192
46188|code|STR.W           R12, [SP,#0x58+var_54]|205-248-4-192
46192|code|LDRB            R4, [R4,#3]|228-120
46194|code|STR             R5, [SP,#0x58+var_4C]|3-149
46196|code|STR             R5, [SP,#0x58+var_48]|4-149
46198|code|STR             R4, [SP,#0x58+var_50]|2-148
46200|code|STR.W           LR, [SP,#0x58+var_44]|205-248-20-224
46204|code|STR.W           LR, [SP,#0x58+var_40]|205-248-24-224
46208|code|STR.W           R8, [SP,#0x58+var_3C]|205-248-28-128
46212|code|STR.W           R8, [SP,#0x58+var_38]|205-248-32-128
46216|code|STR.W           R9, [SP,#0x58+var_34]|205-248-36-144
46220|code|STR.W           R9, [SP,#0x58+var_30]|205-248-40-144
46224|code|STR.W           R10, [SP,#0x58+var_2C]|205-248-44-160
46228|code|STR.W           R10, [SP,#0x58+var_28]|205-248-48-160
46232|code|BLX             printf|253-247-172-235
46236|code|LDR             R3, [R6,#(dword_17B24 - 0x17B20)]|115-104
46238|code|LDR             R5, [R3,#0xC]|221-104
46240|code|LDR             R3, [R3,#0x14]|91-105
46242|code|RSBS.W          R5, R5, #1|213-241-1-5
46246|code|IT CC|56-191
46248|code|MOVCC           R5, #0|0-37
46250|code|CMP             R3, #0|0-43
46252|code|ITE NE|20-191
46254|code|MOVNE           R3, R5|43-70
46256|code|EOREQ.W         R3, R5, #1|133-240-1-3
46260|code|CMP             R3, #0|0-43
46262|code|BNE             loc_B5A4|117-209
46264|code|CMP             R5, #0|0-45
46266|code|BNE             loc_B5B0|121-209
46268|code|LDR.W           R8, =stdout|223-248-80-129
46272|code|LDR.W           R9, =unk_DC14|223-248-80-145
46276|code|LDR.W           R10, =aOptionChecksum; "OPTION_CHECKSUM"|223-248-80-161
46280|code|LDR.W           R12, [R7,R5]|87-248-5-192
46284|code|ADDS            R4, R7, R5|124-25
46286|code|CMP.W           R12, #7|188-241-7-15
46290|code|IT EQ|8-191
46292|code|LDREQ           R1, =aCompileTime; "COMPILE_TIME"|59-73
46294|code|BEQ             loc_B4F6|14-208
46296|code|BHI             loc_B540|50-216
46298|code|CMP.W           R12, #3|188-241-3-15
46302|code|IT EQ|8-191
46304|code|LDREQ           R1, =aMainboard; "MAINBOARD"|57-73
46306|code|BEQ             loc_B4F6|8-208
46308|code|BHI             loc_B560|60-216
46310|code|CMP.W           R12, #1|188-241-1-15
46314|code|IT EQ|8-191
46316|code|LDREQ           R1, =aMemory; "MEMORY"|55-73
46318|code|BEQ             loc_B4F6|2-208
46320|code|IT HI|136-191
46322|code|LDRHI           R1, =aHwrpb; "HWRPB"|55-73
46324|code|BLS             loc_B5A0|84-217
46326|code|LDR.W           LR, [R4,#4]|212-248-4-224
46330|code|MOV             R3, R12|99-70
46332|code|LDR             R2, [R6]|50-104
46334|code|LDR             R0, =aSRecordAtPhysi; "    %s record at physical address 0x%lx"...|53-72
46336|code|SUBS            R2, R4, R2|162-26
46338|code|STMEA.W         SP, {R12,LR}|141-232-0-80
46342|code|STR.W           LR, [SP,#0x58+var_50]|205-248-8-224
46346|code|BLX             printf|253-247-116-235
46350|code|LDR             R1, [R4,#4]|97-104
46352|code|ADD.W           R0, R4, #8; stream|4-241-8-0
46356|code|LDR.W           LR, [R8]|216-248-0-224
46360|code|MOVS            R3, #0|0-35
46362|code|LDR             R2, [R6]|50-104
46364|code|SUBS            R1, #8; int|8-57
46366|code|STR.W           R9, [SP,#0x58+var_54]|205-248-4-144
46370|code|SUBS            R2, R0, R2|130-26
46372|code|STR.W           LR, [SP,#0x58+var_58]|205-248-0-224
46376|code|BL              sub_96AC|254-247-192-248
46380|code|LDR             R3, [R6,#(dword_17B24 - 0x17B20)]|115-104
46382|code|LDR             R2, [R4,#4]|98-104
46384|code|LDR             R3, [R3,#0xC]|219-104
46386|code|ADDS            R5, R5, R2|173-24
46388|code|CMP             R5, R3|157-66
46390|code|BCS             loc_B59A|48-210
46392|code|MOVS            R0, #0xA; c|10-32
46394|code|BLX             putchar|253-247-12-236
46398|code|B               loc_B4C8|195-231
46400|code|CMP.W           R12, #0xB|188-241-11-15
46404|code|IT EQ|8-191
46406|code|LDREQ           R1, =aCompiler; "COMPILER"|36-73
46408|code|BEQ             loc_B4F6|213-208
46410|code|BHI             loc_B574|19-216
46412|code|CMP.W           R12, #9|188-241-9-15
46416|code|IT EQ|8-191
46418|code|LDREQ           R1, =aCompileHost; "COMPILE_HOST"|34-73
46420|code|BEQ             loc_B4F6|207-208
46422|code|IT HI|136-191
46424|code|LDRHI           R1, =aCompileDomain; "COMPILE_DOMAIN"|33-73
46426|code|BHI             loc_B4F6|204-216
46428|code|LDR             R1, =aCompileBy; "COMPILE_BY"|33-73
46430|code|B               loc_B4F6|202-231
46432|code|CMP.W           R12, #5|188-241-5-15
46436|code|IT EQ|8-191
46438|code|LDREQ           R1, =aExtraVersion; "EXTRA_VERSION"|32-73
46440|code|BEQ             loc_B4F6|197-208
46442|code|IT HI|136-191
46444|code|LDRHI           R1, =aBuild; "BUILD"|31-73
46446|code|BHI             loc_B4F6|194-216
46448|code|LDR             R1, =aVersion; "VERSION"|31-73
46450|code|B               loc_B4F6|192-231
46452|code|CMP.W           R12, #0xD|188-241-13-15
46456|code|IT EQ|8-191
46458|code|LDREQ           R1, =aAssembler; "ASSEMBLER"|30-73
46460|code|BEQ             loc_B4F6|187-208
46462|code|IT CC|56-191
46464|code|LDRCC           R1, =aLinker; "LINKER"|29-73
46466|code|BCC             loc_B4F6|184-211
46468|code|CMP.W           R12, #0xC8|188-241-200-15
46472|code|IT EQ|8-191
46474|code|LDREQ           R1, =aCmosOptionTabl_0; "CMOS_OPTION_TABLE"|28-73
46476|code|BEQ             loc_B4F6|179-208
46478|code|LDR             R1, =aUnknown; "UNKNOWN"|28-73
46480|code|CMP.W           R12, #0xCC|188-241-204-15
46484|code|IT EQ|8-191
46486|code|MOVEQ           R1, R10|81-70
46488|code|B               loc_B4F6|173-231
46490|code|ADD             SP, SP, #0x38 ; '8'|14-176
46492|code|POP.W           {R4-R10,PC}|189-232-240-135
46496|code|LDR             R1, =aUnused; "UNUSED"|24-73
46498|code|B               loc_B4F6|168-231
46500|code|LDR             R0, =aInconsistentVa; "Inconsistent values for table_bytes and"...|24-72
46502|code|ADD             SP, SP, #0x38 ; '8'|14-176
46504|code|POP.W           {R4-R10,LR}|189-232-240-71
46508|code|B.W             j_puts|253-247-100-187
46512|code|LDR             R0, =aTheCorebootTab; "The coreboot table is empty!!!"|22-72
46514|code|ADD             SP, SP, #0x38 ; '8'|14-176
46516|code|POP.W           {R4-R10,LR}|189-232-240-71
46520|code|B.W             j_puts|253-247-94-187
46524|data|DCD dword_17B20|32-123-1-0
46528|data|DCD aCorebootTableA; "Coreboot table at physical address 0x%l"...|204-238-0-0
46532|data|DCD aCompileTime; "COMPILE_TIME"|76-238-0-0
46536|data|DCD aMainboard; "MAINBOARD"|32-238-0-0
46540|data|DCD aMemory; "MEMORY"|16-238-0-0
46544|data|DCD aHwrpb; "HWRPB"|24-238-0-0
46548|data|DCD aSRecordAtPhysi; "    %s record at physical address 0x%lx"...|116-240-0-0
46552|data|DCD aCompiler; "COMPILER"|136-238-0-0
46556|data|DCD aCompileHost; "COMPILE_HOST"|104-238-0-0
46560|data|DCD aCompileDomain; "COMPILE_DOMAIN"|120-238-0-0
46564|data|DCD aCompileBy; "COMPILE_BY"|92-238-0-0
46568|data|DCD aExtraVersion; "EXTRA_VERSION"|52-238-0-0
46572|data|DCD aBuild; "BUILD"|68-238-0-0
46576|data|DCD aVersion; "VERSION"|44-238-0-0
46580|data|DCD aAssembler; "ASSEMBLER"|156-238-0-0
46584|data|DCD aLinker; "LINKER"|148-238-0-0
46588|data|DCD aCmosOptionTabl_0; "CMOS_OPTION_TABLE"|168-238-0-0
46592|data|DCD aUnknown; "UNKNOWN"|28-232-0-0
46596|data|DCD aUnused; "UNUSED"|8-238-0-0
46600|data|DCD aInconsistentVa; "Inconsistent values for table_bytes and"...|236-239-0-0
46604|data|DCD aTheCorebootTab; "The coreboot table is empty!!!"|84-240-0-0
46608|data|DCD stdout|28-122-1-0
46612|data|DCD unk_DC14|20-220-0-0
46616|data|DCD aOptionChecksum; "OPTION_CHECKSUM"|188-238-0-0
46620|code|PUSH            {R3-R5,LR}|56-181
46622|code|LDR             R0, =aSS_0; "%s:\n%s"|10-72
46624|code|LDR             R1, =aMemory_0; "memory"|10-73
46626|code|LDR             R2, =aThisShowsInfor; "    This shows information about system"...|11-74
46628|code|BLX             printf|253-247-230-234
46632|code|LDR             R4, =unk_DD34|10-76
46634|code|ADD.W           R5, R4, #0x104|4-245-130-117
46638|code|MOVS            R0, #0xA; c|10-32
46640|code|BLX             putchar|253-247-144-235
46644|code|LDR             R1, [R4,#0x18]; "mainboard"|161-105
46646|code|LDR             R2, [R4,#0x1C]; "    This shows information about your m"...|226-105
46648|code|ADDS            R4, #0x14|20-52
46650|code|LDR             R0, =aSS_0; "%s:\n%s"|3-72
46652|code|BLX             printf|253-247-218-234
46656|code|CMP             R4, R5|172-66
46658|code|BNE             loc_B62E|244-209
46660|code|POP             {R3-R5,PC}|56-189
46662|data|ALIGN 4|0-191
46664|data|DCD aSS_0; "%s:\n%s"|240-240-0-0
46668|data|DCD aMemory_0; "memory"|248-240-0-0
46672|data|DCD aThisShowsInfor; "    This shows information about system"...|0-221-0-0
46676|data|DCD unk_DD34|52-221-0-0
46680|code|PUSH.W          {R3-R9,LR}|45-233-248-67
46684|code|MOVS            R6, #0|0-38
46686|code|LDR.W           R9, =unk_DC14|223-248-176-144
46690|code|MOV             R5, R0|5-70
46692|code|MOV             R7, R6|55-70
46694|code|ADD.W           R8, R9, #0x120|9-245-144-120
46698|code|ADD.W           R3, R8, R6|8-235-6-3
46702|code|MOV             R0, R5; s1|40-70
46704|code|LDR             R4, [R3,#4]|92-104
46706|code|MOV             R1, R4; s2|33-70
46708|code|BLX             strcmp|253-247-182-234
46712|code|CBZ             R0, loc_B696|104-177
46714|code|ADDS            R7, #1|1-55
46716|code|ADDS            R6, #0x14|20-54
46718|code|CMP             R7, #0xE|14-47
46720|code|BNE             loc_B66A|243-209
46722|code|LDR             R3, =stderr|31-75
46724|code|LDR             R1, =aSInvalidCorebo; "%s: Invalid coreboot table item %s.\n"|31-73
46726|code|LDR             R2, =aNvramtool; "nvramtool"|32-74
46728|code|LDR             R0, [R3]; stream|24-104
46730|code|MOV             R3, R5|43-70
46732|code|BLX             fprintf|253-247-66-235
46736|code|MOVS            R0, #1; status|1-32
46738|code|BLX             exit|253-247-32-235
46742|code|LDR             R3, =dword_17B20|29-75
46744|code|MOV.W           LR, R7,LSL#2|79-234-135-14
46748|code|ADD.W           R1, LR, R7|14-235-7-1
46752|code|LDR             R2, =unk_DC14|27-74
46754|code|LDR             R3, [R3,#(dword_17B24 - 0x17B20)]|91-104
46756|code|ADD.W           R2, R2, R1,LSL#2|2-235-129-2
46760|code|LDR.W           R5, [R2,#0x120]|210-248-32-81
46764|code|LDR             R6, [R3,#0xC]|222-104
46766|code|LDR             R1, [R3,#4]|89-104
46768|code|CBZ             R6, loc_B6E2|190-177
46770|code|LDR             R2, [R3,R1]|90-88
46772|code|ADDS            R1, R3, R1|89-24
46774|code|CMP             R5, R2|149-66
46776|code|MOV             R2, R1|10-70
46778|code|IT NE|24-191
46780|code|MOVNE           R3, R0|3-70
46782|code|BEQ             loc_B6D0|7-208
46784|code|LDR             R2, [R2,#4]|82-104
46786|code|ADDS            R3, R3, R2|155-24
46788|code|CMP             R3, R6|179-66
46790|code|BCS             loc_B6E2|12-210
46792|code|LDR             R0, [R1,R3]|200-88
46794|code|ADDS            R2, R1, R3|202-24
46796|code|CMP             R5, R0|133-66
46798|code|BNE             loc_B6C0|247-209
46800|code|ADD             R7, LR|119-68
46802|code|MOV             R0, R2|16-70
46804|code|ADD.W           R9, R9, R7,LSL#2|9-235-135-9
46808|code|LDR.W           R3, [R9,#0x130]|217-248-48-49
46812|code|BLX             R3|152-71
46814|code|POP.W           {R3-R9,PC}|189-232-248-131
46818|code|ADD             R7, LR|119-68
46820|code|LDR             R3, =stderr|6-75
46822|code|LDR             R2, =aNvramtool; "nvramtool"|8-74
46824|code|ADD.W           R9, R9, R7,LSL#2|9-235-135-9
46828|code|LDR             R0, [R3]; stream|24-104
46830|code|MOV             R3, R4|35-70
46832|code|LDR.W           R1, [R9,#0x12C]; format|217-248-44-17
46836|code|BLX             fprintf|253-247-14-235
46840|code|MOVS            R0, #1; status|1-32
46842|code|BLX             exit|253-247-236-234
46846|data|ALIGN 0x10|0-191
46848|data|DCD stderr|16-122-1-0
46852|data|DCD aSInvalidCorebo; "%s: Invalid coreboot table item %s.\n"|0-241-0-0
46856|data|DCD aNvramtool; "nvramtool"|124-197-0-0
46860|data|DCD dword_17B20|32-123-1-0
46864|data|DCD unk_DC14|20-220-0-0
46868|code|PUSH            {R4-R6,LR}|112-181
46870|code|SUB             SP, SP, #0x110|196-176
46872|code|LDR             R4, =__stack_chk_guard|15-76
46874|code|MOVS            R0, #3|3-32
46876|code|LDR             R5, =stdout|15-77
46878|code|LDR             R6, =unk_F204|16-78
46880|code|LDR             R3, [R4]|35-104
46882|code|STR             R3, [SP,#0x120+var_14]|67-147
46884|code|BL              sub_8FF4|253-247-102-252
46888|code|ADD             R0, SP, #0x120+var_114|3-168
46890|code|BL              sub_8FB8|253-247-69-252
46894|code|MOVS            R0, #0|0-32
46896|code|BL              sub_8FF4|253-247-96-252
46900|code|LDR             R5, [R5]|45-104
46902|code|MOVS            R2, #0|0-34
46904|code|MOVS            R3, #0|0-35
46906|code|ADD             R0, SP, #0x120+var_114; stream|3-168
46908|code|MOV.W           R1, #0x100; int|79-244-128-113
46912|code|STMEA.W         SP, {R5,R6}|141-232-96-0
46916|code|BL              sub_96AC|253-247-178-255
46920|code|LDR             R2, [SP,#0x120+var_14]|67-154
46922|code|LDR             R3, [R4]|35-104
46924|code|CMP             R2, R3|154-66
46926|code|BNE             loc_B754|1-209
46928|code|ADD             SP, SP, #0x110|68-176
46930|code|POP             {R4-R6,PC}|112-189
46932|code|BLX             __stack_chk_fail|253-247-108-234
46936|data|DCD __stack_chk_guard|8-122-1-0
46940|data|DCD stdout|28-122-1-0
46944|data|DCD unk_F204|4-242-0-0
46948|code|PUSH            {R4-R6,LR}|112-181
46950|code|SUB             SP, SP, #0x110|196-176
46952|code|LDR             R5, =__stack_chk_guard|34-77
46954|code|LDR             R6, =dword_17B54|35-78
46956|code|LDR             R1, =unk_F288; modes|35-73
46958|code|LDR             R3, [R5]|43-104
46960|code|LDR             R0, [R6,#(dword_17B58 - 0x17B54)]; filename|112-104
46962|code|STR             R3, [SP,#0x120+var_14]|67-147
46964|code|BLX             fopen|253-247-68-234
46968|code|MOV             R4, R0|4-70
46970|code|CBZ             R0, loc_B7B4|216-177
46972|code|MOVS            R0, #3|3-32
46974|code|BL              sub_8FF4|253-247-57-252
46978|code|ADD             R0, SP, #0x120+ptr|3-168
46980|code|BL              sub_8FB8|253-247-24-252
46984|code|MOVS            R0, #0|0-32
46986|code|BL              sub_8FF4|253-247-51-252
46990|code|MOVS            R1, #1; size|1-33
46992|code|ADD             R0, SP, #0x120+ptr; ptr|3-168
46994|code|MOV.W           R2, #0x100; n|79-244-128-114
46998|code|MOV             R3, R4; s|35-70
47000|code|BLX             fwrite|253-247-86-234
47004|code|CMP.W           R0, #0x100|176-245-128-127
47008|code|BNE             loc_B7DC|28-209
47010|code|MOV             R0, R4; stream|32-70
47012|code|BLX             fclose|253-247-234-234
47016|code|LDR             R2, [SP,#0x120+var_14]|67-154
47018|code|LDR             R3, [R5]|43-104
47020|code|CMP             R2, R3|154-66
47022|code|BNE             loc_B7D8|19-209
47024|code|ADD             SP, SP, #0x110|68-176
47026|code|POP             {R4-R6,PC}|112-189
47028|code|LDR             R3, =stderr|18-75
47030|code|LDR             R4, [R6,#(dword_17B58 - 0x17B54)]|116-104
47032|code|LDR             R5, [R3]|29-104
47034|code|BLX             __errno_location|253-247-178-234
47038|code|LDR             R0, [R0]; errnum|0-104
47040|code|BLX             strerror|253-247-110-234
47044|code|LDR             R1, =aSCanNotOpenFil; "%s: Can not open file %s for writing: %"...|15-73
47046|code|STR             R0, [SP,#0x120+var_120]|0-144
47048|code|MOV             R0, R5; stream|40-70
47050|code|LDR             R2, =aNvramtool; "nvramtool"|15-74
47052|code|MOV             R3, R4|35-70
47054|code|BLX             fprintf|253-247-162-234
47058|code|MOVS            R0, #1; status|1-32
47060|code|BLX             exit|253-247-126-234
47064|code|BLX             __stack_chk_fail|253-247-42-234
47068|code|LDR             R3, =stderr|8-75
47070|code|LDR             R4, [R6,#(dword_17B58 - 0x17B54)]|116-104
47072|code|LDR             R5, [R3]|29-104
47074|code|BLX             __errno_location|253-247-158-234
47078|code|LDR             R0, [R0]; errnum|0-104
47080|code|BLX             strerror|253-247-90-234
47084|code|LDR             R1, =unk_F2B8|7-73
47086|code|STR             R0, [SP,#0x120+var_120]|0-144
47088|code|MOV             R0, R5|40-70
47090|code|B               loc_B7CA|234-231
47092|data|DCD __stack_chk_guard|8-122-1-0
47096|data|DCD dword_17B54|84-123-1-0
47100|data|DCD unk_F288|136-242-0-0
47104|data|DCD stderr|16-122-1-0
47108|data|DCD aSCanNotOpenFil; "%s: Can not open file %s for writing: %"...|140-242-0-0
47112|data|DCD aNvramtool; "nvramtool"|124-197-0-0
47116|data|DCD unk_F2B8|184-242-0-0
47120|code|PUSH            {R3,LR}|8-181
47122|code|BL              sub_9C2C|254-247-11-250
47126|code|MOV             R3, #0x17A1C|71-246-28-35-192-242-1-3
47134|code|LDR             R0, [R3]|24-104
47136|code|POP.W           {R3,LR}|189-232-8-64
47140|code|B.W             sub_A9E0|255-247-220-184
47144|code|MOVW            R0, #0xF2E4|79-242-228-32
47148|code|MOVW            R1, #0xC57C|76-242-124-81
47152|code|MOVT.W          R0, #0|192-242-0-0
47156|code|MOVT.W          R1, #0|192-242-0-1
47160|code|MOV             R2, #0xC588|76-242-136-82-192-242-0-2
47168|code|B.W             j_printf|253-247-214-185
47172|code|PUSH            {R3,LR}|8-181
47174|code|BL              sub_9C2C|254-247-241-249
47178|code|MOV             R3, #0x17A18|71-246-24-35-192-242-1-3
47186|code|LDR             R0, [R3]|24-104
47188|code|BL              sub_985C|254-247-2-248
47192|code|POP.W           {R3,LR}|189-232-8-64
47196|code|B.W             sub_9BA0|254-247-160-185
47200|code|MOV             R3, #0x17A1C|71-246-28-35-192-242-1-3
47208|code|LDR             R0, [R3]|24-104
47210|code|B.W             sub_9588|253-247-141-190
47214|data|ALIGN 0x10|0-191
47216|code|PUSH.W          {R4-R9,LR}|45-233-240-67
47220|code|SUB             SP, SP, #0x34|141-176
47222|code|LDR             R6, =__stack_chk_guard|31-78
47224|code|ADD             R7, SP, #8|2-175
47226|code|SUB             SP, SP, #0x28|138-176
47228|code|ADD             R5, SP, #0x5C+var_54|2-173
47230|code|MOV             R4, R0|4-70
47232|code|LDR.W           LR, [R6]|214-248-0-224
47236|code|MOVS            R0, #5; cflags|5-32
47238|code|ADDS            R3, R7, #4|59-29
47240|code|MOV             R8, R1|136-70
47242|code|MOV             R9, R2|145-70
47244|code|MOVS            R1, #1|1-33
47246|code|LDR             R2, =aSpaceSpaceSpac; "^[[:space:]]*([^[:space:]]+)[[:space:]]"...|26-74
47248|code|STR.W           LR, [R7,#0x2C+var_8]|199-248-36-224
47252|code|BL              sub_C2D8|0-240-32-253
47256|code|ADDS            R0, R7, #4; preg|56-29
47258|code|MOV             R1, R4; string|33-70
47260|code|MOVS            R2, #4; nmatch|4-34
47262|code|MOV             R3, R5; pmatch|43-70
47264|code|MOV.W           LR, #0|79-240-0-14
47268|code|STR.W           LR, [SP,#0x5C+eflags]; eflags|205-248-0-224
47272|code|BLX             regexec|253-247-200-233
47276|code|CBZ             R0, loc_B8B6|24-177
47278|code|LDR             R3, =stderr|19-75
47280|code|LDR             R0, [R3]|24-104
47282|code|BL              sub_9588|253-247-105-254
47286|code|LDR             R2, [R5,#0x14]|106-105
47288|code|MOVS            R3, #0|0-35
47290|code|LDR.W           R12, [R5,#0xC]|213-248-12-192
47294|code|MOVS            R0, #1|1-32
47296|code|LDR.W           LR, [R5,#8]|213-248-8-224
47300|code|ADDS            R1, R7, #4|57-29
47302|code|LDR             R5, [R5,#0x10]|45-105
47304|code|ADD             LR, R4|166-68
47306|code|STRB.W          R3, [R4,R12]|4-248-12-48
47310|code|STRB            R3, [R4,R2]|163-84
47312|code|ADDS            R4, R4, R5|100-25
47314|code|STR.W           LR, [R8]|200-248-0-224
47318|code|STR.W           R4, [R9]|201-248-0-64
47322|code|BL              sub_C370|0-240-73-253
47326|code|LDR             R2, [R7,#0x2C+var_8]|122-106
47328|code|LDR             R3, [R6]|51-104
47330|code|CMP             R2, R3|154-66
47332|code|BNE             loc_B8F0|4-209
47334|code|ADD.W           R7, R7, #0x2C ; ','|7-241-44-7
47338|code|MOV             SP, R7|189-70
47340|code|POP.W           {R4-R9,PC}|189-232-240-131
47344|code|BLX             __stack_chk_fail|253-247-158-233
47348|data|DCD __stack_chk_guard|8-122-1-0
47352|data|DCD aSpaceSpaceSpac; "^[[:space:]]*([^[:space:]]+)[[:space:]]"...|200-202-0-0
47356|data|DCD stderr|16-122-1-0
47360|code|PUSH            {R4-R7,LR}|240-181
47362|code|SUB             SP, SP, #0x1C|135-176
47364|code|BL              sub_9C2C|254-247-146-249
47368|code|LDR             R3, =dword_17B54|93-75
47370|code|ADD             R1, SP, #0x10|4-169
47372|code|ADD             R2, SP, #0x14|5-170
47374|code|LDR             R0, [R3,#(dword_17B58 - 0x17B54)]|88-104
47376|code|BL              sub_B870|255-247-174-255
47380|code|LDR             R5, [SP,#0x10]|4-157
47382|code|LDR             R7, [SP,#0x14]|5-159
47384|code|MOV             R0, R5|40-70
47386|code|BL              sub_9F00|254-247-241-250
47390|code|CMP             R0, #0|0-40
47392|code|BNE.W           loc_BA6C|64-240-164-128
47396|code|MOV             R0, R5|40-70
47398|code|BL              sub_9D48|254-247-15-250
47402|code|MOV             R6, R0|6-70
47404|code|CMP             R0, #0|0-40
47406|code|BEQ.W           loc_BA6C|0-240-157-128
47410|code|MOV             R1, R7|57-70
47412|code|ADD             R2, SP, #8|2-170
47414|code|BL              sub_934C|253-247-9-253
47418|code|CMP.W           R0, #0x40000|176-245-128-47
47422|code|MOV             R4, R0|4-70
47424|code|BEQ.W           loc_BA5C|0-240-140-128
47428|code|BLE             loc_B986|31-221
47430|code|MOVS            R3, #0x40003|3-35-192-242-4-3
47436|code|CMP             R0, R3|152-66
47438|code|BEQ             loc_BA3C|117-208
47440|code|BGT             loc_B9B2|47-220
47442|code|MOVS            R3, #0x40001|1-35-192-242-4-3
47448|code|CMP             R0, R3|152-66
47450|code|BEQ             loc_BA2E|104-208
47452|code|MOVS            R3, #0x40002|2-35-192-242-4-3
47458|code|CMP             R0, R3|152-66
47460|code|BEQ             loc_BA1E|91-208
47462|code|LDR             R4, =stderr|71-76
47464|code|MOV             R3, R5|43-70
47466|code|LDR             R1, =aSUnknownErrorE; "%s: Unknown error encountered while att"...|71-73
47468|code|LDR             R2, =aNvramtool; "nvramtool"|71-74
47470|code|LDR             R0, [R4]|32-104
47472|code|BLX             fprintf|253-247-208-233
47476|code|LDR             R3, [R4]|35-104
47478|code|MOVS            R1, #1|1-33
47480|code|LDR             R0, =aCmosWriteNotPe; "  CMOS write not performed.\n"|69-72
47482|code|MOVS            R2, #0x1C|28-34
47484|code|BLX             fwrite|253-247-100-233
47488|code|MOVS            R0, #1|1-32
47490|code|BLX             exit|253-247-168-233
47494|code|CMP.W           R0, #0x30000|176-245-64-63
47498|code|BEQ             loc_BA4C|95-208
47500|code|BLE             loc_B9D2|33-221
47502|code|MOVS            R3, #0x30001|1-35-192-242-3-3
47508|code|CMP             R0, R3|152-66
47510|code|BEQ             loc_B9F8|47-208
47512|code|MOVS            R3, #0x30002|2-35-192-242-3-3
47518|code|CMP             R0, R3|152-66
47520|code|BNE             loc_B966|225-209
47522|code|LDR             R4, =stderr|56-76
47524|code|MOV             R3, R5|43-70
47526|code|LDR             R1, =aSTheCmosAreaSp_0; "%s: The CMOS area specified by the layo"...|59-73
47528|code|LDR             R2, =aNvramtool; "nvramtool"|56-74
47530|code|LDR             R0, [R4]|32-104
47532|code|BLX             fprintf|253-247-178-233
47536|code|B               loc_B974|224-231
47538|code|CMP.W           R0, #0x40004|176-241-4-31
47542|code|BEQ             loc_BA08|39-208
47544|code|MOVS            R3, #0x40005|5-35-192-242-4-3
47550|code|CMP             R0, R3|152-66
47552|code|BNE             loc_B966|209-209
47554|code|LDR             R4, =stderr|48-76
47556|code|MOV             R3, R5|43-70
47558|code|LDR             R1, =aSCorebootParam; "%s: coreboot parameter %s has no matchi"...|52-73
47560|code|LDR             R2, =aNvramtool; "nvramtool"|48-74
47562|code|LDR             R0, [R4]|32-104
47564|code|BLX             fprintf|253-247-162-233
47568|code|B               loc_B974|208-231
47570|code|CMP             R0, #0|0-40
47572|code|BNE             loc_B966|199-209
47574|code|MOVS            R0, #3|3-32
47576|code|BL              sub_8FF4|253-247-12-251
47580|code|LDRD.W          R2, R3, [SP,#8]|221-233-2-35
47584|code|MOV             R0, R6|48-70
47586|code|BL              sub_9074|253-247-71-251
47590|code|BL              sub_94BC|253-247-105-253
47594|code|BL              sub_9498|253-247-85-253
47598|code|MOV             R0, R4|32-70
47600|code|BL              sub_8FF4|253-247-0-251
47604|code|ADD             SP, SP, #0x1C|7-176
47606|code|POP             {R4-R7,PC}|240-189
47608|code|LDR             R4, =stderr|34-76
47610|code|MOV             R3, R5|43-70
47612|code|LDR             R1, =aSTheCmosAreaSp_1; "%s: The CMOS area specified by the layo"...|39-73
47614|code|LDR             R2, =aNvramtool; "nvramtool"|35-74
47616|code|LDR             R0, [R4]|32-104
47618|code|BLX             fprintf|253-247-136-233
47622|code|B               loc_B974|181-231
47624|code|STR             R5, [SP]|0-149
47626|code|LDR             R4, =stderr|30-76
47628|code|LDR             R3, [R6,#4]|115-104
47630|code|LDR             R1, =aSCanNotWriteVa; "%s: Can not write value %s to CMOS para"...|36-73
47632|code|LDR             R0, [R4]|32-104
47634|code|LDR             R2, =aNvramtool; "nvramtool"|30-74
47636|code|STR             R3, [SP,#4]|1-147
47638|code|MOV             R3, R7|59-70
47640|code|BLX             fprintf|253-247-124-233
47644|code|B               loc_B974|170-231
47646|code|LDR             R4, =stderr|25-76
47648|code|MOV             R3, R7|59-70
47650|code|LDR             R1, =aSSIsNotAValidI; "%s: %s is not a valid integer."|32-73
47652|code|LDR             R2, =aNvramtool; "nvramtool"|25-74
47654|code|LDR             R0, [R4]|32-104
47656|code|BLX             fprintf|253-247-116-233
47660|code|B               loc_B974|162-231
47662|code|LDR             R4, =stderr|21-76
47664|code|LDR             R1, =aSThisProgramDo; "%s: This program does not support assig"...|29-73
47666|code|LDR             R2, =aNvramtool; "nvramtool"|22-74
47668|code|LDR             R0, [R4]|32-104
47670|code|BLX             fprintf|253-247-110-233
47674|code|B               loc_B974|155-231
47676|code|LDR             R4, =stderr|17-76
47678|code|MOV             R3, R5|43-70
47680|code|LDR             R1, =aSCanNotModifyR; "%s: Can not modify reserved coreboot pa"...|26-73
47682|code|LDR             R2, =aNvramtool; "nvramtool"|18-74
47684|code|LDR             R0, [R4]|32-104
47686|code|BLX             fprintf|253-247-102-233
47690|code|B               loc_B974|147-231
47692|code|LDR             R4, =stderr|13-76
47694|code|MOV             R3, R5|43-70
47696|code|LDR             R1, =aSTheCmosAreaSp; "%s: The CMOS area specified by the layo"...|23-73
47698|code|LDR             R2, =aNvramtool; "nvramtool"|14-74
47700|code|LDR             R0, [R4]|32-104
47702|code|BLX             fprintf|253-247-94-233
47706|code|B               loc_B974|139-231
47708|code|LDR             R4, =stderr|9-76
47710|code|MOV             R3, R5|43-70
47712|code|LDR             R1, =aSBadValueForPa; "%s: Bad value for parameter %s."|20-73
47714|code|LDR             R2, =aNvramtool; "nvramtool"|10-74
47716|code|LDR             R0, [R4]|32-104
47718|code|BLX             fprintf|253-247-86-233
47722|code|B               loc_B974|131-231
47724|code|LDR             R3, =stderr|5-75
47726|code|LDR             R1, =aSCmosParameter; "%s: CMOS parameter %s not found."|18-73
47728|code|LDR             R2, =aNvramtool; "nvramtool"|6-74
47730|code|LDR             R0, [R3]|24-104
47732|code|MOV             R3, R5|43-70
47734|code|BLX             fprintf|253-247-78-233
47738|code|MOVS            R0, #1|1-32
47740|code|BLX             exit|253-247-42-233
47744|data|DCD dword_17B54|84-123-1-0
47748|data|DCD stderr|16-122-1-0
47752|data|DCD aSUnknownErrorE; "%s: Unknown error encountered while att"...|204-206-0-0
47756|data|DCD aNvramtool; "nvramtool"|124-197-0-0
47760|data|DCD aCmosWriteNotPe; "  CMOS write not performed.\n"|60-244-0-0
47764|data|DCD aSTheCmosAreaSp_0; "%s: The CMOS area specified by the layo"...|116-206-0-0
47768|data|DCD aSCorebootParam; "%s: coreboot parameter %s has no matchi"...|120-205-0-0
47772|data|DCD aSTheCmosAreaSp_1; "%s: The CMOS area specified by the layo"...|8-206-0-0
47776|data|DCD aSCanNotWriteVa; "%s: Can not write value %s to CMOS para"...|240-243-0-0
47780|data|DCD aSSIsNotAValidI; "%s: %s is not a valid integer."|156-243-0-0
47784|data|DCD aSThisProgramDo; "%s: This program does not support assig"...|64-243-0-0
47788|data|DCD aSCanNotModifyR; "%s: Can not modify reserved coreboot pa"...|188-243-0-0
47792|data|DCD aSTheCmosAreaSp; "%s: The CMOS area specified by the layo"...|172-205-0-0
47796|data|DCD aSBadValueForPa; "%s: Bad value for parameter %s."|32-243-0-0
47800|data|DCD aSCmosParameter; "%s: CMOS parameter %s not found."|252-242-0-0
47804|code|PUSH.W          {R3-R9,LR}|45-233-248-67
47808|code|MOV             R5, R0|5-70
47810|code|MOV             R6, R1|14-70
47812|code|BL              sub_9320|253-247-44-252
47816|code|MOVS            R3, #0x30001|1-35-192-242-3-3
47822|code|CMP             R0, R3|152-66
47824|code|MOV             R4, R0|4-70
47826|code|BEQ             loc_BB72|78-208
47828|code|BLE             loc_BB00|20-221
47830|code|MOVS            R3, #0x30002|2-35-192-242-3-3
47836|code|CMP             R0, R3|152-66
47838|code|BEQ             loc_BB88|83-208
47840|code|MOVS            R3, #0x40003|3-35-192-242-4-3
47846|code|CMP             R0, R3|152-66
47848|code|BEQ             loc_BB64|60-208
47850|code|LDR             R0, =stderr|81-72
47852|code|ADD.W           R3, R5, #0x10|5-241-16-3
47856|code|LDR             R1, =aSUnknownErrorE_0; "%s: Unknown error encountered while att"...|80-73
47858|code|LDR             R2, =aNvramtool; "nvramtool"|81-74
47860|code|LDR             R0, [R0]; stream|0-104
47862|code|BLX             fprintf|253-247-14-233
47866|code|MOVS            R0, #1|1-32
47868|code|POP.W           {R3-R9,PC}|189-232-248-131
47872|code|CBNZ            R0, loc_BB48|16-187
47874|code|MOVS            R0, #3|3-32
47876|code|BL              sub_8FF4|253-247-118-250
47880|code|MOV             R0, R5|40-70
47882|code|BL              sub_918C|253-247-63-251
47886|code|MOV             R7, R0|7-70
47888|code|MOV             R0, R4|32-70
47890|code|MOV             R9, R1|137-70
47892|code|BL              sub_8FF4|253-247-110-250
47896|code|LDR             R3, [R5,#8]|171-104
47898|code|CMP             R3, #1|1-43
47900|code|BEQ             loc_BBE2|97-208
47902|code|BCS             loc_BB9E|62-210
47904|code|LDR             R0, [R5,#0xC]|232-104
47906|code|MOV             R2, R7|58-70
47908|code|MOV             R3, R9|75-70
47910|code|BL              sub_9E60|254-247-155-249
47914|code|MOV             R8, R0|128-70
47916|code|CMP             R0, #0|0-40
47918|code|BEQ             loc_BBCA|76-208
47920|code|CMP             R6, #0|0-46
47922|code|BEQ             loc_BC10|109-208
47924|code|ADD.W           R2, R0, #0x10|0-241-16-2
47928|code|ADD.W           R1, R5, #0x10|5-241-16-1
47932|code|LDR             R0, =aSS_1; "%s = %s\n"|63-72
47934|code|BLX             printf|253-247-90-232
47938|code|MOV             R0, R4|32-70
47940|code|POP.W           {R3-R9,PC}|189-232-248-131
47944|code|CMP.W           R0, #0x30000|176-245-64-63
47948|code|BNE             loc_BAEA|205-209
47950|code|LDR             R0, =stderr|56-72
47952|code|ADD.W           R3, R5, #0x10|5-241-16-3
47956|code|LDR             R1, =aSCanNotReadCor; "%s: Can not read coreboot parameter %s "...|58-73
47958|code|LDR             R2, =aNvramtool; "nvramtool"|56-74
47960|code|LDR             R0, [R0]; stream|0-104
47962|code|BLX             fprintf|253-247-220-232
47966|code|MOVS            R0, #1|1-32
47968|code|POP.W           {R3-R9,PC}|189-232-248-131
47972|code|LDR             R0, =(aELength0+0xC); assertion|55-72
47974|code|MOVW            R2, #0x28D; line|64-242-141-34
47978|code|LDR             R1, =aNvramtoolC; "nvramtool.c"|55-73
47980|code|LDR             R3, =aListCmosEntry; "list_cmos_entry"|55-75
47982|code|BLX             __assert_fail|253-247-70-233
47986|code|LDR             R0, =stderr|47-72
47988|code|ADD.W           R3, R5, #0x10|5-241-16-3
47992|code|LDR             R1, =aSCanNotReadCor_0; "%s: Can not read coreboot parameter %s "...|53-73
47994|code|LDR             R2, =aNvramtool; "nvramtool"|47-74
47996|code|LDR             R0, [R0]; stream|0-104
47998|code|BLX             fprintf|253-247-202-232
48002|code|MOVS            R0, #1|1-32
48004|code|POP.W           {R3-R9,PC}|189-232-248-131
48008|code|LDR             R0, =stderr|41-72
48010|code|ADD.W           R3, R5, #0x10|5-241-16-3
48014|code|LDR             R1, =aSCanNotReadCor_1; "%s: Can not read coreboot parameter %s "...|49-73
48016|code|LDR             R2, =aNvramtool; "nvramtool"|41-74
48018|code|LDR             R0, [R0]; stream|0-104
48020|code|BLX             fprintf|253-247-190-232
48024|code|MOVS            R0, #1|1-32
48026|code|POP.W           {R3-R9,PC}|189-232-248-131
48030|code|CMP             R3, #2|2-43
48032|code|BEQ             loc_BBB0|6-208
48034|code|LDR             R0, =(aELength0+0xC); assertion|40-72
48036|code|MOVW            R2, #0x2D2; line|64-242-210-34
48040|code|LDR             R1, =aNvramtoolC; "nvramtool.c"|39-73
48042|code|LDR             R3, =aListCmosEntry; "list_cmos_entry"|40-75
48044|code|BLX             __assert_fail|253-247-38-233
48048|code|CBZ             R6, loc_BBF8|22-179
48050|code|ADD.W           R1, R5, #0x10|5-241-16-1
48054|code|LDR             R0, =aSS_1; "%s = %s\n"|33-72
48056|code|MOV             R2, R7|58-70
48058|code|BLX             printf|253-247-28-232
48062|code|MOV             R0, R7; ptr|56-70
48064|code|BLX             free|253-247-42-232
48068|code|MOVS            R0, #0|0-32
48070|code|POP.W           {R3-R9,PC}|189-232-248-131
48074|code|CMP             R6, #0|0-46
48076|code|BEQ             loc_BC1E|39-208
48078|code|ADD.W           R1, R5, #0x10|5-241-16-1
48082|code|LDR             R0, =aBadValueS0xLlx; "# Bad value -> %s = 0x%llx\n"|33-72
48084|code|MOV             R2, R7|58-70
48086|code|MOV             R3, R9|75-70
48088|code|BLX             printf|253-247-12-232
48092|code|MOV             R0, R8|64-70
48094|code|POP.W           {R3-R9,PC}|189-232-248-131
48098|code|CBZ             R6, loc_BC00|110-177
48100|code|ADD.W           R1, R5, #0x10|5-241-16-1
48104|code|LDR             R0, =aS0xLlx; "%s = 0x%llx\n"|28-72
48106|code|MOV             R2, R7|58-70
48108|code|MOV             R3, R9|75-70
48110|code|BLX             printf|253-247-2-232
48114|code|MOV             R0, R4|32-70
48116|code|POP.W           {R3-R9,PC}|189-232-248-131
48120|code|MOV             R0, R7; s|56-70
48122|code|BLX             puts|253-247-64-232
48126|code|B               loc_BBBE|222-231
48128|code|LDR             R0, =(aBadValueS0xLlx+0x14); format|23-72
48130|code|MOV             R2, R7|58-70
48132|code|MOV             R3, R9|75-70
48134|code|BLX             printf|252-247-246-239
48138|code|MOV             R0, R6|48-70
48140|code|POP.W           {R3-R9,PC}|189-232-248-131
48144|code|ADD.W           R0, R0, #0x10; s|0-241-16-0
48148|code|BLX             puts|253-247-50-232
48152|code|MOV             R0, R6|48-70
48154|code|POP.W           {R3-R9,PC}|189-232-248-131
48158|code|LDR             R0, =aBadValue0xLlx; "Bad value -> 0x%llx\n"|17-72
48160|code|MOV             R2, R7|58-70
48162|code|MOV             R3, R9|75-70
48164|code|BLX             printf|252-247-230-239
48168|code|MOV             R0, R6|48-70
48170|code|POP.W           {R3-R9,PC}|189-232-248-131
48174|data|ALIGN 0x10|0-191
48176|data|DCD stderr|16-122-1-0
48180|data|DCD aSUnknownErrorE_0; "%s: Unknown error encountered while att"...|160-245-0-0
48184|data|DCD aNvramtool; "nvramtool"|124-197-0-0
48188|data|DCD aSS_1; "%s = %s\n"|36-246-0-0
48192|data|DCD aSCanNotReadCor; "%s: Can not read coreboot parameter %s "...|104-244-0-0
48196|data|DCD aELength0+0xC; "0"|60-197-0-0
48200|data|DCD aNvramtoolC; "nvramtool.c"|92-244-0-0
48204|data|DCD aListCmosEntry; "list_cmos_entry"|36-242-0-0
48208|data|DCD aSCanNotReadCor_0; "%s: Can not read coreboot parameter %s "...|200-244-0-0
48212|data|DCD aSCanNotReadCor_1; "%s: Can not read coreboot parameter %s "...|60-245-0-0
48216|data|DCD aBadValueS0xLlx; "# Bad value -> %s = 0x%llx\n"|240-245-0-0
48220|data|DCD aS0xLlx; "%s = 0x%llx\n"|48-246-0-0
48224|data|DCD aBadValueS0xLlx+0x14; "0x%llx\n"|4-246-0-0
48228|data|DCD aBadValue0xLlx; "Bad value -> 0x%llx\n"|12-246-0-0
48232|code|PUSH            {R3-R5,LR}|56-181
48234|code|BL              sub_9C2C|253-247-223-255
48238|code|BL              sub_9D70|254-247-127-248
48242|code|MOV             R4, R0|4-70
48244|code|CBZ             R0, loc_BCB8|0-179
48246|code|MOVS            R5, #0|0-37
48248|code|B               loc_BC84|4-224
48250|code|MOV             R0, R4|32-70
48252|code|BL              sub_9D7C|254-247-126-248
48256|code|MOV             R4, R0|4-70
48258|code|CBZ             R0, loc_BCB0|168-177
48260|code|LDR             R3, [R4,#8]|163-104
48262|code|CMP             R3, #3|3-43
48264|code|BEQ             loc_BC7A|247-208
48266|code|ADD.W           R0, R4, #0x10|4-241-16-0
48270|code|BL              sub_9F00|254-247-55-249
48274|code|CMP             R0, #0|0-40
48276|code|BNE             loc_BC7A|241-209
48278|code|MOV             R0, R4|32-70
48280|code|MOVS            R1, #1|1-33
48282|code|BL              sub_BABC|255-247-15-255
48286|code|CMP             R0, #0|0-40
48288|code|IT NE|24-191
48290|code|MOVNE           R5, #1|1-37
48292|code|MOV             R0, R4|32-70
48294|code|BL              sub_9D7C|254-247-105-248
48298|code|MOV             R4, R0|4-70
48300|code|CMP             R0, #0|0-40
48302|code|BNE             loc_BC84|233-209
48304|code|BL              sub_94F0|253-247-30-252
48308|code|CBNZ            R5, loc_BCC0|37-185
48310|code|POP             {R3-R5,PC}|56-189
48312|code|POP.W           {R3-R5,LR}|189-232-56-64
48316|code|B.W             sub_94F0|253-247-24-188
48320|code|MOVS            R0, #1|1-32
48322|code|BLX             exit|253-247-8-232
48326|data|ALIGN 4|0-191
48328|code|PUSH            {R3-R5,LR}|56-181
48330|code|BL              sub_9C2C|253-247-175-255
48334|code|LDR             R3, =dword_17B54|20-75
48336|code|LDR             R4, [R3,#(dword_17B58 - 0x17B54)]|92-104
48338|code|LDR             R3, =dword_17B30|20-75
48340|code|MOV             R0, R4|32-70
48342|code|LDR             R5, [R3]|29-104
48344|code|BL              sub_9F00|254-247-18-249
48348|code|CBNZ            R0, loc_BD02|136-185
48350|code|MOV             R0, R4|32-70
48352|code|BL              sub_9D48|254-247-50-248
48356|code|CBZ             R0, loc_BD02|104-177
48358|code|LDR             R3, [R0,#8]|131-104
48360|code|CMP             R3, #3|3-43
48362|code|BEQ             loc_BD16|20-208
48364|code|RSBS.W          R1, R5, #1|213-241-1-1
48368|code|IT CC|56-191
48370|code|MOVCC           R1, #0|0-33
48372|code|BL              sub_BABC|255-247-226-254
48376|code|MOV             R4, R0|4-70
48378|code|BL              sub_94F0|253-247-249-251
48382|code|CBNZ            R4, loc_BD10|60-185
48384|code|POP             {R3-R5,PC}|56-189
48386|code|LDR             R3, =stderr|9-75
48388|code|LDR             R1, =aSCmosParameter_0; "%s: CMOS parameter %s not found.\n"|9-73
48390|code|LDR             R0, [R3]|24-104
48392|code|LDR             R2, =aNvramtool; "nvramtool"|9-74
48394|code|MOV             R3, R4|35-70
48396|code|BLX             fprintf|253-247-2-232
48400|code|MOVS            R0, #1|1-32
48402|code|BLX             exit|252-247-224-239
48406|code|LDR             R3, =stderr|4-75
48408|code|LDR             R1, =aSParameterSIsR; "%s: Parameter %s is reserved.\n"|6-73
48410|code|LDR             R0, [R3]|24-104
48412|code|B               loc_BD08|244-231
48414|data|ALIGN 0x10|0-191
48416|data|DCD dword_17B54|84-123-1-0
48420|data|DCD dword_17B30|48-123-1-0
48424|data|DCD stderr|16-122-1-0
48428|data|DCD aSCmosParameter_0; "%s: CMOS parameter %s not found.\n"|64-246-0-0
48432|data|DCD aNvramtool; "nvramtool"|124-197-0-0
48436|data|DCD aSParameterSIsR; "%s: Parameter %s is reserved.\n"|100-246-0-0
48440|code|PUSH            {R4,LR}|16-181
48442|code|BL              sub_9C2C|253-247-119-255
48446|code|LDR             R3, =dword_17B54|37-75
48448|code|LDR             R4, [R3,#(dword_17B58 - 0x17B54)]|92-104
48450|code|MOV             R0, R4|32-70
48452|code|BL              sub_9F00|254-247-220-248
48456|code|CMP             R0, #0|0-40
48458|code|BNE             loc_BDBE|56-209
48460|code|MOV             R0, R4|32-70
48462|code|BL              sub_9D48|253-247-251-255
48466|code|CMP             R0, #0|0-40
48468|code|BEQ             loc_BDBE|51-208
48470|code|LDR             R3, [R0,#8]|131-104
48472|code|CMP             R3, #3; switch 4 cases|3-43
48474|code|BHI             def_BD5C; jumptable 0000BD5C default case|40-216
48476|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
48480|data|DCB 0x17; jump table for switch statement|23
48481|data|DCB 0x10|16
48482|data|DCB 8|8
48483|data|DCB 2|2
48484|code|LDR             R0, =(aSParameterSIsR+4); jumptable 0000BD5C case 3|28-72
48486|code|MOV             R1, R4|33-70
48488|code|POP.W           {R4,LR}|189-232-16-64
48492|code|B.W             j_printf|252-247-64-191
48496|code|LDR             R2, [R0,#4]; jumptable 0000BD5C case 2|66-104
48498|code|MOV             R1, R4|33-70
48500|code|LDR             R0, =aParameterSRequ; "Parameter %s requires a %u-byte string."...|25-72
48502|code|LSRS            R2, R2, #3|210-8
48504|code|POP.W           {R4,LR}|189-232-16-64
48508|code|B.W             j_printf|252-247-56-191
48512|code|LDR             R2, [R0,#4]; jumptable 0000BD5C case 1|66-104
48514|code|MOV             R1, R4|33-70
48516|code|LDR             R0, =aParameterSRequ_0; "Parameter %s requires a %u-bit unsigned"...|22-72
48518|code|POP.W           {R4,LR}|189-232-16-64
48522|code|B.W             j_printf|252-247-49-191
48526|code|LDR             R0, [R0,#0xC]; jumptable 0000BD5C case 0|192-104
48528|code|BL              sub_9EC0|254-247-150-248
48532|code|MOV             R4, R0|4-70
48534|code|CBZ             R0, locret_BDBC|136-177
48536|code|ADD.W           R0, R4, #0x10|4-241-16-0
48540|code|BLX             puts|252-247-110-239
48544|code|MOV             R0, R4|32-70
48546|code|BL              sub_9EE8|254-247-161-248
48550|code|MOV             R4, R0|4-70
48552|code|CMP             R0, #0|0-40
48554|code|BNE             loc_BD98|245-209
48556|code|POP             {R4,PC}|16-189
48558|code|LDR             R0, =(aELength0+0xC); jumptable 0000BD5C default case|13-72
48560|code|MOVW            R2, #0x1E9|64-242-233-18
48564|code|LDR             R1, =aNvramtoolC; "nvramtool.c"|12-73
48566|code|LDR             R3, =aListParamEnums; "list_param_enums"|13-75
48568|code|BLX             __assert_fail|253-247-32-232
48572|code|POP             {R4,PC}|16-189
48574|code|LDR             R3, =stderr|12-75
48576|code|LDR             R1, =aSCmosParameter_0; "%s: CMOS parameter %s not found.\n"|12-73
48578|code|LDR             R2, =aNvramtool; "nvramtool"|13-74
48580|code|LDR             R0, [R3]|24-104
48582|code|MOV             R3, R4|35-70
48584|code|BLX             fprintf|252-247-164-239
48588|code|MOVS            R0, #1|1-32
48590|code|BLX             exit|252-247-130-239
48594|data|ALIGN 4|0-191
48596|data|DCD dword_17B54|84-123-1-0
48600|data|DCD aSParameterSIsR+4; "Parameter %s is reserved.\n"|104-246-0-0
48604|data|DCD aParameterSRequ; "Parameter %s requires a %u-byte string."...|184-246-0-0
48608|data|DCD aParameterSRequ_0; "Parameter %s requires a %u-bit unsigned"...|132-246-0-0
48612|data|DCD aELength0+0xC; "0"|60-197-0-0
48616|data|DCD aNvramtoolC; "nvramtool.c"|92-244-0-0
48620|data|DCD aListParamEnums; "list_param_enums"|52-242-0-0
48624|data|DCD stderr|16-122-1-0
48628|data|DCD aSCmosParameter_0; "%s: CMOS parameter %s not found.\n"|64-246-0-0
48632|data|DCD aNvramtool; "nvramtool"|124-197-0-0
48636|code|PUSH            {R3,LR}|8-181
48638|code|BL              sub_AE94|255-247-73-248
48642|code|POP.W           {R3,LR}|189-232-8-64
48646|code|B.W             sub_B43C|255-247-25-187
48650|data|ALIGN 4|0-191
48652|code|PUSH            {R4,LR}|16-181
48654|code|LDR             R4, =dword_17B54|7-76
48656|code|LDR             R3, [R4,#(dword_17B58 - 0x17B54)]|99-104
48658|code|CBZ             R3, loc_BE22|51-177
48660|code|BL              sub_AE94|255-247-62-248
48664|code|LDR             R0, [R4,#(dword_17B58 - 0x17B54)]; s1|96-104
48666|code|POP.W           {R4,LR}|189-232-16-64
48670|code|B.W             sub_B658|255-247-27-188
48674|code|POP.W           {R4,LR}|189-232-16-64
48678|code|B.W             sub_B61C|255-247-249-187
48682|data|ALIGN 4|0-191
48684|data|DCD dword_17B54|84-123-1-0
48688|code|PUSH            {R4-R6,LR}|112-181
48690|code|SUB             SP, SP, #0x110|196-176
48692|code|LDR             R5, =__stack_chk_guard|28-77
48694|code|LDR             R6, =dword_17B54|29-78
48696|code|LDR             R1, =(aAssembler_0+8); modes|29-73
48698|code|LDR             R3, [R5]|43-104
48700|code|LDR             R0, [R6,#(dword_17B58 - 0x17B54)]; filename|112-104
48702|code|STR             R3, [SP,#0x120+var_14]|67-147
48704|code|BLX             fopen|252-247-222-238
48708|code|MOV             R4, R0|4-70
48710|code|CBZ             R0, loc_BE80|216-177
48712|code|MOVS            R1, #1; size|1-33
48714|code|MOV             R3, R0; stream|3-70
48716|code|MOV.W           R2, #0x100; n|79-244-128-114
48720|code|ADD             R0, SP, #0x120+ptr; ptr|3-168
48722|code|BLX             fread|252-247-12-239
48726|code|MOV             R6, R0|6-70
48728|code|MOV             R0, R4; stream|32-70
48730|code|LDR             R4, =stdout|22-76
48732|code|BLX             fclose|252-247-142-239
48736|code|MOV             R1, R6; int|49-70
48738|code|LDR             R6, =unk_F204|21-78
48740|code|MOVS            R2, #0|0-34
48742|code|MOVS            R3, #0|0-35
48744|code|LDR             R4, [R4]|36-104
48746|code|ADD             R0, SP, #0x120+ptr; stream|3-168
48748|code|STMEA.W         SP, {R4,R6}|141-232-80-0
48752|code|BL              sub_96AC|253-247-28-252
48756|code|LDR             R2, [SP,#0x120+var_14]|67-154
48758|code|LDR             R3, [R5]|43-104
48760|code|CMP             R2, R3|154-66
48762|code|BNE             loc_BEA4|19-209
48764|code|ADD             SP, SP, #0x110|68-176
48766|code|POP             {R4-R6,PC}|112-189
48768|code|LDR             R3, =stderr|14-75
48770|code|LDR             R4, [R6,#(dword_17B58 - 0x17B54)]|116-104
48772|code|LDR             R5, [R3]|29-104
48774|code|BLX             __errno_location|252-247-76-239
48778|code|LDR             R0, [R0]; errnum|0-104
48780|code|BLX             strerror|252-247-8-239
48784|code|LDR             R1, =aSCanNotOpenFil_0; "%s: Can not open file %s for reading: %"...|11-73
48786|code|LDR             R2, =aNvramtool; "nvramtool"|12-74
48788|code|MOV             R3, R4|35-70
48790|code|STR             R0, [SP,#0x120+var_120]|0-144
48792|code|MOV             R0, R5; stream|40-70
48794|code|BLX             fprintf|252-247-60-239
48798|code|MOVS            R0, #1; status|1-32
48800|code|BLX             exit|252-247-24-239
48804|code|BLX             __stack_chk_fail|252-247-196-238
48808|data|DCD __stack_chk_guard|8-122-1-0
48812|data|DCD dword_17B54|84-123-1-0
48816|data|DCD aAssembler_0+8; "r"|196-241-0-0
48820|data|DCD stdout|28-122-1-0
48824|data|DCD unk_F204|4-242-0-0
48828|data|DCD stderr|16-122-1-0
48832|data|DCD aSCanNotOpenFil_0; "%s: Can not open file %s for reading: %"...|228-246-0-0
48836|data|DCD aNvramtool; "nvramtool"|124-197-0-0
48840|code|PUSH            {R4-R6,LR}|112-181
48842|code|SUB             SP, SP, #0x110|196-176
48844|code|LDR             R5, =__stack_chk_guard|34-77
48846|code|LDR             R6, =dword_17B54|35-78
48848|code|LDR             R1, =(aAssembler_0+8); modes|35-73
48850|code|LDR             R3, [R5]|43-104
48852|code|LDR             R0, [R6,#(dword_17B58 - 0x17B54)]; filename|112-104
48854|code|STR             R3, [SP,#0x120+var_14]|67-147
48856|code|BLX             fopen|252-247-146-238
48860|code|MOV             R4, R0|4-70
48862|code|CBZ             R0, loc_BF1A|224-177
48864|code|MOV             R3, R0; stream|3-70
48866|code|MOVS            R1, #1; size|1-33
48868|code|MOV.W           R2, #0x100; n|79-244-128-114
48872|code|ADD             R0, SP, #0x120+ptr; ptr|3-168
48874|code|BLX             fread|252-247-192-238
48878|code|CMP.W           R0, #0x100|176-245-128-127
48882|code|MOV             R3, R0|3-70
48884|code|BNE             loc_BF42|37-209
48886|code|MOV             R0, R4; stream|32-70
48888|code|BLX             fclose|252-247-64-239
48892|code|MOVS            R0, #3|3-32
48894|code|BL              sub_8FF4|253-247-121-248
48898|code|ADD             R0, SP, #0x120+ptr|3-168
48900|code|BL              sub_8FDC|253-247-106-248
48904|code|MOVS            R0, #0|0-32
48906|code|BL              sub_8FF4|253-247-115-248
48910|code|LDR             R2, [SP,#0x120+var_14]|67-154
48912|code|LDR             R3, [R5]|43-104
48914|code|CMP             R2, R3|154-66
48916|code|BNE             loc_BF3E|19-209
48918|code|ADD             SP, SP, #0x110|68-176
48920|code|POP             {R4-R6,PC}|112-189
48922|code|LDR             R3, =stderr|18-75
48924|code|LDR             R4, [R6,#(dword_17B58 - 0x17B54)]|116-104
48926|code|LDR             R5, [R3]|29-104
48928|code|BLX             __errno_location|252-247-254-238
48932|code|LDR             R0, [R0]; errnum|0-104
48934|code|BLX             strerror|252-247-188-238
48938|code|LDR             R1, =aSCanNotOpenFil_0; "%s: Can not open file %s for reading: %"...|15-73
48940|code|LDR             R2, =aNvramtool; "nvramtool"|15-74
48942|code|MOV             R3, R4|35-70
48944|code|STR             R0, [SP,#0x120+var_120]|0-144
48946|code|MOV             R0, R5; stream|40-70
48948|code|BLX             fprintf|252-247-238-238
48952|code|MOVS            R0, #1; status|1-32
48954|code|BLX             exit|252-247-204-238
48958|code|BLX             __stack_chk_fail|252-247-120-238
48962|code|LDR             R2, [R6,#(dword_17B58 - 0x17B54)]|114-104
48964|code|LDR             R1, =aSErrorOnlyAble; "%s: Error: Only able to read %d bytes o"...|10-73
48966|code|STR             R2, [SP,#0x120+var_120]|0-146
48968|code|LDR             R2, =stderr|6-74
48970|code|LDR             R0, [R2]; stream|16-104
48972|code|LDR             R2, =aNvramtool; "nvramtool"|7-74
48974|code|BLX             fprintf|252-247-226-238
48978|code|MOVS            R0, #1; status|1-32
48980|code|BLX             exit|252-247-190-238
48984|data|DCD __stack_chk_guard|8-122-1-0
48988|data|DCD dword_17B54|84-123-1-0
48992|data|DCD aAssembler_0+8; "r"|196-241-0-0
48996|data|DCD stderr|16-122-1-0
49000|data|DCD aSCanNotOpenFil_0; "%s: Can not open file %s for reading: %"...|228-246-0-0
49004|data|DCD aNvramtool; "nvramtool"|124-197-0-0
49008|data|DCD aSErrorOnlyAble; "%s: Error: Only able to read %d bytes o"...|16-247-0-0
49012|code|PUSH            {R4-R7,LR}|240-181
49014|code|SUB             SP, SP, #0xC|131-176
49016|code|BL              sub_9C2C|253-247-88-254
49020|code|LDR             R3, =dword_17B54|41-75
49022|code|LDR             R5, [R3,#(dword_17B58 - 0x17B54)]|93-104
49024|code|CMP             R5, #0|0-45
49026|code|BEQ             loc_BFD0|37-208
49028|code|STR             R5, [SP,#4]|1-149
49030|code|BLX             __ctype_b_loc|252-247-160-238
49034|code|MOV             R3, R5|43-70
49036|code|LDR             R1, [R0]|1-104
49038|code|B               loc_BF92|0-224
49040|code|STR             R3, [SP,#4]|1-147
49042|code|LDRB.W          R4, [R3],#1|19-248-1-75
49046|code|LDRH.W          R2, [R1,R4,LSL#1]|49-248-20-32
49050|code|ANDS.W          R2, R2, #0x2000|18-244-0-82
49054|code|BNE             loc_BF90|247-209
49056|code|MOV             R0, R5|40-70
49058|code|ADD             R1, SP, #4|1-169
49060|code|BLX             strtoul|252-247-156-238
49064|code|LDR             R3, [SP,#4]|1-155
49066|code|LDRB            R7, [R3]|31-120
49068|code|MOV             R6, R0|6-70
49070|code|CBNZ            R7, loc_BFEC|239-185
49072|code|CMP             R4, #0x2D ; '-'|45-44
49074|code|BEQ             loc_C012|46-208
49076|code|UXTH            R3, R0|131-178
49078|code|CMP             R0, R3|152-66
49080|code|BNE             loc_C000|34-209
49082|code|MOVS            R0, #3|3-32
49084|code|BL              sub_8FF4|253-247-26-248
49088|code|MOV             R0, R6|48-70
49090|code|BL              sub_9498|253-247-105-250
49094|code|MOV             R0, R7|56-70
49096|code|BL              sub_8FF4|253-247-20-248
49100|code|ADD             SP, SP, #0xC|3-176
49102|code|POP             {R4-R7,PC}|240-189
49104|code|MOVS            R0, #3|3-32
49106|code|BL              sub_8FF4|253-247-15-248
49110|code|BL              sub_9474|253-247-77-250
49114|code|MOV             R4, R0|4-70
49116|code|MOV             R0, R5|40-70
49118|code|BL              sub_8FF4|253-247-9-248
49122|code|MOV             R1, R4|33-70
49124|code|LDR             R0, =a0xX; "0x%x\n"|16-72
49126|code|BLX             printf|252-247-6-238
49130|code|B               loc_BFCC|239-231
49132|code|LDR             R3, =stderr|15-75
49134|code|LDR             R1, =aSChecksumValue; "%s: Checksum value %s is not a valid in"...|16-73
49136|code|LDR             R2, =aNvramtool; "nvramtool"|16-74
49138|code|LDR             R0, [R3]|24-104
49140|code|MOV             R3, R5|43-70
49142|code|BLX             fprintf|252-247-142-238
49146|code|MOVS            R0, #1|1-32
49148|code|BLX             exit|252-247-106-238
49152|code|LDR             R3, =stderr|10-75
49154|code|LDR             R1, =aSChecksumValue_0; "%s: Checksum value must fit within 16 b"...|13-73
49156|code|LDR             R2, =aNvramtool; "nvramtool"|11-74
49158|code|LDR             R0, [R3]|24-104
49160|code|BLX             fprintf|252-247-132-238
49164|code|MOVS            R0, #1|1-32
49166|code|BLX             exit|252-247-98-238
49170|code|LDR             R3, =stderr|6-75
49172|code|LDR             R1, =aSChecksumMustB; "%s: Checksum must be an unsigned intege"...|9-73
49174|code|LDR             R2, =aNvramtool; "nvramtool"|7-74
49176|code|LDR             R0, [R3]|24-104
49178|code|BLX             fprintf|252-247-124-238
49182|code|MOVS            R0, #1|1-32
49184|code|BLX             exit|252-247-88-238
49188|data|DCD dword_17B54|84-123-1-0
49192|data|DCD a0xX; "0x%x\n"|108-247-0-0
49196|data|DCD stderr|16-122-1-0
49200|data|DCD aSChecksumValue; "%s: Checksum value %s is not a valid in"...|116-247-0-0
49204|data|DCD aNvramtool; "nvramtool"|124-197-0-0
49208|data|DCD aSChecksumValue_0; "%s: Checksum value must fit within 16 b"...|208-247-0-0
49212|data|DCD aSChecksumMustB; "%s: Checksum must be an unsigned intege"...|164-247-0-0
49216|code|PUSH            {R4,R5,LR}|48-181
49218|code|SUB             SP, SP, #0xC|131-176
49220|code|LDR             R4, =dword_17B54|18-76
49222|code|LDR             R1, =(aAssembler_0+8); modes|19-73
49224|code|LDR             R0, [R4,#(dword_17B58 - 0x17B54)]; filename|96-104
49226|code|BLX             fopen|252-247-218-237
49230|code|MOV             R5, R0|5-70
49232|code|CBZ             R0, loc_C06C|96-177
49234|code|BL              sub_9C2C|253-247-235-253
49238|code|MOV             R0, R5|40-70
49240|code|BL              sub_985C|253-247-0-252
49244|code|BL              sub_9BA0|253-247-160-253
49248|code|MOV             R0, R5|40-70
49250|code|ADD             SP, SP, #0xC|3-176
49252|code|POP.W           {R4,R5,LR}|189-232-48-64
49256|code|B.W             j_fclose|252-247-134-190
49260|code|LDR             R3, =stderr|10-75
49262|code|LDR             R4, [R4,#(dword_17B58 - 0x17B54)]|100-104
49264|code|LDR             R5, [R3]|29-104
49266|code|BLX             __errno_location|252-247-86-238
49270|code|LDR             R0, [R0]; errnum|0-104
49272|code|BLX             strerror|252-247-18-238
49276|code|LDR             R1, =aSCanNotOpenFil_0; "%s: Can not open file %s for reading: %"...|7-73
49278|code|LDR             R2, =aNvramtool; "nvramtool"|8-74
49280|code|MOV             R3, R4|35-70
49282|code|STR             R0, [SP,#0x18+var_18]|0-144
49284|code|MOV             R0, R5; stream|40-70
49286|code|BLX             fprintf|252-247-70-238
49290|code|MOVS            R0, #1; status|1-32
49292|code|BLX             exit|252-247-34-238
49296|data|DCD dword_17B54|84-123-1-0
49300|data|DCD aAssembler_0+8; "r"|196-241-0-0
49304|data|DCD stderr|16-122-1-0
49308|data|DCD aSCanNotOpenFil_0; "%s: Can not open file %s for reading: %"...|228-246-0-0
49312|data|DCD aNvramtool; "nvramtool"|124-197-0-0
49316|code|PUSH            {R3-R7,LR}|248-181
49318|code|MOV             R4, R0|4-70
49320|code|LDR             R3, [R0]|3-104
49322|code|MOV             R5, R1|13-70
49324|code|MOV             R7, R2|23-70
49326|code|LDR             R6, =dword_17B54|7-78
49328|code|CBZ             R3, loc_C0C0|51-177
49330|code|LDR             R3, [R6]|51-104
49332|code|CMP             R3, R1|139-66
49334|code|BEQ             loc_C0C0|3-208
49336|code|LDR             R3, =stderr|5-75
49338|code|LDR             R0, [R3]|24-104
49340|code|BL              sub_9588|253-247-100-250
49344|code|MOVS            R3, #1|1-35
49346|code|STR             R3, [R4]|35-96
49348|code|STM.W           R6, {R5,R7}|134-232-160-0
49352|code|POP             {R3-R7,PC}|248-189
49354|data|ALIGN 4|0-191
49356|data|DCD dword_17B54|84-123-1-0
49360|data|DCD stderr|16-122-1-0
49364|code|LDR             R3, =optarg|10-75
49366|code|PUSH            {R4,LR}|16-181
49368|code|LDR             R3, [R3]|27-104
49370|code|CBZ             R3, loc_C0E0|11-177
49372|code|MOV             R0, R3; argc|24-70
49374|code|POP             {R4,PC}|16-189
49376|code|LDR             R2, =optind|8-74
49378|code|LDR             R2, [R2]|18-104
49380|code|LDR.W           R4, [R1,R2,LSL#2]|81-248-34-64
49384|code|CMP             R4, #0|0-44
49386|code|BEQ             loc_C0DC|247-208
49388|code|LDRB            R2, [R4]|34-120
49390|code|CMP             R2, #0x2D ; '-'|45-42
49392|code|BEQ             loc_C0DC|244-208
49394|code|LDR             R2, =aAbBCDeHilNpRTv; "-ab:B:c::de:hil::np:r:tvw:xX:y:Y"|5-74
49396|code|BLX             getopt|252-247-6-238
49400|code|MOV             R3, R4|35-70
49402|code|MOV             R0, R3|24-70
49404|code|POP             {R4,PC}|16-189
49406|data|ALIGN 0x10|0-191
49408|data|DCD optarg|36-122-1-0
49412|data|DCD optind|12-122-1-0
49416|data|DCD aAbBCDeHilNpRTv; "-ab:B:c::de:hil::np:r:tvw:xX:y:Y"|0-248-0-0
49420|code|PUSH.W          {R4-R11,LR}|45-233-240-79
49424|code|MOVS            R3, #0|0-35
49426|code|LDR             R7, =dword_17B30|107-79
49428|code|SUB             SP, SP, #0xC|131-176
49430|code|LDR             R2, =opterr|107-74
49432|code|ADD             R6, SP, #0x30+var_28|2-174
49434|code|LDR.W           R8, =optarg|223-248-176-129
49438|code|MOV             R5, R0|5-70
49440|code|LDR.W           R9, =dword_17B2C|223-248-172-145
49444|code|MOV             R4, R1|12-70
49446|code|LDR.W           R10, =stderr|223-248-172-161
49450|code|MOV             R11, R3|155-70
49452|code|STR             R3, [R7]|59-96
49454|code|STR             R3, [R7,#(dword_17B34 - 0x17B30)]|123-96
49456|code|STR             R3, [R7,#(dword_17B38 - 0x17B30)]|187-96
49458|code|STR             R3, [R7,#(dword_17B3C - 0x17B30)]|251-96
49460|code|STR             R3, [R7,#(dword_17B40 - 0x17B30)]|59-97
49462|code|STR             R3, [R7,#(dword_17B44 - 0x17B30)]|123-97
49464|code|STR             R3, [R7,#(dword_17B48 - 0x17B30)]|187-97
49466|code|STR             R3, [R7,#(dword_17B4C - 0x17B30)]|251-97
49468|code|STR             R3, [R7,#(dword_17B50 - 0x17B30)]|59-98
49470|code|STR.W           R3, [R6,#-4]!|70-248-4-61
49474|code|STR             R3, [R2]|19-96
49476|code|MOV             R0, R5; argc|40-70
49478|code|MOV             R1, R4; argv|33-70
49480|code|LDR             R2, =aAbBCDeHilNpRTv; "-ab:B:c::de:hil::np:r:tvw:xX:y:Y"|95-74
49482|code|BLX             getopt|252-247-220-237
49486|code|UXTB            R0, R0|192-178
49488|code|SUBS            R0, #0x42 ; 'B'; switch 56 cases|66-56
49490|code|CMP             R0, #0x37|55-40
49492|code|BHI.W           def_C158; jumptable 0000C158 default case, cases 67-87,90-96,102,103,106,107,109,111,113,115,117|0-242-175-128
49496|code|TBB.W           [PC,R0]; switch jump|223-232-0-240
49500|data|DCB 0xA6; jump table for switch statement|166
49501|data|DCB 0xAD|173
49502|data|DCB 0xAD|173
49503|data|DCB 0xAD|173
49504|data|DCB 0xAD|173
49505|data|DCB 0xAD|173
49506|data|DCB 0xAD|173
49507|data|DCB 0xAD|173
49508|data|DCB 0xAD|173
49509|data|DCB 0xAD|173
49510|data|DCB 0xAD|173
49511|data|DCB 0xAD|173
49512|data|DCB 0xAD|173
49513|data|DCB 0xAD|173
49514|data|DCB 0xAD|173
49515|data|DCB 0xAD|173
49516|data|DCB 0xAD|173
49517|data|DCB 0xAD|173
49518|data|DCB 0xAD|173
49519|data|DCB 0xAD|173
49520|data|DCB 0xAD|173
49521|data|DCB 0xAD|173
49522|data|DCB 0x9F|159
49523|data|DCB 0x99|153
49524|data|DCB 0xAD|173
49525|data|DCB 0xAD|173
49526|data|DCB 0xAD|173
49527|data|DCB 0xAD|173
49528|data|DCB 0xAD|173
49529|data|DCB 0xAD|173
49530|data|DCB 0xAD|173
49531|data|DCB 0x93|147
49532|data|DCB 0x8C|140
49533|data|DCB 0x82|130
49534|data|DCB 0x7C|124
49535|data|DCB 0x75|117
49536|data|DCB 0xAD|173
49537|data|DCB 0xAD|173
49538|data|DCB 0x6F|111
49539|data|DCB 0x69|105
49540|data|DCB 0xAD|173
49541|data|DCB 0xAD|173
49542|data|DCB 0x5F|95
49543|data|DCB 0xAD|173
49544|data|DCB 0x54|84
49545|data|DCB 0xAD|173
49546|data|DCB 0x4D|77
49547|data|DCB 0xAD|173
49548|data|DCB 0x46|70
49549|data|DCB 0xAD|173
49550|data|DCB 0x3B|59
49551|data|DCB 0xAD|173
49552|data|DCB 0x35|53
49553|data|DCB 0x2E|46
49554|data|DCB 0x28|40
49555|data|DCB 0x1C|28
49556|code|LDR.W           R2, [R8]; jumptable 0000C158 case 121|216-248-0-32
49560|code|MOVS            R1, #1|1-33
49562|code|LDR.W           R3, [R9]|217-248-0-48
49566|code|STR             R1, [R7,#(dword_17B3C - 0x17B30)]|249-96
49568|code|ADDS            R3, R3, R1|91-24
49570|code|STR             R2, [R7,#(dword_17B44 - 0x17B30)]|122-97
49572|code|STR.W           R3, [R9]|201-248-0-48
49576|code|STR             R3, [R7,#(dword_17B40 - 0x17B30)]|59-97
49578|code|B               loc_C144|203-231
49580|code|MOV             R0, R6; jumptable 0000C158 case 120|48-70
49582|code|MOVS            R1, #0xE|14-33
49584|code|MOVS            R2, #0|0-34
49586|code|BL              sub_C0A4|255-247-119-255
49590|code|B               loc_C144|197-231
49592|code|LDR.W           R2, [R8]; jumptable 0000C158 case 119|216-248-0-32
49596|code|MOV             R0, R6|48-70
49598|code|MOVS            R1, #7|7-33
49600|code|BL              sub_C0A4|255-247-112-255
49604|code|B               loc_C144|190-231
49606|code|MOVS            R1, #0; jumptable 0000C158 case 118|0-33
49608|code|MOV             R0, R6|48-70
49610|code|MOV             R2, R1|10-70
49612|code|BL              sub_C0A4|255-247-106-255
49616|code|B               loc_C144|184-231
49618|code|LDR.W           R3, [R9]; jumptable 0000C158 case 116|217-248-0-48
49622|code|MOVS            R2, #1|1-34
49624|code|STR.W           R11, [R7,#(dword_17B50 - 0x17B30)]|199-248-32-176
49628|code|ADDS            R3, #1|1-51
49630|code|STR             R2, [R7,#(dword_17B48 - 0x17B30)]|186-97
49632|code|STR.W           R3, [R9]|201-248-0-48
49636|code|STR             R3, [R7,#(dword_17B4C - 0x17B30)]|251-97
49638|code|B               loc_C144|173-231
49640|code|LDR.W           R2, [R8]; jumptable 0000C158 case 114|216-248-0-32
49644|code|MOV             R0, R6|48-70
49646|code|MOVS            R1, #5|5-33
49648|code|BL              sub_C0A4|255-247-88-255
49652|code|B               loc_C144|166-231
49654|code|LDR.W           R2, [R8]; jumptable 0000C158 case 112|216-248-0-32
49658|code|MOV             R0, R6|48-70
49660|code|MOVS            R1, #9|9-33
49662|code|BL              sub_C0A4|255-247-81-255
49666|code|B               loc_C144|159-231
49668|code|LDR.W           R3, [R9]; jumptable 0000C158 case 110|217-248-0-48
49672|code|MOVS            R2, #1|1-34
49674|code|STR.W           R11, [R7,#(dword_17B38 - 0x17B30)]|199-248-8-176
49678|code|ADDS            R3, #1|1-51
49680|code|STR             R2, [R7]|58-96
49682|code|STR.W           R3, [R9]|201-248-0-48
49686|code|STR             R3, [R7,#(dword_17B34 - 0x17B30)]|123-96
49688|code|B               loc_C144|148-231
49690|code|MOV             R1, R4; jumptable 0000C158 case 108|33-70
49692|code|MOV             R0, R5|40-70
49694|code|BL              sub_C0D4|255-247-89-255
49698|code|MOVS            R1, #2|2-33
49700|code|MOV             R2, R0|2-70
49702|code|MOV             R0, R6|48-70
49704|code|BL              sub_C0A4|255-247-60-255
49708|code|B               loc_C144|138-231
49710|code|MOV             R0, R6; jumptable 0000C158 case 105|48-70
49712|code|MOVS            R1, #8|8-33
49714|code|MOVS            R2, #0|0-34
49716|code|BL              sub_C0A4|255-247-54-255
49720|code|B               loc_C144|132-231
49722|code|MOV             R0, R6; jumptable 0000C158 case 104|48-70
49724|code|MOVS            R1, #1|1-33
49726|code|MOVS            R2, #0|0-34
49728|code|BL              sub_C0A4|255-247-48-255
49732|code|B               loc_C144|126-231
49734|code|LDR.W           R2, [R8]; jumptable 0000C158 case 101|216-248-0-32
49738|code|MOV             R0, R6|48-70
49740|code|MOVS            R1, #4|4-33
49742|code|BL              sub_C0A4|255-247-41-255
49746|code|B               loc_C144|119-231
49748|code|MOV             R0, R6; jumptable 0000C158 case 100|48-70
49750|code|MOVS            R1, #3|3-33
49752|code|MOVS            R2, #0|0-34
49754|code|BL              sub_C0A4|255-247-35-255
49758|code|B               loc_C144|113-231
49760|code|MOV             R1, R4; jumptable 0000C158 case 99|33-70
49762|code|MOV             R0, R5|40-70
49764|code|BL              sub_C0D4|255-247-54-255
49768|code|MOVS            R1, #0xA|10-33
49770|code|MOV             R2, R0|2-70
49772|code|MOV             R0, R6|48-70
49774|code|BL              sub_C0A4|255-247-25-255
49778|code|B               loc_C144|103-231
49780|code|LDR.W           R2, [R8]; jumptable 0000C158 case 98|216-248-0-32
49784|code|MOV             R0, R6|48-70
49786|code|MOVS            R1, #0xC|12-33
49788|code|BL              sub_C0A4|255-247-18-255
49792|code|B               loc_C144|96-231
49794|code|MOV             R0, R6; jumptable 0000C158 case 97|48-70
49796|code|MOVS            R1, #6|6-33
49798|code|MOVS            R2, #0|0-34
49800|code|BL              sub_C0A4|255-247-12-255
49804|code|B               loc_C144|90-231
49806|code|MOV             R0, R6; jumptable 0000C158 case 89|48-70
49808|code|MOVS            R1, #0xB|11-33
49810|code|MOVS            R2, #0|0-34
49812|code|BL              sub_C0A4|255-247-6-255
49816|code|B               loc_C144|84-231
49818|code|LDR.W           R2, [R8]; jumptable 0000C158 case 88|216-248-0-32
49822|code|MOV             R0, R6|48-70
49824|code|MOVS            R1, #0xF|15-33
49826|code|BL              sub_C0A4|255-247-255-254
49830|code|B               loc_C144|77-231
49832|code|LDR.W           R2, [R8]; jumptable 0000C158 case 66|216-248-0-32
49836|code|MOV             R0, R6|48-70
49838|code|MOVS            R1, #0xD|13-33
49840|code|BL              sub_C0A4|255-247-248-254
49844|code|B               loc_C144|70-231
49846|code|LDR.W           R0, [R10]; jumptable 0000C158 default case, cases 67-87,90-96,102,103,106,107,109,111,113,115,117|218-248-0-0
49850|code|BL              sub_9588|253-247-101-249
49854|code|B               loc_C144|65-231
49856|data|DCD dword_17B30|48-123-1-0
49860|data|DCD opterr|32-122-1-0
49864|data|DCD aAbBCDeHilNpRTv; "-ab:B:c::de:hil::np:r:tvw:xX:y:Y"|0-248-0-0
49868|data|DCD optarg|36-122-1-0
49872|data|DCD dword_17B2C|44-123-1-0
49876|data|DCD stderr|16-122-1-0
49880|code|PUSH            {R1-R3}|14-180
49882|code|PUSH.W          {R4-R10,LR}|45-233-240-71
49886|code|SUB             SP, SP, #0xC|131-176
49888|code|ADD             R7, SP, #0|0-175
49890|code|ADD.W           R3, R7, #0x2C ; ','|7-241-44-3
49894|code|LDR.W           R9, =__stack_chk_guard|223-248-132-144
49898|code|SUB             SP, SP, #0x108|194-176
49900|code|MOV             R8, R0|128-70
49902|code|LDR.W           R6, [R3],#4|83-248-4-107
49906|code|LDR.W           R2, [R9]|217-248-0-32
49910|code|MOV             R10, SP|234-70
49912|code|CMP             R6, #0|0-46
49914|code|STR             R3, [R7,#0xC+var_C]|59-96
49916|code|STR             R2, [R7,#0xC+var_8]|122-96
49918|code|BLE             loc_C322|16-221
49920|code|MOVS            R4, #0|0-36
49922|code|LDR             R1, [R7,#0xC+var_C]|57-104
49924|code|MOV             R2, R8; cflags|66-70
49926|code|ADDS            R3, R1, #4|11-29
49928|code|STR             R3, [R7,#0xC+var_C]|59-96
49930|code|LDR             R5, [R1,#4]|77-104
49932|code|MOV             R3, R1|11-70
49934|code|LDR.W           R1, [R3],#8; pattern|83-248-8-27
49938|code|MOV             R0, R5; preg|40-70
49940|code|STR             R3, [R7,#0xC+var_C]|59-96
49942|code|BLX             regcomp|252-247-84-237
49946|code|CBNZ            R0, loc_C33A|112-185
49948|code|ADDS            R4, #1|1-52
49950|code|CMP             R4, R6|180-66
49952|code|BNE             loc_C302|239-209
49954|code|LDR             R2, [R7,#0xC+var_8]|122-104
49956|code|LDR.W           R3, [R9]|217-248-0-48
49960|code|CMP             R2, R3|154-66
49962|code|BNE             loc_C35A|22-209
49964|code|ADD.W           R7, R7, #0xC|7-241-12-7
49968|code|MOV             SP, R7|189-70
49970|code|POP.W           {R4-R10,LR}|189-232-240-71
49974|code|ADD             SP, SP, #0xC|3-176
49976|code|BX              LR|112-71
49978|code|MOV             R1, R5; preg|41-70
49980|code|MOV             R2, R10; errbuf|82-70
49982|code|MOV.W           R3, #0x100; errbuf_size|79-244-128-115
49986|code|BLX             regerror|252-247-100-236
49990|code|LDR             R3, =stderr|6-75
49992|code|LDR             R1, =aSS; "%s: %s\n"|6-73
49994|code|LDR             R2, =aNvramtool; "nvramtool"|7-74
49996|code|LDR             R0, [R3]; stream|24-104
49998|code|MOV             R3, R10|83-70
50000|code|BLX             fprintf|252-247-224-236
50004|code|MOVS            R0, #1; status|1-32
50006|code|BLX             exit|252-247-190-236
50010|code|BLX             __stack_chk_fail|252-247-106-236
50014|data|ALIGN 0x10|0-191
50016|data|DCD stderr|16-122-1-0
50020|data|DCD aSS; "%s: %s\n"|220-242-0-0
50024|data|DCD aNvramtool; "nvramtool"|124-197-0-0
50028|data|DCD __stack_chk_guard|8-122-1-0
50032|code|PUSH            {R0-R3}|15-180
50034|code|PUSH            {R4,R5,LR}|48-181
50036|code|SUB             SP, SP, #0xC|131-176
50038|code|ADD             R3, SP, #0x28+varg_r0|6-171
50040|code|LDR.W           R5, [R3],#4|83-248-4-91
50044|code|CMP             R5, #0|0-45
50046|code|STR             R3, [SP,#0x28+var_24]|1-147
50048|code|BLE             loc_C396|9-221
50050|code|MOVS            R4, #0|0-36
50052|code|LDR             R3, [SP,#0x28+var_24]|1-155
50054|code|ADDS            R4, #1|1-52
50056|code|ADDS            R2, R3, #4|26-29
50058|code|STR             R2, [SP,#0x28+var_24]|1-146
50060|code|LDR             R0, [R3]; preg|24-104
50062|code|BLX             regfree|252-247-98-236
50066|code|CMP             R4, R5|172-66
50068|code|BNE             loc_C384|246-209
50070|code|ADD             SP, SP, #0xC|3-176
50072|code|POP.W           {R4,R5,LR}|189-232-48-64
50076|code|ADD             SP, SP, #0x10|4-176
50078|code|BX              LR|112-71
50080|code|PUSH.W          {R3-R9,LR}|45-233-248-67
50084|code|MOV             R6, R0|6-70
50086|code|LDR.W           R9, =(off_17834 - 0xC3B4)|223-248-52-144
50090|code|MOV             R7, R1|15-70
50092|code|LDR             R5, =(off_17830 - 0xC3BA)|12-77
50094|code|MOV             R8, R2|144-70
50096|code|ADD             R9, PC; off_17834|249-68
50098|code|BL              .init_proc|252-247-7-252
50102|code|ADD             R5, PC; off_17830|125-68
50104|code|RSB.W           R9, R5, R9|197-235-9-9
50108|code|MOVS.W          R9, R9,ASR#2|95-234-169-9
50112|code|BEQ             locret_C3D6|9-208
50114|code|MOVS            R4, #0|0-36
50116|code|LDR.W           R3, [R5],#4|85-248-4-59
50120|code|MOV             R0, R6|48-70
50122|code|MOV             R1, R7|57-70
50124|code|MOV             R2, R8|66-70
50126|code|ADDS            R4, #1|1-52
50128|code|BLX             R3; sub_8ED8|152-71
50130|code|CMP             R4, R9|76-69
50132|code|BNE             loc_C3C4|246-209
50134|code|POP.W           {R3-R9,PC}|189-232-248-131
50138|data|ALIGN 4|0-191
50140|data|DCD off_17834 - 0xC3B4|128-180-0-0
50144|data|DCD off_17830 - 0xC3BA|118-180-0-0
50148|code|BX              LR|112-71
50150|data|ALIGN 4|0-191
50152|code|PUSH            {R3,LR}|8-181
50154|code|NOP|0-191
50156|code|POP             {R3,PC}|8-189
50158|data|DCW 0|0-0
63532|data|ALIGN 0x10|0-0-0-0
96304|data|DCD sub_8ED8+1|217-142-0-0
96308|data|DCD sub_8EC8+1|201-142-0-0
96312|data|DCD 0|0-0-0-0
96316|data|Elf32_Dyn <1, <0x10>>; DT_NEEDED libc.so.6|1-0-0-0-16-0-0-0
96324|data|Elf32_Dyn <1, <0x179>>; DT_NEEDED ld-linux.so.3|1-0-0-0-121-1-0-0
96332|data|Elf32_Dyn <0xC, <0x8BC5>>; DT_INIT|12-0-0-0-197-139-0-0
96340|data|Elf32_Dyn <0xD, <0xC3E9>>; DT_FINI|13-0-0-0-233-195-0-0
96348|data|Elf32_Dyn <0x19, <0x17830>>; DT_INIT_ARRAY|25-0-0-0-48-120-1-0
96356|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
96364|data|Elf32_Dyn <0x1A, <0x17834>>; DT_FINI_ARRAY|26-0-0-0-52-120-1-0
96372|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
96380|data|Elf32_Dyn <4, <0x81A0>>; DT_HASH|4-0-0-0-160-129-0-0
96388|data|Elf32_Dyn <0x6FFFFEF5, <0x8308>>; DT_GNU_HASH|245-254-255-111-8-131-0-0
96396|data|Elf32_Dyn <5, <0x87E0>>; DT_STRTAB|5-0-0-0-224-135-0-0
96404|data|Elf32_Dyn <6, <0x84B0>>; DT_SYMTAB|6-0-0-0-176-132-0-0
96412|data|Elf32_Dyn <0xA, <0x1A3>>; DT_STRSZ|10-0-0-0-163-1-0-0
96420|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
96428|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
96436|data|Elf32_Dyn <3, <0x17934>>; DT_PLTGOT|3-0-0-0-52-121-1-0
96444|data|Elf32_Dyn <2, <0x158>>; DT_PLTRELSZ|2-0-0-0-88-1-0-0
96452|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
96460|data|Elf32_Dyn <0x17, <0x8A6C>>; DT_JMPREL|23-0-0-0-108-138-0-0
96468|data|Elf32_Dyn <0x11, <0x8A2C>>; DT_REL|17-0-0-0-44-138-0-0
96476|data|Elf32_Dyn <0x12, <0x40>>; DT_RELSZ|18-0-0-0-64-0-0-0
96484|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
96492|data|Elf32_Dyn <0x6FFFFFFE, <0x89EC>>; DT_VERNEED|254-255-255-111-236-137-0-0
96500|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
96508|data|Elf32_Dyn <0x6FFFFFF0, <0x8984>>; DT_VERSYM|240-255-255-111-132-137-0-0
96516|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
96524|data|ALIGN 0x10|0-0-0-0
96564|data|DCD stru_1783C|60-120-1-0
96568|data|DCD 0|0-0-0-0
96572|data|DCD 0|0-0-0-0
96576|data|DCD __imp_strcmp|204-123-1-0
96580|data|DCD __imp_printf|120-123-1-0
96584|data|DCD __imp_fopen|112-123-1-0
96588|data|DCD __imp_regerror|236-123-1-0
96592|data|DCD __imp_free|124-123-1-0
96596|data|DCD __imp_fgets|216-123-1-0
96600|data|DCD __imp___stack_chk_fail|224-123-1-0
96604|data|DCD __imp_regexec|108-123-1-0
96608|data|DCD __imp_fwrite|0-124-1-0
96612|data|DCD __imp_regfree|240-123-1-0
96616|data|DCD __imp_strcpy|184-123-1-0
96620|data|DCD __imp_fread|140-123-1-0
96624|data|DCD __imp_puts|252-123-1-0
96628|data|DCD __imp_malloc|92-123-1-0
96632|data|DCD __imp___libc_start_main|132-123-1-0
96636|data|DCD __imp_strerror|164-123-1-0
96640|data|DCD __imp___gmon_start__|4-124-1-0
96644|data|DCD __imp_open|96-123-1-0
96648|data|DCD __imp___ctype_b_loc|228-123-1-0
96652|data|DCD __imp_exit|168-123-1-0
96656|data|DCD __imp_strtoul|160-123-1-0
96660|data|DCD __imp_strlen|152-123-1-0
96664|data|DCD __imp_mmap|192-123-1-0
96668|data|DCD __imp_getopt|220-123-1-0
96672|data|DCD __imp_fprintf|136-123-1-0
96676|data|DCD __imp___errno_location|100-123-1-0
96680|data|DCD __imp_snprintf|244-123-1-0
96684|data|DCD __imp_inb|172-123-1-0
96688|data|DCD __imp_memset|176-123-1-0
96692|data|DCD __imp_putchar|156-123-1-0
96696|data|DCD __imp_strncpy|180-123-1-0
96700|data|DCD __imp_strtoull|248-123-1-0
96704|data|DCD __imp_fclose|200-123-1-0
96708|data|DCD __imp_iopl|208-123-1-0
96712|data|DCD __imp_fputc|196-123-1-0
96716|data|DCD __imp_outb|128-123-1-0
96720|data|DCD __imp_sprintf|212-123-1-0
96724|data|DCD __imp_regcomp|116-123-1-0
96728|data|DCD __imp_fseek|148-123-1-0
96732|data|DCD __imp_fputs|104-123-1-0
96736|data|DCD __imp_strncmp|188-123-1-0
96740|data|DCD __imp_abort|144-123-1-0
96744|data|DCD __imp___assert_fail|232-123-1-0
96748|data|DCD __imp___gmon_start__|4-124-1-0
96776|data|% 4; Copy of shared data|255-255-255-255
96780|data|% 4; Copy of shared data|255-255-255-255
96784|data|% 4; Copy of shared data|255-255-255-255
96788|data|ALIGN 8|255-255-255-255
96792|data|% 4; Copy of shared data|255-255-255-255
96796|data|% 4; Copy of shared data|255-255-255-255
96800|data|% 4; Copy of shared data|255-255-255-255
96804|data|% 4; Copy of shared data|255-255-255-255
96808|data|% 1|255
96809|data|ALIGN 4|255-255-255
96812|data|% 4|255-255-255-255
96816|data|% 4|255-255-255-255
96820|data|% 4|255-255-255-255
96824|data|% 4|255-255-255-255
97052|data|% 4|255-255-255-255
97056|data|% 4|255-255-255-255
97060|data|% 4|255-255-255-255
97064|data|% 4|255-255-255-255
97068|data|% 4|255-255-255-255
97072|data|% 4|255-255-255-255
97076|data|% 4|255-255-255-255
97080|data|% 4|255-255-255-255
97084|data|% 4|255-255-255-255
97088|data|% 4|255-255-255-255
97092|data|% 4|255-255-255-255
97096|data|% 4|255-255-255-255
97100|data|% 4|255-255-255-255
97104|data|% 4|255-255-255-255
97108|data|% 4|255-255-255-255
