address|type|disassembly|bytes
65536|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
65540|data|DCB 1; File class: 32-bit|1
65541|data|DCB 1; Data encoding: little-endian|1
65542|data|DCB 1; File version|1
65543|data|DCB 3; OS/ABI: GNU/Linux|3
65544|data|DCB 0; ABI Version|0
65545|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
65552|data|DCW 2; File type: Executable|2-0
65554|data|DCW 0x28; Machine: ARM|40-0
65556|data|DCD 1; File version|1-0-0-0
65560|data|DCD start+1; Entry point|121-35-1-0
65564|data|DCD 0x34; PHT file offset|52-0-0-0
65568|data|DCD 0x53F8; SHT file offset|248-83-0-0
65572|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
65576|data|DCW 0x34; ELF header size|52-0
65578|data|DCW 0x20; PHT entry size|32-0
65580|data|DCW 8; Number of entries in PHT|8-0
65582|data|DCW 0x28; SHT entry size|40-0
65584|data|DCW 0x1C; Number of entries in SHT|28-0
65586|data|DCW 0x1B; SHT entry index for string table|27-0
65588|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
65592|data|DCD 0x4C74; File offset|116-76-0-0
65596|data|DCD unk_14C74; Virtual address|116-76-1-0
65600|data|DCD 0x14C74; Physical address|116-76-1-0
65604|data|DCD 0x190; Size in file image|144-1-0-0
65608|data|DCD 0x190; Size in memory image|144-1-0-0
65612|data|DCD 4; Flags|4-0-0-0
65616|data|DCD 4; Alignment|4-0-0-0
65620|data|DCD 6; Type: PHDR|6-0-0-0
65624|data|DCD 0x34; File offset|52-0-0-0
65628|data|DCD dword_10034; Virtual address|52-0-1-0
65632|data|DCD 0x10034; Physical address|52-0-1-0
65636|data|DCD 0x100; Size in file image|0-1-0-0
65640|data|DCD 0x100; Size in memory image|0-1-0-0
65644|data|DCD 5; Flags|5-0-0-0
65648|data|DCD 4; Alignment|4-0-0-0
65652|data|DCD 3; Type: INTERP|3-0-0-0
65656|data|DCD 0x134; File offset|52-1-0-0
65660|data|DCD aLibLdLinuxArmh; Virtual address|52-1-1-0
65664|data|DCD 0x10134; Physical address|52-1-1-0
65668|data|DCD 0x19; Size in file image|25-0-0-0
65672|data|DCD 0x19; Size in memory image|25-0-0-0
65676|data|DCD 4; Flags|4-0-0-0
65680|data|DCD 1; Alignment|1-0-0-0
65684|data|DCD 1; Type: LOAD|1-0-0-0
65688|data|DCD 0; File offset|0-0-0-0
65692|data|DCD dword_10000; Virtual address|0-0-1-0
65696|data|DCD 0x10000; Physical address|0-0-1-0
65700|data|DCD 0x4E08; Size in file image|8-78-0-0
65704|data|DCD 0x4E08; Size in memory image|8-78-0-0
65708|data|DCD 5; Flags|5-0-0-0
65712|data|DCD 0x10000; Alignment|0-0-1-0
65716|data|DCD 1; Type: LOAD|1-0-0-0
65720|data|DCD 0x5000; File offset|0-80-0-0
65724|data|DCD off_25000; Virtual address|0-80-2-0
65728|data|DCD 0x25000; Physical address|0-80-2-0
65732|data|DCD 0x2C4; Size in file image|196-2-0-0
65736|data|DCD 0x370; Size in memory image|112-3-0-0
65740|data|DCD 6; Flags|6-0-0-0
65744|data|DCD 0x10000; Alignment|0-0-1-0
65748|data|DCD 2; Type: DYNAMIC|2-0-0-0
65752|data|DCD 0x5010; File offset|16-80-0-0
65756|data|DCD stru_25010; Virtual address|16-80-2-0
65760|data|DCD 0x25010; Physical address|16-80-2-0
65764|data|DCD 0x110; Size in file image|16-1-0-0
65768|data|DCD 0x110; Size in memory image|16-1-0-0
65772|data|DCD 6; Flags|6-0-0-0
65776|data|DCD 4; Alignment|4-0-0-0
65780|data|DCD 4; Type: NOTE|4-0-0-0
65784|data|DCD 0x150; File offset|80-1-0-0
65788|data|DCD dword_10150; Virtual address|80-1-1-0
65792|data|DCD 0x10150; Physical address|80-1-1-0
65796|data|DCD 0x44; Size in file image|68-0-0-0
65800|data|DCD 0x44; Size in memory image|68-0-0-0
65804|data|DCD 4; Flags|4-0-0-0
65808|data|DCD 4; Alignment|4-0-0-0
65812|data|DCD 0x6474E551; Type: STACK|81-229-116-100
65816|data|DCD 0; File offset|0-0-0-0
65820|data|DCD 0; Virtual address|0-0-0-0
65824|data|DCD 0; Physical address|0-0-0-0
65828|data|DCD 0; Size in file image|0-0-0-0
65832|data|DCD 0; Size in memory image|0-0-0-0
65836|data|DCD 6; Flags|6-0-0-0
65840|data|DCD 0x10; Alignment|16-0-0-0
65844|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
65869|data|DCB 0, 0, 0|0-0-0
65872|data|DCD 4; Name Size|4-0-0-0
65876|data|DCD 0x10; Desc Size|16-0-0-0
65880|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
65884|data|DCB "GNU",0; Name|71-78-85-0
65888|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
65904|data|DCD 4; Name Size|4-0-0-0
65908|data|DCD 0x14; Desc Size|20-0-0-0
65912|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
65916|data|DCB "GNU",0; Name|71-78-85-0
65920|data|DCB 0x42, 0x7C, 0x2C, 0x13, 0x48, 0x28, 0xA2, 0xBA, 7; Desc|66-124-44-19-72-40-162-186-7-6-105-44-128-247-185-83-6-189-169-149
65940|data|DCD 0x61|97-0-0-0
65944|data|DCD 7|7-0-0-0
65948|data|DCD 0x20|32-0-0-0
65952|data|DCD 0xA|10-0-0-0
65956|data|DCD 0x118002, 0x10B6200, 0x408140, 0x15680000, 0x50B00282|2-128-17-0-0-98-11-1-64-129-64-0-0-0-104-21-130-2-176-80-32-0-64-0-0-0-0-0-1-74-0-136-0-4-0-16-56-8-64-100-10-32-11-0-192-0-172-43-64-178-69-64-8-129-32-5-9-97-50-21-77-64-16-69-8-1-64-4-128-117-24-146-96-0-0-72-40-2-8-0-160-3-44-32-0-21-84-152-32-4-0-18-32-48-136-0-171-9-3-88-67-64-8-24-10-0-0-9-4-0-0-33-8-97-2-96-0-23-0-137-9-136-0-0-82-4-48-0
66084|data|DCD 7, 0, 0, 0, 0, 0, 9, 0, 0xA, 0xB, 0xD, 0xE, 0x10, 0|7-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-9-0-0-0-0-0-0-0-10-0-0-0-11-0-0-0-13-0-0-0-14-0-0-0-16-0-0-0-0-0-0-0-17-0-0-0-19-0-0-0-20-0-0-0-0-0-0-0-23-0-0-0-24-0-0-0-0-0-0-0-25-0-0-0-27-0-0-0-29-0-0-0-30-0-0-0-31-0-0-0-0-0-0-0-32-0-0-0-0-0-0-0-34-0-0-0-36-0-0-0-40-0-0-0-41-0-0-0-42-0-0-0-46-0-0-0-47-0-0-0-0-0-0-0-51-0-0-0-53-0-0-0-55-0-0-0-56-0-0-0-0-0-0-0-57-0-0-0-0-0-0-0-59-0-0-0-61-0-0-0-62-0-0-0-63-0-0-0-65-0-0-0-66-0-0-0-69-0-0-0-70-0-0-0-73-0-0-0-78-0-0-0-79-0-0-0-80-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-82-0-0-0-83-0-0-0-84-0-0-0-0-0-0-0-0-0-0-0-85-0-0-0-86-0-0-0-0-0-0-0-88-0-0-0-0-0-0-0-91-0-0-0-0-0-0-0-92-0-0-0-0-0-0-0-0-0-0-0-93-0-0-0-0-0-0-0-94-0-0-0-0-0-0-0-95-0-0-0-97-0-0-0-99-0-0-0-102-0-0-0-104-0-0-0-0-0-0-0-106-0-0-0-107-0-0-0-0-0-0-0-108-0-0-0-109-0-0-0-0-0-0-0-113-0-0-0-114-0-0-0-0-0-0-0-0-0-0-0-116-0-0-0-0-0-0-0
66472|data|DCD 0x10A8B550, 0x1C93965F, 0xFD40322D, 0xF6EFB9F, 0xB794014|80-181-168-16-95-150-147-28-45-50-64-253-159-251-110-15-20-64-121-11-103-73-111-139-141-89-64-241-202-150-147-28-119-84-60-148-143-35-24-175-100-206-138-34-55-21-21-101-47-78-61-246-0-175-52-232-122-232-86-142-245-155-186-39-119-205-79-73-169-51-178-7-52-210-231-79-63-249-255-188-194-131-179-8-57-64-12-175-63-126-150-124-225-153-210-186-193-57-16-118-254-236-132-20-1-35-249-164-124-139-115-15-157-187-147-28-66-69-213-236-124-237-17-15-120-73-107-182-149-120-158-124-91-154-59-15-171-170-215-125-64-77-157-124-28-239-60-140-136-158-104-142-131-163-94-30-121-139-135-255-60-7-212-5-254-185-132-244-132-206-20-122-11-113-87-163-88-239-151-121-23-234-118-254-56-242-139-28-15-132-29-230-71-88-55-15-235-56-131-212-234-211-239-14-185-141-241-14-146-86-31-244-185-43-107-21-125-96-156-124-39-111-228-24-164-216-90-182-237-222-147-28-237-222-147-28-116-205-189-154-232-128-34-203-217-113-88-28-125-76-92-116-38-34-21-79-194-209-123-41-179-162-247-18-140-71-226-41-128-36-216-62-188-238-144-202-26-159-214-189-169-189-240-187-191-39-21-54-187-227-146-124-102-101-184-73-149-92-126-195-17-123-156-124-221-102-17-245-201-129-10-210-3-34-169-230-242-22-230-245-173-210-114-98-58-13-133-179-64-143-29-253-33-207-9-253-49-184-130-13-191-218-87-27-37-117-130-13-145-25-230-224-228-7-147-44-137-118-43-199-204-85-233-14-11-15-181-165-4-67-237-8-104-14-206-169-207-175-184-84-134-240-150-124-73-60-172-234-46-42-135-35-135-49-17-246-137-61-185-84-245-97-14-236-181-233-90-241-44-36-144-108-226-153-148-124-46-3-49-28-61-173-57-13-251-13-37-215-218-69-125-195-51-196-247-18-147-121-19-79
66912|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
66928|data|Elf32_Sym <aJvRegisterclas - byte_10CB0, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|31-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
66944|data|Elf32_Sym <aAeabiUnwindCpp_0 - byte_10CB0, 0, 0, 0x12, 0, 0>; "__aeabi_unwind_cpp_pr1"|28-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66960|data|Elf32_Sym <aItmDeregistert - byte_10CB0, 0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|51-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
66976|data|Elf32_Sym <aAeabiUnwindCpp - byte_10CB0, 0, 0, 0x12, 0, 0>; "__aeabi_unwind_cpp_pr0"|5-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66992|data|Elf32_Sym <aGmonStart - byte_10CB0, 0, 0, 0x20, 0, 0>; "__gmon_start__"|16-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67008|data|Elf32_Sym <aItmRegistertmc - byte_10CB0, 0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|79-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67024|data|Elf32_Sym <aFwrite+1 - byte_10CB0, 0, 0, 0x12, 0, 0>; "write"|53-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67040|data|Elf32_Sym <aStrcmp - byte_10CB0, 0, 0, 0x12, 0, 0>; "strcmp"|104-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67056|data|Elf32_Sym <aFflush - byte_10CB0, 0, 0, 0x12, 0, 0>; "fflush"|98-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67072|data|Elf32_Sym <aFgets - byte_10CB0, 0, 0, 0x12, 0, 0>; "fgets"|196-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67088|data|Elf32_Sym <aListen - byte_10CB0, 0, 0, 0x12, 0, 0>; "listen"|169-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67104|data|Elf32_Sym <aPthreadMutexat_0 - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_mutexattr_settype"|248-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67120|data|Elf32_Sym <aZnss4Rep20SEmp - byte_10CB0, \; "_ZNSs4_Rep20_S_empty_rep_storageE" ...|59-1-0-0-200-82-2-0-16-0-0-0-17-0-25-0
67136|data|Elf32_Sym <aStrcpy - byte_10CB0, 0, 0, 0x12, 0, 0>; "strcpy"|105-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67152|data|Elf32_Sym <aBssStart_0 - byte_10CB0, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start__"|166-6-0-0-196-82-2-0-0-0-0-0-16-0-25-0
67168|data|Elf32_Sym <aGnutlsTranspor - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_transport_set_ptr"|94-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67184|data|Elf32_Sym <aGnutlsGlobalIn - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_global_init"|27-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67200|data|Elf32_Sym <aGetsockname - byte_10CB0, 0, 0, 0x12, 0, 0>; "getsockname"|77-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67216|data|Elf32_Sym <aLibcStartMain - byte_10CB0, 0, 0, 0x12, 0, 0>; "__libc_start_main"|111-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67232|data|Elf32_Sym <aBssEnd+1 - byte_10CB0, _end, 0, 0x10, 0, 0x19>; "_bss_end__"|181-6-0-0-112-83-2-0-0-0-0-0-16-0-25-0
67248|data|Elf32_Sym <aPthreadAttrIni - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_attr_init"|9-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67264|data|Elf32_Sym <aGnutlsInit - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_init"|204-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67280|data|Elf32_Sym <aCxaEndCatch - byte_10CB0, 0, 0, 0x12, 0, 0>; "__cxa_end_catch"|115-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67296|data|Elf32_Sym <aPthreadMutexDe - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_mutex_destroy"|191-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67312|data|Elf32_Sym <aGnutlsAnonAllo - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_anon_allocate_server_credentials"|243-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67328|data|Elf32_Sym <aFprintf - byte_10CB0, 0, 0, 0x12, 0, 0>; "fprintf"|69-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67344|data|Elf32_Sym <aPthreadMutexat_1 - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_mutexattr_destroy"|18-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67360|data|Elf32_Sym <aStrncpy - byte_10CB0, 0, 0, 0x12, 0, 0>; "strncpy"|148-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67376|data|Elf32_Sym <aAeabiAtexit+0xA - byte_10CB0, 0, 0, 0x12, 0, 0>; "exit"|103-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67392|data|Elf32_Sym <aPthreadCreate - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_create"|105-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67408|data|Elf32_Sym <aAeabiIdiv - byte_10CB0, 0, 0, 0x12, 0, 0>; "__aeabi_idiv"|51-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67424|data|Elf32_Sym <aPerror - byte_10CB0, 0, 0, 0x12, 0, 0>; "perror"|133-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67440|data|Elf32_Sym <aErrnoLocation - byte_10CB0, 0, 0, 0x12, 0, 0>; "__errno_location"|74-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67456|data|Elf32_Sym <aFopen - byte_10CB0, 0, 0, 0x12, 0, 0>; "fopen"|120-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67472|data|Elf32_Sym <aStrlen - byte_10CB0, 0, 0, 0x12, 0, 0>; "strlen"|209-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67488|data|Elf32_Sym <aEdata - byte_10CB0, __bss_start, 0, 0x10, 0, 0x18>; "_edata"|147-6-0-0-196-82-2-0-0-0-0-0-16-0-24-0
67504|data|Elf32_Sym <aAbort - byte_10CB0, 0, 0, 0x12, 0, 0>; "abort"|176-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67520|data|Elf32_Sym <aGxxPersonality - byte_10CB0, 0, 0, 0x12, 0, 0>; "__gxx_personality_v0"|162-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67536|data|Elf32_Sym <aLocaltime+5 - byte_10CB0, 0, 0, 0x12, 0, 0>; "time"|64-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67552|data|Elf32_Sym <aFclose+1 - byte_10CB0, 0, 0, 0x12, 0, 0>; "close"|2-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67568|data|Elf32_Sym <aPthreadMutexUn - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_mutex_unlock"|27-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67584|data|Elf32_Sym <aRead - byte_10CB0, 0, 0, 0x12, 0, 0>; "read"|213-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67600|data|Elf32_Sym <aGnutlsAnonSetS - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_anon_set_server_dh_params"|147-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67616|data|Elf32_Sym <aCxaRethrow - byte_10CB0, 0, 0, 0x12, 0, 0>; "__cxa_rethrow"|221-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67632|data|Elf32_Sym <aGnutlsDhParams - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_dh_params_init"|84-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67648|data|Elf32_Sym <aGetopt - byte_10CB0, 0, 0, 0x12, 0, 0>; "getopt"|235-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67664|data|Elf32_Sym <aPthreadJoin - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_join"|141-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67680|data|Elf32_Sym <aGnutlsDeinit - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_deinit"|171-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67696|data|Elf32_Sym <aGnutlsDhSetPri - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_dh_set_prime_bits"|106-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67712|data|Elf32_Sym <aNanosleep - byte_10CB0, 0, 0, 0x12, 0, 0>; "nanosleep"|91-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67728|data|Elf32_Sym <aEnd - byte_10CB0, _end, 0, 0x10, 0, 0x19>; "__end__"|192-6-0-0-112-83-2-0-0-0-0-0-16-0-25-0
67744|data|Elf32_Sym <aFwrite - byte_10CB0, 0, 0, 0x12, 0, 0>; "fwrite"|52-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67760|data|Elf32_Sym <aStderr - byte_10CB0, stderr, 4, 0x11, 0, 0x19>; "stderr"|33-6-0-0-16-83-2-0-4-0-0-0-17-0-25-0
67776|data|Elf32_Sym <aVsnprintf - byte_10CB0, 0, 0, 0x12, 0, 0>; "vsnprintf"|242-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67792|data|Elf32_Sym <aSigaction - byte_10CB0, 0, 0, 0x12, 0, 0>; "sigaction"|255-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67808|data|Elf32_Sym <aZnssc1epkcrksa - byte_10CB0, 0, 0, 0x12, 0, 0>; "_ZNSsC1EPKcRKSaIcE"|15-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67824|data|Elf32_Sym <aFini - byte_10CB0, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|141-6-0-0-228-67-1-0-0-0-0-0-18-0-14-0
67840|data|Elf32_Sym <aGnutlsGlobalIn+0xD - byte_10CB0, .init_proc, 0, 0x12, 0, \; "_init"|40-4-0-0-176-24-1-0-0-0-0-0-18-0-11-0
67856|data|Elf32_Sym <aGnutlsSetDefau - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_set_default_priority"|119-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67872|data|Elf32_Sym <aFprintf+1 - byte_10CB0, 0, 0, 0x12, 0, 0>; "printf"|70-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67888|data|Elf32_Sym <aPoll - byte_10CB0, 0, 0, 0x12, 0, 0>; "poll"|252-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67904|data|Elf32_Sym <aRandom - byte_10CB0, 0, 0, 0x12, 0, 0>; "random"|129-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67920|data|Elf32_Sym <aZst17ThrowBadA - byte_10CB0, 0, 0, 0x12, 0, 0>; "_ZSt17__throw_bad_allocv"|34-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67936|data|Elf32_Sym <aStrtok - byte_10CB0, 0, 0, 0x12, 0, 0>; "strtok"|182-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67952|data|Elf32_Sym <aStrtol - byte_10CB0, 0, 0, 0x12, 0, 0>; "strtol"|189-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67968|data|Elf32_Sym <aAeabiUidivmod - byte_10CB0, 0, 0, 0x12, 0, 0>; "__aeabi_uidivmod"|64-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67984|data|Elf32_Sym <aZnss4Rep10MDes - byte_10CB0, 0, 0, 0x12, 0, 0>; "_ZNSs4_Rep10_M_destroyERKSaIcE"|131-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68000|data|Elf32_Sym <aBssStart - byte_10CB0, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start"|154-6-0-0-196-82-2-0-0-0-0-0-16-0-25-0
68016|data|Elf32_Sym <aPthreadAttrSet_0 - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_attr_setdetachstate"|101-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68032|data|Elf32_Sym <aPthreadMutexLo - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_mutex_lock"|150-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68048|data|Elf32_Sym <aAeabiAtexit - byte_10CB0, 0, 0, 0x12, 0, 0>; "__aeabi_atexit"|93-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68064|data|Elf32_Sym <aOptarg - byte_10CB0, optarg, 4, 0x11, 0, 0x19>; "optarg"|26-6-0-0-12-83-2-0-4-0-0-0-17-0-25-0
68080|data|Elf32_Sym <aPthreadMutexat - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_mutexattr_init"|225-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68096|data|Elf32_Sym <aZst20ThrowLeng - byte_10CB0, 0, 0, 0x12, 0, 0>; "_ZSt20__throw_length_errorPKc"|191-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68112|data|Elf32_Sym <aPutchar - byte_10CB0, 0, 0, 0x12, 0, 0>; "putchar"|161-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68128|data|Elf32_Sym <aMemmove - byte_10CB0, 0, 0, 0x12, 0, 0>; "memmove"|96-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68144|data|Elf32_Sym <aStrncasecmp - byte_10CB0, 0, 0, 0x12, 0, 0>; "strncasecmp"|40-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68160|data|Elf32_Sym <aLocaltime - byte_10CB0, 0, 0, 0x12, 0, 0>; "localtime"|59-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68176|data|Elf32_Sym <aEnd_0 - byte_10CB0, _end, 0, 0x10, 0, 0x19>; "_end"|200-6-0-0-112-83-2-0-0-0-0-0-16-0-25-0
68192|data|Elf32_Sym <aPthreadKeyCrea - byte_10CB0, 0, 0, 0x22, 0, 0>; "__pthread_key_create"|120-0-0-0-0-0-0-0-0-0-0-0-34-0-0-0
68208|data|Elf32_Sym <aZnss6assignerk - byte_10CB0, 0, 0, 0x12, 0, 0>; "_ZNSs6assignERKSs"|173-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68224|data|Elf32_Sym <aPuts - byte_10CB0, 0, 0, 0x12, 0, 0>; "puts"|156-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68240|data|Elf32_Sym <aCxaEndCleanup - byte_10CB0, 0, 0, 0x12, 0, 0>; "__cxa_end_cleanup"|235-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68256|data|Elf32_Sym <aZtvn10Cxxabiv1 - byte_10CB0, \; "_ZTVN10__cxxabiv117__class_type_infoE" ...|183-1-0-0-224-82-2-0-44-0-0-0-17-0-25-0
68272|data|Elf32_Sym <aPthreadAttrSet - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_attr_setstacksize"|48-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68288|data|Elf32_Sym <aCalloc - byte_10CB0, 0, 0, 0x12, 0, 0>; "calloc"|202-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68304|data|Elf32_Sym <aGnutlsDhParams_0 - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_dh_params_generate2"|216-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68320|data|Elf32_Sym <aStrcasecmp - byte_10CB0, 0, 0, 0x12, 0, 0>; "strcasecmp"|15-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68336|data|Elf32_Sym <aFdopen - byte_10CB0, 0, 0, 0x12, 0, 0>; "fdopen"|89-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68352|data|Elf32_Sym <aFclose - byte_10CB0, 0, 0, 0x12, 0, 0>; "fclose"|1-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68368|data|Elf32_Sym <aMemset - byte_10CB0, 0, 0, 0x12, 0, 0>; "memset"|216-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68384|data|Elf32_Sym <aBssEnd - byte_10CB0, _end, 0, 0x10, 0, 0x19>; "__bss_end__"|180-6-0-0-112-83-2-0-0-0-0-0-16-0-25-0
68400|data|Elf32_Sym <aMemcmp - byte_10CB0, 0, 0, 0x12, 0, 0>; "memcmp"|228-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68416|data|Elf32_Sym <aPthreadAttrDes - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_attr_destroy"|129-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68432|data|Elf32_Sym <aGnutlsCheckVer - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_check_version"|73-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68448|data|Elf32_Sym <aGnutlsHandshak - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_handshake"|131-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68464|data|Elf32_Sym <aZnwj - byte_10CB0, 0, 0, 0x12, 0, 0>; "_Znwj"|154-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68480|data|Elf32_Sym <aSprintf - byte_10CB0, 0, 0, 0x12, 0, 0>; "sprintf"|112-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68496|data|Elf32_Sym <aCxaBeginCatch - byte_10CB0, 0, 0, 0x12, 0, 0>; "__cxa_begin_catch"|253-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68512|data|Elf32_Sym <aIsblank - byte_10CB0, 0, 0, 0x12, 0, 0>; "isblank"|140-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68528|data|Elf32_Sym <aGnutlsRecordRe - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_record_recv"|185-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68544|data|Elf32_Sym <aFree - byte_10CB0, 0, 0, 0x12, 0, 0>; "free"|136-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68560|data|Elf32_Sym <aGnutlsPriority - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_priority_set_direct"|46-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68576|data|Elf32_Sym <aZnssc1erkss - byte_10CB0, 0, 0, 0x12, 0, 0>; "_ZNSsC1ERKSs"|160-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68592|data|Elf32_Sym <aPthreadMutexTr - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_mutex_trylock"|169-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68608|data|Elf32_Sym <aGnutlsRecordSe - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_record_send"|218-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68624|data|Elf32_Sym <aZdlpv - byte_10CB0, 0, 0, 0x12, 0, 0>; "_ZdlPv"|108-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68640|data|Elf32_Sym <aAccept - byte_10CB0, 0, 0, 0x12, 0, 0>; "accept"|218-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68656|data|Elf32_Sym <aGnutlsCertific - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_certificate_server_set_request"|180-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68672|data|Elf32_Sym <aBind - byte_10CB0, 0, 0, 0x12, 0, 0>; "bind"|223-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68688|data|Elf32_Sym <aSocket - byte_10CB0, 0, 0, 0x12, 0, 0>; "socket"|91-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68704|data|Elf32_Sym <aMalloc - byte_10CB0, 0, 0, 0x12, 0, 0>; "malloc"|8-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68720|data|Elf32_Sym <aGnutlsCredenti - byte_10CB0, 0, 0, 0x12, 0, 0>; "gnutls_credentials_set"|148-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68736|data|Elf32_Sym <aZnss6assignepk - byte_10CB0, 0, 0, 0x12, 0, 0>; "_ZNSs6assignEPKcj"|221-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68752|data|Elf32_Sym <aOptind - byte_10CB0, optind, 4, 0x11, 0, 0x19>; "optind"|126-5-0-0-216-82-2-0-4-0-0-0-17-0-25-0
68768|data|Elf32_Sym <aPthreadMutexIn - byte_10CB0, 0, 0, 0x12, 0, 0>; "pthread_mutex_init"|44-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68784|data|DCB 0|0
68785|data|DCB "libstdc++.so.6",0|108-105-98-115-116-100-99-43-43-46-115-111-46-54-0
68800|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
68815|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
68835|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
68863|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
68889|data|DCB "pthread_create",0|112-116-104-114-101-97-100-95-99-114-101-97-116-101-0
68904|data|DCB "__pthread_key_create",0|95-95-112-116-104-114-101-97-100-95-107-101-121-95-99-114-101-97-116-101-0
68925|data|DCB "pthread_join",0|112-116-104-114-101-97-100-95-106-111-105-110-0
68938|data|DCB "_Znwj",0|95-90-110-119-106-0
68944|data|DCB "_ZNSsC1ERKSs",0|95-90-78-83-115-67-49-69-82-75-83-115-0
68957|data|DCB "_ZNSs6assignERKSs",0|95-90-78-83-115-54-97-115-115-105-103-110-69-82-75-83-115-0
68975|data|DCB "_ZSt20__throw_length_errorPKc",0|95-90-83-116-50-48-95-95-116-104-114-111-119-95-108-101-110-103-116-104-95-101-114-114-111-114-80-75-99-0
69005|data|DCB "__cxa_rethrow",0|95-95-99-120-97-95-114-101-116-104-114-111-119-0
69019|data|DCB "__cxa_end_cleanup",0|95-95-99-120-97-95-101-110-100-95-99-108-101-97-110-117-112-0
69037|data|DCB "__cxa_begin_catch",0|95-95-99-120-97-95-98-101-103-105-110-95-99-97-116-99-104-0
69055|data|DCB "_ZNSsC1EPKcRKSaIcE",0|95-90-78-83-115-67-49-69-80-75-99-82-75-83-97-73-99-69-0
69074|data|DCB "_ZSt17__throw_bad_allocv",0|95-90-83-116-49-55-95-95-116-104-114-111-119-95-98-97-100-95-97-108-108-111-99-118-0
69099|data|DCB "_ZNSs4_Rep20_S_empty_rep_storageE",0|95-90-78-83-115-52-95-82-101-112-50-48-95-83-95-101-109-112-116-121-95-114-101-112-95-115-116-111-114-97-103-101-69-0
69133|data|DCB "__aeabi_atexit",0|95-95-97-101-97-98-105-95-97-116-101-120-105-116-0
69148|data|DCB "_ZdlPv",0|95-90-100-108-80-118-0
69155|data|DCB "__cxa_end_catch",0|95-95-99-120-97-95-101-110-100-95-99-97-116-99-104-0
69171|data|DCB "_ZNSs4_Rep10_M_destroyERKSaIcE",0|95-90-78-83-115-52-95-82-101-112-49-48-95-77-95-100-101-115-116-114-111-121-69-82-75-83-97-73-99-69-0
69202|data|DCB "__gxx_personality_v0",0|95-95-103-120-120-95-112-101-114-115-111-110-97-108-105-116-121-95-118-48-0
69223|data|DCB "_ZTVN10__cxxabiv117__class_type_infoE",0|95-90-84-86-78-49-48-95-95-99-120-120-97-98-105-118-49-49-55-95-95-99-108-97-115-115-95-116-121-112-101-95-105-110-102-111-69-0
69261|data|DCB "_ZNSs6assignEPKcj",0|95-90-78-83-115-54-97-115-115-105-103-110-69-80-75-99-106-0
69279|data|DCB "libpthread.so.0",0|108-105-98-112-116-104-114-101-97-100-46-115-111-46-48-0
69295|data|DCB "sigaction",0|115-105-103-97-99-116-105-111-110-0
69305|data|DCB "pthread_attr_init",0|112-116-104-114-101-97-100-95-97-116-116-114-95-105-110-105-116-0
69323|data|DCB "pthread_mutex_unlock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-117-110-108-111-99-107-0
69344|data|DCB "pthread_attr_setstacksize",0|112-116-104-114-101-97-100-95-97-116-116-114-95-115-101-116-115-116-97-99-107-115-105-122-101-0
69370|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
69387|data|DCB "nanosleep",0|110-97-110-111-115-108-101-101-112-0
69397|data|DCB "pthread_attr_setdetachstate",0|112-116-104-114-101-97-100-95-97-116-116-114-95-115-101-116-100-101-116-97-99-104-115-116-97-116-101-0
69425|data|DCB "pthread_attr_destroy",0|112-116-104-114-101-97-100-95-97-116-116-114-95-100-101-115-116-114-111-121-0
69446|data|DCB "pthread_mutex_lock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-108-111-99-107-0
69465|data|DCB "pthread_mutex_trylock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-116-114-121-108-111-99-107-0
69487|data|DCB "pthread_mutex_destroy",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-100-101-115-116-114-111-121-0
69509|data|DCB "read",0|114-101-97-100-0
69514|data|DCB "accept",0|97-99-99-101-112-116-0
69521|data|DCB "pthread_mutexattr_init",0|112-116-104-114-101-97-100-95-109-117-116-101-120-97-116-116-114-95-105-110-105-116-0
69544|data|DCB "pthread_mutexattr_settype",0|112-116-104-114-101-97-100-95-109-117-116-101-120-97-116-116-114-95-115-101-116-116-121-112-101-0
69570|data|DCB "pthread_mutexattr_destroy",0|112-116-104-114-101-97-100-95-109-117-116-101-120-97-116-116-114-95-100-101-115-116-114-111-121-0
69596|data|DCB "pthread_mutex_init",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-105-110-105-116-0
69615|data|DCB "libgnutls-deb0.so.28",0|108-105-98-103-110-117-116-108-115-45-100-101-98-48-46-115-111-46-50-56-0
69636|data|DCB "gnutls_dh_params_init",0|103-110-117-116-108-115-95-100-104-95-112-97-114-97-109-115-95-105-110-105-116-0
69658|data|DCB "gnutls_dh_set_prime_bits",0|103-110-117-116-108-115-95-100-104-95-115-101-116-95-112-114-105-109-101-95-98-105-116-115-0
69683|data|DCB "gnutls_handshake",0|103-110-117-116-108-115-95-104-97-110-100-115-104-97-107-101-0
69700|data|DCB "gnutls_credentials_set",0|103-110-117-116-108-115-95-99-114-101-100-101-110-116-105-97-108-115-95-115-101-116-0
69723|data|DCB "gnutls_deinit",0|103-110-117-116-108-115-95-100-101-105-110-105-116-0
69737|data|DCB "gnutls_record_recv",0|103-110-117-116-108-115-95-114-101-99-111-114-100-95-114-101-99-118-0
69756|data|DCB "gnutls_init",0|103-110-117-116-108-115-95-105-110-105-116-0
69768|data|DCB "gnutls_dh_params_generate2",0|103-110-117-116-108-115-95-100-104-95-112-97-114-97-109-115-95-103-101-110-101-114-97-116-101-50-0
69795|data|DCB "gnutls_anon_allocate_server_credentials",0|103-110-117-116-108-115-95-97-110-111-110-95-97-108-108-111-99-97-116-101-95-115-101-114-118-101-114-95-99-114-101-100-101-110-116-105-97-108-115-0
69835|data|DCB "gnutls_global_init",0|103-110-117-116-108-115-95-103-108-111-98-97-108-95-105-110-105-116-0
69854|data|DCB "gnutls_priority_set_direct",0|103-110-117-116-108-115-95-112-114-105-111-114-105-116-121-95-115-101-116-95-100-105-114-101-99-116-0
69881|data|DCB "gnutls_check_version",0|103-110-117-116-108-115-95-99-104-101-99-107-95-118-101-114-115-105-111-110-0
69902|data|DCB "gnutls_transport_set_ptr",0|103-110-117-116-108-115-95-116-114-97-110-115-112-111-114-116-95-115-101-116-95-112-116-114-0
69927|data|DCB "gnutls_set_default_priority",0|103-110-117-116-108-115-95-115-101-116-95-100-101-102-97-117-108-116-95-112-114-105-111-114-105-116-121-0
69955|data|DCB "gnutls_anon_set_server_dh_params",0|103-110-117-116-108-115-95-97-110-111-110-95-115-101-116-95-115-101-114-118-101-114-95-100-104-95-112-97-114-97-109-115-0
69988|data|DCB "gnutls_certificate_server_set_request",0|103-110-117-116-108-115-95-99-101-114-116-105-102-105-99-97-116-101-95-115-101-114-118-101-114-95-115-101-116-95-114-101-113-117-101-115-116-0
70026|data|DCB "gnutls_record_send",0|103-110-117-116-108-115-95-114-101-99-111-114-100-95-115-101-110-100-0
70045|data|DCB "libm.so.6",0|108-105-98-109-46-115-111-46-54-0
70055|data|DCB "libgcc_s.so.1",0|108-105-98-103-99-99-95-115-46-115-111-46-49-0
70069|data|DCB "__aeabi_unwind_cpp_pr0",0|95-95-97-101-97-98-105-95-117-110-119-105-110-100-95-99-112-112-95-112-114-48-0
70092|data|DCB "__aeabi_unwind_cpp_pr1",0|95-95-97-101-97-98-105-95-117-110-119-105-110-100-95-99-112-112-95-112-114-49-0
70115|data|DCB "__aeabi_idiv",0|95-95-97-101-97-98-105-95-105-100-105-118-0
70128|data|DCB "__aeabi_uidivmod",0|95-95-97-101-97-98-105-95-117-105-100-105-118-109-111-100-0
70145|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
70155|data|DCB "socket",0|115-111-99-107-101-116-0
70162|data|DCB "fflush",0|102-102-108-117-115-104-0
70169|data|DCB "strcpy",0|115-116-114-99-112-121-0
70176|data|DCB "sprintf",0|115-112-114-105-110-116-102-0
70184|data|DCB "fopen",0|102-111-112-101-110-0
70190|data|DCB "optind",0|111-112-116-105-110-100-0
70197|data|DCB "perror",0|112-101-114-114-111-114-0
70204|data|DCB "isblank",0|105-115-98-108-97-110-107-0
70212|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
70220|data|DCB "puts",0|112-117-116-115-0
70225|data|DCB "putchar",0|112-117-116-99-104-97-114-0
70233|data|DCB "listen",0|108-105-115-116-101-110-0
70240|data|DCB "abort",0|97-98-111-114-116-0
70246|data|DCB "strtok",0|115-116-114-116-111-107-0
70253|data|DCB "strtol",0|115-116-114-116-111-108-0
70260|data|DCB "fgets",0|102-103-101-116-115-0
70266|data|DCB "calloc",0|99-97-108-108-111-99-0
70273|data|DCB "strlen",0|115-116-114-108-101-110-0
70280|data|DCB "memset",0|109-101-109-115-101-116-0
70287|data|DCB "bind",0|98-105-110-100-0
70292|data|DCB "memcmp",0|109-101-109-99-109-112-0
70299|data|DCB "getopt",0|103-101-116-111-112-116-0
70306|data|DCB "vsnprintf",0|118-115-110-112-114-105-110-116-102-0
70316|data|DCB "poll",0|112-111-108-108-0
70321|data|DCB "fclose",0|102-99-108-111-115-101-0
70328|data|DCB "malloc",0|109-97-108-108-111-99-0
70335|data|DCB "strcasecmp",0|115-116-114-99-97-115-101-99-109-112-0
70346|data|DCB "optarg",0|111-112-116-97-114-103-0
70353|data|DCB "stderr",0|115-116-100-101-114-114-0
70360|data|DCB "strncasecmp",0|115-116-114-110-99-97-115-101-99-109-112-0
70372|data|DCB "fwrite",0|102-119-114-105-116-101-0
70379|data|DCB "localtime",0|108-111-99-97-108-116-105-109-101-0
70389|data|DCB "fprintf",0|102-112-114-105-110-116-102-0
70397|data|DCB "getsockname",0|103-101-116-115-111-99-107-110-97-109-101-0
70409|data|DCB "fdopen",0|102-100-111-112-101-110-0
70416|data|DCB "memmove",0|109-101-109-109-111-118-101-0
70424|data|DCB "strcmp",0|115-116-114-99-109-112-0
70431|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
70449|data|DCB "random",0|114-97-110-100-111-109-0
70456|data|DCB "free",0|102-114-101-101-0
70461|data|DCB "_fini",0|95-102-105-110-105-0
70467|data|DCB "_edata",0|95-101-100-97-116-97-0
70474|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
70486|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
70500|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
70512|data|DCB "__end__",0|95-95-101-110-100-95-95-0
70520|data|DCB "_end",0|95-101-110-100-0
70525|data|DCB "GCC_3.5",0|71-67-67-95-51-46-53-0
70533|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
70543|data|DCB "GNUTLS_DEBIAN_0_1_4",0|71-78-85-84-76-83-95-68-69-66-73-65-78-95-48-95-49-95-52-0
70563|data|DCB "CXXABI_1.3",0|67-88-88-65-66-73-95-49-46-51-0
70574|data|DCB "CXXABI_ARM_1.3.3",0|67-88-88-65-66-73-95-65-82-77-95-49-46-51-46-51-0
70591|data|DCB "GLIBCXX_3.4",0|71-76-73-66-67-88-88-95-51-46-52-0
70603|data|DCB 0|0
70604|data|DCW 0|0-0
70606|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
70608|data|DCW 8; __aeabi_unwind_cpp_pr1@@GCC_3.5|8-0
70610|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
70612|data|DCW 8; __aeabi_unwind_cpp_pr0@@GCC_3.5|8-0
70614|data|DCW 0; local  symbol: __gmon_start__|0-0
70616|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
70618|data|DCW 3; write@@GLIBC_2.4|3-0
70620|data|DCW 6; strcmp@@GLIBC_2.4|6-0
70622|data|DCW 6; fflush@@GLIBC_2.4|6-0
70624|data|DCW 6; fgets@@GLIBC_2.4|6-0
70626|data|DCW 6; listen@@GLIBC_2.4|6-0
70628|data|DCW 3; pthread_mutexattr_settype@@GLIBC_2.4|3-0
70630|data|DCW 2; _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3.4|2-0
70632|data|DCW 6; strcpy@@GLIBC_2.4|6-0
70634|data|DCW 1; global symbol: __bss_start__|1-0
70636|data|DCW 4; gnutls_transport_set_ptr@@GNUTLS_DEBIAN_0_1_4|4-0
70638|data|DCW 4; gnutls_global_init@@GNUTLS_DEBIAN_0_1_4|4-0
70640|data|DCW 6; getsockname@@GLIBC_2.4|6-0
70642|data|DCW 6; __libc_start_main@@GLIBC_2.4|6-0
70644|data|DCW 1; global symbol: _bss_end__|1-0
70646|data|DCW 3; pthread_attr_init@@GLIBC_2.4|3-0
70648|data|DCW 4; gnutls_init@@GNUTLS_DEBIAN_0_1_4|4-0
70650|data|DCW 7; __cxa_end_catch@@CXXABI_1.3|7-0
70652|data|DCW 3; pthread_mutex_destroy@@GLIBC_2.4|3-0
70654|data|DCW 4; gnutls_anon_allocate_server_credentials@@GNUTLS_DEBIAN_0_1_4|4-0
70656|data|DCW 6; fprintf@@GLIBC_2.4|6-0
70658|data|DCW 3; pthread_mutexattr_destroy@@GLIBC_2.4|3-0
70660|data|DCW 6; strncpy@@GLIBC_2.4|6-0
70662|data|DCW 6; exit@@GLIBC_2.4|6-0
70664|data|DCW 3; pthread_create@@GLIBC_2.4|3-0
70666|data|DCW 8; __aeabi_idiv@@GCC_3.5|8-0
70668|data|DCW 6; perror@@GLIBC_2.4|6-0
70670|data|DCW 3; __errno_location@@GLIBC_2.4|3-0
70672|data|DCW 6; fopen@@GLIBC_2.4|6-0
70674|data|DCW 6; strlen@@GLIBC_2.4|6-0
70676|data|DCW 1; global symbol: _edata|1-0
70678|data|DCW 6; abort@@GLIBC_2.4|6-0
70680|data|DCW 7; __gxx_personality_v0@@CXXABI_1.3|7-0
70682|data|DCW 6; time@@GLIBC_2.4|6-0
70684|data|DCW 3; close@@GLIBC_2.4|3-0
70686|data|DCW 3; pthread_mutex_unlock@@GLIBC_2.4|3-0
70688|data|DCW 3; read@@GLIBC_2.4|3-0
70690|data|DCW 4; gnutls_anon_set_server_dh_params@@GNUTLS_DEBIAN_0_1_4|4-0
70692|data|DCW 7; __cxa_rethrow@@CXXABI_1.3|7-0
70694|data|DCW 4; gnutls_dh_params_init@@GNUTLS_DEBIAN_0_1_4|4-0
70696|data|DCW 6; getopt@@GLIBC_2.4|6-0
70698|data|DCW 3; pthread_join@@GLIBC_2.4|3-0
70700|data|DCW 4; gnutls_deinit@@GNUTLS_DEBIAN_0_1_4|4-0
70702|data|DCW 4; gnutls_dh_set_prime_bits@@GNUTLS_DEBIAN_0_1_4|4-0
70704|data|DCW 3; nanosleep@@GLIBC_2.4|3-0
70706|data|DCW 1; global symbol: __end__|1-0
70708|data|DCW 6; fwrite@@GLIBC_2.4|6-0
70710|data|DCW 6; stderr@@GLIBC_2.4|6-0
70712|data|DCW 6; vsnprintf@@GLIBC_2.4|6-0
70714|data|DCW 3; sigaction@@GLIBC_2.4|3-0
70716|data|DCW 2; _ZNSsC1EPKcRKSaIcE@@GLIBCXX_3.4|2-0
70718|data|DCW 1; global symbol: _fini|1-0
70720|data|DCW 1; global symbol: _init|1-0
70722|data|DCW 4; gnutls_set_default_priority@@GNUTLS_DEBIAN_0_1_4|4-0
70724|data|DCW 6; printf@@GLIBC_2.4|6-0
70726|data|DCW 6; poll@@GLIBC_2.4|6-0
70728|data|DCW 6; random@@GLIBC_2.4|6-0
70730|data|DCW 2; _ZSt17__throw_bad_allocv@@GLIBCXX_3.4|2-0
70732|data|DCW 6; strtok@@GLIBC_2.4|6-0
70734|data|DCW 6; strtol@@GLIBC_2.4|6-0
70736|data|DCW 8; __aeabi_uidivmod@@GCC_3.5|8-0
70738|data|DCW 2; _ZNSs4_Rep10_M_destroyERKSaIcE@@GLIBCXX_3.4|2-0
70740|data|DCW 1; global symbol: __bss_start|1-0
70742|data|DCW 3; pthread_attr_setdetachstate@@GLIBC_2.4|3-0
70744|data|DCW 3; pthread_mutex_lock@@GLIBC_2.4|3-0
70746|data|DCW 5; __aeabi_atexit@@CXXABI_ARM_1.3.3|5-0
70748|data|DCW 6; optarg@@GLIBC_2.4|6-0
70750|data|DCW 3; pthread_mutexattr_init@@GLIBC_2.4|3-0
70752|data|DCW 2; _ZSt20__throw_length_errorPKc@@GLIBCXX_3.4|2-0
70754|data|DCW 6; putchar@@GLIBC_2.4|6-0
70756|data|DCW 6; memmove@@GLIBC_2.4|6-0
70758|data|DCW 6; strncasecmp@@GLIBC_2.4|6-0
70760|data|DCW 6; localtime@@GLIBC_2.4|6-0
70762|data|DCW 1; global symbol: _end|1-0
70764|data|DCW 3; __pthread_key_create@@GLIBC_2.4|3-0
70766|data|DCW 2; _ZNSs6assignERKSs@@GLIBCXX_3.4|2-0
70768|data|DCW 6; puts@@GLIBC_2.4|6-0
70770|data|DCW 7; __cxa_end_cleanup@@CXXABI_1.3|7-0
70772|data|DCW 7; _ZTVN10__cxxabiv117__class_type_infoE@@CXXABI_1.3|7-0
70774|data|DCW 3; pthread_attr_setstacksize@@GLIBC_2.4|3-0
70776|data|DCW 6; calloc@@GLIBC_2.4|6-0
70778|data|DCW 4; gnutls_dh_params_generate2@@GNUTLS_DEBIAN_0_1_4|4-0
70780|data|DCW 6; strcasecmp@@GLIBC_2.4|6-0
70782|data|DCW 6; fdopen@@GLIBC_2.4|6-0
70784|data|DCW 6; fclose@@GLIBC_2.4|6-0
70786|data|DCW 6; memset@@GLIBC_2.4|6-0
70788|data|DCW 1; global symbol: __bss_end__|1-0
70790|data|DCW 6; memcmp@@GLIBC_2.4|6-0
70792|data|DCW 3; pthread_attr_destroy@@GLIBC_2.4|3-0
70794|data|DCW 4; gnutls_check_version@@GNUTLS_DEBIAN_0_1_4|4-0
70796|data|DCW 4; gnutls_handshake@@GNUTLS_DEBIAN_0_1_4|4-0
70798|data|DCW 2; _Znwj@@GLIBCXX_3.4|2-0
70800|data|DCW 6; sprintf@@GLIBC_2.4|6-0
70802|data|DCW 7; __cxa_begin_catch@@CXXABI_1.3|7-0
70804|data|DCW 6; isblank@@GLIBC_2.4|6-0
70806|data|DCW 4; gnutls_record_recv@@GNUTLS_DEBIAN_0_1_4|4-0
70808|data|DCW 6; free@@GLIBC_2.4|6-0
70810|data|DCW 4; gnutls_priority_set_direct@@GNUTLS_DEBIAN_0_1_4|4-0
70812|data|DCW 2; _ZNSsC1ERKSs@@GLIBCXX_3.4|2-0
70814|data|DCW 3; pthread_mutex_trylock@@GLIBC_2.4|3-0
70816|data|DCW 4; gnutls_record_send@@GNUTLS_DEBIAN_0_1_4|4-0
70818|data|DCW 2; _ZdlPv@@GLIBCXX_3.4|2-0
70820|data|DCW 3; accept@@GLIBC_2.4|3-0
70822|data|DCW 4; gnutls_certificate_server_set_request@@GNUTLS_DEBIAN_0_1_4|4-0
70824|data|DCW 6; bind@@GLIBC_2.4|6-0
70826|data|DCW 6; socket@@GLIBC_2.4|6-0
70828|data|DCW 6; malloc@@GLIBC_2.4|6-0
70830|data|DCW 4; gnutls_credentials_set@@GNUTLS_DEBIAN_0_1_4|4-0
70832|data|DCW 2; _ZNSs6assignEPKcj@@GLIBCXX_3.4|2-0
70834|data|DCW 6; optind@@GLIBC_2.4|6-0
70836|data|DCW 3; pthread_mutex_init@@GLIBC_2.4|3-0
70838|data|DCW 0|0-0
70840|data|Elf32_Verneed <1, 1, aLibgccSSo1 - byte_10CB0, 0x10, 0x20>; "libgcc_s.so.1"|1-0-1-0-247-4-0-0-16-0-0-0-32-0-0-0
70856|data|Elf32_Vernaux <0xB792655, 0, 8, aGcc35 - byte_10CB0, 0>; "GCC_3.5"|85-38-121-11-0-0-8-0-205-6-0-0-0-0-0-0
70872|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_10CB0, 0x10, 0x20>; "libc.so.6"|1-0-1-0-81-5-0-0-16-0-0-0-32-0-0-0
70888|data|Elf32_Vernaux <0xD696914, 0, 6, aGlibc24 - byte_10CB0, 0>; "GLIBC_2.4"|20-105-105-13-0-0-6-0-213-6-0-0-0-0-0-0
70904|data|Elf32_Verneed <1, 1, aLibgnutlsDeb0S - byte_10CB0, 0x10, 0x20>; "libgnutls-deb0.so.28"|1-0-1-0-63-3-0-0-16-0-0-0-32-0-0-0
70920|data|Elf32_Vernaux <0xD97DBB4, 0, 4, aGnutlsDebian01 - byte_10CB0, 0>; "GNUTLS_DEBIAN_0_1_4"|180-219-151-13-0-0-4-0-223-6-0-0-0-0-0-0
70936|data|Elf32_Verneed <1, 1, aLibpthreadSo0 - byte_10CB0, 0x10, 0x20>; "libpthread.so.0"|1-0-1-0-239-1-0-0-16-0-0-0-32-0-0-0
70952|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_10CB0, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-213-6-0-0-0-0-0-0
70968|data|Elf32_Verneed <1, 3, aLibstdcSo6 - byte_10CB0, 0x10, 0>; "libstdc++.so.6"|1-0-3-0-1-0-0-0-16-0-0-0-0-0-0-0
70984|data|Elf32_Vernaux <0x56BAFD3, 0, 7, aCxxabi13 - byte_10CB0, 0x10>; "CXXABI_1.3"|211-175-107-5-0-0-7-0-243-6-0-0-16-0-0-0
71000|data|Elf32_Vernaux <0x849AFA3, 0, 5, aCxxabiArm133 - byte_10CB0, 0x10>; "CXXABI_ARM_1.3.3"|163-175-73-8-0-0-5-0-254-6-0-0-16-0-0-0
71016|data|Elf32_Vernaux <0x8922974, 0, 2, aGlibcxx34 - byte_10CB0, 0>; "GLIBCXX_3.4"|116-41-146-8-0-0-2-0-15-7-0-0-0-0-0-0
71032|data|Elf32_Rel <0x252B0, 0x515>; R_ARM_GLOB_DAT __gmon_start__|176-82-2-0-21-5-0-0
71040|data|Elf32_Rel <0x252C8, 0xD14>; R_ARM_COPY _ZNSs4_Rep20_S_empty_rep_storageE|200-82-2-0-20-13-0-0
71048|data|Elf32_Rel <0x252D8, 0x7314>; R_ARM_COPY optind|216-82-2-0-20-115-0-0
71056|data|Elf32_Rel <0x252E0, 0x5414>; R_ARM_COPY _ZTVN10__cxxabiv117__class_type_infoE|224-82-2-0-20-84-0-0
71064|data|Elf32_Rel <0x2530C, 0x4814>; R_ARM_COPY optarg|12-83-2-0-20-72-0-0
71072|data|Elf32_Rel <0x25310, 0x3514>; R_ARM_COPY stderr|16-83-2-0-20-53-0-0
71080|data|Elf32_Rel <0x2512C, 0x6116>; R_ARM_JUMP_SLOT _Znwj|44-81-2-0-22-97-0-0
71088|data|Elf32_Rel <0x25130, 0x4616>; R_ARM_JUMP_SLOT pthread_mutex_lock|48-81-2-0-22-70-0-0
71096|data|Elf32_Rel <0x25134, 0x7416>; R_ARM_JUMP_SLOT pthread_mutex_init|52-81-2-0-22-116-0-0
71104|data|Elf32_Rel <0x25138, 0x3B16>; R_ARM_JUMP_SLOT gnutls_set_default_priority|56-81-2-0-22-59-0-0
71112|data|Elf32_Rel <0x2513C, 0x4716>; R_ARM_JUMP_SLOT __aeabi_atexit|60-81-2-0-22-71-0-0
71120|data|Elf32_Rel <0x25140, 0x5816>; R_ARM_JUMP_SLOT strcasecmp|64-81-2-0-22-88-0-0
71128|data|Elf32_Rel <0x25144, 0x5916>; R_ARM_JUMP_SLOT fdopen|68-81-2-0-22-89-0-0
71136|data|Elf32_Rel <0x25148, 0x4116>; R_ARM_JUMP_SLOT strtol|72-81-2-0-22-65-0-0
71144|data|Elf32_Rel <0x2514C, 0x6616>; R_ARM_JUMP_SLOT free|76-81-2-0-22-102-0-0
71152|data|Elf32_Rel <0x25150, 0x1916>; R_ARM_JUMP_SLOT gnutls_anon_allocate_server_credentials|80-81-2-0-22-25-0-0
71160|data|Elf32_Rel <0x25154, 0x4916>; R_ARM_JUMP_SLOT pthread_mutexattr_init|84-81-2-0-22-73-0-0
71168|data|Elf32_Rel <0x25158, 0x1B16>; R_ARM_JUMP_SLOT pthread_mutexattr_destroy|88-81-2-0-22-27-0-0
71176|data|Elf32_Rel <0x2515C, 0x3F16>; R_ARM_JUMP_SLOT _ZSt17__throw_bad_allocv|92-81-2-0-22-63-0-0
71184|data|Elf32_Rel <0x25160, 0x7216>; R_ARM_JUMP_SLOT _ZNSs6assignEPKcj|96-81-2-0-22-114-0-0
71192|data|Elf32_Rel <0x25164, 0x6316>; R_ARM_JUMP_SLOT __cxa_begin_catch|100-81-2-0-22-99-0-0
71200|data|Elf32_Rel <0x25168, 0x4216>; R_ARM_JUMP_SLOT __aeabi_uidivmod|104-81-2-0-22-66-0-0
71208|data|Elf32_Rel <0x2516C, 0x2F16>; R_ARM_JUMP_SLOT pthread_join|108-81-2-0-22-47-0-0
71216|data|Elf32_Rel <0x25170, 0x6D16>; R_ARM_JUMP_SLOT gnutls_certificate_server_set_request|112-81-2-0-22-109-0-0
71224|data|Elf32_Rel <0x25174, 0x1D16>; R_ARM_JUMP_SLOT exit|116-81-2-0-22-29-0-0
71232|data|Elf32_Rel <0x25178, 0x3C16>; R_ARM_JUMP_SLOT printf|120-81-2-0-22-60-0-0
71240|data|Elf32_Rel <0x2517C, 0x4A16>; R_ARM_JUMP_SLOT _ZSt20__throw_length_errorPKc|124-81-2-0-22-74-0-0
71248|data|Elf32_Rel <0x25180, 0x5216>; R_ARM_JUMP_SLOT puts|128-81-2-0-22-82-0-0
71256|data|Elf32_Rel <0x25184, 0x3016>; R_ARM_JUMP_SLOT gnutls_deinit|132-81-2-0-22-48-0-0
71264|data|Elf32_Rel <0x25188, 0x3116>; R_ARM_JUMP_SLOT gnutls_dh_set_prime_bits|136-81-2-0-22-49-0-0
71272|data|Elf32_Rel <0x2518C, 0x4016>; R_ARM_JUMP_SLOT strtok|140-81-2-0-22-64-0-0
71280|data|Elf32_Rel <0x25190, 0x2016>; R_ARM_JUMP_SLOT perror|144-81-2-0-22-32-0-0
71288|data|Elf32_Rel <0x25194, 0x6816>; R_ARM_JUMP_SLOT _ZNSsC1ERKSs|148-81-2-0-22-104-0-0
71296|data|Elf32_Rel <0x25198, 0x3216>; R_ARM_JUMP_SLOT nanosleep|152-81-2-0-22-50-0-0
71304|data|Elf32_Rel <0x2519C, 0x4B16>; R_ARM_JUMP_SLOT putchar|156-81-2-0-22-75-0-0
71312|data|Elf32_Rel <0x251A0, 0x5B16>; R_ARM_JUMP_SLOT memset|160-81-2-0-22-91-0-0
71320|data|Elf32_Rel <0x251A4, 0xB16>; R_ARM_JUMP_SLOT listen|164-81-2-0-22-11-0-0
71328|data|Elf32_Rel <0x251A8, 0x6916>; R_ARM_JUMP_SLOT pthread_mutex_trylock|168-81-2-0-22-105-0-0
71336|data|Elf32_Rel <0x251AC, 0x2816>; R_ARM_JUMP_SLOT close|172-81-2-0-22-40-0-0
71344|data|Elf32_Rel <0x251B0, 0x2216>; R_ARM_JUMP_SLOT fopen|176-81-2-0-22-34-0-0
71352|data|Elf32_Rel <0x251B4, 0x2A16>; R_ARM_JUMP_SLOT read|180-81-2-0-22-42-0-0
71360|data|Elf32_Rel <0x251B8, 0x4316>; R_ARM_JUMP_SLOT _ZNSs4_Rep10_M_destroyERKSaIcE|184-81-2-0-22-67-0-0
71368|data|Elf32_Rel <0x251BC, 0x2516>; R_ARM_JUMP_SLOT abort|188-81-2-0-22-37-0-0
71376|data|Elf32_Rel <0x251C0, 0x5F16>; R_ARM_JUMP_SLOT gnutls_check_version|192-81-2-0-22-95-0-0
71384|data|Elf32_Rel <0x251C4, 0x3D16>; R_ARM_JUMP_SLOT poll|196-81-2-0-22-61-0-0
71392|data|Elf32_Rel <0x251C8, 0x1116>; R_ARM_JUMP_SLOT gnutls_global_init|200-81-2-0-22-17-0-0
71400|data|Elf32_Rel <0x251CC, 0x4C16>; R_ARM_JUMP_SLOT memmove|204-81-2-0-22-76-0-0
71408|data|Elf32_Rel <0x251D0, 0x4E16>; R_ARM_JUMP_SLOT localtime|208-81-2-0-22-78-0-0
71416|data|Elf32_Rel <0x251D4, 0xE16>; R_ARM_JUMP_SLOT strcpy|212-81-2-0-22-14-0-0
71424|data|Elf32_Rel <0x251D8, 0x4516>; R_ARM_JUMP_SLOT pthread_attr_setdetachstate|216-81-2-0-22-69-0-0
71432|data|Elf32_Rel <0x251DC, 0x6B16>; R_ARM_JUMP_SLOT _ZdlPv|220-81-2-0-22-107-0-0
71440|data|Elf32_Rel <0x251E0, 0x2E16>; R_ARM_JUMP_SLOT getopt|224-81-2-0-22-46-0-0
71448|data|Elf32_Rel <0x251E4, 0x5016>; R_ARM_JUMP_SLOT __pthread_key_create|228-81-2-0-22-80-0-0
71456|data|Elf32_Rel <0x251E8, 0x6E16>; R_ARM_JUMP_SLOT bind|232-81-2-0-22-110-0-0
71464|data|Elf32_Rel <0x251EC, 0x1816>; R_ARM_JUMP_SLOT pthread_mutex_destroy|236-81-2-0-22-24-0-0
71472|data|Elf32_Rel <0x251F0, 0x1016>; R_ARM_JUMP_SLOT gnutls_transport_set_ptr|240-81-2-0-22-16-0-0
71480|data|Elf32_Rel <0x251F4, 0x6A16>; R_ARM_JUMP_SLOT gnutls_record_send|244-81-2-0-22-106-0-0
71488|data|Elf32_Rel <0x251F8, 0x5316>; R_ARM_JUMP_SLOT __cxa_end_cleanup|248-81-2-0-22-83-0-0
71496|data|Elf32_Rel <0x251FC, 0x6F16>; R_ARM_JUMP_SLOT socket|252-81-2-0-22-111-0-0
71504|data|Elf32_Rel <0x25200, 0x3816>; R_ARM_JUMP_SLOT _ZNSsC1EPKcRKSaIcE|0-82-2-0-22-56-0-0
71512|data|Elf32_Rel <0x25204, 0x2B16>; R_ARM_JUMP_SLOT gnutls_anon_set_server_dh_params|4-82-2-0-22-43-0-0
71520|data|Elf32_Rel <0x25208, 0x6716>; R_ARM_JUMP_SLOT gnutls_priority_set_direct|8-82-2-0-22-103-0-0
71528|data|Elf32_Rel <0x2520C, 0x4D16>; R_ARM_JUMP_SLOT strncasecmp|12-82-2-0-22-77-0-0
71536|data|Elf32_Rel <0x25210, 0x5116>; R_ARM_JUMP_SLOT _ZNSs6assignERKSs|16-82-2-0-22-81-0-0
71544|data|Elf32_Rel <0x25214, 0x5E16>; R_ARM_JUMP_SLOT pthread_attr_destroy|20-82-2-0-22-94-0-0
71552|data|Elf32_Rel <0x25218, 0x5516>; R_ARM_JUMP_SLOT pthread_attr_setstacksize|24-82-2-0-22-85-0-0
71560|data|Elf32_Rel <0x2521C, 0x3716>; R_ARM_JUMP_SLOT sigaction|28-82-2-0-22-55-0-0
71568|data|Elf32_Rel <0x25220, 0x1516>; R_ARM_JUMP_SLOT pthread_attr_init|32-82-2-0-22-21-0-0
71576|data|Elf32_Rel <0x25224, 0x5616>; R_ARM_JUMP_SLOT calloc|36-82-2-0-22-86-0-0
71584|data|Elf32_Rel <0x25228, 0x7116>; R_ARM_JUMP_SLOT gnutls_credentials_set|40-82-2-0-22-113-0-0
71592|data|Elf32_Rel <0x2522C, 0xA16>; R_ARM_JUMP_SLOT fgets|44-82-2-0-22-10-0-0
71600|data|Elf32_Rel <0x25230, 0x1F16>; R_ARM_JUMP_SLOT __aeabi_idiv|48-82-2-0-22-31-0-0
71608|data|Elf32_Rel <0x25234, 0x2C16>; R_ARM_JUMP_SLOT __cxa_rethrow|52-82-2-0-22-44-0-0
71616|data|Elf32_Rel <0x25238, 0x3416>; R_ARM_JUMP_SLOT fwrite|56-82-2-0-22-52-0-0
71624|data|Elf32_Rel <0x2523C, 0x7016>; R_ARM_JUMP_SLOT malloc|60-82-2-0-22-112-0-0
71632|data|Elf32_Rel <0x25240, 0x2316>; R_ARM_JUMP_SLOT strlen|64-82-2-0-22-35-0-0
71640|data|Elf32_Rel <0x25244, 0x1616>; R_ARM_JUMP_SLOT gnutls_init|68-82-2-0-22-22-0-0
71648|data|Elf32_Rel <0x25248, 0x6C16>; R_ARM_JUMP_SLOT accept|72-82-2-0-22-108-0-0
71656|data|Elf32_Rel <0x2524C, 0x1A16>; R_ARM_JUMP_SLOT fprintf|76-82-2-0-22-26-0-0
71664|data|Elf32_Rel <0x25250, 0x5A16>; R_ARM_JUMP_SLOT fclose|80-82-2-0-22-90-0-0
71672|data|Elf32_Rel <0x25254, 0x716>; R_ARM_JUMP_SLOT write|84-82-2-0-22-7-0-0
71680|data|Elf32_Rel <0x25258, 0x6216>; R_ARM_JUMP_SLOT sprintf|88-82-2-0-22-98-0-0
71688|data|Elf32_Rel <0x2525C, 0x1716>; R_ARM_JUMP_SLOT __cxa_end_catch|92-82-2-0-22-23-0-0
71696|data|Elf32_Rel <0x25260, 0x3E16>; R_ARM_JUMP_SLOT random|96-82-2-0-22-62-0-0
71704|data|Elf32_Rel <0x25264, 0x2616>; R_ARM_JUMP_SLOT __gxx_personality_v0|100-82-2-0-22-38-0-0
71712|data|Elf32_Rel <0x25268, 0x2D16>; R_ARM_JUMP_SLOT gnutls_dh_params_init|104-82-2-0-22-45-0-0
71720|data|Elf32_Rel <0x2526C, 0x6016>; R_ARM_JUMP_SLOT gnutls_handshake|108-82-2-0-22-96-0-0
71728|data|Elf32_Rel <0x25270, 0x1E16>; R_ARM_JUMP_SLOT pthread_create|112-82-2-0-22-30-0-0
71736|data|Elf32_Rel <0x25274, 0x816>; R_ARM_JUMP_SLOT strcmp|116-82-2-0-22-8-0-0
71744|data|Elf32_Rel <0x25278, 0x5716>; R_ARM_JUMP_SLOT gnutls_dh_params_generate2|120-82-2-0-22-87-0-0
71752|data|Elf32_Rel <0x2527C, 0xC16>; R_ARM_JUMP_SLOT pthread_mutexattr_settype|124-82-2-0-22-12-0-0
71760|data|Elf32_Rel <0x25280, 0x2716>; R_ARM_JUMP_SLOT time|128-82-2-0-22-39-0-0
71768|data|Elf32_Rel <0x25284, 0x2116>; R_ARM_JUMP_SLOT __errno_location|132-82-2-0-22-33-0-0
71776|data|Elf32_Rel <0x25288, 0x1C16>; R_ARM_JUMP_SLOT strncpy|136-82-2-0-22-28-0-0
71784|data|Elf32_Rel <0x2528C, 0x916>; R_ARM_JUMP_SLOT fflush|140-82-2-0-22-9-0-0
71792|data|Elf32_Rel <0x25290, 0x5D16>; R_ARM_JUMP_SLOT memcmp|144-82-2-0-22-93-0-0
71800|data|Elf32_Rel <0x25294, 0x6416>; R_ARM_JUMP_SLOT isblank|148-82-2-0-22-100-0-0
71808|data|Elf32_Rel <0x25298, 0x1216>; R_ARM_JUMP_SLOT getsockname|152-82-2-0-22-18-0-0
71816|data|Elf32_Rel <0x2529C, 0x6516>; R_ARM_JUMP_SLOT gnutls_record_recv|156-82-2-0-22-101-0-0
71824|data|Elf32_Rel <0x252A0, 0x1316>; R_ARM_JUMP_SLOT __libc_start_main|160-82-2-0-22-19-0-0
71832|data|Elf32_Rel <0x252A4, 0x516>; R_ARM_JUMP_SLOT __gmon_start__|164-82-2-0-22-5-0-0
71840|data|Elf32_Rel <0x252A8, 0x2916>; R_ARM_JUMP_SLOT pthread_mutex_unlock|168-82-2-0-22-41-0-0
71848|data|Elf32_Rel <0x252AC, 0x3616>; R_ARM_JUMP_SLOT vsnprintf|172-82-2-0-22-54-0-0
71856|code|PUSH            {R3,LR}; _init|8-64-45-233
71860|code|BL              sub_123A8|187-2-0-235
71864|code|POP             {R3,PC}|8-128-189-232
71868|code|PUSH            {LR}|4-224-45-229
71872|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x118CC)|4-224-159-229
71876|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
71880|code|LDR             PC, [LR,#8]!|8-240-190-229
71884|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x118CC|84-56-1-0
71888|code|ADR             R12, 0x118D8|0-198-143-226
71892|code|ADD             R12, R12, #0x13000|19-202-140-226
71896|code|LDR             PC, [R12,#(_Znwj_ptr - 0x248D8)]!; operator new(uint)|84-248-188-229
71900|code|ADR             R12, 0x118E4|0-198-143-226
71904|code|ADD             R12, R12, #0x13000|19-202-140-226
71908|code|LDR             PC, [R12,#(pthread_mutex_lock_ptr - 0x248E4)]!; __imp_pthread_mutex_lock|76-248-188-229
71912|code|ADR             R12, 0x118F0|0-198-143-226
71916|code|ADD             R12, R12, #0x13000|19-202-140-226
71920|code|LDR             PC, [R12,#(pthread_mutex_init_ptr - 0x248F0)]!; __imp_pthread_mutex_init|68-248-188-229
71924|code|ADR             R12, 0x118FC|0-198-143-226
71928|code|ADD             R12, R12, #0x13000|19-202-140-226
71932|code|LDR             PC, [R12,#(gnutls_set_default_priority_ptr - 0x248FC)]!; __imp_gnutls_set_default_priority|60-248-188-229
71936|code|BX              PC|120-71
71938|data|ALIGN 4|192-70
71940|code|ADR             R12, 0x1190C|0-198-143-226
71944|code|ADD             R12, R12, #0x13000|19-202-140-226
71948|code|LDR             PC, [R12,#(__aeabi_atexit_ptr - 0x2490C)]!; __imp___aeabi_atexit|48-248-188-229
71952|code|ADR             R12, 0x11918|0-198-143-226
71956|code|ADD             R12, R12, #0x13000|19-202-140-226
71960|code|LDR             PC, [R12,#(strcasecmp_ptr - 0x24918)]!; __imp_strcasecmp|40-248-188-229
71964|code|ADR             R12, 0x11924|0-198-143-226
71968|code|ADD             R12, R12, #0x13000|19-202-140-226
71972|code|LDR             PC, [R12,#(fdopen_ptr - 0x24924)]!; __imp_fdopen|32-248-188-229
71976|code|ADR             R12, 0x11930|0-198-143-226
71980|code|ADD             R12, R12, #0x13000|19-202-140-226
71984|code|LDR             PC, [R12,#(strtol_ptr - 0x24930)]!; __imp_strtol|24-248-188-229
71988|code|ADR             R12, 0x1193C|0-198-143-226
71992|code|ADD             R12, R12, #0x13000|19-202-140-226
71996|code|LDR             PC, [R12,#(free_ptr - 0x2493C)]!; __imp_free|16-248-188-229
72000|code|ADR             R12, 0x11948|0-198-143-226
72004|code|ADD             R12, R12, #0x13000|19-202-140-226
72008|code|LDR             PC, [R12,#(gnutls_anon_allocate_server_credentials_ptr - 0x24948)]!; __imp_gnutls_anon_allocate_server_credentials|8-248-188-229
72012|code|ADR             R12, 0x11954|0-198-143-226
72016|code|ADD             R12, R12, #0x13000|19-202-140-226
72020|code|LDR             PC, [R12,#(pthread_mutexattr_init_ptr - 0x24954)]!; __imp_pthread_mutexattr_init|0-248-188-229
72024|code|ADR             R12, 0x11960|0-198-143-226
72028|code|ADD             R12, R12, #0x13000|19-202-140-226
72032|code|LDR             PC, [R12,#(pthread_mutexattr_destroy_ptr - 0x24960)]!; __imp_pthread_mutexattr_destroy|248-247-188-229
72036|code|ADR             R12, 0x1196C|0-198-143-226
72040|code|ADD             R12, R12, #0x13000|19-202-140-226
72044|code|LDR             PC, [R12,#(_ZSt17__throw_bad_allocv_ptr - 0x2496C)]!; std::__throw_bad_alloc(void)|240-247-188-229
72048|code|ADR             R12, 0x11978|0-198-143-226
72052|code|ADD             R12, R12, #0x13000|19-202-140-226
72056|code|LDR             PC, [R12,#(_ZNSs6assignEPKcj_ptr - 0x24978)]!; std::string::assign(char const*,uint)|232-247-188-229
72060|code|ADR             R12, 0x11984|0-198-143-226
72064|code|ADD             R12, R12, #0x13000|19-202-140-226
72068|code|LDR             PC, [R12,#(__cxa_begin_catch_ptr - 0x24984)]!; __imp___cxa_begin_catch|224-247-188-229
72072|code|ADR             R12, 0x11990|0-198-143-226
72076|code|ADD             R12, R12, #0x13000|19-202-140-226
72080|code|LDR             PC, [R12,#(__aeabi_uidivmod_ptr - 0x24990)]!; __imp___aeabi_uidivmod|216-247-188-229
72084|code|ADR             R12, 0x1199C|0-198-143-226
72088|code|ADD             R12, R12, #0x13000|19-202-140-226
72092|code|LDR             PC, [R12,#(pthread_join_ptr - 0x2499C)]!; __imp_pthread_join|208-247-188-229
72096|code|ADR             R12, 0x119A8|0-198-143-226
72100|code|ADD             R12, R12, #0x13000|19-202-140-226
72104|code|LDR             PC, [R12,#(gnutls_certificate_server_set_request_ptr - 0x249A8)]!; __imp_gnutls_certificate_server_set_request|200-247-188-229
72108|code|ADR             R12, 0x119B4|0-198-143-226
72112|code|ADD             R12, R12, #0x13000|19-202-140-226
72116|code|LDR             PC, [R12,#(exit_ptr - 0x249B4)]!; __imp_exit|192-247-188-229
72120|code|ADR             R12, 0x119C0|0-198-143-226
72124|code|ADD             R12, R12, #0x13000|19-202-140-226
72128|code|LDR             PC, [R12,#(printf_ptr - 0x249C0)]!; __imp_printf|184-247-188-229
72132|code|ADR             R12, 0x119CC|0-198-143-226
72136|code|ADD             R12, R12, #0x13000|19-202-140-226
72140|code|LDR             PC, [R12,#(_ZSt20__throw_length_errorPKc_ptr - 0x249CC)]!; std::__throw_length_error(char const*)|176-247-188-229
72144|code|ADR             R12, 0x119D8|0-198-143-226
72148|code|ADD             R12, R12, #0x13000|19-202-140-226
72152|code|LDR             PC, [R12,#(puts_ptr - 0x249D8)]!; __imp_puts|168-247-188-229
72156|code|ADR             R12, 0x119E4|0-198-143-226
72160|code|ADD             R12, R12, #0x13000|19-202-140-226
72164|code|LDR             PC, [R12,#(gnutls_deinit_ptr - 0x249E4)]!; __imp_gnutls_deinit|160-247-188-229
72168|code|BX              PC|120-71
72170|data|ALIGN 4|192-70
72172|code|ADR             R12, 0x119F4|0-198-143-226
72176|code|ADD             R12, R12, #0x13000|19-202-140-226
72180|code|LDR             PC, [R12,#(gnutls_dh_set_prime_bits_ptr - 0x249F4)]!; __imp_gnutls_dh_set_prime_bits|148-247-188-229
72184|code|ADR             R12, 0x11A00|0-198-143-226
72188|code|ADD             R12, R12, #0x13000|19-202-140-226
72192|code|LDR             PC, [R12,#(strtok_ptr - 0x24A00)]!; __imp_strtok|140-247-188-229
72196|code|ADR             R12, 0x11A0C|0-198-143-226
72200|code|ADD             R12, R12, #0x13000|19-202-140-226
72204|code|LDR             PC, [R12,#(perror_ptr - 0x24A0C)]!; __imp_perror|132-247-188-229
72208|code|ADR             R12, 0x11A18|0-198-143-226
72212|code|ADD             R12, R12, #0x13000|19-202-140-226
72216|code|LDR             PC, [R12,#(_ZNSsC1ERKSs_ptr - 0x24A18)]!; std::string::string(std::string const&)|124-247-188-229
72220|code|ADR             R12, 0x11A24|0-198-143-226
72224|code|ADD             R12, R12, #0x13000|19-202-140-226
72228|code|LDR             PC, [R12,#(nanosleep_ptr - 0x24A24)]!; __imp_nanosleep|116-247-188-229
72232|code|ADR             R12, 0x11A30|0-198-143-226
72236|code|ADD             R12, R12, #0x13000|19-202-140-226
72240|code|LDR             PC, [R12,#(putchar_ptr - 0x24A30)]!; __imp_putchar|108-247-188-229
72244|code|ADR             R12, 0x11A3C|0-198-143-226
72248|code|ADD             R12, R12, #0x13000|19-202-140-226
72252|code|LDR             PC, [R12,#(memset_ptr - 0x24A3C)]!; __imp_memset|100-247-188-229
72256|code|ADR             R12, 0x11A48|0-198-143-226
72260|code|ADD             R12, R12, #0x13000|19-202-140-226
72264|code|LDR             PC, [R12,#(listen_ptr - 0x24A48)]!; __imp_listen|92-247-188-229
72268|code|ADR             R12, 0x11A54|0-198-143-226
72272|code|ADD             R12, R12, #0x13000|19-202-140-226
72276|code|LDR             PC, [R12,#(pthread_mutex_trylock_ptr - 0x24A54)]!; __imp_pthread_mutex_trylock|84-247-188-229
72280|code|ADR             R12, 0x11A60|0-198-143-226
72284|code|ADD             R12, R12, #0x13000|19-202-140-226
72288|code|LDR             PC, [R12,#(close_ptr - 0x24A60)]!; __imp_close|76-247-188-229
72292|code|ADR             R12, 0x11A6C|0-198-143-226
72296|code|ADD             R12, R12, #0x13000|19-202-140-226
72300|code|LDR             PC, [R12,#(fopen_ptr - 0x24A6C)]!; __imp_fopen|68-247-188-229
72304|code|ADR             R12, 0x11A78|0-198-143-226
72308|code|ADD             R12, R12, #0x13000|19-202-140-226
72312|code|LDR             PC, [R12,#(read_ptr - 0x24A78)]!; __imp_read|60-247-188-229
72316|code|BX              PC; std::string::_Rep::_M_destroy(std::allocator<char> const&)|120-71
72318|data|ALIGN 4|192-70
72320|code|ADR             R12, 0x11A88|0-198-143-226
72324|code|ADD             R12, R12, #0x13000|19-202-140-226
72328|code|LDR             PC, [R12,#(_ZNSs4_Rep10_M_destroyERKSaIcE_ptr - 0x24A88)]!; std::string::_Rep::_M_destroy(std::allocator<char> const&)|48-247-188-229
72332|code|ADR             R12, 0x11A94|0-198-143-226
72336|code|ADD             R12, R12, #0x13000|19-202-140-226
72340|code|LDR             PC, [R12,#(abort_ptr - 0x24A94)]!; __imp_abort|40-247-188-229
72344|code|ADR             R12, 0x11AA0|0-198-143-226
72348|code|ADD             R12, R12, #0x13000|19-202-140-226
72352|code|LDR             PC, [R12,#(gnutls_check_version_ptr - 0x24AA0)]!; __imp_gnutls_check_version|32-247-188-229
72356|code|ADR             R12, 0x11AAC|0-198-143-226
72360|code|ADD             R12, R12, #0x13000|19-202-140-226
72364|code|LDR             PC, [R12,#(poll_ptr - 0x24AAC)]!; __imp_poll|24-247-188-229
72368|code|ADR             R12, 0x11AB8|0-198-143-226
72372|code|ADD             R12, R12, #0x13000|19-202-140-226
72376|code|LDR             PC, [R12,#(gnutls_global_init_ptr - 0x24AB8)]!; __imp_gnutls_global_init|16-247-188-229
72380|code|ADR             R12, 0x11AC4|0-198-143-226
72384|code|ADD             R12, R12, #0x13000|19-202-140-226
72388|code|LDR             PC, [R12,#(memmove_ptr - 0x24AC4)]!; __imp_memmove|8-247-188-229
72392|code|ADR             R12, 0x11AD0|0-198-143-226
72396|code|ADD             R12, R12, #0x13000|19-202-140-226
72400|code|LDR             PC, [R12,#(localtime_ptr - 0x24AD0)]!; __imp_localtime|0-247-188-229
72404|code|ADR             R12, 0x11ADC|0-198-143-226
72408|code|ADD             R12, R12, #0x13000|19-202-140-226
72412|code|LDR             PC, [R12,#(strcpy_ptr - 0x24ADC)]!; __imp_strcpy|248-246-188-229
72416|code|ADR             R12, 0x11AE8|0-198-143-226
72420|code|ADD             R12, R12, #0x13000|19-202-140-226
72424|code|LDR             PC, [R12,#(pthread_attr_setdetachstate_ptr - 0x24AE8)]!; __imp_pthread_attr_setdetachstate|240-246-188-229
72428|code|BX              PC; operator delete(void *)|120-71
72430|data|ALIGN 4|192-70
72432|code|ADR             R12, 0x11AF8|0-198-143-226
72436|code|ADD             R12, R12, #0x13000|19-202-140-226
72440|code|LDR             PC, [R12,#(_ZdlPv_ptr - 0x24AF8)]!; operator delete(void *)|228-246-188-229
72444|code|ADR             R12, 0x11B04|0-198-143-226
72448|code|ADD             R12, R12, #0x13000|19-202-140-226
72452|code|LDR             PC, [R12,#(getopt_ptr - 0x24B04)]!; __imp_getopt|220-246-188-229
72456|code|ADR             R12, 0x11B10|0-198-143-226
72460|code|ADD             R12, R12, #0x13000|19-202-140-226
72464|code|LDR             PC, [R12,#(__pthread_key_create_ptr - 0x24B10)]!; __imp___pthread_key_create|212-246-188-229
72468|code|ADR             R12, 0x11B1C|0-198-143-226
72472|code|ADD             R12, R12, #0x13000|19-202-140-226
72476|code|LDR             PC, [R12,#(bind_ptr - 0x24B1C)]!; __imp_bind|204-246-188-229
72480|code|ADR             R12, 0x11B28|0-198-143-226
72484|code|ADD             R12, R12, #0x13000|19-202-140-226
72488|code|LDR             PC, [R12,#(pthread_mutex_destroy_ptr - 0x24B28)]!; __imp_pthread_mutex_destroy|196-246-188-229
72492|code|ADR             R12, 0x11B34|0-198-143-226
72496|code|ADD             R12, R12, #0x13000|19-202-140-226
72500|code|LDR             PC, [R12,#(gnutls_transport_set_ptr_ptr - 0x24B34)]!; __imp_gnutls_transport_set_ptr|188-246-188-229
72504|code|ADR             R12, 0x11B40|0-198-143-226
72508|code|ADD             R12, R12, #0x13000|19-202-140-226
72512|code|LDR             PC, [R12,#(gnutls_record_send_ptr - 0x24B40)]!; __imp_gnutls_record_send|180-246-188-229
72516|code|ADR             R12, 0x11B4C|0-198-143-226
72520|code|ADD             R12, R12, #0x13000|19-202-140-226
72524|code|LDR             PC, [R12,#(__cxa_end_cleanup_ptr - 0x24B4C)]!; __imp___cxa_end_cleanup|172-246-188-229
72528|code|ADR             R12, 0x11B58|0-198-143-226
72532|code|ADD             R12, R12, #0x13000|19-202-140-226
72536|code|LDR             PC, [R12,#(socket_ptr - 0x24B58)]!; __imp_socket|164-246-188-229
72540|code|ADR             R12, 0x11B64|0-198-143-226
72544|code|ADD             R12, R12, #0x13000|19-202-140-226
72548|code|LDR             PC, [R12,#(_ZNSsC1EPKcRKSaIcE_ptr - 0x24B64)]!; std::string::string(char const*,std::allocator<char> const&)|156-246-188-229
72552|code|ADR             R12, 0x11B70|0-198-143-226
72556|code|ADD             R12, R12, #0x13000|19-202-140-226
72560|code|LDR             PC, [R12,#(gnutls_anon_set_server_dh_params_ptr - 0x24B70)]!; __imp_gnutls_anon_set_server_dh_params|148-246-188-229
72564|code|ADR             R12, 0x11B7C|0-198-143-226
72568|code|ADD             R12, R12, #0x13000|19-202-140-226
72572|code|LDR             PC, [R12,#(gnutls_priority_set_direct_ptr - 0x24B7C)]!; __imp_gnutls_priority_set_direct|140-246-188-229
72576|code|ADR             R12, 0x11B88|0-198-143-226
72580|code|ADD             R12, R12, #0x13000|19-202-140-226
72584|code|LDR             PC, [R12,#(strncasecmp_ptr - 0x24B88)]!; __imp_strncasecmp|132-246-188-229
72588|code|ADR             R12, 0x11B94|0-198-143-226
72592|code|ADD             R12, R12, #0x13000|19-202-140-226
72596|code|LDR             PC, [R12,#(_ZNSs6assignERKSs_ptr - 0x24B94)]!; std::string::assign(std::string const&)|124-246-188-229
72600|code|ADR             R12, 0x11BA0|0-198-143-226
72604|code|ADD             R12, R12, #0x13000|19-202-140-226
72608|code|LDR             PC, [R12,#(pthread_attr_destroy_ptr - 0x24BA0)]!; __imp_pthread_attr_destroy|116-246-188-229
72612|code|ADR             R12, 0x11BAC|0-198-143-226
72616|code|ADD             R12, R12, #0x13000|19-202-140-226
72620|code|LDR             PC, [R12,#(pthread_attr_setstacksize_ptr - 0x24BAC)]!; __imp_pthread_attr_setstacksize|108-246-188-229
72624|code|ADR             R12, 0x11BB8|0-198-143-226
72628|code|ADD             R12, R12, #0x13000|19-202-140-226
72632|code|LDR             PC, [R12,#(sigaction_ptr - 0x24BB8)]!; __imp_sigaction|100-246-188-229
72636|code|ADR             R12, 0x11BC4|0-198-143-226
72640|code|ADD             R12, R12, #0x13000|19-202-140-226
72644|code|LDR             PC, [R12,#(pthread_attr_init_ptr - 0x24BC4)]!; __imp_pthread_attr_init|92-246-188-229
72648|code|ADR             R12, 0x11BD0|0-198-143-226
72652|code|ADD             R12, R12, #0x13000|19-202-140-226
72656|code|LDR             PC, [R12,#(calloc_ptr - 0x24BD0)]!; __imp_calloc|84-246-188-229
72660|code|ADR             R12, 0x11BDC|0-198-143-226
72664|code|ADD             R12, R12, #0x13000|19-202-140-226
72668|code|LDR             PC, [R12,#(gnutls_credentials_set_ptr - 0x24BDC)]!; __imp_gnutls_credentials_set|76-246-188-229
72672|code|ADR             R12, 0x11BE8|0-198-143-226
72676|code|ADD             R12, R12, #0x13000|19-202-140-226
72680|code|LDR             PC, [R12,#(fgets_ptr - 0x24BE8)]!; __imp_fgets|68-246-188-229
72684|code|ADR             R12, 0x11BF4|0-198-143-226
72688|code|ADD             R12, R12, #0x13000|19-202-140-226
72692|code|LDR             PC, [R12,#(__aeabi_idiv_ptr - 0x24BF4)]!; __imp___aeabi_idiv|60-246-188-229
72696|code|ADR             R12, 0x11C00|0-198-143-226
72700|code|ADD             R12, R12, #0x13000|19-202-140-226
72704|code|LDR             PC, [R12,#(__cxa_rethrow_ptr - 0x24C00)]!; __imp___cxa_rethrow|52-246-188-229
72708|code|ADR             R12, 0x11C0C|0-198-143-226
72712|code|ADD             R12, R12, #0x13000|19-202-140-226
72716|code|LDR             PC, [R12,#(fwrite_ptr - 0x24C0C)]!; __imp_fwrite|44-246-188-229
72720|code|ADR             R12, 0x11C18|0-198-143-226
72724|code|ADD             R12, R12, #0x13000|19-202-140-226
72728|code|LDR             PC, [R12,#(malloc_ptr - 0x24C18)]!; __imp_malloc|36-246-188-229
72732|code|ADR             R12, 0x11C24|0-198-143-226
72736|code|ADD             R12, R12, #0x13000|19-202-140-226
72740|code|LDR             PC, [R12,#(strlen_ptr - 0x24C24)]!; __imp_strlen|28-246-188-229
72744|code|ADR             R12, 0x11C30|0-198-143-226
72748|code|ADD             R12, R12, #0x13000|19-202-140-226
72752|code|LDR             PC, [R12,#(gnutls_init_ptr - 0x24C30)]!; __imp_gnutls_init|20-246-188-229
72756|code|ADR             R12, 0x11C3C|0-198-143-226
72760|code|ADD             R12, R12, #0x13000|19-202-140-226
72764|code|LDR             PC, [R12,#(accept_ptr - 0x24C3C)]!; __imp_accept|12-246-188-229
72768|code|ADR             R12, 0x11C48|0-198-143-226
72772|code|ADD             R12, R12, #0x13000|19-202-140-226
72776|code|LDR             PC, [R12,#(fprintf_ptr - 0x24C48)]!; __imp_fprintf|4-246-188-229
72780|code|ADR             R12, 0x11C54|0-198-143-226
72784|code|ADD             R12, R12, #0x13000|19-202-140-226
72788|code|LDR             PC, [R12,#(fclose_ptr - 0x24C54)]!; __imp_fclose|252-245-188-229
72792|code|ADR             R12, 0x11C60|0-198-143-226
72796|code|ADD             R12, R12, #0x13000|19-202-140-226
72800|code|LDR             PC, [R12,#(write_ptr - 0x24C60)]!; __imp_write|244-245-188-229
72804|code|ADR             R12, 0x11C6C|0-198-143-226
72808|code|ADD             R12, R12, #0x13000|19-202-140-226
72812|code|LDR             PC, [R12,#(sprintf_ptr - 0x24C6C)]!; __imp_sprintf|236-245-188-229
72816|code|ADR             R12, 0x11C78|0-198-143-226
72820|code|ADD             R12, R12, #0x13000|19-202-140-226
72824|code|LDR             PC, [R12,#(__cxa_end_catch_ptr - 0x24C78)]!; __imp___cxa_end_catch|228-245-188-229
72828|code|ADR             R12, 0x11C84|0-198-143-226
72832|code|ADD             R12, R12, #0x13000|19-202-140-226
72836|code|LDR             PC, [R12,#(random_ptr - 0x24C84)]!; __imp_random|220-245-188-229
72840|code|ADR             R12, 0x11C90|0-198-143-226
72844|code|ADD             R12, R12, #0x13000|19-202-140-226
72848|code|LDR             PC, [R12,#(__gxx_personality_v0_ptr - 0x24C90)]!; __imp___gxx_personality_v0|212-245-188-229
72852|code|ADR             R12, 0x11C9C|0-198-143-226
72856|code|ADD             R12, R12, #0x13000|19-202-140-226
72860|code|LDR             PC, [R12,#(gnutls_dh_params_init_ptr - 0x24C9C)]!; __imp_gnutls_dh_params_init|204-245-188-229
72864|code|ADR             R12, 0x11CA8|0-198-143-226
72868|code|ADD             R12, R12, #0x13000|19-202-140-226
72872|code|LDR             PC, [R12,#(gnutls_handshake_ptr - 0x24CA8)]!; __imp_gnutls_handshake|196-245-188-229
72876|code|ADR             R12, 0x11CB4|0-198-143-226
72880|code|ADD             R12, R12, #0x13000|19-202-140-226
72884|code|LDR             PC, [R12,#(pthread_create_ptr - 0x24CB4)]!; __imp_pthread_create|188-245-188-229
72888|code|ADR             R12, 0x11CC0|0-198-143-226
72892|code|ADD             R12, R12, #0x13000|19-202-140-226
72896|code|LDR             PC, [R12,#(strcmp_ptr - 0x24CC0)]!; __imp_strcmp|180-245-188-229
72900|code|BX              PC|120-71
72902|data|ALIGN 4|192-70
72904|code|ADR             R12, 0x11CD0|0-198-143-226
72908|code|ADD             R12, R12, #0x13000|19-202-140-226
72912|code|LDR             PC, [R12,#(gnutls_dh_params_generate2_ptr - 0x24CD0)]!; __imp_gnutls_dh_params_generate2|168-245-188-229
72916|code|ADR             R12, 0x11CDC|0-198-143-226
72920|code|ADD             R12, R12, #0x13000|19-202-140-226
72924|code|LDR             PC, [R12,#(pthread_mutexattr_settype_ptr - 0x24CDC)]!; __imp_pthread_mutexattr_settype|160-245-188-229
72928|code|ADR             R12, 0x11CE8|0-198-143-226
72932|code|ADD             R12, R12, #0x13000|19-202-140-226
72936|code|LDR             PC, [R12,#(time_ptr - 0x24CE8)]!; __imp_time|152-245-188-229
72940|code|ADR             R12, 0x11CF4|0-198-143-226
72944|code|ADD             R12, R12, #0x13000|19-202-140-226
72948|code|LDR             PC, [R12,#(__errno_location_ptr - 0x24CF4)]!; __imp___errno_location|144-245-188-229
72952|code|ADR             R12, 0x11D00|0-198-143-226
72956|code|ADD             R12, R12, #0x13000|19-202-140-226
72960|code|LDR             PC, [R12,#(strncpy_ptr - 0x24D00)]!; __imp_strncpy|136-245-188-229
72964|code|ADR             R12, 0x11D0C|0-198-143-226
72968|code|ADD             R12, R12, #0x13000|19-202-140-226
72972|code|LDR             PC, [R12,#(fflush_ptr - 0x24D0C)]!; __imp_fflush|128-245-188-229
72976|code|ADR             R12, 0x11D18|0-198-143-226
72980|code|ADD             R12, R12, #0x13000|19-202-140-226
72984|code|LDR             PC, [R12,#(memcmp_ptr - 0x24D18)]!; __imp_memcmp|120-245-188-229
72988|code|ADR             R12, 0x11D24|0-198-143-226
72992|code|ADD             R12, R12, #0x13000|19-202-140-226
72996|code|LDR             PC, [R12,#(isblank_ptr - 0x24D24)]!; __imp_isblank|112-245-188-229
73000|code|ADR             R12, 0x11D30|0-198-143-226
73004|code|ADD             R12, R12, #0x13000|19-202-140-226
73008|code|LDR             PC, [R12,#(getsockname_ptr - 0x24D30)]!; __imp_getsockname|104-245-188-229
73012|code|ADR             R12, 0x11D3C|0-198-143-226
73016|code|ADD             R12, R12, #0x13000|19-202-140-226
73020|code|LDR             PC, [R12,#(gnutls_record_recv_ptr - 0x24D3C)]!; __imp_gnutls_record_recv|96-245-188-229
73024|code|ADR             R12, 0x11D48|0-198-143-226
73028|code|ADD             R12, R12, #0x13000|19-202-140-226
73032|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x24D48)]!; __imp___libc_start_main|88-245-188-229
73036|code|ADR             R12, 0x11D54|0-198-143-226
73040|code|ADD             R12, R12, #0x13000|19-202-140-226
73044|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x24D54)]!; __imp___gmon_start__|80-245-188-229
73048|code|ADR             R12, 0x11D60|0-198-143-226
73052|code|ADD             R12, R12, #0x13000|19-202-140-226
73056|code|LDR             PC, [R12,#(pthread_mutex_unlock_ptr - 0x24D60)]!; __imp_pthread_mutex_unlock|72-245-188-229
73060|code|ADR             R12, 0x11D6C|0-198-143-226
73064|code|ADD             R12, R12, #0x13000|19-202-140-226
73068|code|LDR             PC, [R12,#(vsnprintf_ptr - 0x24D6C)]!; __imp_vsnprintf|64-245-188-229
73072|code|MOV             R3, #0x11B08|65-246-8-51-192-242-1-3
73080|code|PUSH            {LR}|0-181
73082|code|CBZ             R3, loc_11D9C|123-177
73084|code|ADD.W           R2, R0, #8|0-241-8-2
73088|code|DMB.W           SY|191-243-95-143
73092|code|LDREX.W         R3, [R2]|82-232-0-63
73096|code|ADD.W           LR, R3, #0xFFFFFFFF|3-241-255-62
73100|code|STREX.W         R12, LR, [R2]|66-232-0-236
73104|code|CMP.W           R12, #0|188-241-0-15
73108|code|BNE             loc_11D84|246-209
73110|code|DMB.W           SY|191-243-95-143
73114|code|B               loc_11DA2|2-224
73116|code|LDR             R3, [R0,#8]|131-104
73118|code|SUBS            R2, R3, #1|90-30
73120|code|STR             R2, [R0,#8]|130-96
73122|code|CMP             R3, #0|0-43
73124|code|BGT             locret_11DAE|3-220
73126|code|POP.W           {LR}|93-248-4-235
73130|code|B.W             j__ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-103-190
73134|code|POP.W           {PC}|93-248-4-251
73138|data|ALIGN 4|0-191
73140|code|MOV             R3, #0x11B08|65-246-8-51-192-242-1-3
73148|code|PUSH            {LR}|0-181
73150|code|CBZ             R3, loc_11DE0|123-177
73152|code|ADD.W           R2, R0, #8|0-241-8-2
73156|code|DMB.W           SY|191-243-95-143
73160|code|LDREX.W         R3, [R2]|82-232-0-63
73164|code|ADD.W           LR, R3, #0xFFFFFFFF|3-241-255-62
73168|code|STREX.W         R12, LR, [R2]|66-232-0-236
73172|code|CMP.W           R12, #0|188-241-0-15
73176|code|BNE             loc_11DC8|246-209
73178|code|DMB.W           SY|191-243-95-143
73182|code|B               loc_11DE6|2-224
73184|code|LDR             R3, [R0,#8]|131-104
73186|code|SUBS            R2, R3, #1|90-30
73188|code|STR             R2, [R0,#8]|130-96
73190|code|CMP             R3, #0|0-43
73192|code|BGT             locret_11DF2|3-220
73194|code|POP.W           {LR}|93-248-4-235
73198|code|B.W             j__ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-69-190
73202|code|POP.W           {PC}|93-248-4-251
73206|data|ALIGN 4|0-191
73208|code|PUSH.W          {R4-R11,LR}|45-233-240-79
73212|code|SUB             SP, SP, #0x11C|199-176
73214|code|MOV             R4, R0|4-70
73216|code|MOV             R5, R1|13-70
73218|code|BLX             gnutls_global_init|255-247-86-238
73222|code|MOV             R0, #0x14670|68-242-112-96-192-242-1-0
73230|code|BLX             gnutls_check_version|255-247-68-238
73234|code|CMP             R0, #0|0-40
73236|code|BEQ.W           loc_122F2|0-240-109-130
73240|code|MOV.W           R10, #0|79-240-0-10
73244|code|MOVW            R6, #0x530C|69-242-12-54
73248|code|MOVW            R7, #0x52BC|69-242-188-39
73252|code|MOV             R8, R10|208-70
73254|code|MOVT.W          R6, #2|192-242-2-6
73258|code|MOVT.W          R7, #2|192-242-2-7
73262|code|MOV.W           R9, #0x19|79-240-25-9
73266|code|MOV.W           R11, #0x64 ; 'd'|79-240-100-11
73270|code|STR.W           R10, [SP,#0x140+var_134]|205-248-12-160
73274|code|STR.W           R10, [SP,#0x140+var_138]|205-248-8-160
73278|code|MOVW            R2, #0x4698; jumptable 00011E5E default case, cases 1-4,6-31,33-38,40-50,52,53,55,56,59-63|68-242-152-98
73282|code|MOV             R0, R4; argc|32-70
73284|code|MOVT.W          R2, #1; shortopts|192-242-1-2
73288|code|MOV             R1, R5; argv|41-70
73290|code|BLX             getopt|255-247-88-238
73294|code|ADDS            R3, R0, #1|67-28
73296|code|BEQ.W           loc_11FB0|0-240-174-128
73300|code|UXTB            R0, R0|192-178
73302|code|SUBS            R0, #0x3A ; ':'|58-56
73304|code|CMP             R0, #0x40; switch 65 cases|64-40
73306|code|BHI             def_11E5E; jumptable 00011E5E default case, cases 1-4,6-31,33-38,40-50,52,53,55,56,59-63|240-216
73308|code|ADR             R3, jpt_11E5E|1-163
73310|code|LDR.W           PC, [R3,R0,LSL#2]; switch jump|83-248-32-240
73314|data|ALIGN 4|0-191
73316|data|DCD loc_11FAA+1, def_11E5E+1, def_11E5E+1, def_11E5E+1; jump table for switch statement|171-31-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-171-31-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-105-31-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-165-31-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-151-31-1-0-63-30-1-0-63-30-1-0-135-31-1-0-63-30-1-0-63-30-1-0-129-31-1-0-115-31-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-63-30-1-0-109-31-1-0
73576|code|MOVS            R3, #1; jumptable 00011E5E case 32|1-35
73578|code|STR             R3, [SP,#0x140+var_134]|3-147
73580|code|LDR.W           R8, [R6]; jumptable 00011E5E case 64|214-248-0-128
73584|code|B               def_11E5E; jumptable 00011E5E default case, cases 1-4,6-31,33-38,40-50,52,53,55,56,59-63|101-231
73586|code|LDR             R0, [R6]; jumptable 00011E5E case 58|48-104
73588|code|MOVS            R1, #0; endptr|0-33
73590|code|MOVS            R2, #0xA; base|10-34
73592|code|BLX             strtol|255-247-214-236
73596|code|MOV             R11, R0|131-70
73598|code|B               def_11E5E; jumptable 00011E5E default case, cases 1-4,6-31,33-38,40-50,52,53,55,56,59-63|94-231
73600|code|MOV.W           R10, #1; jumptable 00011E5E case 57|79-240-1-10
73604|code|B               def_11E5E; jumptable 00011E5E default case, cases 1-4,6-31,33-38,40-50,52,53,55,56,59-63|91-231
73606|code|LDR             R0, [R6]; jumptable 00011E5E case 54|48-104
73608|code|MOVS            R1, #0; endptr|0-33
73610|code|MOVS            R2, #0xA; base|10-34
73612|code|BLX             strtol|255-247-204-236
73616|code|UXTH.W          R9, R0|31-250-128-249
73620|code|B               def_11E5E; jumptable 00011E5E default case, cases 1-4,6-31,33-38,40-50,52,53,55,56,59-63|83-231
73622|code|LDR             R0, [R6]; jumptable 00011E5E case 51|48-104
73624|code|MOVS            R1, #0; endptr|0-33
73626|code|MOVS            R2, #0xA; base|10-34
73628|code|BLX             strtol|255-247-196-236
73632|code|STR             R0, [R7,#(dword_252C0 - 0x252BC)]|120-96
73634|code|B               def_11E5E; jumptable 00011E5E default case, cases 1-4,6-31,33-38,40-50,52,53,55,56,59-63|76-231
73636|code|MOVS            R3, #1; jumptable 00011E5E case 39|1-35
73638|code|STR             R3, [SP,#0x140+var_138]|2-147
73640|code|B               def_11E5E; jumptable 00011E5E default case, cases 1-4,6-31,33-38,40-50,52,53,55,56,59-63|73-231
73642|code|MOVS            R0, #0; jumptable 00011E5E cases 0,5|0-32
73644|code|BL              sub_124BC|0-240-134-250
73648|code|MOV             R3, #0x252BC|69-242-188-35-192-242-2-3
73656|code|LDR             R3, [R3,#(dword_252C0 - 0x252BC)]|91-104
73658|code|CMP.W           R3, #0xA000|179-245-32-79
73662|code|BHI.W           loc_12340|0-242-191-129
73666|code|CMP.W           R11, #0x190|187-245-200-127
73670|code|BHI.W           loc_12332|0-242-180-129
73674|code|MOV             R3, #0x252D8|69-242-216-35-192-242-2-3
73682|code|LDR             R3, [R3]|27-104
73684|code|ADDS            R2, R3, #1|90-28
73686|code|CMP             R2, R4|162-66
73688|code|BNE             loc_11FAA; jumptable 00011E5E cases 0,5|231-209
73690|code|LDR.W           R1, [R5,R3,LSL#2]|85-248-35-16
73694|code|ADD             R0, SP, #0x140+var_EC|21-168
73696|code|BL              sub_13DBC|1-240-236-254
73700|code|MOVS            R1, #0; c|0-33
73702|code|MOVS            R2, #0x8C; n|140-34
73704|code|ADD             R0, SP, #0x140+s; s|35-168
73706|code|BLX             memset|255-247-36-237
73710|code|ADD             R1, SP, #0x140+s; act|35-169
73712|code|MOVS            R0, #0xD; sig|13-32
73714|code|MOVS            R2, #0; oact|0-34
73716|code|MOVS            R3, #1|1-35
73718|code|STR             R3, [SP,#0x140+s]|35-147
73720|code|BLX             sigaction|255-247-218-237
73724|code|CBNZ            R0, loc_12034|208-185
73726|code|MOV             R2, R0; oact|2-70
73728|code|MOVW            R3, #0x2459|66-242-89-67
73732|code|ADD             R1, SP, #0x140+s; act|35-169
73734|code|MOVS            R0, #2; sig|2-32
73736|code|MOVT.W          R3, #1|192-242-1-3
73740|code|MOVS            R4, #4|4-36
73742|code|STR             R3, [SP,#0x140+s]|35-147
73744|code|STR             R4, [SP,#0x140+var_30]|68-148
73746|code|BLX             sigaction|255-247-206-237
73750|code|CBZ             R0, loc_12042|160-177
73752|code|MOV             R0, #aCanTHandleSigi; s|68-242-244-96-192-242-1-0
73760|code|BLX             puts|255-247-214-236
73764|code|MOVS            R4, #2|2-36
73766|code|ADD             R0, SP, #0x140+var_EC|21-168
73768|code|BL              sub_12BBC|0-240-200-253
73772|code|MOV             R0, R4|32-70
73774|code|ADD             SP, SP, #0x11C|71-176
73776|code|POP.W           {R4-R11,PC}|189-232-240-143
73780|code|MOV             R0, #aCanTBlockSigpi; s|68-242-220-96-192-242-1-0
73788|code|BLX             puts|255-247-200-236
73792|code|B               loc_12024|240-231
73794|code|MOV             R0, #aTimeMessagesDa; s|68-242-12-112-192-242-1-0
73802|code|BLX             puts|255-247-194-236
73806|code|MOVS            R0, #0x18; unsigned int|24-32
73808|code|BLX             _Znwj; operator new(uint)|255-247-62-236
73812|code|MOVW            R1, #0x4748|68-242-72-113
73816|code|MOVS            R3, #0|0-35
73818|code|LDR             R2, [SP,#0x140+var_138]|2-154
73820|code|MOVT.W          R1, #1|192-242-1-1
73824|code|STR             R3, [SP,#0x140+var_140]|0-147
73826|code|MOV             R4, R0|4-70
73828|code|BL              sub_13988|1-240-144-252
73832|code|MOV             R6, #0x25318|69-242-24-54-192-242-2-6
73840|code|STR             R4, [R6,#(dword_25358 - 0x25318)]|52-100
73842|code|CMP.W           R8, #0|184-241-0-15
73846|code|BEQ.W           loc_122EC|0-240-57-129
73850|code|MOVS            R0, #0x18; unsigned int|24-32
73852|code|BLX             _Znwj; operator new(uint)|255-247-40-236
73856|code|MOVS            R2, #0|0-34
73858|code|MOV             R1, R8|65-70
73860|code|LDR             R3, [SP,#0x140+var_134]|3-155
73862|code|STR             R2, [SP,#0x140+var_140]|0-146
73864|code|STR             R0, [SP,#0x140+var_128]|6-144
73866|code|BL              sub_13988|1-240-125-252
73870|code|MOVS            R2, #0; protocol|0-34
73872|code|MOVS            R0, #2; domain|2-32
73874|code|MOVS            R1, #1; type|1-33
73876|code|BLX             socket|255-247-92-237
73880|code|MOV.W           R3, R9,LSR#8|79-234-25-35
73884|code|ORR.W           R9, R3, R9,LSL#8|67-234-9-41
73888|code|MOVS            R3, #0|0-35
73890|code|STR             R3, [SP,#0x140+addr.sa_data+2]|14-147
73892|code|MOVS            R2, #2|2-34
73894|code|STRH.W          R9, [SP,#0x140+addr.sa_data]|173-248-54-144
73898|code|STRH.W          R2, [SP,#0x140+addr]|173-248-52-32
73902|code|ADDS            R3, R0, #1|67-28
73904|code|STR             R0, [SP,#0x140+fd]|5-144
73906|code|BEQ.W           loc_1225E|0-240-212-128
73910|code|ADD             R1, SP, #0x140+addr; addr|13-169
73912|code|MOVS            R2, #0x10; len|16-34
73914|code|BLX             bind|255-247-44-237
73918|code|CMP             R0, #0|0-40
73920|code|BNE.W           loc_1225E|64-240-205-128
73924|code|LDR             R0, [SP,#0x140+fd]; fd|5-152
73926|code|MOVS            R1, #0xA; n|10-33
73928|code|BLX             listen|255-247-186-236
73932|code|MOV             R4, R0|4-70
73934|code|CMP             R0, #0|0-40
73936|code|BNE.W           loc_1225E|64-240-197-128
73940|code|LDR             R3, [SP,#0x140+fd]|5-155
73942|code|MOV             R1, R11; size|89-70
73944|code|MOVS            R0, #4; nmemb|4-32
73946|code|STR             R3, [SP,#0x140+fds]|11-147
73948|code|MOVS            R3, #1|1-35
73950|code|STRH.W          R3, [SP,#0x140+fds.events]|173-248-48-48
73954|code|BLX             calloc|255-247-114-237
73958|code|MOV             R1, R11; size|89-70
73960|code|MOVW            R3, #0x5318|69-242-24-51
73964|code|MOV             R5, R3|29-70
73966|code|STR             R0, [SP,#0x140+var_124]|7-144
73968|code|MOVS            R0, #4; nmemb|4-32
73970|code|BLX             calloc|255-247-106-237
73974|code|MOVW            R3, #0x5310|69-242-16-51
73978|code|MOV             R2, R3|26-70
73980|code|MOV             R3, R5|43-70
73982|code|MOVT.W          R3, #2|192-242-2-3
73986|code|STR             R3, [SP,#0x140+var_120]|8-147
73988|code|MOV             R3, R2|19-70
73990|code|MOVT.W          R3, #2|192-242-2-3
73994|code|STR             R3, [SP,#0x140+var_11C]|9-147
73996|code|STR             R0, [R6,#(dword_25360 - 0x25318)]|176-100
73998|code|MOV             R0, R4; timer|32-70
74000|code|BLX             time|255-247-230-237
74004|code|MOVS            R1, #0x3C ; '<'|60-33
74006|code|BLX             __aeabi_idiv|255-247-106-237
74010|code|MOVS            R4, #0x3C ; '<'|60-36
74012|code|MLA.W           R4, R0, R4, R4|0-251-4-68
74016|code|MOVS            R0, #0; timer|0-32
74018|code|BLX             time|255-247-222-237
74022|code|CMP             R4, R0|132-66
74024|code|MOV             R5, R0|5-70
74026|code|BGT             loc_12134|3-220
74028|code|LDR             R0, =unk_25320|135-72
74030|code|BL              sub_13C80|1-240-167-253
74034|code|ADDS            R4, #0x3C ; '<'|60-52
74036|code|SUBS            R5, R4, R5|101-27
74038|code|ADD             R0, SP, #0x140+fds; fds|11-168
74040|code|MOVS            R1, #1; nfds|1-33
74042|code|RSB.W           R2, R5, R5,LSL#5|197-235-69-18
74046|code|ADD.W           R2, R5, R2,LSL#2|5-235-130-2
74050|code|LSLS            R2, R2, #3; timeout|210-0
74052|code|BLX             poll|255-247-174-236
74056|code|CMP             R0, #0|0-40
74058|code|BLT.W           loc_1227C|192-242-151-128
74062|code|CMP             R0, #1|1-40
74064|code|MOV.W           R3, #0x10|79-240-16-3
74068|code|STR             R3, [SP,#0x140+addr_len]|10-147
74070|code|BNE             loc_12120|227-209
74072|code|ADD.W           R9, SP, #0x140+var_FC|13-241-68-9
74076|code|LDR             R0, [SP,#0x140+fd]; fd|5-152
74078|code|ADD             R2, SP, #0x140+addr_len; addr_len|10-170
74080|code|MOV             R1, R9; addr|73-70
74082|code|BLX             accept|255-247-104-237
74086|code|MOV             R3, R0|3-70
74088|code|ADDS            R3, #1|1-51
74090|code|STR             R0, [SP,#0x140+var_130]|4-144
74092|code|LDR             R0, =unk_25320|119-72
74094|code|BEQ.W           loc_122A4|0-240-153-128
74098|code|BL              sub_13B78|1-240-1-253
74102|code|LDR             R3, [R6,#(dword_2535C - 0x25318)]|115-108
74104|code|ADDS            R3, #1|1-51
74106|code|STR             R3, [R6,#(dword_2535C - 0x25318)]|115-100
74108|code|CMP.W           R11, #0|187-241-0-15
74112|code|BEQ.W           loc_122E0|0-240-174-128
74116|code|LDR             R3, [SP,#0x140+var_120]|8-155
74118|code|LDR             R3, [R3,#0x48]|155-108
74120|code|LDR             R2, [R3]|26-104
74122|code|CMP             R2, #1|1-42
74124|code|BNE.W           loc_122E6|64-240-171-128
74128|code|MOVS            R2, #0|0-34
74130|code|MOV             R5, R2|21-70
74132|code|B               loc_1219E|3-224
74134|code|LDR.W           R2, [R3,#4]!|83-248-4-47
74138|code|CMP             R2, #1|1-42
74140|code|BNE             loc_121A4|2-209
74142|code|ADDS            R5, #1|1-53
74144|code|CMP             R5, R11|93-69
74146|code|BNE             loc_12196|248-209
74148|code|STR             R5, [SP,#0x140+var_138]|2-149
74150|code|LDR             R1, [SP,#0x140+var_138]|2-153
74152|code|ADD.W           R8, SP, #0x140+attr|13-241-104-8
74156|code|LDR             R3, [R6,#(dword_25360 - 0x25318)]|179-108
74158|code|LSLS            R2, R1, #2|138-0
74160|code|STR             R2, [SP,#0x140+var_134]|3-146
74162|code|LDR.W           R3, [R3,R1,LSL#2]|83-248-33-48
74166|code|CMP             R3, #2|2-43
74168|code|BEQ.W           loc_122C6|0-240-133-128
74172|code|LDR             R3, [R6,#(dword_25360 - 0x25318)]|179-108
74174|code|MOVS            R2, #1|1-34
74176|code|LDR             R1, [SP,#0x140+var_134]|3-153
74178|code|MOV             R0, R8; attr|64-70
74180|code|STR             R2, [R3,R1]|90-80
74182|code|BLX             pthread_attr_init|255-247-250-236
74186|code|CMP             R0, #0|0-40
74188|code|BEQ             loc_122AA|109-208
74190|code|LDR             R3, [SP,#0x140+var_11C]|9-155
74192|code|MOVW            R0, #0x4798|68-242-152-112
74196|code|MOVS            R1, #1; size|1-33
74198|code|MOVT.W          R0, #1; ptr|192-242-1-0
74202|code|MOVS            R2, #0x1D; n|29-34
74204|code|LDR             R3, [R3]; s|27-104
74206|code|BLX             fwrite|255-247-18-237
74210|code|MOVS            R0, #0x20 ; ' '; size|32-32
74212|code|BLX             malloc|255-247-20-237
74216|code|LDR             R5, [SP,#0x140+var_138]|2-157
74218|code|MOV             R7, R0|7-70
74220|code|ADD.W           LR, R7, #8|7-241-8-14
74224|code|STR             R5, [R7]|61-96
74226|code|LDR             R5, [SP,#0x140+var_130]|4-157
74228|code|LDM.W           R9, {R0-R3}|153-232-15-0
74232|code|STR             R5, [R7,#4]|125-96
74234|code|LDR             R5, [SP,#0x140+var_128]|6-157
74236|code|STM.W           LR, {R0-R3}|142-232-15-0
74240|code|CMP             R5, #0|0-45
74242|code|BEQ             loc_122DC|107-208
74244|code|MOVS            R0, #0x18; unsigned int|24-32
74246|code|BLX             _Znwj; operator new(uint)|255-247-100-235
74250|code|MOV             R1, R5|41-70
74252|code|LDR             R2, [SP,#0x140+var_138]|2-154
74254|code|MOV             R9, R0|129-70
74256|code|BL              sub_139AC|1-240-204-251
74260|code|MOV             R1, R9|73-70
74262|code|LDR             R5, [SP,#0x140+var_124]|7-157
74264|code|MOVW            R2, #0x2B81|66-246-129-50
74268|code|LDR             R3, [SP,#0x140+var_134]|3-155
74270|code|MOVT.W          R2, #1; start_routine|192-242-1-2
74274|code|STR             R1, [R7,#0x1C]|249-97
74276|code|MOV             R1, R8; attr|65-70
74278|code|ADD             R3, R5|43-68
74280|code|STR.W           R10, [R7,#0x18]|199-248-24-160
74284|code|MOV             R0, R3; newthread|24-70
74286|code|MOV             R3, R7; arg|59-70
74288|code|BLX             pthread_create|255-247-60-237
74292|code|MOV             R5, R0|5-70
74294|code|MOV             R0, R8; attr|64-70
74296|code|BLX             pthread_attr_destroy|255-247-174-236
74300|code|CMP             R5, #0|0-45
74302|code|BEQ.W           loc_12120|63-244-111-175
74306|code|MOVW            R3, #0x5310|69-242-16-51
74310|code|MOVW            R0, #0x4768|68-242-104-112
74314|code|MOVT.W          R3, #2|192-242-2-3
74318|code|MOVT.W          R0, #1; ptr|192-242-1-0
74322|code|LDR             R3, [R3]; s|27-104
74324|code|MOVS            R1, #1; size|1-33
74326|code|MOVS            R2, #0x17; n|23-34
74328|code|BLX             fwrite|255-247-212-236
74332|code|B               loc_12278|12-224
74334|code|MOVW            R3, #0x5310|69-242-16-51
74338|code|MOVW            R0, #0x4780|68-242-128-112
74342|code|MOVT.W          R3, #2|192-242-2-3
74346|code|MOVT.W          R0, #1; ptr|192-242-1-0
74350|code|LDR             R3, [R3]; s|27-104
74352|code|MOVS            R1, #1; size|1-33
74354|code|MOVS            R2, #0x14; n|20-34
74356|code|BLX             fwrite|255-247-198-236
74360|code|MOVS            R4, #1|1-36
74362|code|B               loc_12026|212-230
74364|code|BLX             __errno_location|255-247-54-237
74368|code|LDR             R3, [R0]|3-104
74370|code|CMP             R3, #4|4-43
74372|code|BEQ.W           loc_12120|63-244-76-175
74376|code|MOVW            R3, #0x5310|69-242-16-51
74380|code|MOVW            R0, #0x4750|68-242-80-112
74384|code|MOVT.W          R3, #2|192-242-2-3
74388|code|MOVT.W          R0, #1; ptr|192-242-1-0
74392|code|LDR             R3, [R3]; s|27-104
74394|code|MOVS            R1, #1; size|1-33
74396|code|MOVS            R2, #0x16; n|22-34
74398|code|BLX             fwrite|255-247-178-236
74402|code|B               loc_12278|233-231
74404|code|BL              sub_13B0C|1-240-50-252
74408|code|B               loc_12120|58-231
74410|code|MOV             R1, R0; detachstate|1-70
74412|code|MOV             R0, R8; attr|64-70
74414|code|BLX             pthread_attr_setdetachstate|255-247-24-236
74418|code|CMP             R0, #0|0-40
74420|code|BNE             loc_121CE|139-209
74422|code|MOV             R0, R8; attr|64-70
74424|code|MOV.W           R1, #0x8000; stacksize|79-244-0-65
74428|code|BLX             pthread_attr_setstacksize|255-247-114-236
74432|code|CMP             R0, #0|0-40
74434|code|BNE             loc_121CE|132-209
74436|code|B               loc_121E2|141-231
74438|code|LDR             R3, [SP,#0x140+var_124]|7-155
74440|code|MOV             R1, R8; thread_return|65-70
74442|code|LDR             R2, [SP,#0x140+var_138]|2-154
74444|code|LDR.W           R0, [R3,R2,LSL#2]; th|83-248-34-0
74448|code|BLX             pthread_join|255-247-96-235
74452|code|LDR             R3, [R6,#(dword_2535C - 0x25318)]|115-108
74454|code|SUBS            R3, #1|1-59
74456|code|STR             R3, [R6,#(dword_2535C - 0x25318)]|115-100
74458|code|B               loc_121BC|111-231
74460|code|LDR             R1, [SP,#0x140+var_128]|6-153
74462|code|B               loc_12216|154-231
74464|code|STR.W           R11, [SP,#0x140+var_138]|205-248-8-176
74468|code|B               loc_121A6|95-231
74470|code|MOVS            R3, #0|0-35
74472|code|STR             R3, [SP,#0x140+var_138]|2-147
74474|code|B               loc_121A6|92-231
74476|code|STR.W           R8, [SP,#0x140+var_128]|205-248-24-128
74480|code|B               loc_1208E|205-230
74482|code|MOVW            R3, #0x5310|69-242-16-51
74486|code|MOVW            R0, #0x4678|68-242-120-96
74490|code|MOVT.W          R3, #2|192-242-2-3
74494|code|MOVT.W          R0, #1; ptr|192-242-1-0
74498|code|LDR             R3, [R3]; s|27-104
74500|code|MOVS            R1, #1; size|1-33
74502|code|MOVS            R2, #0x1E; n|30-34
74504|code|BLX             fwrite|255-247-124-236
74508|code|MOVS            R0, #1; status|1-32
74510|code|BLX             exit|255-247-78-235
74514|code|MOV             R0, R9; void *|72-70
74516|code|BLX             _ZdlPv; operator delete(void *)|255-247-236-235
74520|code|ADD             R0, SP, #0x140+var_EC|21-168
74522|code|BL              sub_12BBC|0-240-79-252
74526|code|BLX             __cxa_end_cleanup|255-247-18-236
74530|code|LDR             R0, [SP,#0x140+var_128]; void *|6-152
74532|code|BLX             _ZdlPv; operator delete(void *)|255-247-228-235
74536|code|B               loc_12318|246-231
74538|code|MOV             R0, R4; void *|32-70
74540|code|BLX             _ZdlPv; operator delete(void *)|255-247-224-235
74544|code|B               loc_12318|242-231
74546|code|MOV             R0, #0x146C0|68-242-192-96-192-242-1-0
74554|code|BL              sub_124BC|0-240-191-248
74558|code|B               loc_12318|235-231
74560|code|MOV             R0, #0x146A4|68-242-164-96-192-242-1-0
74568|code|BL              sub_124BC|0-240-184-248
74572|data|DCD unk_25320|32-83-2-0
74576|code|PUSH            {R4,LR}|16-181
74578|code|LDR             R4, =unk_25320|8-76
74580|code|MOV             R0, R4|32-70
74582|code|BL              sub_13AE0|1-240-195-251
74586|code|MOVW            R1, #0x3C45|67-246-69-65
74590|code|MOVW            R2, #0x52B8|69-242-184-34
74594|code|MOV             R0, R4|32-70
74596|code|MOVT.W          R1, #1|192-242-1-1
74600|code|MOVT.W          R2, #2|192-242-2-2
74604|code|POP.W           {R4,LR}|189-232-16-64
74608|code|B.W             j___aeabi_atexit|255-247-198-186
74612|data|DCD unk_25320|32-83-2-0
74616|code|MOV.W           R11, #0|79-240-0-11
74620|code|MOV.W           LR, #0|79-240-0-14
74624|code|POP             {R1}; argc|2-188
74626|code|MOV             R2, SP; ubp_av|106-70
74628|code|PUSH            {R2}; stack_end|4-180
74630|code|PUSH            {R0}; rtld_fini|1-180
74632|code|LDR.W           R12, =(nullsub_3+1)|223-248-16-192
74636|code|PUSH.W          {R12}; fini|77-248-4-205
74640|code|LDR             R0, =(sub_11DF8+1); main|3-72
74642|code|LDR             R3, =(sub_143A0+1); init|4-75
74644|code|BLX             __libc_start_main|255-247-212-236
74648|code|BLX             abort|255-247-120-235
74652|data|DCD nullsub_3+1|225-67-1-0
74656|data|DCD sub_11DF8+1|249-29-1-0
74660|data|DCD sub_143A0+1|161-67-1-0
74664|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x123B8)|20-48-159-229
74668|code|LDR             R2, =(__gmon_start___ptr_0 - 0x25120)|20-32-159-229
74672|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
74676|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
74680|code|CMP             R2, #0|0-0-82-227
74684|code|BXEQ            LR|30-255-47-1
74688|code|B               __gmon_start__|97-254-255-234
74692|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x123B8|104-45-1-0
74696|data|DCD __gmon_start___ptr_0 - 0x25120|144-1-0-0
74700|code|LDR             R3, =unk_252C7|7-75
74702|code|MOV             R0, #0x252C4|69-242-196-32-192-242-2-0
74710|code|SUBS            R3, R3, R0|27-26
74712|code|CMP             R3, #6|6-43
74714|code|BLS             locret_123E8|5-217
74716|code|MOV             R3, #0|64-242-0-3-192-242-0-3
74724|code|CBZ             R3, locret_123E8|3-177
74726|code|BX              R3|24-71
74728|code|BX              LR|112-71
74730|data|ALIGN 4|0-191
74732|data|DCD unk_252C7|199-82-2-0
74736|code|MOVW            R3, #0x52C4|69-242-196-35
74740|code|MOVW            R0, #0x52C4|69-242-196-32
74744|code|MOVT.W          R3, #2|192-242-2-3
74748|code|MOVT.W          R0, #2|192-242-2-0
74752|code|SUBS            R1, R3, R0|25-26
74754|code|ASRS            R1, R1, #2|137-16
74756|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
74760|code|ASRS            R1, R1, #1|73-16
74762|code|BEQ             locret_12418|5-208
74764|code|MOV             R3, #0|64-242-0-3-192-242-0-3
74772|code|CBZ             R3, locret_12418|3-177
74774|code|BX              R3|24-71
74776|code|BX              LR|112-71
74778|data|ALIGN 4|0-191
74780|code|PUSH            {R4,LR}|16-181
74782|code|MOV             R4, #0x25314|69-242-20-52-192-242-2-4
74790|code|LDRB            R3, [R4]|35-120
74792|code|CBNZ            R3, locret_12432|27-185
74794|code|BL              sub_123CC|255-247-207-255
74798|code|MOVS            R3, #1|1-35
74800|code|STRB            R3, [R4]|35-112
74802|code|POP             {R4,PC}|16-189
74804|code|MOVW            R0, #0x500C|69-242-12-0
74808|code|PUSH            {R3,LR}|8-181
74810|code|MOVT.W          R0, #2|192-242-2-0
74814|code|LDR             R3, [R0]|3-104
74816|code|CBNZ            R3, loc_12448|19-185
74818|code|POP.W           {R3,LR}|189-232-8-64
74822|code|B               sub_123F0|211-231
74824|code|MOV             R3, #0|64-242-0-3-192-242-0-3
74832|code|CMP             R3, #0|0-43
74834|code|BEQ             loc_12442|246-208
74836|code|BLX             R3|152-71
74838|code|B               loc_12442|244-231
74840|code|MOV             R2, #0x25318|69-242-24-50-192-242-2-2
74848|code|PUSH            {R3,LR}|8-181
74850|code|LDR             R3, [R2]|19-104
74852|code|ADDS            R3, #1|1-51
74854|code|STR             R3, [R2]|19-96
74856|code|CMP             R3, #2|2-43
74858|code|BGT             loc_1246E|0-220
74860|code|POP             {R3,PC}|8-189
74862|code|MOVS            R0, #1|1-32
74864|code|BLX             exit|255-247-156-234
74868|code|MOV             R3, #0x11B08|65-246-8-51-192-242-1-3
74876|code|PUSH            {LR}|0-181
74878|code|CBZ             R3, loc_124A6|147-177
74880|code|ADD.W           R2, R0, #8|0-241-8-2
74884|code|DMB.W           SY|191-243-95-143
74888|code|LDREX.W         R3, [R2]|82-232-0-63
74892|code|ADD.W           LR, R3, #0xFFFFFFFF|3-241-255-62
74896|code|STREX.W         R12, LR, [R2]|66-232-0-236
74900|code|CMP.W           R12, #0|188-241-0-15
74904|code|BNE             loc_12488|246-209
74906|code|CMP             R3, #0|0-43
74908|code|DMB.W           SY|191-243-95-143
74912|code|BLE             loc_124B2|7-221
74914|code|POP.W           {PC}|93-248-4-251
74918|code|LDR             R3, [R0,#8]|131-104
74920|code|CMP             R3, #0|0-43
74922|code|ADD.W           R2, R3, #0xFFFFFFFF|3-241-255-50
74926|code|STR             R2, [R0,#8]|130-96
74928|code|BGT             locret_124A2|247-220
74930|code|POP.W           {LR}|93-248-4-235
74934|code|B.W             j__ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-225-186
74938|data|ALIGN 4|0-191
74940|code|PUSH            {R3,LR}|8-181
74942|code|MOV             R1, R0|1-70
74944|code|CBZ             R0, loc_124CE|40-177
74946|code|MOV             R0, #aErrorS; format|68-242-244-48-192-242-1-0
74954|code|BLX             printf|255-247-118-234
74958|code|MOV             R0, #aUsageBhmMMaxim; s|68-242-0-64-192-242-1-0
74966|code|BLX             puts|255-247-124-234
74970|code|MOVS            R0, #1; fd|1-32
74972|code|BLX             close|255-247-188-234
74976|code|MOVS            R0, #1; status|1-32
74978|code|BLX             exit|255-247-100-234
74982|data|ALIGN 4|0-191
74984|code|MOVS            R0, #0|0-32
74986|code|BX              LR|112-71
74988|code|PUSH.W          {R4-R8,LR}|45-233-240-65
74992|code|SUB             SP, SP, #0x10|132-176
74994|code|MOV             R7, R0|7-70
74996|code|MOV             R4, R1|12-70
74998|code|MOV             R8, R2|144-70
75000|code|MOVS            R3, #0x3C ; '<'|60-35
75002|code|MOV             R0, R7|56-70
75004|code|STR             R3, [SP,#0x28+var_28]|0-147
75006|code|MOV             R1, R4|33-70
75008|code|MOV             R2, R8|66-70
75010|code|MOVS            R3, #1|1-35
75012|code|BL              sub_13610|1-240-132-248
75016|code|SUBS            R5, R0, #0|5-30
75018|code|BLT             loc_125A8|77-219
75020|code|ADDS            R3, R4, R5|99-25
75022|code|MOVW            R0, #0x4494|68-242-148-64
75026|code|MOV             R1, R4; s2|33-70
75028|code|MOVT.W          R0, #1; s1|192-242-1-0
75032|code|LDRB.W          R3, [R3,#-1]|19-248-1-60
75036|code|MOVS            R2, #4; n|4-34
75038|code|CMP             R3, #0xD|13-43
75040|code|ITTT EQ|2-191
75042|code|ADDEQ.W         R5, R5, #0xFFFFFFFF|5-241-255-53
75046|code|MOVEQ           R3, #0|0-35
75048|code|STRBEQ          R3, [R4,R5]|99-85
75050|code|BLX             strncasecmp|255-247-42-235
75054|code|CMP             R0, #0|0-40
75056|code|BEQ             loc_125B8|66-208
75058|code|MOVW            R0, #0x44A8|68-242-168-64
75062|code|MOV             R1, R4; s2|33-70
75064|code|MOVT.W          R0, #1; s1|192-242-1-0
75068|code|MOVS            R2, #4; n|4-34
75070|code|BLX             strncasecmp|255-247-32-235
75074|code|CBZ             R0, loc_12588|8-179
75076|code|MOVW            R0, #0x44B0|68-242-176-64
75080|code|MOV             R1, R4; s2|33-70
75082|code|MOVT.W          R0, #1; s1|192-242-1-0
75086|code|MOVS            R2, #4; n|4-34
75088|code|BLX             strncasecmp|255-247-22-235
75092|code|MOV             R6, R0|6-70
75094|code|CBNZ            R0, loc_1258C|200-185
75096|code|CMP             R5, #5|5-45
75098|code|BLE             loc_12564|3-221
75100|code|LDRB            R0, [R4,#4]|32-121
75102|code|BLX             isblank|255-247-222-235
75106|code|CBNZ            R0, loc_125D2|176-187
75108|code|LDR             R0, =unk_25320|94-72
75110|code|BL              sub_13B0C|1-240-209-250
75114|code|MOVW            R1, #0x44DC|68-242-220-65
75118|code|MOV             R0, R7|56-70
75120|code|MOVS            R2, #0x2C ; ','|44-34
75122|code|MOVT.W          R1, #1|192-242-1-1
75126|code|BL              sub_135F0|1-240-59-248
75130|code|CMP             R0, #0|0-40
75132|code|BGE             loc_124F8|188-218
75134|code|MOV             R0, #0xFFFFFFFD|111-240-2-0
75138|code|ADD             SP, SP, #0x10|4-176
75140|code|POP.W           {R4-R8,PC}|189-232-240-129
75144|code|MOVS            R6, #1|1-38
75146|code|B               loc_12558|229-231
75148|code|LDR             R0, =unk_25320|84-72
75150|code|BL              sub_13B0C|1-240-189-250
75154|code|MOVW            R1, #0x44B8|68-242-184-65
75158|code|MOV             R0, R7|56-70
75160|code|MOVS            R2, #0x23 ; '#'|35-34
75162|code|MOVT.W          R1, #1|192-242-1-1
75166|code|BL              sub_135F0|1-240-39-248
75170|code|CMP             R0, #0|0-40
75172|code|BGE             loc_124F8|168-218
75174|code|B               loc_1257E|234-231
75176|code|LDR             R0, =unk_25320|77-72
75178|code|BL              sub_13B0C|1-240-175-250
75182|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
75186|code|ADD             SP, SP, #0x10|4-176
75188|code|POP.W           {R4-R8,PC}|189-232-240-129
75192|code|MOVW            R1, #0x449C|68-242-156-65
75196|code|MOV             R0, R7|56-70
75198|code|MOVT.W          R1, #1|192-242-1-1
75202|code|MOVS            R2, #9|9-34
75204|code|BL              sub_135F0|1-240-20-248
75208|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
75212|code|ADD             SP, SP, #0x10|4-176
75214|code|POP.W           {R4-R8,PC}|189-232-240-129
75218|code|ADDS            R1, R4, #5|97-29
75220|code|ADD             R0, SP, #0x28+var_1C|3-168
75222|code|ADD             R2, SP, #0x28+var_20|2-170
75224|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|255-247-192-234
75228|code|CBZ             R6, loc_12614|214-177
75230|code|MOVW            R3, #0x52BC|69-242-188-35
75234|code|MOVW            R1, #0x450C|68-242-12-81
75238|code|MOVT.W          R3, #2|192-242-2-3
75242|code|MOV             R0, R7|56-70
75244|code|LDR             R2, [R3]; "bhm.coker.com.au"|26-104
75246|code|MOVT.W          R1, #1|192-242-1-1
75250|code|BL              sub_1359C|0-240-211-255
75254|code|CMP             R0, #0|0-40
75256|code|BLT             loc_12632|27-219
75258|code|LDR             R2, [SP,#0x28+var_1C]|3-154
75260|code|MOV             R3, #0x252C8|69-242-200-35-192-242-2-3
75268|code|SUB.W           R0, R2, #0xC|162-241-12-0
75272|code|CMP             R0, R3|152-66
75274|code|BNE             loc_12650|33-209
75276|code|MOVS            R0, #0|0-32
75278|code|ADD             SP, SP, #0x10|4-176
75280|code|POP.W           {R4-R8,PC}|189-232-240-129
75284|code|MOVW            R2, #0x52BC|69-242-188-34
75288|code|MOVW            R1, #0x4518|68-242-24-81
75292|code|MOVT.W          R2, #2|192-242-2-2
75296|code|MOV             R0, R7|56-70
75298|code|LDR             R3, [R2,#(dword_252C0 - 0x252BC)]|83-104
75300|code|MOVT.W          R1, #1|192-242-1-1
75304|code|LDR             R2, [R2]; "bhm.coker.com.au"|18-104
75306|code|LSLS            R3, R3, #0xA|155-2
75308|code|BL              sub_1359C|0-240-182-255
75312|code|B               loc_125F6|225-231
75314|code|LDR             R0, =unk_25320|43-72
75316|code|BL              sub_13B0C|1-240-106-250
75320|code|LDR             R3, [SP,#0x28+var_1C]|3-155
75322|code|MOV             R2, #0x252C8|69-242-200-34-192-242-2-2
75330|code|SUB.W           R0, R3, #0xC|163-241-12-0
75334|code|CMP             R0, R2|144-66
75336|code|BNE             loc_1268A|31-209
75338|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
75342|code|B               loc_12582|152-231
75344|code|MOV             R3, #0x11B08|65-246-8-51-192-242-1-3
75352|code|CBZ             R3, loc_1267E|139-177
75354|code|SUBS            R2, #4|4-58
75356|code|DMB.W           SY|191-243-95-143
75360|code|LDREX.W         R3, [R2]|82-232-0-63
75364|code|SUBS            R1, R3, #1|89-30
75366|code|STREX.W         R4, R1, [R2]|66-232-0-20
75370|code|CMP             R4, #0|0-44
75372|code|BNE             loc_12660|248-209
75374|code|DMB.W           SY|191-243-95-143
75378|code|CMP             R3, #0|0-43
75380|code|BGT             loc_1260C|202-220
75382|code|ADD             R1, SP, #0x28+var_20|2-169
75384|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-2-234
75388|code|B               loc_1260C|198-231
75390|code|LDR.W           R3, [R2,#-4]|82-248-4-60
75394|code|SUBS            R1, R3, #1|89-30
75396|code|STR.W           R1, [R2,#-4]|66-248-4-28
75400|code|B               loc_12672|243-231
75402|code|MOV             R2, #0x11B08|65-246-8-50-192-242-1-2
75410|code|CBZ             R2, loc_126D2|242-177
75412|code|SUBS            R3, #4|4-59
75414|code|DMB.W           SY|191-243-95-143
75418|code|LDREX.W         R2, [R3]|83-232-0-47
75422|code|SUBS            R1, R2, #1|81-30
75424|code|STREX.W         R4, R1, [R3]|67-232-0-20
75428|code|CMP             R4, #0|0-44
75430|code|BNE             loc_1269A|248-209
75432|code|DMB.W           SY|191-243-95-143
75436|code|CMP             R2, #0|0-42
75438|code|BGT             loc_1264A|204-220
75440|code|ADD             R1, SP, #0x28+var_20|2-169
75442|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-230-233
75446|code|B               loc_1264A|200-231
75448|code|LDR             R0, [SP,#0x28+var_1C]|3-152
75450|code|MOV             R3, #0x252C8|69-242-200-35-192-242-2-3
75458|code|SUBS            R0, #0xC|12-56
75460|code|CMP             R0, R3|152-66
75462|code|BEQ             loc_126CE|2-208
75464|code|ADD             R1, SP, #0x28+var_20|2-169
75466|code|BL              sub_12474|255-247-211-254
75470|code|BLX             __cxa_end_cleanup|255-247-58-234
75474|code|LDR.W           R2, [R3,#-4]|83-248-4-44
75478|code|SUBS            R1, R2, #1|81-30
75480|code|STR.W           R1, [R3,#-4]|67-248-4-28
75484|code|B               loc_126AC|230-231
75486|data|ALIGN 0x10|0-191
75488|data|DCD unk_25320|32-83-2-0
75492|code|PUSH.W          {R4-R9,LR}|45-233-240-67
75496|code|MOVW            R5, #0x1058|65-242-88-5
75500|code|LDRB            R6, [R0,R5]|70-93
75502|code|SUB             SP, SP, #0xC|131-176
75504|code|MOV             R4, R0|4-70
75506|code|LDR             R7, [SP,#0x28+arg_0]|10-159
75508|code|CBNZ            R6, loc_12720|166-185
75510|code|STR             R7, [SP,#0x28+var_28]|0-151
75512|code|MOV             R5, R1|13-70
75514|code|MOV             R8, R3|152-70
75516|code|MOV             R6, R2|22-70
75518|code|BL              sub_13610|0-240-135-255
75522|code|SUBS.W          R9, R0, #0|176-241-0-9
75526|code|BLT             loc_12718|7-219
75528|code|MOVW            R1, #0x454C|68-242-76-81
75532|code|MOV             R0, R5; s1|40-70
75534|code|MOVT.W          R1, #1; s2|192-242-1-1
75538|code|BLX             strcasecmp|255-247-254-232
75542|code|CBZ             R0, loc_1272C|72-177
75544|code|MOV             R0, R9|72-70
75546|code|ADD             SP, SP, #0xC|3-176
75548|code|POP.W           {R4-R9,PC}|189-232-240-131
75552|code|STR             R7, [SP,#0x28+arg_0]|10-151
75554|code|ADD             SP, SP, #0xC|3-176
75556|code|POP.W           {R4-R9,LR}|189-232-240-67
75560|code|B.W             sub_13610|0-240-114-191
75564|code|MOVW            R1, #0x4558|68-242-88-81
75568|code|MOV             R0, R4|32-70
75570|code|MOVT.W          R1, #1|192-242-1-1
75574|code|BL              sub_1359C|0-240-49-255
75578|code|MOV             R0, R4|32-70
75580|code|BL              sub_1350C|0-240-230-254
75584|code|CBNZ            R0, loc_12762|120-185
75586|code|LDR             R0, =unk_25320|9-72
75588|code|BL              sub_13B98|1-240-40-250
75592|code|MOV             R0, R4|32-70
75594|code|MOV             R1, R5|41-70
75596|code|MOV             R2, R6|50-70
75598|code|BL              sub_124EC|255-247-205-254
75602|code|CMP             R0, #0|0-40
75604|code|BLT             loc_1271A|225-219
75606|code|STR             R7, [SP,#0x28+arg_0]|10-151
75608|code|MOV             R0, R4|32-70
75610|code|MOV             R1, R5|41-70
75612|code|MOV             R2, R6|50-70
75614|code|MOV             R3, R8|67-70
75616|code|B               loc_12722|223-231
75618|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
75622|code|B               loc_1271A|216-231
75624|data|DCD unk_25320|32-83-2-0
75628|code|PUSH.W          {R4-R11,LR}|45-233-240-79
75632|code|SUB             SP, SP, #0x14|133-176
75634|code|MOV             R8, R0|128-70
75636|code|MOV             R5, R1|13-70
75638|code|LDRB.W          R0, [SP,#0x38+arg_4]|157-248-60-0
75642|code|MOV             R7, R3|31-70
75644|code|STR             R2, [SP,#0x38+var_30]|2-146
75646|code|STR             R0, [SP,#0x38+var_2C]|3-144
75648|code|MOVS            R3, #0x3C ; '<'|60-35
75650|code|MOV             R0, R8|64-70
75652|code|STR             R3, [SP,#0x38+var_38]|0-147
75654|code|MOV             R1, R5|41-70
75656|code|LDR             R2, [SP,#0x38+var_30]|2-154
75658|code|MOVS            R3, #1|1-35
75660|code|BL              sub_126E4|255-247-170-255
75664|code|SUBS            R4, R0, #0|4-30
75666|code|BLT.W           loc_128B8|192-242-145-128
75670|code|MOVW            R1, #0x4494|68-242-148-65
75674|code|MOV             R0, R5; s1|40-70
75676|code|MOVT.W          R1, #1; s2|192-242-1-1
75680|code|MOVS            R2, #4; n|4-34
75682|code|BLX             strncasecmp|255-247-238-233
75686|code|MOV             R9, R0|129-70
75688|code|CBNZ            R0, loc_127C6|104-185
75690|code|LDRB            R6, [R5,#4]|46-121
75692|code|MOV             R0, R6|48-70
75694|code|BLX             isblank|255-247-182-234
75698|code|CLZ.W           R3, R6|182-250-134-243
75702|code|LSRS            R3, R3, #5|91-9
75704|code|CMP             R0, #0|0-40
75706|code|ITE EQ|12-191
75708|code|MOVEQ           R0, R3|24-70
75710|code|ORRNE.W         R0, R3, #1|67-240-1-0
75714|code|CMP             R0, #0|0-40
75716|code|BNE             loc_128B0|116-209
75718|code|LDR             R3, [SP,#0x38+var_2C]|3-155
75720|code|CBZ             R3, loc_127F8|179-177
75722|code|MOVW            R1, #0x4578|68-242-120-81
75726|code|MOV             R0, R5; s1|40-70
75728|code|MOVT.W          R1, #1; s2|192-242-1-1
75732|code|MOVS            R2, #4; n|4-34
75734|code|BLX             strncasecmp|255-247-212-233
75738|code|CBNZ            R0, loc_127F8|104-185
75740|code|CMP             R4, #4|4-44
75742|code|BEQ.W           loc_128EE|0-240-134-128
75746|code|LDRB            R0, [R5,#4]|40-121
75748|code|BLX             isblank|255-247-154-234
75752|code|ADDS            R0, #0|0-48
75754|code|IT NE|24-191
75756|code|MOVNE           R0, #1|1-32
75758|code|CMP             R4, #5|5-44
75760|code|IT NE|24-191
75762|code|MOVNE           R0, #0|0-32
75764|code|CMP             R0, #0|0-40
75766|code|BNE             loc_128EE|122-209
75768|code|MOV             R0, R7; s|56-70
75770|code|BLX             strlen|255-247-16-234
75774|code|MOV             R1, R7; s2|57-70
75776|code|MOV             R10, R0|130-70
75778|code|MOV             R0, R5; s1|40-70
75780|code|MOV             R2, R10; n|82-70
75782|code|BLX             strncasecmp|255-247-188-233
75786|code|MOV             R2, R0|2-70
75788|code|CBNZ            R0, loc_12864|80-187
75790|code|ADD.W           R9, R5, R4|5-235-4-9
75794|code|LDRB.W          R6, [R9,#-1]|25-248-1-108
75798|code|CMP             R6, #0xD|13-46
75800|code|BEQ             loc_1284E|25-208
75802|code|ADD             R10, R5|170-68
75804|code|MOV             R4, R10|84-70
75806|code|LDRB.W          R11, [R10],#1|26-248-1-187
75810|code|MOV             R0, R11|88-70
75812|code|BLX             isblank|255-247-122-234
75816|code|CMP             R0, #0|0-40
75818|code|BNE             loc_1281C|247-209
75820|code|CMP.W           R11, #0x3C ; '<'|187-241-60-15
75824|code|BEQ             loc_12882|39-208
75826|code|CMP             R6, #0x3E ; '>'|62-46
75828|code|BNE             loc_128C2|69-209
75830|code|MOVW            R1, #0x4580|68-242-128-81
75834|code|MOV             R0, R8|64-70
75836|code|MOVT.W          R1, #1|192-242-1-1
75840|code|MOVS            R2, #0x18|24-34
75842|code|BL              sub_135F0|0-240-213-254
75846|code|LDR             R0, =unk_25320|45-72
75848|code|BL              sub_13B0C|1-240-96-249
75852|code|B               loc_12780|152-231
75854|code|SUBS            R4, #1|1-60
75856|code|MOV             R0, R7; s|56-70
75858|code|ADD.W           R9, R5, R4|5-235-4-9
75862|code|STRB            R2, [R5,R4]|42-85
75864|code|BLX             strlen|255-247-224-233
75868|code|LDRB.W          R6, [R9,#-1]|25-248-1-108
75872|code|MOV             R10, R0|130-70
75874|code|B               loc_1281A|218-231
75876|code|LDR             R0, =unk_25320|37-72
75878|code|BL              sub_13B0C|1-240-81-249
75882|code|MOVW            R1, #0x45A8|68-242-168-81
75886|code|MOV             R0, R8|64-70
75888|code|MOVS            R2, #0x43 ; 'C'|67-34
75890|code|MOVT.W          R1, #1|192-242-1-1
75894|code|BL              sub_135F0|0-240-187-254
75898|code|CMP             R0, #0|0-40
75900|code|BGE             loc_12780|128-218
75902|code|MOV             R9, R0|129-70
75904|code|B               loc_128B0|22-224
75906|code|CMP             R6, #0x3E ; '>'|62-46
75908|code|BNE             loc_12836|215-209
75910|code|ADDS            R4, #1|1-52
75912|code|STRB.W          R0, [R9,#-1]|9-248-1-12
75916|code|MOV.W           R9, #1|79-240-1-9
75920|code|MOV             R0, R4; s|32-70
75922|code|BLX             strlen|255-247-196-233
75926|code|MOV             R1, R4; char *|33-70
75928|code|MOV             R2, R0; unsigned int|2-70
75930|code|LDR             R0, [SP,#0x38+arg_0]; this|14-152
75932|code|BLX             _ZNSs6assignEPKcj; std::string::assign(char const*,uint)|255-247-104-232
75936|code|MOVW            R1, #0x459C|68-242-156-81
75940|code|MOV             R0, R8|64-70
75942|code|MOVS            R2, #8|8-34
75944|code|MOVT.W          R1, #1|192-242-1-1
75948|code|BL              sub_135F0|0-240-160-254
75952|code|MOV             R0, R9|72-70
75954|code|ADD             SP, SP, #0x14|5-176
75956|code|POP.W           {R4-R11,PC}|189-232-240-143
75960|code|MOV             R9, R4|161-70
75962|code|MOV             R0, R9|72-70
75964|code|ADD             SP, SP, #0x14|5-176
75966|code|POP.W           {R4-R11,PC}|189-232-240-143
75970|code|MOV             R0, R4; s|32-70
75972|code|MOV.W           R9, #1|79-240-1-9
75976|code|BLX             strlen|255-247-168-233
75980|code|MOV             R1, R4; char *|33-70
75982|code|MOV             R2, R0; unsigned int|2-70
75984|code|LDR             R0, [SP,#0x38+arg_0]; this|14-152
75986|code|BLX             _ZNSs6assignEPKcj; std::string::assign(char const*,uint)|255-247-78-232
75990|code|MOVW            R1, #0x45EC|68-242-236-81
75994|code|MOV             R0, R8|64-70
75996|code|MOVS            R2, #0x22 ; '"'|34-34
75998|code|MOVT.W          R1, #1|192-242-1-1
76002|code|BL              sub_135F0|0-240-133-254
76006|code|MOV             R0, R9|72-70
76008|code|ADD             SP, SP, #0x14|5-176
76010|code|POP.W           {R4-R11,PC}|189-232-240-143
76014|code|MOV.W           R9, #2|79-240-2-9
76018|code|MOV             R0, R9|72-70
76020|code|ADD             SP, SP, #0x14|5-176
76022|code|POP.W           {R4-R11,PC}|189-232-240-143
76026|data|ALIGN 4|0-191
76028|data|DCD unk_25320|32-83-2-0
76032|code|PUSH.W          {R4-R9,LR}|45-233-240-67
76036|code|SUB             SP, SP, #0x24|137-176
76038|code|LDR             R4, =0x252D4|98-76
76040|code|MOVW            R3, #0x4610|68-242-16-99
76044|code|ADD             R6, SP, #0x40+var_30|4-174
76046|code|MOVS            R5, #0|0-37
76048|code|STR             R6, [SP,#0x40+var_40]|0-150
76050|code|MOVT.W          R3, #1|192-242-1-3
76054|code|STR             R5, [SP,#0x40+var_3C]|1-149
76056|code|MOV             R7, R0|7-70
76058|code|STR             R4, [SP,#0x40+var_30]|4-148
76060|code|MOV             R6, R1|14-70
76062|code|STR             R4, [SP,#0x40+var_2C]|5-148
76064|code|MOV             R8, R2|144-70
76066|code|BL              sub_1276C|255-247-35-255
76070|code|CMP             R0, #1|1-40
76072|code|ITT EQ|4-191
76074|code|ADDEQ.W         R9, SP, #0x40+var_2C|13-241-20-9
76078|code|MOVEQ           R4, R5|44-70
76080|code|BEQ             loc_1295A|19-208
76082|code|MOV             R5, R0|5-70
76084|code|LDR             R3, [SP,#0x40+var_2C]|5-155
76086|code|MOV             R4, #0x252C8|69-242-200-36-192-242-2-4
76094|code|SUB.W           R0, R3, #0xC|163-241-12-0
76098|code|CMP             R0, R4|160-66
76100|code|BNE             loc_129C2|61-209
76102|code|LDR             R3, [SP,#0x40+var_30]|4-155
76104|code|SUB.W           R0, R3, #0xC|163-241-12-0
76108|code|CMP             R0, R4|160-66
76110|code|BNE             loc_129F2|80-209
76112|code|MOV             R0, R5|40-70
76114|code|ADD             SP, SP, #0x24 ; '$'|9-176
76116|code|POP.W           {R4-R9,PC}|189-232-240-131
76120|code|ADDS            R4, #1|1-52
76122|code|MOVS            R5, R4|37-28
76124|code|MOVW            R3, #0x461C|68-242-28-99
76128|code|STR.W           R9, [SP,#0x40+var_40]|205-248-0-144
76132|code|MOVT.W          R3, #1|192-242-1-3
76136|code|IT NE|24-191
76138|code|MOVNE           R5, #1|1-37
76140|code|MOV             R0, R7; std::string *|56-70
76142|code|STR             R5, [SP,#0x40+var_3C]|1-149
76144|code|MOV             R1, R6; char|49-70
76146|code|MOV             R2, R8|66-70
76148|code|BL              sub_1276C|255-247-250-254
76152|code|CMP             R0, #1|1-40
76154|code|BEQ             loc_12958|237-208
76156|code|CMP             R0, #0|0-40
76158|code|BLE             loc_12932|216-221
76160|code|MOVW            R1, #0x4628|68-242-40-97
76164|code|MOV             R0, R7|56-70
76166|code|MOVT.W          R1, #1|192-242-1-1
76170|code|MOVS            R2, #0x25 ; '%'|37-34
76172|code|BL              sub_135F0|0-240-48-254
76176|code|MOVS            R4, #0x3C ; '<'|60-36
76178|code|B               loc_129A8|9-224
76180|code|MOVW            R0, #0x4860|68-246-96-0
76184|code|MOV             R1, R6; s2|49-70
76186|code|MOVT.W          R0, #1; s1|192-242-1-0
76190|code|BLX             strcmp|255-247-140-233
76194|code|MOV             R3, R0|3-70
76196|code|CMP             R0, #0|0-40
76198|code|BEQ             loc_12A20|59-208
76200|code|STR             R4, [SP,#0x40+var_40]|0-148
76202|code|MOV             R0, R7|56-70
76204|code|MOV             R1, R6|49-70
76206|code|MOV             R2, R8|66-70
76208|code|MOVS            R3, #1|1-35
76210|code|BL              sub_126E4|255-247-151-254
76214|code|SUBS            R5, R0, #0|5-30
76216|code|BGE             loc_12994|236-218
76218|code|LDR             R0, =unk_25320|54-72
76220|code|BL              sub_13B0C|1-240-166-248
76224|code|B               loc_12934|184-231
76226|code|MOV             R2, #0x11B08|65-246-8-50-192-242-1-2
76234|code|CMP             R2, #0|0-42
76236|code|BEQ             loc_12A5A|69-208
76238|code|SUBS            R3, #4|4-59
76240|code|DMB.W           SY|191-243-95-143
76244|code|LDREX.W         R2, [R3]|83-232-0-47
76248|code|SUBS            R1, R2, #1|81-30
76250|code|STREX.W         R6, R1, [R3]|67-232-0-22
76254|code|CMP             R6, #0|0-46
76256|code|BNE             loc_129D4|248-209
76258|code|DMB.W           SY|191-243-95-143
76262|code|CMP             R2, #0|0-42
76264|code|BGT             loc_12946|173-220
76266|code|ADD             R1, SP, #0x40+var_34|3-169
76268|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-72-232
76272|code|B               loc_12946|169-231
76274|code|MOV             R2, #0x11B08|65-246-8-50-192-242-1-2
76282|code|CBZ             R2, loc_12A4E|66-179
76284|code|SUBS            R3, #4|4-59
76286|code|DMB.W           SY|191-243-95-143
76290|code|LDREX.W         R2, [R3]|83-232-0-47
76294|code|SUBS            R1, R2, #1|81-30
76296|code|STREX.W         R4, R1, [R3]|67-232-0-20
76300|code|CMP             R4, #0|0-44
76302|code|BNE             loc_12A02|248-209
76304|code|DMB.W           SY|191-243-95-143
76308|code|CMP             R2, #0|0-42
76310|code|BGT             loc_12950|155-220
76312|code|ADD             R1, SP, #0x40+var_2C|5-169
76314|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-50-232
76318|code|B               loc_12950|151-231
76320|code|MOV             R1, R0; remaining|1-70
76322|code|MOVW            R2, #0x4240|68-242-64-34
76326|code|ADD             R0, SP, #0x40+requested_time; requested_time|6-168
76328|code|MOVT.W          R2, #0xF|192-242-15-2
76332|code|STR             R3, [SP,#0x40+requested_time]|6-147
76334|code|STR             R2, [SP,#0x40+requested_time.tv_nsec]|7-146
76336|code|BLX             nanosleep|254-247-244-239
76340|code|MOVW            R1, #0x4650|68-242-80-97
76344|code|MOV             R0, R7|56-70
76346|code|MOVT.W          R1, #1|192-242-1-1
76350|code|MOVS            R2, #0x1D|29-34
76352|code|BL              sub_135F0|0-240-214-253
76356|code|LDR             R0, =unk_25320|19-72
76358|code|BL              sub_13B58|1-240-135-248
76362|code|MOVS            R5, #1|1-37
76364|code|B               loc_12934|114-231
76366|code|LDR.W           R2, [R3,#-4]|83-248-4-44
76370|code|SUBS            R1, R2, #1|81-30
76372|code|STR.W           R1, [R3,#-4]|67-248-4-28
76376|code|B               loc_12A14|220-231
76378|code|LDR.W           R2, [R3,#-4]|83-248-4-44
76382|code|SUBS            R1, R2, #1|81-30
76384|code|STR.W           R1, [R3,#-4]|67-248-4-28
76388|code|B               loc_129E6|191-231
76390|code|LDR             R0, [SP,#0x40+var_2C]|5-152
76392|code|MOV             R4, #0x252C8|69-242-200-36-192-242-2-4
76400|code|SUBS            R0, #0xC|12-56
76402|code|CMP             R0, R4|160-66
76404|code|BEQ             loc_12A7C|2-208
76406|code|ADD             R1, SP, #0x40+var_34|3-169
76408|code|BL              sub_12474|255-247-252-252
76412|code|LDR             R0, [SP,#0x40+var_30]|4-152
76414|code|SUBS            R0, #0xC|12-56
76416|code|CMP             R0, R4|160-66
76418|code|BEQ             loc_12A8A|2-208
76420|code|ADD             R1, SP, #0x40+var_2C|5-169
76422|code|BL              sub_12474|255-247-245-252
76426|code|BLX             __cxa_end_cleanup|255-247-92-232
76430|data|ALIGN 0x10|0-191
76432|data|DCD 0x252D4|212-82-2-0
76436|data|DCD unk_25320|32-83-2-0
76440|code|PUSH            {R4-R6,LR}|112-181
76442|code|SUB.W           SP, SP, #0x1460|173-245-163-93
76446|code|LDR             R6, [R0,#0x18]|134-105
76448|code|SUB             SP, SP, #0x18|134-176
76450|code|MOVW            R4, #0x5318|69-242-24-52
76454|code|LDR             R1, [R0,#4]|65-104
76456|code|MOVT.W          R4, #2|192-242-2-4
76460|code|LDR             R3, [R0,#0x1C]|195-105
76462|code|LDR             R2, [R4,#(dword_25358 - 0x25318)]|34-108
76464|code|MOV             R5, R0|5-70
76466|code|ADDS            R4, #8|8-52
76468|code|ADDW            R0, SP, #0x1488+var_106C|13-242-28-64
76472|code|STR             R4, [SP,#0x1488+var_1488]|0-148
76474|code|STR             R6, [SP,#0x1488+var_1484]|1-150
76476|code|BL              sub_13444|0-240-194-252
76480|code|ADD             R3, SP, #0x1488+addr.sa_data+0xA|6-171
76482|code|SUB.W           R2, R3, #0x10; len|163-241-16-2
76486|code|LDR             R0, [R5,#4]; fd|104-104
76488|code|ADD             R1, SP, #0x1488+addr; addr|3-169
76490|code|MOVS            R3, #0x10|16-35
76492|code|STR             R3, [SP,#0x1488+var_1480]|2-147
76494|code|BLX             getsockname|255-247-44-233
76498|code|CBZ             R0, loc_12AFE|160-177
76500|code|MOVW            R3, #0x5310|69-242-16-51
76504|code|MOVW            R0, #0x47B8|68-242-184-112
76508|code|MOVT.W          R3, #2|192-242-2-3
76512|code|MOVT.W          R0, #1; ptr|192-242-1-0
76516|code|LDR             R3, [R3]; s|27-104
76518|code|MOVS            R1, #1; size|1-33
76520|code|MOVS            R2, #0x1B; n|27-34
76522|code|BLX             fwrite|255-247-140-232
76526|code|ADDW            R0, SP, #0x1488+var_106C|13-242-28-64
76530|code|BL              nullsub_2|0-240-47-252
76534|code|ADD.W           SP, SP, #0x1460|13-245-163-93
76538|code|ADD             SP, SP, #0x18|6-176
76540|code|POP             {R4-R6,PC}|112-189
76542|code|MOVW            R4, #0x52BC|69-242-188-36
76546|code|MOVW            R1, #0x47D4|68-242-212-113
76550|code|MOVT.W          R4, #2|192-242-2-4
76554|code|MOVT.W          R1, #1|192-242-1-1
76558|code|LDR             R2, [R4]; "bhm.coker.com.au"|34-104
76560|code|ADDW            R0, SP, #0x1488+var_106C|13-242-28-64
76564|code|BL              sub_1359C|0-240-66-253
76568|code|ADDW            R0, SP, #0x1488+var_106C|13-242-28-64
76572|code|MOV.W           R2, #0x400|79-244-128-98
76576|code|ADD             R1, SP, #0x1488+var_146C|7-169
76578|code|BL              sub_124EC|255-247-227-252
76582|code|ADDW            R0, SP, #0x1488+var_106C|13-242-28-64
76586|code|ADD             R1, SP, #0x1488+var_146C|7-169
76588|code|MOV.W           R2, #0x400|79-244-128-98
76592|code|BL              sub_12900|255-247-230-254
76596|code|CMP             R0, #1|1-40
76598|code|BEQ             loc_12B26|246-208
76600|code|ADDS            R3, R0, #3|195-28
76602|code|BEQ             loc_12B56|12-208
76604|code|CMP             R0, #0|0-40
76606|code|BLT             loc_12B68|19-219
76608|code|BNE             loc_12AEE|213-209
76610|code|MOVW            R1, #0x480C|68-246-12-1
76614|code|ADDW            R0, SP, #0x1488+var_106C|13-242-28-64
76618|code|MOVT.W          R1, #1|192-242-1-1
76622|code|MOVS            R2, #0xF|15-34
76624|code|BL              sub_135F0|0-240-78-253
76628|code|B               loc_12AEE|203-231
76630|code|MOVW            R1, #0x47E8|68-242-232-113
76634|code|LDR             R2, [R4]; "bhm.coker.com.au"|34-104
76636|code|MOVT.W          R1, #1|192-242-1-1
76640|code|ADDW            R0, SP, #0x1488+var_106C|13-242-28-64
76644|code|BL              sub_1359C|0-240-26-253
76648|code|LDR             R0, =unk_25320|4-72
76650|code|BL              sub_13B0C|0-240-207-255
76654|code|B               loc_12AEE|190-231
76656|code|ADDW            R0, SP, #0x1488+var_106C|13-242-28-64
76660|code|BL              nullsub_2|0-240-238-251
76664|code|BLX             __cxa_end_cleanup|254-247-228-239
76668|data|DCD unk_25320|32-83-2-0
76672|code|PUSH            {R3-R5,LR}|56-181
76674|code|MOV             R4, R0|4-70
76676|code|BL              sub_12A98|255-247-136-255
76680|code|LDR             R5, [R4,#0x1C]|229-105
76682|code|CBZ             R5, loc_12B98|45-177
76684|code|MOV             R0, R5|40-70
76686|code|BL              sub_139EC|0-240-45-255
76690|code|MOV             R0, R5|40-70
76692|code|BLX             _ZdlPv; operator delete(void *)|254-247-172-239
76696|code|MOVW            R3, #0x5318|69-242-24-51
76700|code|LDR             R2, [R4]|34-104
76702|code|MOVT.W          R3, #2|192-242-2-3
76706|code|MOVS            R1, #2|2-33
76708|code|LDR             R3, [R3,#(dword_25360 - 0x25318)]|155-108
76710|code|STR.W           R1, [R3,R2,LSL#2]|67-248-34-16
76714|code|LDR             R0, [R4,#4]|96-104
76716|code|BLX             close|254-247-84-239
76720|code|MOV             R0, R4|32-70
76722|code|BLX             free|254-247-192-238
76726|code|MOVS            R0, #0|0-32
76728|code|POP             {R3-R5,PC}|56-189
76730|data|ALIGN 4|0-191
76732|code|LDR             R3, [R0,#0x10]|3-105
76734|code|PUSH.W          {R4-R9,LR}|45-233-240-67
76738|code|MOV             R7, R0|7-70
76740|code|SUB             SP, SP, #0x14|133-176
76742|code|LDR             R0, [R0,#4]; void *|64-104
76744|code|CBNZ            R3, loc_12BD8|51-185
76746|code|CBZ             R0, loc_12BD0|8-177
76748|code|BLX             _ZdlPv; operator delete(void *)|254-247-144-239
76752|code|MOV             R0, R7|56-70
76754|code|ADD             SP, SP, #0x14|5-176
76756|code|POP.W           {R4-R9,PC}|189-232-240-131
76760|code|LDR             R3, [R7,#8]|187-104
76762|code|SUBS            R3, R3, R0|27-26
76764|code|LSRS            R3, R3, #2|155-8
76766|code|BEQ             loc_12C66|66-208
76768|code|MOVW            R5, #0x52C8|69-242-200-37
76772|code|MOVW            R9, #0x1B08|65-246-8-57
76776|code|MOVT.W          R5, #2|192-242-2-5
76780|code|MOVT.W          R9, #1|192-242-1-9
76784|code|MOVS            R6, #0|0-38
76786|code|LDR.W           R4, [R0,R6,LSL#2]|80-248-38-64
76790|code|MOV.W           R8, R6,LSL#2|79-234-134-8
76794|code|CBNZ            R4, loc_12C08|44-185
76796|code|B               loc_12C50|40-224
76798|code|MOV             R0, R4; void *|32-70
76800|code|MOV             R4, R2|20-70
76802|code|BLX             _ZdlPv; operator delete(void *)|254-247-118-239
76806|code|CBZ             R4, loc_12C50|28-179
76808|code|LDM.W           R4, {R2,R3}|148-232-12-0
76812|code|SUB.W           R0, R3, #0xC|163-241-12-0
76816|code|CMP             R0, R5|168-66
76818|code|BEQ             loc_12BFE|244-208
76820|code|CMP.W           R9, #0|185-241-0-15
76824|code|BEQ             loc_12C6C|40-208
76826|code|SUBS            R3, #4|4-59
76828|code|DMB.W           SY|191-243-95-143
76832|code|LDREX.W         R1, [R3]|83-232-0-31
76836|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
76840|code|STREX.W         R12, LR, [R3]|67-232-0-236
76844|code|CMP.W           R12, #0|188-241-0-15
76848|code|BNE             loc_12C20|246-209
76850|code|DMB.W           SY|191-243-95-143
76854|code|CMP             R1, #0|0-41
76856|code|BGT             loc_12BFE|225-220
76858|code|ADD             R1, SP, #0x30+var_24|3-169
76860|code|STR             R2, [SP,#0x30+var_2C]|1-146
76862|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-32-239
76866|code|LDR             R2, [SP,#0x30+var_2C]|1-154
76868|code|MOV             R0, R4; void *|32-70
76870|code|MOV             R4, R2|20-70
76872|code|BLX             _ZdlPv; operator delete(void *)|254-247-82-239
76876|code|CMP             R4, #0|0-44
76878|code|BNE             loc_12C08|219-209
76880|code|LDR             R3, [R7,#4]|123-104
76882|code|MOVS            R2, #0|0-34
76884|code|ADDS            R6, #1|1-54
76886|code|STR.W           R2, [R3,R8]|67-248-8-32
76890|code|LDR             R0, [R7,#4]|120-104
76892|code|LDR             R3, [R7,#8]|187-104
76894|code|SUBS            R3, R3, R0|27-26
76896|code|CMP.W           R6, R3,ASR#2|182-235-163-15
76900|code|BCC             loc_12BF2|197-211
76902|code|MOVS            R3, #0|0-35
76904|code|STR             R3, [R7,#0x10]|59-97
76906|code|B               loc_12BCA|174-231
76908|code|LDR.W           R1, [R3,#-4]|83-248-4-28
76912|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
76916|code|STR.W           LR, [R3,#-4]|67-248-4-236
76920|code|B               loc_12C36|221-231
76922|data|ALIGN 4|0-191
76924|code|PUSH            {R4}|16-180
76926|code|MOVS            R2, #0|0-34
76928|code|LDR             R4, [R1]|12-104
76930|code|LDR             R1, [R1,#4]|73-104
76932|code|STR             R2, [R0,#8]|130-96
76934|code|STR             R4, [R0]|4-96
76936|code|STR             R1, [R0,#4]|65-96
76938|code|STR             R2, [R0,#0xC]|194-96
76940|code|STRB            R2, [R0,#0x10]|2-116
76942|code|POP.W           {R4}|93-248-4-75
76946|code|BX              LR|112-71
76948|code|LDRB            R3, [R0,#0x10]|3-124
76950|code|PUSH.W          {R4-R9,LR}|45-233-240-67
76954|code|MOV             R7, R0|7-70
76956|code|SUB             SP, SP, #0xC|131-176
76958|code|CMP             R3, #0|0-43
76960|code|BEQ             loc_12D8A|115-208
76962|code|LDR.W           R8, [R0]|208-248-0-128
76966|code|CMP.W           R8, #0|184-241-0-15
76970|code|BEQ             loc_12D16|52-208
76972|code|LDM.W           R8, {R4,R6}|152-232-80-0
76976|code|CMP             R4, R6|180-66
76978|code|BEQ             loc_12D08|41-208
76980|code|MOVW            R5, #0x52C8|69-242-200-37
76984|code|MOVW            R9, #0x1B08|65-246-8-57
76988|code|MOVT.W          R5, #2|192-242-2-5
76992|code|MOVT.W          R9, #1|192-242-1-9
76996|code|B               loc_12CCA|1-224
76998|code|CMP             R6, R4|166-66
77000|code|BEQ             loc_12D04|28-208
77002|code|LDR.W           R3, [R4],#4|84-248-4-59
77006|code|SUB.W           R2, R3, #0xC|163-241-12-2
77010|code|CMP             R2, R5|170-66
77012|code|BEQ             loc_12CC6|247-208
77014|code|CMP.W           R9, #0|185-241-0-15
77018|code|BEQ             loc_12D9E|96-208
77020|code|SUBS            R3, #4|4-59
77022|code|DMB.W           SY|191-243-95-143
77026|code|LDREX.W         R1, [R3]|83-232-0-31
77030|code|SUBS            R0, R1, #1|72-30
77032|code|STREX.W         LR, R0, [R3]|67-232-0-14
77036|code|CMP.W           LR, #0|190-241-0-15
77040|code|BNE             loc_12CE2|247-209
77042|code|DMB.W           SY|191-243-95-143
77046|code|CMP             R1, #0|0-41
77048|code|BGT             loc_12CC6|229-220
77050|code|MOV             R0, R2|16-70
77052|code|ADD             R1, SP, #4|1-169
77054|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-192-238
77058|code|B               loc_12CC6|224-231
77060|code|LDR.W           R6, [R8]|216-248-0-96
77064|code|CBZ             R6, loc_12D10|22-177
77066|code|MOV             R0, R6|48-70
77068|code|BLX             _ZdlPv; operator delete(void *)|254-247-240-238
77072|code|MOV             R0, R8|64-70
77074|code|BLX             _ZdlPv; operator delete(void *)|254-247-238-238
77078|code|LDR.W           R8, [R7,#4]|215-248-4-128
77082|code|CMP.W           R8, #0|184-241-0-15
77086|code|BEQ             loc_12D8A|52-208
77088|code|LDM.W           R8, {R4,R6}|152-232-80-0
77092|code|CMP             R4, R6|180-66
77094|code|BEQ             loc_12D7C|41-208
77096|code|MOVW            R5, #0x52C8|69-242-200-37
77100|code|MOVW            R9, #0x1B08|65-246-8-57
77104|code|MOVT.W          R5, #2|192-242-2-5
77108|code|MOVT.W          R9, #1|192-242-1-9
77112|code|B               loc_12D3E|1-224
77114|code|CMP             R6, R4|166-66
77116|code|BEQ             loc_12D78|28-208
77118|code|LDR.W           R3, [R4],#4|84-248-4-59
77122|code|SUB.W           R2, R3, #0xC|163-241-12-2
77126|code|CMP             R2, R5|170-66
77128|code|BEQ             loc_12D3A|247-208
77130|code|CMP.W           R9, #0|185-241-0-15
77134|code|BEQ             loc_12D92|32-208
77136|code|SUBS            R3, #4|4-59
77138|code|DMB.W           SY|191-243-95-143
77142|code|LDREX.W         R1, [R3]|83-232-0-31
77146|code|SUBS            R0, R1, #1|72-30
77148|code|STREX.W         LR, R0, [R3]|67-232-0-14
77152|code|CMP.W           LR, #0|190-241-0-15
77156|code|BNE             loc_12D56|247-209
77158|code|DMB.W           SY|191-243-95-143
77162|code|CMP             R1, #0|0-41
77164|code|BGT             loc_12D3A|229-220
77166|code|MOV             R0, R2|16-70
77168|code|ADD             R1, SP, #4|1-169
77170|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-134-238
77174|code|B               loc_12D3A|224-231
77176|code|LDR.W           R6, [R8]|216-248-0-96
77180|code|CBZ             R6, loc_12D84|22-177
77182|code|MOV             R0, R6|48-70
77184|code|BLX             _ZdlPv; operator delete(void *)|254-247-182-238
77188|code|MOV             R0, R8|64-70
77190|code|BLX             _ZdlPv; operator delete(void *)|254-247-180-238
77194|code|MOV             R0, R7|56-70
77196|code|ADD             SP, SP, #0xC|3-176
77198|code|POP.W           {R4-R9,PC}|189-232-240-131
77202|code|LDR.W           R1, [R3,#-4]|83-248-4-28
77206|code|SUBS            R0, R1, #1|72-30
77208|code|STR.W           R0, [R3,#-4]|67-248-4-12
77212|code|B               loc_12D6A|229-231
77214|code|LDR.W           R1, [R3,#-4]|83-248-4-28
77218|code|SUBS            R0, R1, #1|72-30
77220|code|STR.W           R0, [R3,#-4]|67-248-4-12
77224|code|B               loc_12CF6|165-231
77226|data|ALIGN 4|0-191
77228|code|PUSH            {R3-R5,LR}|56-181
77230|code|MOV             R4, R0|4-70
77232|code|BLX             random|254-247-100-239
77236|code|LDR             R3, [R4]|35-104
77238|code|LDR             R5, [R3]|29-104
77240|code|LDR             R1, [R3,#4]|89-104
77242|code|SUBS            R1, R1, R5|73-27
77244|code|ASRS            R1, R1, #2|137-16
77246|code|BLX             __aeabi_uidivmod|254-247-228-237
77250|code|ADD.W           R0, R5, R1,LSL#2|5-235-129-0
77254|code|STR             R1, [R4,#8]|161-96
77256|code|POP             {R3-R5,PC}|56-189
77258|data|ALIGN 4|0-191
77260|code|LDR             R2, [R1]|10-104
77262|code|PUSH            {R4,LR}|16-181
77264|code|MOV             R4, R0|4-70
77266|code|LDR             R0, [R2]|16-104
77268|code|LDR             R2, [R2,#4]|82-104
77270|code|LDR             R3, [R1,#8]|139-104
77272|code|SUBS            R2, R2, R0|18-26
77274|code|ADDS            R3, #1|1-51
77276|code|STR             R3, [R1,#8]|139-96
77278|code|CMP.W           R3, R2,ASR#2|179-235-162-15
77282|code|ITEEE NE|17-191
77284|code|LSLNE           R1, R3, #2|153-0
77286|code|MOVEQ           R3, #0|0-35
77288|code|STREQ           R3, [R1,#8]|139-96
77290|code|MOVEQ           R1, R3|25-70
77292|code|ADD             R1, R0|1-68
77294|code|MOV             R0, R4|32-70
77296|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|254-247-14-238
77300|code|MOV             R0, R4|32-70
77302|code|POP             {R4,PC}|16-189
77304|code|LDR             R3, [R1,#4]|75-104
77306|code|LDR             R1, [R1,#8]|137-104
77308|code|PUSH            {R4,LR}|16-181
77310|code|MOV             R4, R0|4-70
77312|code|LDR             R3, [R3]|27-104
77314|code|ADD.W           R1, R3, R1,LSL#2|3-235-129-1
77318|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|254-247-4-238
77322|code|MOV             R0, R4|32-70
77324|code|POP             {R4,PC}|16-189
77326|data|ALIGN 0x10|0-191
77328|code|PUSH.W          {R4-R11,LR}|45-233-240-79
77332|code|MOV             R5, R0|5-70
77334|code|SUBW            SP, SP, #0x41C|173-242-28-77
77338|code|MOVS            R0, #0xC|12-32
77340|code|MOV             R9, R1|137-70
77342|code|MOV             R6, R2|22-70
77344|code|MOV             R11, R3|155-70
77346|code|BLX             _Znwj; operator new(uint)|254-247-86-237
77350|code|MOVW            R1, #0x4830|68-246-48-1
77354|code|MOVS            R7, #0|0-39
77356|code|MOV.W           R8, #1|79-240-1-8
77360|code|MOVT.W          R1, #1|192-242-1-1
77364|code|MOV             R3, R0|3-70
77366|code|MOV             R0, R9|72-70
77368|code|STR             R7, [R3]|31-96
77370|code|STR             R7, [R3,#4]|95-96
77372|code|STR             R7, [R3,#8]|159-96
77374|code|STM.W           R5, {R3,R7}|133-232-136-0
77378|code|STR             R7, [R5,#8]|175-96
77380|code|STR             R7, [R5,#0xC]|239-96
77382|code|STRB.W          R8, [R5,#0x10]|133-248-16-128
77386|code|BLX             fopen|254-247-12-238
77390|code|MOV             R4, R0|4-70
77392|code|CMP             R0, #0|0-40
77394|code|BEQ.W           loc_1307C|0-240-19-129
77398|code|CMP             R6, #0|0-46
77400|code|BNE             loc_12F50|122-209
77402|code|MOV             R8, #0x11B08|65-246-8-56-192-242-1-8
77410|code|ADD             R0, SP, #0x18|6-168
77412|code|MOV.W           R1, #0x400|79-244-128-97
77416|code|MOV             R2, R4|34-70
77418|code|BLX             fgets|254-247-186-238
77422|code|CMP             R0, #0|0-40
77424|code|BEQ             loc_12F34|96-208
77426|code|MOVW            R1, #0x464C|68-242-76-97
77430|code|ADD             R0, SP, #0x18|6-168
77432|code|MOVT.W          R1, #1|192-242-1-1
77436|code|BLX             strtok|254-247-188-237
77440|code|LDRB.W          R2, [SP,#0x18]|157-248-24-32
77444|code|CMP             R2, #0xD|13-42
77446|code|IT NE|24-191
77448|code|CMPNE           R2, #0xA|10-42
77450|code|ITE NE|20-191
77452|code|MOVNE           R3, #1|1-35
77454|code|MOVEQ           R3, #0|0-35
77456|code|CMP             R2, #0x23 ; '#'|35-42
77458|code|ITE EQ|12-191
77460|code|MOVEQ           R3, #0|0-35
77462|code|ANDNE.W         R3, R3, #1|3-240-1-3
77466|code|CMP             R3, #0|0-43
77468|code|BEQ             loc_12E62|225-208
77470|code|MOVW            R1, #0x487C|68-246-124-1
77474|code|ADD             R0, SP, #0x18|6-168
77476|code|MOVT.W          R1, #1|192-242-1-1
77480|code|BLX             strtok|254-247-166-237
77484|code|MOV             R1, #0x1487C|68-246-124-1-192-242-1-1
77492|code|MOVS            R0, #0|0-32
77494|code|BLX             strtok|254-247-160-237
77498|code|CMP             R0, #0|0-40
77500|code|ITE NE|20-191
77502|code|MOVNE           R0, #0|0-32
77504|code|ANDEQ.W         R0, R6, #1|6-240-1-0
77508|code|CMP             R0, #0|0-40
77510|code|BNE             loc_12F60|75-209
77512|code|CMP             R6, #0|0-46
77514|code|BNE             loc_12F70|81-209
77516|code|MOVW            R10, #0x52C8|69-242-200-42
77520|code|ADD.W           R9, SP, #0x14|13-241-20-9
77524|code|MOVT.W          R10, #2|192-242-2-10
77528|code|ADD             R3, SP, #0xC|3-171
77530|code|STR             R3, [SP,#4]|1-147
77532|code|CMP.W           R11, #0|187-241-0-15
77536|code|BNE.W           loc_12FEC|64-240-132-128
77540|code|LDR             R7, [R5]|47-104
77542|code|ADD             R1, SP, #0x18|6-169
77544|code|LDR             R2, [SP,#4]|1-154
77546|code|MOV             R0, R9|72-70
77548|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-54-238
77552|code|LDR             R1, [R7,#4]|121-104
77554|code|LDR             R3, [R7,#8]|187-104
77556|code|CMP             R1, R3|153-66
77558|code|BEQ.W           loc_13028|0-240-151-128
77562|code|CBZ             R1, loc_12F06|33-177
77564|code|MOV             R0, R1|8-70
77566|code|MOV             R1, R9|73-70
77568|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|254-247-134-237
77572|code|LDR             R1, [R7,#4]|121-104
77574|code|ADDS            R1, #4|4-49
77576|code|STR             R1, [R7,#4]|121-96
77578|code|LDR.W           R3, [R9]|217-248-0-48
77582|code|SUB.W           R0, R3, #0xC|163-241-12-0
77586|code|CMP             R0, R10|80-69
77588|code|BNE             loc_12FFC|114-209
77590|code|ADD             R0, SP, #0x18|6-168
77592|code|BLX             strlen|254-247-128-238
77596|code|LDR             R3, [R5,#0xC]|235-104
77598|code|MOV.W           R1, #0x400|79-244-128-97
77602|code|MOV             R2, R4|34-70
77604|code|CMP             R0, R3|152-66
77606|code|IT HI|136-191
77608|code|STRHI           R0, [R5,#0xC]|232-96
77610|code|ADD             R0, SP, #0x18|6-168
77612|code|BLX             fgets|254-247-88-238
77616|code|CMP             R0, #0|0-40
77618|code|BNE             loc_12E72|158-209
77620|code|LDR             R2, [R5]|42-104
77622|code|LDM             R2, {R2,R3}|12-202
77624|code|SUBS            R3, R3, R2|155-26
77626|code|LSRS            R3, R3, #2|155-8
77628|code|BEQ.W           loc_13090|0-240-168-128
77632|code|MOV             R0, R4|32-70
77634|code|BLX             fclose|254-247-132-238
77638|code|MOV             R0, R5|40-70
77640|code|ADDW            SP, SP, #0x41C|13-242-28-77
77644|code|POP.W           {R4-R11,PC}|189-232-240-143
77648|code|MOVS            R0, #0xC|12-32
77650|code|BLX             _Znwj; operator new(uint)|254-247-190-236
77654|code|STR             R7, [R0]|7-96
77656|code|STR             R7, [R0,#4]|71-96
77658|code|STR             R7, [R0,#8]|135-96
77660|code|STR             R0, [R5,#4]|104-96
77662|code|B               loc_12E5A|124-231
77664|code|MOVW            R0, #0x4848|68-246-72-0
77668|code|ADD             R1, SP, #0x18|6-169
77670|code|MOVT.W          R0, #1|192-242-1-0
77674|code|BLX             printf|254-247-38-237
77678|code|B               loc_12E62|120-231
77680|code|ADD             R0, SP, #0x18|6-168
77682|code|ADD.W           R9, SP, #0x14|13-241-20-9
77686|code|BLX             strlen|254-247-82-238
77690|code|ADD             R3, SP, #0xC|3-171
77692|code|LDR             R7, [R5,#4]|111-104
77694|code|STR             R3, [SP,#4]|1-147
77696|code|MOV             R2, R3|26-70
77698|code|ADD             R3, SP, #0x18|6-171
77700|code|ADDS            R1, R0, #1|65-28
77702|code|MOV             R0, R9|72-70
77704|code|ADD             R1, R3|25-68
77706|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-232-237
77710|code|LDR             R1, [R7,#4]|121-104
77712|code|LDR             R3, [R7,#8]|187-104
77714|code|CMP             R1, R3|153-66
77716|code|BEQ             loc_1303E|83-208
77718|code|CBZ             R1, loc_12FA2|33-177
77720|code|MOV             R0, R1|8-70
77722|code|MOV             R1, R9|73-70
77724|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|254-247-56-237
77728|code|LDR             R1, [R7,#4]|121-104
77730|code|ADDS            R1, #4|4-49
77732|code|STR             R1, [R7,#4]|121-96
77734|code|LDR.W           R3, [R9]|217-248-0-48
77738|code|MOV             R10, #0x252C8|69-242-200-42-192-242-2-10
77746|code|SUB.W           R0, R3, #0xC|163-241-12-0
77750|code|CMP             R0, R10|80-69
77752|code|BEQ             loc_12EDC|144-208
77754|code|CMP.W           R8, #0|184-241-0-15
77758|code|BEQ             loc_13048|67-208
77760|code|SUBS            R3, #4|4-59
77762|code|DMB.W           SY|191-243-95-143
77766|code|LDREX.W         R2, [R3]|83-232-0-47
77770|code|SUBS            R1, R2, #1|81-30
77772|code|STREX.W         R7, R1, [R3]|67-232-0-23
77776|code|CMP             R7, #0|0-47
77778|code|BNE             loc_12FC6|248-209
77780|code|DMB.W           SY|191-243-95-143
77784|code|CMP             R2, #0|0-42
77786|code|BGT.W           loc_12EDC|63-247-127-175
77790|code|ADD             R1, SP, #0x10|4-169
77792|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-78-237
77796|code|CMP.W           R11, #0|187-241-0-15
77800|code|BEQ.W           loc_12EE4|63-244-124-175
77804|code|MOVW            R1, #0x4864|68-246-100-1
77808|code|ADD             R0, SP, #0x18|6-168
77810|code|MOVT.W          R1, #1|192-242-1-1
77814|code|BLX             strtok|254-247-0-237
77818|code|B               loc_12EE4|115-231
77820|code|CMP.W           R8, #0|184-241-0-15
77824|code|BEQ             loc_13032|23-208
77826|code|SUBS            R3, #4|4-59
77828|code|DMB.W           SY|191-243-95-143
77832|code|LDREX.W         R2, [R3]|83-232-0-47
77836|code|SUBS            R1, R2, #1|81-30
77838|code|STREX.W         R7, R1, [R3]|67-232-0-23
77842|code|CMP             R7, #0|0-47
77844|code|BNE             loc_13008|248-209
77846|code|DMB.W           SY|191-243-95-143
77850|code|CMP             R2, #0|0-42
77852|code|BGT.W           loc_12F16|63-247-123-175
77856|code|ADD             R1, SP, #0x10|4-169
77858|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-46-237
77862|code|B               loc_12F16|118-231
77864|code|MOV             R0, R7|56-70
77866|code|MOV             R2, R9|74-70
77868|code|BL              sub_13110|0-240-112-248
77872|code|B               loc_12F0A|107-231
77874|code|LDR.W           R2, [R3,#-4]|83-248-4-44
77878|code|SUBS            R1, R2, #1|81-30
77880|code|STR.W           R1, [R3,#-4]|67-248-4-28
77884|code|B               loc_1301A|237-231
77886|code|MOV             R0, R7|56-70
77888|code|MOV             R2, R9|74-70
77890|code|BL              sub_13110|0-240-101-248
77894|code|B               loc_12FA6|174-231
77896|code|LDR.W           R2, [R3,#-4]|83-248-4-44
77900|code|SUBS            R1, R2, #1|81-30
77902|code|STR.W           R1, [R3,#-4]|67-248-4-28
77906|code|B               loc_12FD8|193-231
77908|code|LDR.W           R0, [R9]|217-248-0-0
77912|code|MOV             R3, #0x252C8|69-242-200-35-192-242-2-3
77920|code|SUBS            R0, #0xC|12-56
77922|code|CMP             R0, R3|152-66
77924|code|BNE             loc_13074|6-209
77926|code|BLX             __cxa_end_cleanup|254-247-110-237
77930|code|LDR.W           R0, [R9]|217-248-0-0
77934|code|SUBS            R0, #0xC|12-56
77936|code|CMP             R0, R10|80-69
77938|code|BEQ             loc_13066|248-208
77940|code|ADD             R1, SP, #0x10|4-169
77942|code|BL              sub_11D70|254-247-123-254
77946|code|B               loc_13066|244-231
77948|code|MOVW            R0, #0x4834|68-246-52-0
77952|code|MOV             R1, R9|73-70
77954|code|MOVT.W          R0, #1|192-242-1-0
77958|code|BLX             printf|254-247-152-236
77962|code|MOV             R0, R8|64-70
77964|code|BLX             exit|254-247-142-236
77968|code|MOV             R0, #0x14868|68-246-104-0-192-242-1-0
77976|code|BLX             puts|254-247-154-236
77980|code|MOVS            R0, #1|1-32
77982|code|BLX             exit|254-247-134-236
77986|data|ALIGN 4|0-191
77988|code|CMP             R0, R1|136-66
77990|code|BEQ             locret_1310C|49-208
77992|code|PUSH            {R4-R7,LR}|240-181
77994|code|MOVW            R6, #0x52C8|69-242-200-38
77998|code|MOVW            R7, #0x1B08|65-246-8-55
78002|code|SUB             SP, SP, #0xC|131-176
78004|code|MOV             R5, R1|13-70
78006|code|MOV             R4, R0|4-70
78008|code|MOVT.W          R6, #2|192-242-2-6
78012|code|MOVT.W          R7, #1|192-242-1-7
78016|code|B               loc_130C6|1-224
78018|code|CMP             R5, R4|165-66
78020|code|BEQ             loc_130FC|26-208
78022|code|LDR.W           R3, [R4],#4|84-248-4-59
78026|code|SUB.W           R0, R3, #0xC|163-241-12-0
78030|code|CMP             R0, R6|176-66
78032|code|BEQ             loc_130C2|247-208
78034|code|CBZ             R7, loc_13100|175-177
78036|code|SUBS            R3, #4|4-59
78038|code|DMB.W           SY|191-243-95-143
78042|code|LDREX.W         R2, [R3]|83-232-0-47
78046|code|SUBS            R1, R2, #1|81-30
78048|code|STREX.W         LR, R1, [R3]|67-232-0-30
78052|code|CMP.W           LR, #0|190-241-0-15
78056|code|BNE             loc_130DA|247-209
78058|code|DMB.W           SY|191-243-95-143
78062|code|CMP             R2, #0|0-42
78064|code|BGT             loc_130C2|231-220
78066|code|ADD             R1, SP, #0x20+var_1C|1-169
78068|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-196-236
78072|code|CMP             R5, R4|165-66
78074|code|BNE             loc_130C6|228-209
78076|code|ADD             SP, SP, #0xC|3-176
78078|code|POP             {R4-R7,PC}|240-189
78080|code|LDR.W           R2, [R3,#-4]|83-248-4-44
78084|code|SUBS            R1, R2, #1|81-30
78086|code|STR.W           R1, [R3,#-4]|67-248-4-28
78090|code|B               loc_130EE|240-231
78092|code|BX              LR|112-71
78094|data|ALIGN 0x10|0-191
78096|code|PUSH.W          {R4-R11,LR}|45-233-240-79
78100|code|MOV             R4, R0|4-70
78102|code|LDR             R3, [R4,#8]|163-104
78104|code|SUB             SP, SP, #0xC|131-176
78106|code|LDR             R0, [R0,#4]; this|64-104
78108|code|MOV             R6, R1|14-70
78110|code|MOV             R5, R2|21-70
78112|code|CMP             R0, R3|152-66
78114|code|BEQ             loc_131B0|69-208
78116|code|CBZ             R0, loc_1312E|24-177
78118|code|SUBS            R1, R0, #4; std::string *|1-31
78120|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|254-247-114-236
78124|code|LDR             R0, [R4,#4]|96-104
78126|code|ADDS            R3, R0, #4|3-29
78128|code|MOV             R1, R5; std::string *|41-70
78130|code|STR             R3, [R4,#4]|99-96
78132|code|ADD             R0, SP, #0x30+var_2C; this|1-168
78134|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|254-247-108-236
78138|code|LDR             R3, [R4,#4]|99-104
78140|code|SUB.W           R0, R3, #8; this|163-241-8-0
78144|code|SUBS            R5, R0, R6|133-27
78146|code|ASRS            R5, R5, #2|173-16
78148|code|CMP             R5, #0|0-45
78150|code|ITT GT|196-191
78152|code|SUBGT.W         R5, R3, R5,LSL#2|163-235-133-5
78156|code|SUBGT           R5, #8|8-61
78158|code|BLE             loc_1315E|6-221
78160|code|SUBS            R4, R0, #4|4-31
78162|code|MOV             R1, R4; std::string *|33-70
78164|code|BLX             _ZNSs6assignERKSs; std::string::assign(std::string const&)|254-247-26-237
78168|code|CMP             R4, R5|172-66
78170|code|MOV             R0, R4|32-70
78172|code|BNE             loc_13150|248-209
78174|code|MOV             R0, R6; this|48-70
78176|code|ADD             R1, SP, #0x30+var_2C; std::string *|1-169
78178|code|BLX             _ZNSs6assignERKSs; std::string::assign(std::string const&)|254-247-20-237
78182|code|LDR             R2, [SP,#0x30+var_2C]|1-154
78184|code|MOV             R3, #0x252C8|69-242-200-35-192-242-2-3
78192|code|SUB.W           R0, R2, #0xC|162-241-12-0
78196|code|CMP             R0, R3|152-66
78198|code|BNE             loc_1317E|2-209
78200|code|ADD             SP, SP, #0xC|3-176
78202|code|POP.W           {R4-R11,PC}|189-232-240-143
78206|code|MOV             R3, #0x11B08|65-246-8-51-192-242-1-3
78214|code|CMP             R3, #0|0-43
78216|code|BEQ.W           loc_13292|0-240-131-128
78220|code|SUBS            R2, #4|4-58
78222|code|DMB.W           SY|191-243-95-143
78226|code|LDREX.W         R3, [R2]|82-232-0-63
78230|code|SUBS            R1, R3, #1|89-30
78232|code|STREX.W         R4, R1, [R2]|66-232-0-20
78236|code|CMP             R4, #0|0-44
78238|code|BNE             loc_13192|248-209
78240|code|DMB.W           SY|191-243-95-143
78244|code|CMP             R3, #0|0-43
78246|code|BGT             loc_13178|231-220
78248|code|MOV             R1, SP|105-70
78250|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-106-236
78254|code|B               loc_13178|227-231
78256|code|LDR             R1, [R4]|33-104
78258|code|SUBS            R3, R0, R1|67-26
78260|code|ASRS            R3, R3, #2|155-16
78262|code|BNE             loc_13266|86-209
78264|code|RSB.W           R8, R1, R6|193-235-6-8
78268|code|MOVS            R2, #1|1-34
78270|code|LSLS            R0, R2, #2; unsigned int|144-0
78272|code|MOV             R9, R2|145-70
78274|code|BLX             _Znwj; operator new(uint)|254-247-134-235
78278|code|MOV             R10, R0|130-70
78280|code|ADDS.W          R8, R10, R8|26-235-8-8
78284|code|BEQ             loc_131D6|3-208
78286|code|MOV             R1, R5; std::string *|41-70
78288|code|MOV             R0, R8; this|64-70
78290|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|254-247-30-236
78294|code|LDR             R7, [R4]|39-104
78296|code|MOV             R5, R10|85-70
78298|code|CMP             R6, R7|190-66
78300|code|BEQ             loc_131F0|8-208
78302|code|CBZ             R5, loc_131E8|29-177
78304|code|MOV             R0, R5; this|40-70
78306|code|MOV             R1, R7; std::string *|57-70
78308|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|254-247-20-236
78312|code|ADDS            R7, #4|4-55
78314|code|ADDS            R5, #4|4-53
78316|code|CMP             R6, R7|190-66
78318|code|BNE             loc_131DE|246-209
78320|code|LDR             R7, [R4,#4]|103-104
78322|code|ADD.W           R11, R5, #4|5-241-4-11
78326|code|CMP             R6, R7|190-66
78328|code|MOV             R5, R11|93-70
78330|code|BEQ             loc_13210|9-208
78332|code|CBZ             R5, loc_13206|29-177
78334|code|MOV             R0, R5; this|40-70
78336|code|MOV             R1, R6; std::string *|49-70
78338|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|254-247-6-236
78342|code|ADDS            R6, #4|4-54
78344|code|ADDS            R5, #4|4-53
78346|code|CMP             R7, R6|183-66
78348|code|BNE             loc_131FC|246-209
78350|code|LDR             R7, [R4,#4]|103-104
78352|code|LDR             R6, [R4]|38-104
78354|code|CMP             R6, R7|190-66
78356|code|ITTTT NE|31-191
78358|code|MOVNEW          R8, #0x52C8|69-242-200-40
78362|code|MOVNEW          R11, #0x1B08|65-246-8-59
78366|code|MOVTNE.W        R8, #2|192-242-2-8
78370|code|MOVTNE.W        R11, #1|192-242-1-11
78374|code|BNE             loc_1322E|2-209
78376|code|B               loc_1327C|40-224
78378|code|CMP             R7, R6|183-66
78380|code|BEQ             loc_1327A|37-208
78382|code|LDR.W           R3, [R6],#4|86-248-4-59
78386|code|SUB.W           R0, R3, #0xC|163-241-12-0
78390|code|CMP             R0, R8|64-69
78392|code|BEQ             loc_1322A|247-208
78394|code|CMP.W           R11, #0|187-241-0-15
78398|code|BEQ             loc_1329E|46-208
78400|code|SUBS            R3, #4|4-59
78402|code|DMB.W           SY|191-243-95-143
78406|code|LDREX.W         R2, [R3]|83-232-0-47
78410|code|SUBS            R1, R2, #1|81-30
78412|code|STREX.W         LR, R1, [R3]|67-232-0-30
78416|code|CMP.W           LR, #0|190-241-0-15
78420|code|BNE             loc_13246|247-209
78422|code|DMB.W           SY|191-243-95-143
78426|code|CMP             R2, #0|0-42
78428|code|BGT             loc_1322A|229-220
78430|code|ADD             R1, SP, #0x30+var_2C|1-169
78432|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-14-236
78436|code|B               loc_1322A|225-231
78438|code|LSLS            R2, R3, #1|90-0
78440|code|CMP             R3, R2|147-66
78442|code|BLS             loc_1332E|96-217
78444|code|RSB.W           R8, R1, R6|193-235-6-8
78448|code|MOV             R0, #0xFFFFFFFC|111-240-3-0
78452|code|MOV             R9, #0x3FFFFFFF|111-240-64-73
78456|code|B               loc_131C2|163-231
78458|code|LDR             R7, [R4]|39-104
78460|code|CBZ             R7, loc_13284|23-177
78462|code|MOV             R0, R7; void *|56-70
78464|code|BLX             _ZdlPv; operator delete(void *)|254-247-54-236
78468|code|ADD.W           R3, R10, R9,LSL#2|10-235-137-3
78472|code|STR.W           R10, [R4]|196-248-0-160
78476|code|STR             R3, [R4,#8]|163-96
78478|code|STR             R5, [R4,#4]|101-96
78480|code|B               loc_13178|114-231
78482|code|LDR.W           R3, [R2,#-4]|82-248-4-60
78486|code|SUBS            R1, R3, #1|89-30
78488|code|STR.W           R1, [R2,#-4]|66-248-4-28
78492|code|B               loc_131A4|130-231
78494|code|LDR.W           R2, [R3,#-4]|83-248-4-44
78498|code|SUBS            R1, R2, #1|81-30
78500|code|STR.W           R1, [R3,#-4]|67-248-4-28
78504|code|B               loc_1325A|215-231
78506|code|LDR             R0, [SP,#0x30+var_2C]|1-152
78508|code|MOV             R3, #0x252C8|69-242-200-35-192-242-2-3
78516|code|SUBS            R0, #0xC|12-56
78518|code|CMP             R0, R3|152-66
78520|code|BEQ             loc_132C0|2-208
78522|code|MOV             R1, SP|105-70
78524|code|BL              sub_11D70|254-247-88-253
78528|code|BLX             __cxa_end_cleanup|254-247-64-236
78532|code|BLX             __cxa_begin_catch|254-247-90-235
78536|code|MOV             R0, R10|80-70
78538|code|MOV             R1, R5|41-70
78540|code|BL              sub_130A4|255-247-234-254
78544|code|BLX             __cxa_rethrow|254-247-146-236
78548|code|MOV             R11, R10|211-70
78550|code|BLX             __cxa_begin_catch|254-247-82-235
78554|code|CMP.W           R11, #0|187-241-0-15
78558|code|BEQ             loc_13304|17-208
78560|code|MOV             R1, R11|89-70
78562|code|MOV             R0, R10|80-70
78564|code|BL              sub_130A4|255-247-222-254
78568|code|CMP.W           R10, #0|186-241-0-15
78572|code|BEQ             loc_132F4|2-208
78574|code|MOV             R0, R10; void *|80-70
78576|code|BLX             _ZdlPv; operator delete(void *)|254-247-254-235
78580|code|BLX             __cxa_rethrow|254-247-128-236
78584|code|MOV             R4, R0|4-70
78586|code|BLX             __cxa_end_catch|254-247-186-236
78590|code|MOV             R0, R4; void *|32-70
78592|code|BLX             __cxa_begin_catch|254-247-60-235
78596|code|LDR.W           R0, [R8]|216-248-0-0
78600|code|MOV             R3, #0x252C8|69-242-200-35-192-242-2-3
78608|code|SUBS            R0, #0xC|12-56
78610|code|CMP             R0, R3|152-66
78612|code|BEQ             loc_132E8|232-208
78614|code|ADD             R1, SP, #0x30+var_2C|1-169
78616|code|BL              sub_11D70|254-247-42-253
78620|code|B               loc_132E8|228-231
78622|code|BLX             __cxa_begin_catch|254-247-46-235
78626|code|MOV             R0, R11|88-70
78628|code|MOV             R1, R5|41-70
78630|code|BL              sub_130A4|255-247-189-254
78634|code|BLX             __cxa_rethrow|254-247-102-236
78638|code|CMP.W           R2, #0x40000000|178-241-128-79
78642|code|BCS             loc_1326C|155-210
78644|code|RSB.W           R8, R1, R6|193-235-6-8
78648|code|CMP             R2, #0|0-42
78650|code|BNE.W           loc_131BE|127-244-64-175
78654|code|MOV             R9, R2|145-70
78656|code|MOV             R10, R2|146-70
78658|code|B               loc_131C8|65-231
78660|code|MOV             R4, R0|4-70
78662|code|BLX             __cxa_end_catch|254-247-148-236
78666|code|MOV             R0, R4|32-70
78668|code|B               loc_132D6|195-231
78670|code|BLX             __cxa_end_catch|254-247-144-236
78674|code|B               loc_132C0|181-231
78676|code|BX              LR|112-71
78678|data|ALIGN 4|0-191
78680|code|PUSH            {R4,LR}|16-181
78682|code|MOV             R4, R0|4-70
78684|code|BLX             _ZdlPv; operator delete(void *)|254-247-200-235
78688|code|MOV             R0, R4|32-70
78690|code|POP             {R4,PC}|16-189
78692|code|MOVW            R3, #0x104C|65-242-76-3
78696|code|LDR             R0, [R0,R3]|192-88
78698|code|B.W             sub_13B2C|0-240-223-187
78702|data|ALIGN 0x10|0-191
78704|code|CMP             R2, #0|0-42
78706|code|BEQ             loc_1343E|100-208
78708|code|PUSH.W          {R3-R11,LR}|45-233-248-79
78712|code|ADD.W           R7, R0, #0x1040|0-245-130-87
78716|code|MOV             R5, R2|21-70
78718|code|MOV             R6, R1|14-70
78720|code|MOV             R11, R7|187-70
78722|code|MOV             R8, R7|184-70
78724|code|MOV             R9, R0|129-70
78726|code|ADDS            R7, #0x18|24-55
78728|code|ADD.W           R11, R11, #0x10|11-241-16-11
78732|code|ADD.W           R8, R8, #8|8-241-8-8
78736|code|ADD.W           R10, R0, #0x30 ; '0'|0-241-48-10
78740|code|MOVS            R4, #0|0-36
78742|code|B               loc_133BE|18-224
78744|code|ADDS            R1, R6, R4|49-25
78746|code|SUBS            R2, R5, R4|42-27
78748|code|LDR.W           R0, [R11]|219-248-0-0
78752|code|BLX             gnutls_record_send|254-247-202-235
78756|code|MOV             R1, R6|49-70
78758|code|CMP             R0, #0|0-40
78760|code|MOV             R2, R0|2-70
78762|code|ADD             R4, R0|4-68
78764|code|BLE             loc_133EC|30-221
78766|code|LDR.W           R3, [R8]|216-248-0-48
78770|code|MOV             R0, R3|24-70
78772|code|CBZ             R3, loc_133BA|11-177
78774|code|BL              sub_13AA4|0-240-117-251
78778|code|CMP             R5, R4|165-66
78780|code|BEQ             loc_13438|60-208
78782|code|MOVS            R1, #1; nfds|1-33
78784|code|MOVW            R2, #0xEA60; timeout|78-246-96-34
78788|code|MOV             R0, R10; fds|80-70
78790|code|BLX             poll|254-247-110-235
78794|code|ADDS            R1, R6, R4; buf|49-25
78796|code|SUBS            R2, R5, R4; n|42-27
78798|code|CMP             R0, #0|0-40
78800|code|BEQ             loc_133F4|16-208
78802|code|BLT             loc_13416|32-219
78804|code|LDRB            R3, [R7]|59-120
78806|code|CMP             R3, #0|0-43
78808|code|BNE             loc_13398|222-209
78810|code|LDR.W           R0, [R9,#0x2C]; fd|217-248-44-0
78814|code|BLX             write|254-247-60-236
78818|code|MOV             R1, R6|49-70
78820|code|CMP             R0, #0|0-40
78822|code|MOV             R2, R0|2-70
78824|code|ADD             R4, R0|4-68
78826|code|BGT             loc_133AE|224-220
78828|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
78832|code|POP.W           {R3-R11,PC}|189-232-248-143
78836|code|MOVW            R3, #0x5310|69-242-16-51
78840|code|MOVW            R0, #0x48A8|68-246-168-0
78844|code|MOVT.W          R3, #2|192-242-2-3
78848|code|MOVS            R1, #1; size|1-33
78850|code|LDR             R3, [R3]; s|27-104
78852|code|MOVS            R2, #0x1B; n|27-34
78854|code|MOVT.W          R0, #1; ptr|192-242-1-0
78858|code|BLX             fwrite|254-247-252-235
78862|code|MOV             R0, #0xFFFFFFFD|111-240-2-0
78866|code|POP.W           {R3-R11,PC}|189-232-248-143
78870|code|MOVW            R3, #0x5310|69-242-16-51
78874|code|MOVW            R0, #0x48C4|68-246-196-0
78878|code|MOVT.W          R3, #2|192-242-2-3
78882|code|MOVS            R1, #1; size|1-33
78884|code|LDR             R3, [R3]; s|27-104
78886|code|MOVS            R2, #0xC; n|12-34
78888|code|MOVT.W          R0, #1; ptr|192-242-1-0
78892|code|BLX             fwrite|254-247-234-235
78896|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
78900|code|POP.W           {R3-R11,PC}|189-232-248-143
78904|code|MOVS            R0, #0|0-32
78906|code|POP.W           {R3-R11,PC}|189-232-248-143
78910|code|MOVS            R0, #0|0-32
78912|code|BX              LR|112-71
78914|data|ALIGN 4|0-191
78916|code|PUSH.W          {R4-R11,LR}|45-233-240-79
78920|code|ADD.W           R8, R0, #0x1040|0-245-130-88
78924|code|LDR             R7, [SP,#0x24+arg_4]|10-159
78926|code|MOVW            R10, #0x1038|65-242-56-10
78930|code|LDR             R6, =off_14888|20-78
78932|code|MOVW            R9, #0x103C|65-242-60-9
78936|code|MOVW            R12, #0x1044|65-242-68-12
78940|code|MOVW            LR, #0x1048|65-242-72-14
78944|code|STR             R7, [R0,#0x28]|135-98
78946|code|MOVS            R7, #0|0-39
78948|code|STR             R6, [R0]|6-96
78950|code|MOVW            R5, #0x104C|65-242-76-5
78954|code|STR             R1, [R0,#0x2C]|193-98
78956|code|MOVW            R11, #0x1050|65-242-80-11
78960|code|STR.W           R7, [R0,R10]|64-248-10-112
78964|code|MOVW            R10, #0x1058|65-242-88-10
78968|code|STRB.W          R7, [R0,#0x24]|128-248-36-112
78972|code|STR.W           R7, [R0,R9]|64-248-9-112
78976|code|MOV.W           R9, #1|79-240-1-9
78980|code|STRB.W          R9, [R8]|136-248-0-144
78984|code|STR             R1, [R0,#0x30]|1-99
78986|code|STR.W           R2, [R0,R12]|64-248-12-32
78990|code|STR.W           R3, [R0,LR]|64-248-14-48
78994|code|LDR             R3, [SP,#0x24+arg_0]|9-155
78996|code|STR             R3, [R0,R5]|67-81
78998|code|STR.W           R7, [R0,R11]|64-248-11-112
79002|code|STRB.W          R7, [R0,R10]|0-248-10-112
79006|code|POP.W           {R4-R11,PC}|189-232-240-143
79010|data|ALIGN 4|0-191
79012|data|DCD off_14888|136-72-1-0
79016|code|PUSH            {R3-R5,LR}|56-181
79018|code|MOVS            R1, #1|1-33
79020|code|MOV             R4, R0|4-70
79022|code|MOVW            R5, #0x1050|65-242-80-5
79026|code|ADD             R0, R5|40-68
79028|code|BLX             gnutls_init|254-247-184-235
79032|code|LDR             R0, [R4,R5]|96-89
79034|code|BLX             gnutls_set_default_priority|254-247-28-234
79038|code|MOVW            R1, #0x48D4|68-246-212-1
79042|code|LDR             R0, [R4,R5]|96-89
79044|code|MOVT.W          R1, #1|192-242-1-1
79048|code|MOVS            R2, #0|0-34
79050|code|BLX             gnutls_priority_set_direct|254-247-84-235
79054|code|MOVW            R3, #0x1054|65-242-84-3
79058|code|LDR             R0, [R4,R5]|96-89
79060|code|MOVS            R1, #2|2-33
79062|code|LDR             R2, [R4,R3]|226-88
79064|code|BLX             gnutls_credentials_set|254-247-124-235
79068|code|LDR             R0, [R4,R5]|96-89
79070|code|MOV.W           R1, #0x400|79-244-128-97
79074|code|POP.W           {R3-R5,LR}|189-232-56-64
79078|code|B.W             j_gnutls_dh_set_prime_bits|254-247-127-186
79082|data|ALIGN 4|0-191
79084|code|PUSH            {R4,LR}|16-181
79086|code|MOV             R4, #0x25368|69-242-104-52-192-242-2-4
79094|code|MOV             R0, R4|32-70
79096|code|BLX             gnutls_dh_params_init|254-247-204-235
79100|code|LDR             R0, [R4]|32-104
79102|code|MOV.W           R1, #0x400|79-244-128-97
79106|code|POP.W           {R4,LR}|189-232-16-64
79110|code|B.W             j_gnutls_dh_params_generate2|254-247-221-187
79114|data|ALIGN 4|0-191
79116|code|PUSH            {R3-R5,LR}|56-181
79118|code|MOV             R4, R0|4-70
79120|code|ADD.W           R0, R0, #0x1040|0-245-130-80
79124|code|MOVW            R5, #0x5368|69-242-104-53
79128|code|ADDS            R0, #0x14|20-48
79130|code|MOVT.W          R5, #2|192-242-2-5
79134|code|BLX             gnutls_anon_allocate_server_credentials|254-247-16-234
79138|code|MOV             R0, R4|32-70
79140|code|BL              sub_134A8|255-247-192-255
79144|code|LDR             R3, [R5,#(dword_2536C - 0x25368)]|107-104
79146|code|CBZ             R3, loc_1356C|251-177
79148|code|MOVW            R3, #0x1054|65-242-84-3
79152|code|LDR             R1, [R5]|41-104
79154|code|LDR             R0, [R4,R3]|224-88
79156|code|MOVW            R5, #0x1050|65-242-80-5
79160|code|BLX             gnutls_anon_set_server_dh_params|254-247-22-235
79164|code|LDR             R0, [R4,R5]|96-89
79166|code|LDR             R1, [R4,#0x2C]|225-106
79168|code|BLX             gnutls_transport_set_ptr|254-247-244-234
79172|code|LDR             R0, [R4,R5]|96-89
79174|code|BLX             gnutls_handshake|254-247-172-235
79178|code|CMP             R0, #0|0-40
79180|code|BLT             loc_13562|9-219
79182|code|MOVS            R3, #1|1-35
79184|code|MOVW            R2, #0x1058|65-242-88-2
79188|code|LDR             R0, [R4,R5]|96-89
79190|code|MOV             R1, R3|25-70
79192|code|STRB            R3, [R4,R2]|163-84
79194|code|BLX             gnutls_certificate_server_set_request|254-247-34-234
79198|code|MOVS            R0, #0|0-32
79200|code|POP             {R3-R5,PC}|56-189
79202|code|LDR             R0, [R4,R5]|96-89
79204|code|BLX             gnutls_deinit|254-247-58-234
79208|code|MOVS            R0, #2|2-32
79210|code|POP             {R3-R5,PC}|56-189
79212|code|MOV             R0, R4|32-70
79214|code|MOVS            R3, #1|1-35
79216|code|STR             R3, [R5,#(dword_2536C - 0x25368)]|107-96
79218|code|BL              sub_134EC|255-247-187-255
79222|code|B               loc_1352C|217-231
79224|code|PUSH            {R4,LR}|16-181
79226|code|ADD.W           R4, R0, #0x1040|0-245-130-84
79230|code|LDRB            R3, [R4]|35-120
79232|code|CBZ             R3, loc_1358A|27-177
79234|code|MOVW            R3, #0x1058|65-242-88-3
79238|code|LDRB            R3, [R0,R3]|195-92
79240|code|CBZ             R3, loc_13590|19-177
79242|code|MOVS            R0, #0|0-32
79244|code|STRB            R0, [R4]|32-112
79246|code|POP             {R4,PC}|16-189
79248|code|LDR             R0, [R0,#0x2C]|192-106
79250|code|BLX             close|254-247-98-234
79254|code|MOVS            R0, #0|0-32
79256|code|STRB            R0, [R4]|32-112
79258|code|POP             {R4,PC}|16-189
79260|code|PUSH            {R1-R3}|14-180
79262|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
79266|code|PUSH            {R4,R5,LR}|48-181
79268|code|SUB.W           SP, SP, #0x408|173-245-129-109
79272|code|ADDW            R4, SP, #0x420+varg_r1|13-242-20-68
79276|code|MOV             R5, R0|5-70
79278|code|ADD             R0, SP, #0x420+s; s|2-168
79280|code|LDR.W           R2, [R4],#4; format|84-248-4-43
79284|code|MOV             R3, R4; arg|35-70
79286|code|STR             R4, [SP,#0x420+var_41C]|1-148
79288|code|BLX             vsnprintf|254-247-212-235
79292|code|ADD.W           R3, R5, #0x1040|5-245-130-83
79296|code|LDRB            R3, [R3]|27-120
79298|code|CMP.W           R0, #0x400|176-245-128-111
79302|code|MOV             R2, R0|2-70
79304|code|IT GE|168-191
79306|code|MOVGE.W         R2, #0x400|79-244-128-98
79310|code|CBZ             R3, loc_135E8|91-177
79312|code|MOVS            R3, #0x1C|28-35
79314|code|ADD             R1, SP, #0x420+s|2-169
79316|code|MOV             R0, R5|40-70
79318|code|STRH            R3, [R5,#0x34]|171-134
79320|code|BL              sub_13370|255-247-202-254
79324|code|ADD.W           SP, SP, #0x408|13-245-129-109
79328|code|POP.W           {R4,R5,LR}|189-232-48-64
79332|code|ADD             SP, SP, #0xC|3-176
79334|code|BX              LR|112-71
79336|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
79340|code|B               loc_135DC|246-231
79342|data|ALIGN 0x10|0-191
79344|code|PUSH            {R4}|16-180
79346|code|ADD.W           R4, R0, #0x1040|0-245-130-84
79350|code|LDRB            R4, [R4]|36-120
79352|code|CBZ             R4, loc_13604|36-177
79354|code|MOVS            R4, #0x1C|28-36
79356|code|STRH            R4, [R0,#0x34]|132-134
79358|code|POP.W           {R4}|93-248-4-75
79362|code|B               sub_13370|181-230
79364|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
79368|code|POP.W           {R4}|93-248-4-75
79372|code|BX              LR|112-71
79374|data|ALIGN 0x10|0-191
79376|code|PUSH.W          {R4-R11,LR}|45-233-240-79
79380|code|ADD.W           R4, R0, #0x1040|0-245-130-84
79384|code|SUB             SP, SP, #0xC|131-176
79386|code|LDRB            R4, [R4]|36-120
79388|code|CMP             R4, #0|0-44
79390|code|BEQ.W           loc_13896|0-240-58-129
79394|code|STR             R3, [SP,#0x30+var_2C]|1-147
79396|code|MOV             R7, R2|23-70
79398|code|MOVW            R3, #0x1038|65-242-56-3
79402|code|MOVW            R2, #0x103C|65-242-60-2
79406|code|LDR             R3, [R0,R3]|195-88
79408|code|MOV             R8, R1|136-70
79410|code|LDR             R2, [R0,R2]|130-88
79412|code|MOV             R5, R0|5-70
79414|code|CMP             R3, R2|147-66
79416|code|BLT             loc_13728|118-219
79418|code|MOVS            R6, #0|0-38
79420|code|CMP             R7, #0|0-47
79422|code|BEQ.W           loc_13880|0-240-31-129
79426|code|MOVW            R3, #0x103C|65-242-60-3
79430|code|MOVW            R2, #0x1038|65-242-56-2
79434|code|MOVS            R0, #0; timer|0-32
79436|code|STR             R0, [R5,R2]|168-80
79438|code|STR             R0, [R5,R3]|232-80
79440|code|ADD.W           R9, R5, #0x1040|5-245-130-89
79444|code|BLX             time|254-247-68-235
79448|code|ADD.W           R11, R5, #0x1020|5-245-129-91
79452|code|MOV             R4, R9|76-70
79454|code|ADD.W           R11, R11, #0x1C|11-241-28-11
79458|code|ADD.W           R9, R9, #0x18|9-241-24-9
79462|code|MOV             R3, R4|35-70
79464|code|ADDS            R3, #0x10|16-51
79466|code|STR             R3, [SP,#0x30+var_30]|0-147
79468|code|MOVS            R3, #0x19|25-35
79470|code|STRH            R3, [R5,#0x34]|171-134
79472|code|MOV             R10, R0|130-70
79474|code|MOVS            R0, #0; timer|0-32
79476|code|BLX             time|254-247-52-235
79480|code|LDR             R3, [SP,#0x30+arg_0]|12-155
79482|code|RSB.W           R0, R0, R10|192-235-10-0
79486|code|ADDS            R2, R0, R3|194-24
79488|code|BMI.W           loc_137D0|0-241-166-128
79492|code|RSB.W           R3, R2, R2,LSL#5|194-235-66-19
79496|code|ADD.W           R0, R5, #0x30 ; '0'; fds|5-241-48-0
79500|code|MOVS            R1, #1; nfds|1-33
79502|code|ADD.W           R2, R2, R3,LSL#2|2-235-131-2
79506|code|LSLS            R2, R2, #3; timeout|210-0
79508|code|BLX             poll|254-247-6-234
79512|code|CMP             R0, #0|0-40
79514|code|BEQ.W           loc_137D0|0-240-153-128
79518|code|BLT.W           loc_13860|192-242-223-128
79522|code|LDRB.W          R3, [R9]|153-248-0-48
79526|code|CMP             R3, #0|0-43
79528|code|BEQ.W           loc_137DA|0-240-151-128
79532|code|LDR             R3, [SP,#0x30+var_30]|0-155
79534|code|ADD.W           R1, R5, #0x38 ; '8'|5-241-56-1
79538|code|MOV.W           R2, #0x1000|79-244-128-82
79542|code|LDR             R0, [R3]|24-104
79544|code|BLX             gnutls_record_recv|254-247-60-235
79548|code|CMP             R0, #0|0-40
79550|code|BLT.W           loc_137EE|192-242-150-128
79554|code|ADD.W           R1, R5, #0x1020|5-245-129-81
79558|code|STR.W           R0, [R11]|203-248-0-0
79562|code|ADDS            R1, #0x18|24-49
79564|code|ADD.W           R2, R8, R6|8-235-6-2
79568|code|LDR             R3, [R1]|11-104
79570|code|B               loc_136E4|7-224
79572|code|LDRB.W          LR, [LR,#0x38]|158-248-56-224
79576|code|CMP.W           LR, #0xA|190-241-10-15
79580|code|IT NE|24-191
79582|code|CMPNE           R7, R4|167-66
79584|code|BLE             loc_13704|16-221
79586|code|MOV             R6, R4|38-70
79588|code|ADD             R3, R5|43-68
79590|code|MOV             R12, R2|148-70
79592|code|ADDS            R4, R6, #1|116-28
79594|code|LDRB.W          R3, [R3,#0x38]|147-248-56-48
79598|code|STRB.W          R3, [R2],#1|2-248-1-59
79602|code|LDR             R3, [R1]|11-104
79604|code|LDR.W           R0, [R11]|219-248-0-0
79608|code|ADD.W           LR, R5, R3|5-235-3-14
79612|code|ADDS            R3, #1|1-51
79614|code|CMP             R3, R0|131-66
79616|code|STR             R3, [R1]|11-96
79618|code|BLT             loc_136D4|231-219
79620|code|CMP             R7, R4|167-66
79622|code|BEQ             loc_137F4|117-208
79624|code|CMP             R4, #0|0-44
79626|code|BLE             loc_13718|5-221
79628|code|ADD.W           R2, R8, R4|8-235-4-2
79632|code|LDRB.W          R2, [R2,#-1]|18-248-1-44
79636|code|CMP             R2, #0xA|10-42
79638|code|BEQ             loc_137F6|110-208
79640|code|CMP             R3, R0|131-66
79642|code|MOV             R6, R4|38-70
79644|code|ITTT EQ|2-191
79646|code|MOVEQ           R3, #0|0-35
79648|code|STREQ           R3, [R1]|11-96
79650|code|STREQ.W         R3, [R11]|203-248-0-48
79654|code|B               loc_13672|164-231
79656|code|ADD.W           R1, R0, #0x1020|0-245-129-81
79660|code|MOVS            R6, #0|0-38
79662|code|ADD.W           R0, R8, #0xFFFFFFFF|8-241-255-48
79666|code|MOV             R4, R1|12-70
79668|code|ADDS            R1, #0x18|24-49
79670|code|ADDS            R4, #0x1C|28-52
79672|code|B               loc_13746|5-224
79674|code|LDRB.W          R2, [LR,#0x38]|158-248-56-32
79678|code|CMP             R2, #0xA|10-42
79680|code|IT NE|24-191
79682|code|CMPNE           R6, R7|190-66
79684|code|BGE             loc_13762|13-218
79686|code|ADD             R3, R5|43-68
79688|code|ADDS            R6, #1|1-54
79690|code|LDRB.W          R3, [R3,#0x38]|147-248-56-48
79694|code|STRB.W          R3, [R0,#1]!|0-248-1-63
79698|code|LDR             R3, [R1]|11-104
79700|code|LDR             R2, [R4]|34-104
79702|code|ADD.W           LR, R5, R3|5-235-3-14
79706|code|ADDS            R3, #1|1-51
79708|code|CMP             R3, R2|147-66
79710|code|STR             R3, [R1]|11-96
79712|code|BLT             loc_1373A|235-219
79714|code|CMP             R7, R6|183-66
79716|code|BEQ             loc_1377A|9-208
79718|code|CMP             R6, #0|0-46
79720|code|BLE.W           loc_13642|127-247-107-175
79724|code|ADD.W           R3, R8, R6|8-235-6-3
79728|code|LDRB.W          R3, [R3,#-1]|19-248-1-60
79732|code|CMP             R3, #0xA|10-43
79734|code|BNE.W           loc_13642|127-244-100-175
79738|code|LDR             R2, [R5]|42-104
79740|code|MOV             R3, #0x13365|67-242-101-51-192-242-1-3
79748|code|LDR             R2, [R2,#8]|146-104
79750|code|CMP             R2, R3|154-66
79752|code|BNE             loc_13884|124-209
79754|code|MOVW            R3, #0x104C|65-242-76-3
79758|code|MOV             R1, R6|49-70
79760|code|LDR             R0, [R5,R3]|232-88
79762|code|BL              sub_13B2C|0-240-203-249
79766|code|MOVW            R3, #0x1048|65-242-72-3
79770|code|LDR             R0, [R5,R3]|232-88
79772|code|CBZ             R0, loc_137A6|24-177
79774|code|MOV             R1, R8|65-70
79776|code|MOV             R2, R6|50-70
79778|code|BL              sub_13AA4|0-240-127-249
79782|code|CMP             R7, R6|183-66
79784|code|BLE             loc_13850|82-221
79786|code|LDR             R2, [SP,#0x30+var_2C]|1-154
79788|code|SUBS            R0, R6, #1|112-30
79790|code|MOVS            R3, #0|0-35
79792|code|STRB.W          R3, [R8,R0]|8-248-0-48
79796|code|CBZ             R2, loc_137CA|74-177
79798|code|ADD.W           R2, R8, R0|8-235-0-2
79802|code|LDRB.W          R2, [R2,#-1]|18-248-1-44
79806|code|CMP             R2, #0xD|13-42
79808|code|BNE             loc_137CA|3-209
79810|code|SUBS            R6, #2|2-62
79812|code|MOV             R0, R6|48-70
79814|code|STRB.W          R3, [R8,R6]|8-248-6-48
79818|code|ADD             SP, SP, #0xC|3-176
79820|code|POP.W           {R4-R11,PC}|189-232-240-143
79824|code|MOV             R0, #0xFFFFFFFD|111-240-2-0
79828|code|ADD             SP, SP, #0xC|3-176
79830|code|POP.W           {R4-R11,PC}|189-232-240-143
79834|code|LDR             R0, [R5,#0x2C]; fd|232-106
79836|code|ADD.W           R1, R5, #0x38 ; '8'; buf|5-241-56-1
79840|code|MOV.W           R2, #0x1000; nbytes|79-244-128-82
79844|code|BLX             read|254-247-68-233
79848|code|CMP             R0, #0|0-40
79850|code|BGE.W           loc_136C2|191-246-106-175
79854|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
79858|code|B               loc_137CA|234-231
79860|code|MOV             R4, R7|60-70
79862|code|LDR             R2, [R5]|42-104
79864|code|MOV             R3, #0x13365|67-242-101-51-192-242-1-3
79872|code|STR.W           R12, [SP,#0x30+var_30]|205-248-0-192
79876|code|LDR             R2, [R2,#8]|146-104
79878|code|CMP             R2, R3|154-66
79880|code|BNE             loc_13854|36-209
79882|code|MOVW            R3, #0x104C|65-242-76-3
79886|code|MOV             R1, R4|33-70
79888|code|LDR             R0, [R5,R3]|232-88
79890|code|BL              sub_13B2C|0-240-139-249
79894|code|LDR.W           R12, [SP,#0x30+var_30]|221-248-0-192
79898|code|MOVW            R3, #0x1048|65-242-72-3
79902|code|LDR             R0, [R5,R3]|232-88
79904|code|CBZ             R0, loc_13832|56-177
79906|code|MOV             R1, R8|65-70
79908|code|MOV             R2, R4|34-70
79910|code|STR.W           R12, [SP,#0x30+var_30]|205-248-0-192
79914|code|BL              sub_13AA4|0-240-59-249
79918|code|LDR.W           R12, [SP,#0x30+var_30]|221-248-0-192
79922|code|CMP             R7, R4|167-66
79924|code|IT LE|216-191
79926|code|MOVLE           R0, R4|32-70
79928|code|BLE             loc_137CA|199-221
79930|code|LDR             R2, [SP,#0x30+var_2C]|1-154
79932|code|MOVS            R3, #0|0-35
79934|code|STRB.W          R3, [R12]|140-248-0-48
79938|code|CBZ             R2, loc_13850|42-177
79940|code|ADD.W           R2, R8, R6|8-235-6-2
79944|code|LDRB.W          R2, [R2,#-1]|18-248-1-44
79948|code|CMP             R2, #0xD|13-42
79950|code|BEQ             loc_1388C|29-208
79952|code|MOV             R0, R6|48-70
79954|code|B               loc_137CA|186-231
79956|code|MOV             R0, R5|40-70
79958|code|MOV             R1, R4|33-70
79960|code|BLX             R2|144-71
79962|code|LDR.W           R12, [SP,#0x30+var_30]|221-248-0-192
79966|code|B               loc_1381A|220-231
79968|code|MOVW            R3, #0x5310|69-242-16-51
79972|code|MOVW            R0, #0x48C4|68-246-196-0
79976|code|MOVT.W          R3, #2|192-242-2-3
79980|code|MOVT.W          R0, #1; ptr|192-242-1-0
79984|code|LDR             R3, [R3]; s|27-104
79986|code|MOVS            R1, #1; size|1-33
79988|code|MOVS            R2, #0xC; n|12-34
79990|code|BLX             fwrite|254-247-198-233
79994|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
79998|code|B               loc_137CA|164-231
80000|code|MOV             R6, R7|62-70
80002|code|B               loc_1377A|122-231
80004|code|MOV             R0, R5|40-70
80006|code|MOV             R1, R6|49-70
80008|code|BLX             R2|144-71
80010|code|B               loc_13796|132-231
80012|code|SUBS            R6, #1|1-62
80014|code|STRB.W          R3, [R8,R6]|8-248-6-48
80018|code|MOV             R0, R6|48-70
80020|code|B               loc_137CA|153-231
80022|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
80026|code|B               loc_137CA|150-231
80028|code|BX              LR|112-71
80030|data|ALIGN 0x10|0-191
80032|code|PUSH            {R4,LR}|16-181
80034|code|MOV             R4, R0|4-70
80036|code|LDR             R0, [R0,#4]; stream|64-104
80038|code|SUB.W           SP, SP, #0x1000|173-245-128-93
80042|code|SUB             SP, SP, #0x18|134-176
80044|code|CBZ             R0, loc_138B8|32-177
80046|code|BLX             fflush|254-247-42-234
80050|code|LDR             R0, [R4,#4]; stream|96-104
80052|code|BLX             fclose|254-247-202-233
80056|code|MOVW            R1, #0x4940|68-246-64-17
80060|code|LDR             R2, [R4,#0x14]|98-105
80062|code|MOVT.W          R1, #1; format|192-242-1-1
80066|code|MOV             R0, SP; s|104-70
80068|code|BLX             sprintf|254-247-206-233
80072|code|MOV             R1, #(aDD+4); format|68-246-64-17-192-242-1-1
80080|code|LDR             R2, [R4,#8]|162-104
80082|code|ADD             R0, SP, #0x1020+s; s|3-168
80084|code|BLX             sprintf|254-247-198-233
80088|code|MOVW            R2, #0xFE7; n|64-246-231-114
80092|code|ADD             R0, SP, #0x1020+dest; dest|6-168
80094|code|LDR             R1, [R4,#0x10]; src|33-105
80096|code|BLX             strncpy|254-247-10-234
80100|code|LDR             R3, [R4,#0x14]|99-105
80102|code|MOVS            R2, #0|0-34
80104|code|STRB.W          R2, [SP,#0x1020+var_21]|141-248-255-47
80108|code|CBNZ            R3, loc_13912|139-185
80110|code|LDR             R3, [R4,#0xC]|227-104
80112|code|CBNZ            R3, loc_13936|11-187
80114|code|LDR             R3, [R4,#8]|163-104
80116|code|MOV             R1, #aW; modes|68-246-228-1-192-242-1-1
80124|code|ADD             R0, SP, #0x1020+dest; filename|6-168
80126|code|ADDS            R3, #1|1-51
80128|code|STR             R3, [R4,#8]|163-96
80130|code|BLX             fopen|254-247-176-232
80134|code|STR             R0, [R4,#4]|96-96
80136|code|CBZ             R0, loc_13956|40-179
80138|code|ADD.W           SP, SP, #0x1000|13-245-128-93
80142|code|ADD             SP, SP, #0x18|6-176
80144|code|POP             {R4,PC}|16-189
80146|code|ADD             R0, SP, #0x1020+dest; s|6-168
80148|code|BLX             strlen|254-247-130-233
80152|code|ADD.W           LR, SP, #0x1020+dest|13-241-24-14
80156|code|ADD             R2, SP, #0x1020+dest|6-170
80158|code|MOV             R1, SP; src|105-70
80160|code|MOV             R3, R0|3-70
80162|code|ADDS            R0, #1|1-48
80164|code|ADD             R0, R2; dest|16-68
80166|code|MOVS            R2, #0x3A ; ':'|58-34
80168|code|STRB.W          R2, [LR,R3]|14-248-3-32
80172|code|BLX             strcpy|254-247-210-232
80176|code|LDR             R3, [R4,#0xC]|227-104
80178|code|CMP             R3, #0|0-43
80180|code|BEQ             loc_138F2|221-208
80182|code|ADD             R0, SP, #0x1020+dest; s|6-168
80184|code|BLX             strlen|254-247-112-233
80188|code|ADD.W           LR, SP, #0x1020+dest|13-241-24-14
80192|code|ADD             R2, SP, #0x1020+dest|6-170
80194|code|ADD             R1, SP, #0x1020+s; src|3-169
80196|code|MOV             R3, R0|3-70
80198|code|ADDS            R0, #1|1-48
80200|code|ADD             R0, R2; dest|16-68
80202|code|MOVS            R2, #0x3A ; ':'|58-34
80204|code|STRB.W          R2, [LR,R3]|14-248-3-32
80208|code|BLX             strcpy|254-247-192-232
80212|code|B               loc_138F2|205-231
80214|code|MOVW            R3, #0x5310|69-242-16-51
80218|code|MOVW            R1, #0x48E8|68-246-232-1
80222|code|MOVT.W          R3, #2|192-242-2-3
80226|code|ADD             R2, SP, #0x1020+dest|6-170
80228|code|LDR             R0, [R3]; stream|24-104
80230|code|MOVT.W          R1, #1; format|192-242-1-1
80234|code|BLX             fprintf|254-247-106-233
80238|code|MOV             R1, #aW; modes|68-246-228-1-192-242-1-1
80246|code|MOVS            R0, #2; fd|2-32
80248|code|BLX             fdopen|253-247-208-239
80252|code|STR             R0, [R4,#4]|96-96
80254|code|ADD.W           SP, SP, #0x1000|13-245-128-93
80258|code|ADD             SP, SP, #0x18|6-176
80260|code|POP             {R4,PC}|16-189
80262|data|ALIGN 4|0-191
80264|code|PUSH            {R4-R6,LR}|112-181
80266|code|MOV             R4, R0|4-70
80268|code|SUB             SP, SP, #8|130-176
80270|code|STRB            R2, [R0]|2-112
80272|code|STR             R3, [R0,#0xC]|195-96
80274|code|MOVS            R5, #0|0-37
80276|code|ADD             R2, SP, #0x18+var_14|1-170
80278|code|STR             R5, [R4,#4]|101-96
80280|code|STR             R5, [R4,#8]|165-96
80282|code|ADDS            R0, #0x10|16-48
80284|code|LDR             R6, [SP,#0x18+arg_0]|6-158
80286|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-222-232
80290|code|MOV             R0, R4|32-70
80292|code|STR             R6, [R4,#0x14]|102-97
80294|code|ADD             SP, SP, #8|2-176
80296|code|POP             {R4-R6,PC}|112-189
80298|data|ALIGN 4|0-191
80300|code|MOV             R3, R1|11-70
80302|code|ADDS            R1, #0x10; std::string *|16-49
80304|code|PUSH            {R4-R6,LR}|112-181
80306|code|MOV             R4, R0|4-70
80308|code|LDRB.W          R5, [R1,#-0x10]|17-248-16-92
80312|code|ADDS            R0, #0x10; this|16-48
80314|code|LDR             R6, [R3,#0xC]|222-104
80316|code|MOVS            R3, #0|0-35
80318|code|STR             R3, [R4,#4]|99-96
80320|code|STRB            R5, [R4]|37-112
80322|code|MOV             R5, R2|21-70
80324|code|STR             R6, [R4,#0xC]|230-96
80326|code|STR             R3, [R4,#8]|163-96
80328|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|254-247-34-232
80332|code|STR             R5, [R4,#0x14]|101-97
80334|code|MOV             R0, R4|32-70
80336|code|POP             {R4-R6,PC}|112-189
80338|data|ALIGN 4|0-191
80340|code|PUSH            {R3,LR}|8-181
80342|code|LDR             R3, [R0,#0xC]|195-104
80344|code|CBNZ            R3, loc_139E2|27-185
80346|code|LDR             R3, [R0,#4]|67-104
80348|code|CBZ             R3, loc_139E2|11-177
80350|code|MOVS            R0, #0|0-32
80352|code|POP             {R3,PC}|8-189
80354|code|BL              sub_138A0|255-247-93-255
80358|code|MOVS            R0, #0|0-32
80360|code|POP             {R3,PC}|8-189
80362|data|ALIGN 4|0-191
80364|code|PUSH            {R4,LR}|16-181
80366|code|MOV             R4, R0|4-70
80368|code|LDR             R0, [R0,#4]; stream|64-104
80370|code|SUB             SP, SP, #8|130-176
80372|code|CBZ             R0, loc_13A00|32-177
80374|code|BLX             fflush|254-247-134-233
80378|code|LDR             R0, [R4,#4]; stream|96-104
80380|code|BLX             fclose|254-247-38-233
80384|code|LDR             R2, [R4,#0x10]|34-105
80386|code|MOV             R3, #0x252C8|69-242-200-35-192-242-2-3
80394|code|SUB.W           R0, R2, #0xC|162-241-12-0
80398|code|CMP             R0, R3|152-66
80400|code|BNE             loc_13A18|2-209
80402|code|MOV             R0, R4|32-70
80404|code|ADD             SP, SP, #8|2-176
80406|code|POP             {R4,PC}|16-189
80408|code|MOV             R3, #0x11B08|65-246-8-51-192-242-1-3
80416|code|CBZ             R3, loc_13A48|147-177
80418|code|SUBS            R2, #4|4-58
80420|code|DMB.W           SY|191-243-95-143
80424|code|LDREX.W         R3, [R2]|82-232-0-63
80428|code|SUBS            R1, R3, #1|89-30
80430|code|STREX.W         LR, R1, [R2]|66-232-0-30
80434|code|CMP.W           LR, #0|190-241-0-15
80438|code|BNE             loc_13A28|247-209
80440|code|DMB.W           SY|191-243-95-143
80444|code|CMP             R3, #0|0-43
80446|code|BGT             loc_13A12|232-220
80448|code|ADD             R1, SP, #0x10+var_C|1-169
80450|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-30-232
80454|code|B               loc_13A12|228-231
80456|code|LDR.W           R3, [R2,#-4]|82-248-4-60
80460|code|SUBS            R1, R3, #1|89-30
80462|code|STR.W           R1, [R2,#-4]|66-248-4-28
80466|code|B               loc_13A3C|243-231
80468|code|LDR             R2, [R4,#0x10]|34-105
80470|code|MOV             R3, #0x252C8|69-242-200-35-192-242-2-3
80478|code|SUB.W           R0, R2, #0xC|162-241-12-0
80482|code|CMP             R0, R3|152-66
80484|code|BNE             loc_13A6A|1-209
80486|code|BLX             __cxa_end_cleanup|254-247-110-232
80490|code|MOVW            R3, #0x1B08|65-246-8-51
80494|code|SUBS            R1, R2, #4|17-31
80496|code|MOVT.W          R3, #1|192-242-1-3
80500|code|CBZ             R3, loc_13A98|131-177
80502|code|DMB.W           SY|191-243-95-143
80506|code|LDREX.W         R3, [R1]|81-232-0-63
80510|code|SUBS            R2, R3, #1|90-30
80512|code|STREX.W         R4, R2, [R1]|65-232-0-36
80516|code|CMP             R4, #0|0-44
80518|code|BNE             loc_13A7A|248-209
80520|code|DMB.W           SY|191-243-95-143
80524|code|CMP             R3, #0|0-43
80526|code|BGT             loc_13A66|234-220
80528|code|ADD             R1, SP, #0x10+var_C|1-169
80530|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|253-247-246-239
80534|code|B               loc_13A66|230-231
80536|code|LDR.W           R3, [R2,#-4]|82-248-4-60
80540|code|SUBS            R1, R3, #1|89-30
80542|code|STR.W           R1, [R2,#-4]|66-248-4-28
80546|code|B               loc_13A8C|243-231
80548|code|LDR             R3, [R0,#4]; s|67-104
80550|code|PUSH            {R4,R5,LR}|48-181
80552|code|MOV             R5, R0|5-70
80554|code|SUB             SP, SP, #0xC|131-176
80556|code|MOV             R4, R2|20-70
80558|code|CBZ             R3, loc_13AD0|123-177
80560|code|MOV             R0, R1; ptr|8-70
80562|code|MOV             R2, R4; n|34-70
80564|code|MOVS            R1, #1; size|1-33
80566|code|BLX             fwrite|254-247-166-232
80570|code|CMP             R4, R0|132-66
80572|code|IT NE|24-191
80574|code|MOVNE.W         R0, #0xFFFFFFFF|79-240-255-48
80578|code|BNE             loc_13ACC|3-209
80580|code|LDR             R0, [R5,#4]; stream|104-104
80582|code|BLX             fflush|254-247-30-233
80586|code|MOVS            R0, #0|0-32
80588|code|ADD             SP, SP, #0xC|3-176
80590|code|POP             {R4,R5,PC}|48-189
80592|code|STR             R1, [SP,#0x18+var_14]|1-145
80594|code|BL              sub_138A0|255-247-229-254
80598|code|LDR             R3, [R5,#4]|107-104
80600|code|LDR             R1, [SP,#0x18+var_14]|1-153
80602|code|B               loc_13AB0|233-231
80604|code|BX              LR|112-71
80606|data|ALIGN 0x10|0-191
80608|code|PUSH            {R3-R5,LR}|56-181
80610|code|MOV             R4, R0|4-70
80612|code|LDR             R3, =off_14908|8-75
80614|code|MOVS            R5, #0|0-37
80616|code|MOVS            R1, #1|1-33
80618|code|STR             R5, [R4,#4]|101-96
80620|code|STR             R5, [R4,#8]|165-96
80622|code|ADDS            R0, #0xC|12-48
80624|code|STR             R3, [R4]|35-96
80626|code|BL              sub_13CAC|0-240-219-248
80630|code|MOVS            R2, #0|0-34
80632|code|MOVS            R3, #0|0-35
80634|code|STR             R5, [R4,#0x24]|101-98
80636|code|STR             R5, [R4,#0x30]|37-99
80638|code|MOV             R0, R4|32-70
80640|code|STRD.W          R2, R3, [R4,#0x28]|196-233-10-35
80644|code|POP             {R3-R5,PC}|56-189
80646|data|ALIGN 4|0-191
80648|data|DCD off_14908|8-73-1-0
80652|code|PUSH            {R4,LR}|16-181
80654|code|SUB             SP, SP, #8|130-176
80656|code|MOV             R4, R0|4-70
80658|code|ADD.W           R1, R0, #0xC|0-241-12-1
80662|code|ADD             R0, SP, #0x10+var_C|1-168
80664|code|BL              sub_13D4C|0-240-24-249
80668|code|LDR             R3, [R4,#0x30]|35-107
80670|code|ADD             R0, SP, #0x10+var_C|1-168
80672|code|ADDS            R3, #1|1-51
80674|code|STR             R3, [R4,#0x30]|35-99
80676|code|BL              sub_13D8C|0-240-50-249
80680|code|ADD             SP, SP, #8|2-176
80682|code|POP             {R4,PC}|16-189
80684|code|PUSH            {R4,R5,LR}|48-181
80686|code|SUB             SP, SP, #0xC|131-176
80688|code|MOV             R4, R0|4-70
80690|code|MOV             R5, R1|13-70
80692|code|ADD.W           R1, R0, #0xC|0-241-12-1
80696|code|ADD             R0, SP, #0x18+var_14|1-168
80698|code|BL              sub_13D4C|0-240-7-249
80702|code|LDRD.W          R2, R3, [R4,#0x28]|212-233-10-35
80706|code|ADD             R0, SP, #0x18+var_14|1-168
80708|code|ADDS            R2, R2, R5|82-25
80710|code|ADC.W           R3, R3, R5,ASR#31|67-235-229-115
80714|code|STRD.W          R2, R3, [R4,#0x28]|196-233-10-35
80718|code|BL              sub_13D8C|0-240-29-249
80722|code|ADD             SP, SP, #0xC|3-176
80724|code|POP             {R4,R5,PC}|48-189
80726|data|ALIGN 4|0-191
80728|code|PUSH            {R4,LR}|16-181
80730|code|SUB             SP, SP, #8|130-176
80732|code|MOV             R4, R0|4-70
80734|code|ADD.W           R1, R0, #0xC|0-241-12-1
80738|code|ADD             R0, SP, #0x10+var_C|1-168
80740|code|BL              sub_13D4C|0-240-242-248
80744|code|LDR             R3, [R4,#0x24]|99-106
80746|code|ADD             R0, SP, #0x10+var_C|1-168
80748|code|ADDS            R3, #1|1-51
80750|code|STR             R3, [R4,#0x24]|99-98
80752|code|BL              sub_13D8C|0-240-12-249
80756|code|ADD             SP, SP, #8|2-176
80758|code|POP             {R4,PC}|16-189
80760|code|PUSH            {R4,LR}|16-181
80762|code|SUB             SP, SP, #8|130-176
80764|code|MOV             R4, R0|4-70
80766|code|ADD.W           R1, R0, #0xC|0-241-12-1
80770|code|ADD             R0, SP, #0x10+var_C|1-168
80772|code|BL              sub_13D4C|0-240-226-248
80776|code|LDR             R3, [R4,#4]|99-104
80778|code|ADD             R0, SP, #0x10+var_C|1-168
80780|code|ADDS            R3, #1|1-51
80782|code|STR             R3, [R4,#4]|99-96
80784|code|BL              sub_13D8C|0-240-252-248
80788|code|ADD             SP, SP, #8|2-176
80790|code|POP             {R4,PC}|16-189
80792|code|PUSH            {R4,LR}|16-181
80794|code|SUB             SP, SP, #8|130-176
80796|code|MOV             R4, R0|4-70
80798|code|ADD.W           R1, R0, #0xC|0-241-12-1
80802|code|ADD             R0, SP, #0x10+var_C|1-168
80804|code|BL              sub_13D4C|0-240-210-248
80808|code|LDR             R3, [R4,#8]|163-104
80810|code|ADD             R0, SP, #0x10+var_C|1-168
80812|code|ADDS            R3, #1|1-51
80814|code|STR             R3, [R4,#8]|163-96
80816|code|BL              sub_13D8C|0-240-236-248
80820|code|ADD             SP, SP, #8|2-176
80822|code|POP             {R4,PC}|16-189
80824|code|PUSH            {R4-R7,LR}|240-181
80826|code|MOV             R4, R0|4-70
80828|code|SUB             SP, SP, #0x14|133-176
80830|code|MOVS            R0, #0; timer|0-32
80832|code|BLX             time|254-247-142-232
80836|code|ADD             R3, SP, #0x28+var_18|4-171
80838|code|STR.W           R0, [R3,#-4]!|67-248-4-13
80842|code|MOV             R0, R3; timer|24-70
80844|code|BLX             localtime|253-247-124-239
80848|code|LDR             R5, [R4,#0x28]|165-106
80850|code|LDR             R6, [R4,#0x30]|38-107
80852|code|LSRS            R5, R5, #0xA|173-10
80854|code|MOV             R3, R0|3-70
80856|code|MOVW            R0, #0x4928|68-246-40-16
80860|code|LDR             R1, [R3,#8]|153-104
80862|code|MOVT.W          R0, #1; format|192-242-1-0
80866|code|LDR             R2, [R3,#4]|90-104
80868|code|LDR             R3, [R4,#0x24]|99-106
80870|code|STMEA.W         SP, {R5,R6}|141-232-96-0
80874|code|BLX             printf|253-247-230-238
80878|code|MOVW            R0, #0x493C|68-246-60-16
80882|code|LDR             R1, [R4,#4]|97-104
80884|code|MOVT.W          R0, #1; format|192-242-1-0
80888|code|LDR             R2, [R4,#8]|162-104
80890|code|BLX             printf|253-247-222-238
80894|code|LDR             R2, [R4]|34-104
80896|code|MOVW            R3, #0x3ADD|67-246-221-35
80900|code|MOVS            R1, #0|0-33
80902|code|MOVT.W          R3, #1|192-242-1-3
80906|code|STR             R1, [R4,#8]|161-96
80908|code|LDR             R2, [R2,#8]|146-104
80910|code|CMP             R2, R3|154-66
80912|code|BNE             loc_13C3C|20-209
80914|code|MOVS            R0, #0xA; c|10-32
80916|code|MOVW            R6, #0x3FF|64-242-255-54
80920|code|BLX             putchar|253-247-6-239
80924|code|MOVS            R0, #0; stream|0-32
80926|code|BLX             fflush|254-247-114-232
80930|code|LDRD.W          R0, R1, [R4,#0x28]|212-233-10-1
80934|code|MOVS            R3, #0|0-35
80936|code|MOVS            R7, #0|0-39
80938|code|ANDS            R0, R6|48-64
80940|code|ANDS            R1, R7|57-64
80942|code|STR             R3, [R4,#0x24]|99-98
80944|code|STRD.W          R0, R1, [R4,#0x28]|196-233-10-1
80948|code|STR             R3, [R4,#4]|99-96
80950|code|STR             R3, [R4,#0x30]|35-99
80952|code|ADD             SP, SP, #0x14|5-176
80954|code|POP             {R4-R7,PC}|240-189
80956|code|MOV             R0, R4|32-70
80958|code|BLX             R2|144-71
80960|code|B               loc_13C12|231-231
80962|data|ALIGN 4|0-191
80964|code|LDR             R3, =off_14908|8-75
80966|code|PUSH            {R4,LR}|16-181
80968|code|MOV             R4, R0|4-70
80970|code|STR             R3, [R0]|3-96
80972|code|BL              sub_13BB8|255-247-180-255
80976|code|ADD.W           R0, R4, #0xC|4-241-12-0
80980|code|BL              sub_13D10|0-240-92-248
80984|code|MOV             R0, R4|32-70
80986|code|POP             {R4,PC}|16-189
80988|code|ADD.W           R0, R4, #0xC|4-241-12-0
80992|code|BL              sub_13D10|0-240-86-248
80996|code|BLX             __cxa_end_cleanup|253-247-110-239
81000|data|DCD off_14908|8-73-1-0
81004|code|PUSH            {R4,LR}|16-181
81006|code|MOV             R4, R0|4-70
81008|code|BL              sub_13C44|255-247-232-255
81012|code|MOV             R0, R4; void *|32-70
81014|code|BLX             _ZdlPv; operator delete(void *)|253-247-60-239
81018|code|MOV             R0, R4|32-70
81020|code|POP             {R4,PC}|16-189
81022|data|ALIGN 0x10|0-191
81024|code|PUSH            {R4,LR}|16-181
81026|code|SUB             SP, SP, #8|130-176
81028|code|MOV             R4, R0|4-70
81030|code|ADD.W           R1, R0, #0xC|0-241-12-1
81034|code|ADD             R0, SP, #0x10+var_C|1-168
81036|code|BL              sub_13D4C|0-240-94-248
81040|code|MOV             R0, R4|32-70
81042|code|BL              sub_13BB8|255-247-145-255
81046|code|ADD             R0, SP, #0x10+var_C|1-168
81048|code|BL              sub_13D8C|0-240-120-248
81052|code|ADD             SP, SP, #8|2-176
81054|code|POP             {R4,PC}|16-189
81056|code|ADD             R0, SP, #arg_4|1-168
81058|code|BL              sub_13D8C|0-240-115-248
81062|code|BLX             __cxa_end_cleanup|253-247-78-239
81066|data|ALIGN 4|0-191
81068|code|PUSH            {R4,R5,LR}|48-181
81070|code|MOV             R5, R0|5-70
81072|code|SUB             SP, SP, #0xC|131-176
81074|code|CBNZ            R1, loc_13CD4|121-185
81076|code|ADD             R0, SP, #0x18+attr; attr|1-168
81078|code|BLX             pthread_mutexattr_init|253-247-74-238
81082|code|ADD             R0, SP, #0x18+attr|1-168
81084|code|MOVS            R1, #1|1-33
81086|code|BLX             pthread_mutexattr_settype|254-247-10-232
81090|code|MOV             R4, R0|4-70
81092|code|CBZ             R0, loc_13CDE|88-177
81094|code|ADD             R0, SP, #0x18+attr; attr|1-168
81096|code|BLX             pthread_mutexattr_destroy|253-247-70-238
81100|code|CBNZ            R4, loc_13CF0|132-185
81102|code|MOV             R0, R5; mutex|40-70
81104|code|ADD             SP, SP, #0xC|3-176
81106|code|POP             {R4,R5,PC}|48-189
81108|code|MOVS            R1, #0; mutexattr|0-33
81110|code|BLX             pthread_mutex_init|253-247-8-238
81114|code|MOV             R4, R0|4-70
81116|code|B               loc_13CCC|246-231
81118|code|MOV             R0, R5; mutex|40-70
81120|code|ADD             R1, SP, #0x18+attr; mutexattr|1-169
81122|code|BLX             pthread_mutex_init|253-247-2-238
81126|code|MOV             R4, R0|4-70
81128|code|ADD             R0, SP, #0x18+attr; attr|1-168
81130|code|BLX             pthread_mutexattr_destroy|253-247-54-238
81134|code|B               loc_13CCC|237-231
81136|code|MOVW            R3, #0x5310|69-242-16-51
81140|code|MOVW            R0, #0x4944|68-246-68-16
81144|code|MOVT.W          R3, #2|192-242-2-3
81148|code|MOVT.W          R0, #1; ptr|192-242-1-0
81152|code|LDR             R3, [R3]; s|27-104
81154|code|MOVS            R1, #1; size|1-33
81156|code|MOVS            R2, #0x14; n|20-34
81158|code|BLX             fwrite|253-247-126-239
81162|code|MOVS            R0, #1; status|1-32
81164|code|BLX             exit|253-247-78-238
81168|code|PUSH            {R4,LR}|16-181
81170|code|MOV             R4, R0|4-70
81172|code|BLX             pthread_mutex_destroy|253-247-4-239
81176|code|MOV             R0, R4|32-70
81178|code|POP             {R4,PC}|16-189
81180|code|PUSH            {R3,LR}|8-181
81182|code|CBZ             R1, loc_13D2E|49-177
81184|code|BLX             pthread_mutex_lock|253-247-220-237
81188|code|ADDS            R0, #0|0-48
81190|code|IT NE|24-191
81192|code|MOVNE           R0, #1|1-32
81194|code|NEGS            R0, R0|64-66
81196|code|POP             {R3,PC}|8-189
81198|code|BLX             pthread_mutex_trylock|253-247-142-238
81202|code|ADDS            R0, #0|0-48
81204|code|IT NE|24-191
81206|code|MOVNE           R0, #1|1-32
81208|code|NEGS            R0, R0|64-66
81210|code|POP             {R3,PC}|8-189
81212|code|PUSH            {R3,LR}|8-181
81214|code|BLX             pthread_mutex_unlock|254-247-12-232
81218|code|ADDS            R0, #0|0-48
81220|code|IT NE|24-191
81222|code|MOVNE           R0, #1|1-32
81224|code|NEGS            R0, R0|64-66
81226|code|POP             {R3,PC}|8-189
81228|code|PUSH            {R4,LR}|16-181
81230|code|MOV             R4, R0|4-70
81232|code|STR             R1, [R4]|33-96
81234|code|MOV             R0, R1; mutex|8-70
81236|code|BLX             pthread_mutex_lock|253-247-194-237
81240|code|CBNZ            R0, loc_13D5E|8-185
81242|code|MOV             R0, R4|32-70
81244|code|POP             {R4,PC}|16-189
81246|code|MOV             R0, #(a421SErrorTimeo+0x20); s|68-246-8-0-192-242-1-0
81254|code|BLX             perror|253-247-78-238
81258|code|MOV             R3, #0x25310|69-242-16-51-192-242-2-3
81266|code|MOVW            R0, #0x495C|68-246-92-16
81270|code|LDR             R3, [R3]; s|27-104
81272|code|MOVT.W          R0, #1; ptr|192-242-1-0
81276|code|MOVS            R1, #1; size|1-33
81278|code|MOVS            R2, #0x12; n|18-34
81280|code|BLX             fwrite|253-247-64-239
81284|code|MOVS            R0, #1; status|1-32
81286|code|BLX             exit|253-247-18-238
81290|data|ALIGN 4|0-191
81292|code|PUSH            {R4,LR}|16-181
81294|code|MOV             R4, R0|4-70
81296|code|LDR             R0, [R0]; mutex|0-104
81298|code|BLX             pthread_mutex_unlock|253-247-226-239
81302|code|CBZ             R0, loc_13DB8|120-177
81304|code|MOVW            R3, #0x5310|69-242-16-51
81308|code|MOVW            R0, #0x4970|68-246-112-16
81312|code|MOVT.W          R3, #2|192-242-2-3
81316|code|MOVT.W          R0, #1; ptr|192-242-1-0
81320|code|LDR             R3, [R3]; s|27-104
81322|code|MOVS            R1, #1; size|1-33
81324|code|MOVS            R2, #0x14; n|20-34
81326|code|BLX             fwrite|253-247-42-239
81330|code|MOVS            R0, #1; status|1-32
81332|code|BLX             exit|253-247-250-237
81336|code|MOV             R0, R4|32-70
81338|code|POP             {R4,PC}|16-189
81340|code|PUSH.W          {R4-R9,LR}|45-233-240-67
81344|code|MOVW            R4, #0x4988|68-246-136-20
81348|code|SUBW            SP, SP, #0x41C|173-242-28-77
81352|code|MOV             R6, R0|6-70
81354|code|MOV             R7, R1|15-70
81356|code|MOVT.W          R4, #1|192-242-1-4
81360|code|MOVS            R1, #0|0-33
81362|code|STR             R1, [R0,#4]|65-96
81364|code|STR             R1, [R0,#8]|129-96
81366|code|MOVS            R0, #0x1D|29-32
81368|code|STR             R1, [R6,#0xC]|241-96
81370|code|STR             R1, [R6,#0x10]|49-97
81372|code|ASRS            R2, R0, #1|66-16
81374|code|LDR.W           R3, [R4,R2,LSL#2]|84-248-34-48
81378|code|ADD.W           R1, R4, R2,LSL#2|4-235-130-1
81382|code|CMP             R3, #0x63 ; 'c'|99-43
81384|code|BHI             loc_13DFE|9-216
81386|code|B               loc_13F44|171-224
81388|code|ASRS            R3, R2, #1|83-16
81390|code|LDR.W           R5, [R4,R3,LSL#2]|84-248-35-80
81394|code|ADD.W           R1, R4, R3,LSL#2|4-235-131-1
81398|code|CMP             R5, #0x63 ; 'c'|99-45
81400|code|BLS.W           loc_13F48|64-242-166-128
81404|code|MOV             R2, R3|26-70
81406|code|CMP             R2, #0|0-42
81408|code|BGT             loc_13DEC|244-220
81410|code|LDR             R3, =unk_149FC|143-75
81412|code|CMP             R4, R3|156-66
81414|code|BEQ.W           loc_14018|0-240-7-129
81418|code|LDR             R4, [R4]|36-104
81420|code|ADDS            R5, R6, #4|53-29
81422|code|CMP.W           R4, #0x40000000|180-241-128-79
81426|code|BCS.W           loc_14018|128-240-1-129
81430|code|MOV             R1, R4|33-70
81432|code|CMP             R4, #0|0-44
81434|code|BNE.W           loc_13F5C|64-240-159-128
81438|code|MOV             R2, R4|34-70
81440|code|MOV             R0, R5|40-70
81442|code|ADD             R3, SP, #0x438+s|6-171
81444|code|MOVS            R4, #0|0-36
81446|code|STR             R4, [SP,#0x438+s]|6-148
81448|code|BL              sub_14224|0-240-252-249
81452|code|MOVW            R1, #0x4830|68-246-48-1
81456|code|STR             R4, [R6,#0x10]|52-97
81458|code|MOVT.W          R1, #1; modes|192-242-1-1
81462|code|MOV             R0, R7; filename|56-70
81464|code|BLX             fopen|253-247-20-238
81468|code|MOV             R4, R0|4-70
81470|code|CMP             R0, #0|0-40
81472|code|BEQ.W           loc_14024|0-240-240-128
81476|code|MOV             R7, #0x149FC|68-246-252-23-192-242-1-7
81484|code|B               loc_13E68|12-224
81486|code|MOVW            R1, #0x464C|68-242-76-97
81490|code|ADD             R0, SP, #0x438+s; s|6-168
81492|code|MOVT.W          R1, #1; delim|192-242-1-1
81496|code|BLX             strtok|253-247-206-237
81500|code|LDRB.W          R3, [SP,#0x438+s]|157-248-24-48
81504|code|CMP             R3, #0x23 ; '#'|35-43
81506|code|IT NE|24-191
81508|code|CMPNE           R3, #0|0-43
81510|code|BNE             loc_13E90|19-209
81512|code|ADD             R0, SP, #0x438+s; s|6-168
81514|code|MOV.W           R1, #0x400; n|79-244-128-97
81518|code|MOV             R2, R4; stream|34-70
81520|code|BLX             fgets|253-247-182-238
81524|code|CMP             R0, #0|0-40
81526|code|BNE             loc_13E4E|234-209
81528|code|LDR             R3, [R6,#0x10]|51-105
81530|code|CMP             R3, #0|0-43
81532|code|BEQ.W           loc_13FE0|0-240-176-128
81536|code|MOV             R0, R4; stream|32-70
81538|code|BLX             fclose|253-247-228-238
81542|code|MOV             R0, R6|48-70
81544|code|ADDW            SP, SP, #0x41C|13-242-28-77
81548|code|POP.W           {R4-R9,PC}|189-232-240-131
81552|code|MOVW            R1, #0x4A68|68-246-104-33
81556|code|ADD             R0, SP, #0x438+s; s|6-168
81558|code|MOVT.W          R1, #1; delim|192-242-1-1
81562|code|BLX             strtok|253-247-174-237
81566|code|MOV             R1, #unk_14A68; delim|68-246-104-33-192-242-1-1
81574|code|MOVS            R0, #0; s|0-32
81576|code|BLX             strtok|253-247-166-237
81580|code|CBZ             R0, loc_13EC8|96-177
81582|code|MOVW            R1, #0x4A68|68-246-104-33
81586|code|MOVS            R0, #0; s|0-32
81588|code|MOVT.W          R1, #1; delim|192-242-1-1
81592|code|BLX             strtok|253-247-158-237
81596|code|CBZ             R0, loc_13EC8|32-177
81598|code|LDRB            R3, [R0]|3-120
81600|code|SUBS            R3, #0x62 ; 'b'|98-59
81602|code|UXTB            R3, R3|219-178
81604|code|CMP             R3, #0x10|16-43
81606|code|BLS             loc_13F56|70-217
81608|code|MOV.W           R9, #0|79-240-0-9
81612|code|ADD             R1, SP, #0x438+s|6-169
81614|code|MOV             R2, SP|106-70
81616|code|ADD             R0, SP, #0x438+var_430|2-168
81618|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|253-247-68-238
81622|code|ADD             R1, SP, #0x438+var_430; std::string *|2-169
81624|code|ADD             R0, SP, #0x438+var_42C; this|3-168
81626|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|253-247-154-237
81630|code|MOV             R0, R6|48-70
81632|code|ADD             R1, SP, #0x438+var_42C|3-169
81634|code|MOVS            R3, #0|0-35
81636|code|STR             R3, [SP,#0x438+var_428]|4-147
81638|code|STR             R3, [SP,#0x438+var_424]|5-147
81640|code|BL              sub_1415C|0-240-56-249
81644|code|LDR             R3, [SP,#0x438+var_42C]|3-155
81646|code|MOV             R8, R0|128-70
81648|code|MOVW            R5, #0x52C8|69-242-200-37
81652|code|SUB.W           R0, R3, #0xC|163-241-12-0
81656|code|MOVT.W          R5, #2|192-242-2-5
81660|code|CMP             R0, R5|168-66
81662|code|BNE             loc_13F82|64-209
81664|code|LDR             R3, [SP,#0x438+var_430]|2-155
81666|code|MOVS            R2, #0|0-34
81668|code|STR.W           R9, [R8,#4]|200-248-4-144
81672|code|SUB.W           R0, R3, #0xC|163-241-12-0
81676|code|STR.W           R2, [R8,#8]|200-248-8-32
81680|code|CMP             R0, R5|168-66
81682|code|BEQ             loc_13E68|169-208
81684|code|MOV             R2, #0x11B08|65-246-8-50-192-242-1-2
81692|code|CMP             R2, #0|0-42
81694|code|BEQ             loc_13FBE|78-208
81696|code|SUBS            R3, #4|4-59
81698|code|DMB.W           SY|191-243-95-143
81702|code|LDREX.W         R2, [R3]|83-232-0-47
81706|code|SUBS            R1, R2, #1|81-30
81708|code|STREX.W         R5, R1, [R3]|67-232-0-21
81712|code|CMP             R5, #0|0-45
81714|code|BNE             loc_13F26|248-209
81716|code|DMB.W           SY|191-243-95-143
81720|code|CMP             R2, #0|0-42
81722|code|BGT             loc_13E68|149-220
81724|code|ADD             R1, SP, #0x438+var_42C|3-169
81726|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|253-247-160-237
81730|code|B               loc_13E68|145-231
81732|code|MOV             R3, R2|19-70
81734|code|MOV             R2, R0|2-70
81736|code|SUBS            R3, R2, R3|211-26
81738|code|ADDS            R4, R1, #4|12-29
81740|code|SUBS            R0, R3, #1|88-30
81742|code|CMP             R0, #0|0-40
81744|code|BGT.W           loc_13DDC|63-247-68-175
81748|code|B               loc_13E02|85-231
81750|code|LDR.W           R9, [R7,R3,LSL#2]|87-248-35-144
81754|code|B               loc_13ECC|183-231
81756|code|MOV.W           R9, R4,LSL#2|79-234-132-9
81760|code|MOV             R0, R9; unsigned int|72-70
81762|code|BLX             _Znwj; operator new(uint)|253-247-182-236
81766|code|MOV             R8, R0|128-70
81768|code|LDR             R0, [R6,#4]; void *|112-104
81770|code|CBZ             R0, loc_13F70|8-177
81772|code|BLX             _ZdlPv; operator delete(void *)|253-247-192-237
81776|code|ADD.W           R3, R8, R9|8-235-9-3
81780|code|STR.W           R8, [R6,#4]|198-248-4-128
81784|code|STR             R3, [R6,#0xC]|243-96
81786|code|MOV             R1, R8|65-70
81788|code|STR.W           R8, [R6,#8]|198-248-8-128
81792|code|B               loc_13E1E|77-231
81794|code|MOV             R2, #0x11B08|65-246-8-50-192-242-1-2
81802|code|CBZ             R2, loc_13FB2|146-177
81804|code|SUBS            R3, #4|4-59
81806|code|DMB.W           SY|191-243-95-143
81810|code|LDREX.W         R2, [R3]|83-232-0-47
81814|code|SUBS            R1, R2, #1|81-30
81816|code|STREX.W         LR, R1, [R3]|67-232-0-30
81820|code|CMP.W           LR, #0|190-241-0-15
81824|code|BNE             loc_13F92|247-209
81826|code|DMB.W           SY|191-243-95-143
81830|code|CMP             R2, #0|0-42
81832|code|BGT             loc_13F00|170-220
81834|code|ADD             R1, SP, #0x438+var_434|1-169
81836|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|253-247-104-237
81840|code|B               loc_13F00|166-231
81842|code|LDR.W           R2, [R3,#-4]|83-248-4-44
81846|code|SUBS            R1, R2, #1|81-30
81848|code|STR.W           R1, [R3,#-4]|67-248-4-28
81852|code|B               loc_13FA6|243-231
81854|code|LDR.W           R2, [R3,#-4]|83-248-4-44
81858|code|SUBS            R1, R2, #1|81-30
81860|code|STR.W           R1, [R3,#-4]|67-248-4-28
81864|code|B               loc_13F38|182-231
81866|code|MOV             R0, R6|48-70
81868|code|BL              sub_12BBC|254-247-246-253
81872|code|BLX             __cxa_end_cleanup|253-247-184-237
81876|code|LDR             R0, [R6,#4]; void *|112-104
81878|code|CMP             R0, #0|0-40
81880|code|BEQ             loc_13FD0|250-208
81882|code|BLX             _ZdlPv; operator delete(void *)|253-247-138-237
81886|code|B               loc_13FD0|247-231
81888|code|MOV             R0, #aNoUsersInFile; s|68-246-104-0-192-242-1-0
81896|code|BLX             puts|253-247-242-236
81900|code|MOVS            R0, #1; status|1-32
81902|code|BLX             exit|253-247-222-236
81906|code|LDR             R0, [SP,#0x438+var_42C]|3-152
81908|code|MOV             R5, #0x252C8|69-242-200-37-192-242-2-5
81916|code|SUBS            R0, #0xC|12-56
81918|code|CMP             R0, R5|168-66
81920|code|BEQ             loc_14008|2-208
81922|code|ADD             R1, SP, #0x438+var_434|1-169
81924|code|BL              sub_11DB4|253-247-214-254
81928|code|LDR             R0, [SP,#0x438+var_430]|2-152
81930|code|SUBS            R0, #0xC|12-56
81932|code|CMP             R0, R5|168-66
81934|code|BEQ             loc_13FCA|220-208
81936|code|ADD             R1, SP, #0x438+var_434|1-169
81938|code|BL              sub_11DB4|253-247-207-254
81942|code|B               loc_13FCA|216-231
81944|code|MOV             R0, #aVectorReserve; char *|68-246-88-32-192-242-1-0
81952|code|BLX             _ZSt20__throw_length_errorPKc; std::__throw_length_error(char const*)|253-247-208-236
81956|code|MOVW            R0, #0x4834|68-246-52-0
81960|code|MOV             R1, R7|57-70
81962|code|MOVT.W          R0, #1; format|192-242-1-0
81966|code|BLX             printf|253-247-196-236
81970|code|B               loc_13FEC|219-231
81972|code|MOV             R5, #0x252C8|69-242-200-37-192-242-2-5
81980|code|B               loc_14008|228-231
81982|data|ALIGN 0x10|0-191
81984|data|DCD unk_149FC|252-73-1-0
81988|code|PUSH.W          {R4-R11,LR}|45-233-240-79
81992|code|SUB             SP, SP, #0xC|131-176
81994|code|LDR.W           R10, [R0,#4]|208-248-4-160
81998|code|LDR             R3, [R0,#8]|131-104
82000|code|RSB.W           R3, R10, R3|202-235-3-3
82004|code|MOV.W           R8, R3,ASR#2|79-234-163-8
82008|code|CMP             R1, R8|65-69
82010|code|BLS             loc_14098|29-217
82012|code|MOVW            R4, #0x4988|68-246-136-20
82016|code|MOVS            R6, #0x1D|29-38
82018|code|MOVT.W          R4, #1|192-242-1-4
82022|code|ASRS            R2, R6, #1|114-16
82024|code|LDR.W           R5, [R4,R2,LSL#2]|84-248-34-80
82028|code|ADD.W           R7, R4, R2,LSL#2|4-235-130-7
82032|code|CMP             R1, R5|169-66
82034|code|BLS             loc_14086|8-217
82036|code|B               loc_1409E|19-224
82038|code|ASRS            R3, R2, #1|83-16
82040|code|LDR.W           R6, [R4,R3,LSL#2]|84-248-35-96
82044|code|ADD.W           R7, R4, R3,LSL#2|4-235-131-7
82048|code|CMP             R1, R6|177-66
82050|code|BHI             loc_140A2|14-216
82052|code|MOV             R2, R3|26-70
82054|code|CMP             R2, #0|0-42
82056|code|BGT             loc_14076|245-220
82058|code|LDR             R3, =unk_149FC|51-75
82060|code|MOV             R5, R0|5-70
82062|code|CMP             R4, R3|156-66
82064|code|BEQ             loc_1414C|92-208
82066|code|LDR             R6, [R4]|38-104
82068|code|CMP             R8, R6|176-69
82070|code|BCC             loc_140AE|10-211
82072|code|ADD             SP, SP, #0xC|3-176
82074|code|POP.W           {R4-R11,PC}|189-232-240-143
82078|code|MOV             R3, R2|19-70
82080|code|MOV             R2, R6|50-70
82082|code|SUBS            R3, R2, R3|211-26
82084|code|ADDS            R4, R7, #4|60-29
82086|code|SUBS            R6, R3, #1|94-30
82088|code|CMP             R6, #0|0-46
82090|code|BGT             loc_14066|220-220
82092|code|B               loc_1408A|237-231
82094|code|CMP             R6, #0|0-46
82096|code|BNE             loc_14124|56-209
82098|code|MOV             R9, R6|177-70
82100|code|STR             R6, [SP,#0x30+var_2C]|1-150
82102|code|CMP.W           R8, #0|184-241-0-15
82106|code|BEQ             loc_14108|37-208
82108|code|MOVS            R7, #0|0-39
82110|code|LDR.W           R4, [R10,R7,LSL#2]|90-248-39-64
82114|code|MOV.W           R11, R7,LSL#2|79-234-135-11
82118|code|CBZ             R4, loc_14102|228-177
82120|code|LDR             R2, [R4,#4]|98-104
82122|code|LDRB            R1, [R2]|17-120
82124|code|CBZ             R1, loc_140E6|89-177
82126|code|MOVS            R0, #0|0-32
82128|code|ADD.W           R0, R0, R0,LSL#2|0-235-128-0
82132|code|ADD             R0, R1|8-68
82134|code|LDRB.W          R1, [R2,#1]!|18-248-1-31
82138|code|CMP             R1, #0|0-41
82140|code|BNE             loc_140D0|248-209
82142|code|MOV             R1, R6|49-70
82144|code|BLX             __aeabi_uidivmod|253-247-82-236
82148|code|LSLS            R1, R1, #2|137-0
82150|code|LDR             R2, [R4]|34-104
82152|code|STR.W           R2, [R10,R11]|74-248-11-32
82156|code|LDR.W           R2, [R9,R1]|89-248-1-32
82160|code|STR             R2, [R4]|34-96
82162|code|STR.W           R4, [R9,R1]|73-248-1-64
82166|code|LDR.W           R10, [R5,#4]|213-248-4-160
82170|code|LDR.W           R4, [R10,R11]|90-248-11-64
82174|code|CMP             R4, #0|0-44
82176|code|BNE             loc_140C8|226-209
82178|code|ADDS            R7, #1|1-55
82180|code|CMP             R7, R8|71-69
82182|code|BNE             loc_140BE|218-209
82184|code|LDR             R3, [SP,#0x30+var_2C]|1-155
82186|code|STR.W           R9, [R5,#4]|197-248-4-144
82190|code|STR             R3, [R5,#8]|171-96
82192|code|STR             R3, [R5,#0xC]|235-96
82194|code|CMP.W           R10, #0|186-241-0-15
82198|code|BEQ             loc_14098|191-208
82200|code|MOV             R0, R10; void *|80-70
82202|code|ADD             SP, SP, #0xC|3-176
82204|code|POP.W           {R4-R11,LR}|189-232-240-79
82208|code|B.W             j__ZdlPv; operator delete(void *)|253-247-228-188
82212|code|CMP.W           R6, #0x40000000|182-241-128-79
82216|code|BCS             loc_14152|19-210
82218|code|LSLS            R4, R6, #2|180-0
82220|code|MOV             R0, R4; unsigned int|32-70
82222|code|BLX             _Znwj; operator new(uint)|253-247-208-235
82226|code|MOV             R2, R6|50-70
82228|code|ADDS            R3, R0, R4|3-25
82230|code|MOV             R9, R0|129-70
82232|code|MOV             R1, R0|1-70
82234|code|MOVS            R0, #0|0-32
82236|code|STR             R3, [SP,#0x30+var_2C]|1-147
82238|code|SUBS            R2, #1|1-58
82240|code|STR.W           R0, [R1],#4|65-248-4-11
82244|code|BNE             loc_1413E|251-209
82246|code|LDR.W           R10, [R5,#4]|213-248-4-160
82250|code|B               loc_140B6|180-231
82252|code|CMN.W           R8, #6|24-241-6-15
82256|code|BHI             loc_14098|162-216
82258|code|BLX             _ZSt17__throw_bad_allocv; std::__throw_bad_alloc(void)|253-247-8-236
82262|data|ALIGN 4|0-191
82264|data|DCD unk_149FC|252-73-1-0
82268|code|PUSH.W          {R4-R10,LR}|45-233-240-71
82272|code|MOV             R7, R1|15-70
82274|code|LDR             R1, [R0,#0x10]|1-105
82276|code|MOV             R6, R0|6-70
82278|code|ADDS            R1, #1|1-49
82280|code|BL              sub_14044|255-247-108-255
82284|code|LDR.W           R8, [R7]|215-248-0-128
82288|code|LDR             R4, [R6,#4]|116-104
82290|code|LDR             R1, [R6,#8]|177-104
82292|code|LDRB.W          R3, [R8]|152-248-0-48
82296|code|SUBS            R1, R1, R4|9-27
82298|code|ASRS            R1, R1, #2|137-16
82300|code|CMP             R3, #0|0-43
82302|code|BEQ             loc_14208|67-208
82304|code|MOV             R2, R8|66-70
82306|code|MOVS            R0, #0|0-32
82308|code|ADD.W           R0, R0, R0,LSL#2|0-235-128-0
82312|code|ADD             R0, R3|24-68
82314|code|LDRB.W          R3, [R2,#1]!|18-248-1-63
82318|code|CMP             R3, #0|0-43
82320|code|BNE             loc_14184|248-209
82322|code|BLX             __aeabi_uidivmod|253-247-250-235
82326|code|LSLS            R5, R1, #2|141-0
82328|code|LDR.W           R9, [R4,R5]|84-248-5-144
82332|code|CMP.W           R9, #0|185-241-0-15
82336|code|BEQ             loc_141CC|20-208
82338|code|LDR.W           R10, [R8,#-0xC]|88-248-12-172
82342|code|MOV             R4, R9|76-70
82344|code|B               loc_141AE|1-224
82346|code|LDR             R4, [R4]|36-104
82348|code|CBZ             R4, loc_141CC|116-177
82350|code|LDR             R0, [R4,#4]; s1|96-104
82352|code|LDR.W           R3, [R0,#-0xC]|80-248-12-60
82356|code|CMP             R3, R10|83-69
82358|code|BNE             loc_141AA|248-209
82360|code|MOV             R1, R8; s2|65-70
82362|code|MOV             R2, R10; n|82-70
82364|code|BLX             memcmp|253-247-168-237
82368|code|CMP             R0, #0|0-40
82370|code|BNE             loc_141AA|242-209
82372|code|ADDS            R4, #4|4-52
82374|code|MOV             R0, R4|32-70
82376|code|POP.W           {R4-R10,PC}|189-232-240-135
82380|code|MOVS            R0, #0x10; unsigned int|16-32
82382|code|BLX             _Znwj; operator new(uint)|253-247-128-235
82386|code|MOVS            R3, #0|0-35
82388|code|MOV             R1, R7; std::string *|57-70
82390|code|MOV             R4, R0|4-70
82392|code|MOV             R8, R0|128-70
82394|code|STR.W           R3, [R4],#4|68-248-4-59
82398|code|MOV             R0, R4; this|32-70
82400|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|253-247-22-236
82404|code|ADDS            R7, #4|4-55
82406|code|ADD.W           R2, R8, #8|8-241-8-2
82410|code|LDR             R3, [R6,#0x10]|51-105
82412|code|LDM.W           R7, {R0,R1}|151-232-3-0
82416|code|ADDS            R3, #1|1-51
82418|code|STM.W           R2, {R0,R1}|130-232-3-0
82422|code|MOV             R0, R4; void *|32-70
82424|code|STR.W           R9, [R8]|200-248-0-144
82428|code|LDR             R2, [R6,#4]|114-104
82430|code|STR.W           R8, [R2,R5]|66-248-5-128
82434|code|STR             R3, [R6,#0x10]|51-97
82436|code|POP.W           {R4-R10,PC}|189-232-240-135
82440|code|MOV             R5, R3|29-70
82442|code|B               loc_14198|197-231
82444|code|BLX             __cxa_begin_catch|253-247-182-235
82448|code|MOV             R0, R8; void *|64-70
82450|code|BLX             _ZdlPv; operator delete(void *)|253-247-110-236
82454|code|BLX             __cxa_rethrow|253-247-240-236
82458|code|BLX             __cxa_end_catch|253-247-42-237
82462|code|BLX             __cxa_end_cleanup|253-247-146-236
82466|data|ALIGN 4|0-191
82468|code|CBZ             R2, locret_14284|114-179
82470|code|PUSH.W          {R4-R10,LR}|45-233-240-71
82474|code|MOV             R6, R3|30-70
82476|code|LDR             R7, [R0,#4]|71-104
82478|code|MOV             R5, R2|21-70
82480|code|LDR             R3, [R0,#8]|131-104
82482|code|MOV             R8, R0|128-70
82484|code|MOV             R9, R1|137-70
82486|code|SUBS            R3, R3, R7|219-27
82488|code|CMP.W           R2, R3,ASR#2|178-235-163-15
82492|code|BHI             loc_142BC|62-216
82494|code|RSB.W           R10, R1, R7|193-235-7-10
82498|code|MOV             R4, R1|12-70
82500|code|LDR             R6, [R6]|54-104
82502|code|MOV.W           R2, R10,ASR#2|79-234-170-2
82506|code|CMP             R5, R2|149-66
82508|code|BCS             loc_14286|27-210
82510|code|LSLS            R5, R5, #2|173-0
82512|code|RSB.W           R10, R5, R7|197-235-7-10
82516|code|RSB.W           R2, R10, R7; n|202-235-7-2
82520|code|LSRS            R3, R2, #2|147-8
82522|code|IT EQ|8-191
82524|code|MOVEQ           R3, R7|59-70
82526|code|BNE             loc_1434C|117-209
82528|code|RSB.W           R2, R9, R10; n|201-235-10-2
82532|code|ADD             R3, R5|43-68
82534|code|STR.W           R3, [R8,#4]|200-248-4-48
82538|code|LSRS            R3, R2, #2|147-8
82540|code|BNE             loc_14342|105-209
82542|code|ADD             R5, R9|77-68
82544|code|CMP             R9, R5|169-69
82546|code|BEQ             locret_14280|5-208
82548|code|STR.W           R6, [R4],#4|68-248-4-107
82552|code|CMP             R5, R4|165-66
82554|code|BNE             loc_14274|251-209
82556|code|POP.W           {R4-R10,PC}|189-232-240-135
82560|code|POP.W           {R4-R10,PC}|189-232-240-135
82564|code|BX              LR|112-71
82566|code|SUBS            R0, R5, R2|168-26
82568|code|BEQ             loc_1437E|121-208
82570|code|MOV             R3, R0|3-70
82572|code|MOV             R1, R7|57-70
82574|code|SUBS            R3, #1|1-59
82576|code|STR.W           R6, [R1],#4|65-248-4-107
82580|code|BNE             loc_1428E|251-209
82582|code|LDR.W           R3, [R8,#4]|216-248-4-48
82586|code|ADD.W           R0, R3, R0,LSL#2; dest|3-235-128-0
82590|code|STR.W           R0, [R8,#4]|200-248-4-0
82594|code|CMP             R2, #0|0-42
82596|code|BNE             loc_1435A|89-209
82598|code|CMP             R7, R9|79-69
82600|code|ADD             R0, R10|80-68
82602|code|STR.W           R0, [R8,#4]|200-248-4-0
82606|code|BEQ             locret_14280|231-208
82608|code|STR.W           R6, [R4],#4|68-248-4-107
82612|code|CMP             R7, R4|167-66
82614|code|BNE             loc_142B0|251-209
82616|code|POP.W           {R4-R10,PC}|189-232-240-135
82620|code|LDR             R2, [R0]|2-104
82622|code|MOV             R3, #0x3FFFFFFF|79-246-255-115-195-246-255-115
82630|code|MOV             R1, #0x3FFFFFFF|111-240-64-65
82634|code|SUBS            R7, R7, R2|191-26
82636|code|ASRS            R7, R7, #2|191-16
82638|code|SUBS            R3, R3, R7|219-27
82640|code|CMP             R5, R3|157-66
82642|code|BHI             loc_1438E|92-216
82644|code|CMP             R7, R5|175-66
82646|code|ITE CS|44-191
82648|code|ADDCS           R3, R7, R7|251-25
82650|code|ADDCC           R3, R7, R5|123-25
82652|code|CMP             R3, R1|139-66
82654|code|IT LS|152-191
82656|code|CMPLS           R7, R3|159-66
82658|code|ITT HI|132-191
82660|code|RSBHI.W         R4, R2, R9|194-235-9-4
82664|code|MOVHI           R7, #0xFFFFFFFC|111-240-3-7
82668|code|BLS             loc_14382|73-217
82670|code|MOV             R0, R7; unsigned int|56-70
82672|code|BLX             _Znwj; operator new(uint)|253-247-238-234
82676|code|MOV             R10, R0|130-70
82678|code|LDR             R1, [R6]|49-104
82680|code|ADD.W           R2, R10, R4|10-235-4-2
82684|code|MOV             R3, R5|43-70
82686|code|SUBS            R3, #1|1-59
82688|code|STR.W           R1, [R2],#4|66-248-4-27
82692|code|BNE             loc_142FE|251-209
82694|code|LDR.W           R1, [R8]; src|216-248-0-16
82698|code|RSB.W           R4, R1, R9|193-235-9-4
82702|code|LSRS            R3, R4, #2|163-8
82704|code|BNE             loc_14374|48-209
82706|code|LDR.W           R3, [R8,#4]|216-248-4-48
82710|code|ADD.W           R5, R4, R5,LSL#2|4-235-133-5
82714|code|ADD             R5, R10|85-68
82716|code|RSB.W           R4, R9, R3|201-235-3-4
82720|code|LSRS            R3, R4, #2|163-8
82722|code|BNE             loc_14368|33-209
82724|code|LDR.W           R0, [R8]; void *|216-248-0-0
82728|code|ADD             R5, R4|37-68
82730|code|CBZ             R0, loc_14330|8-177
82732|code|BLX             _ZdlPv; operator delete(void *)|253-247-224-235
82736|code|ADD             R7, R10|87-68
82738|code|STR.W           R10, [R8]|200-248-0-160
82742|code|STR.W           R7, [R8,#8]|200-248-8-112
82746|code|STR.W           R5, [R8,#4]|200-248-4-80
82750|code|POP.W           {R4-R10,PC}|189-232-240-135
82754|code|SUBS            R0, R7, R2; dest|184-26
82756|code|MOV             R1, R9; src|73-70
82758|code|BLX             memmove|253-247-186-235
82762|code|B               loc_1426E|144-231
82764|code|MOV             R0, R7; dest|56-70
82766|code|MOV             R1, R10; src|81-70
82768|code|BLX             memmove|253-247-180-235
82772|code|LDR.W           R3, [R8,#4]|216-248-4-48
82776|code|B               loc_14260|130-231
82778|code|MOV             R1, R9; src|73-70
82780|code|MOV             R2, R10; n|82-70
82782|code|BLX             memmove|253-247-174-235
82786|code|LDR.W           R0, [R8,#4]|216-248-4-0
82790|code|B               loc_142A6|158-231
82792|code|MOV             R1, R9; src|73-70
82794|code|MOV             R0, R5; dest|40-70
82796|code|MOV             R2, R4; n|34-70
82798|code|BLX             memmove|253-247-166-235
82802|code|B               loc_14324|215-231
82804|code|MOV             R0, R10; dest|80-70
82806|code|MOV             R2, R4; n|34-70
82808|code|BLX             memmove|253-247-160-235
82812|code|B               loc_14312|201-231
82814|code|MOV             R3, R7|59-70
82816|code|B               loc_1429A|139-231
82818|code|RSB.W           R4, R2, R9|194-235-9-4
82822|code|CBNZ            R3, loc_1439A|67-185
82824|code|MOV             R7, R3|31-70
82826|code|MOV             R10, R3|154-70
82828|code|B               loc_142F6|179-231
82830|code|MOV             R0, #aVectorMFillIns; char *|68-246-64-32-192-242-1-0
82838|code|BLX             _ZSt20__throw_length_errorPKc; std::__throw_length_error(char const*)|253-247-22-235
82842|code|LSLS            R7, R3, #2|159-0
82844|code|B               loc_142EE|167-231
82846|data|ALIGN 0x10|0-191
82848|code|PUSH.W          {R3-R9,LR}|45-233-248-67
82852|code|MOV             R7, R0|7-70
82854|code|LDR             R6, =(off_25008 - 0x143B2)|12-78
82856|code|MOV             R8, R1|136-70
82858|code|LDR             R5, =(off_25000 - 0x143B8)|12-77
82860|code|MOV             R9, R2|145-70
82862|code|ADD             R6, PC; off_25008|126-68
82864|code|BLX             .init_proc|253-247-126-234
82868|code|ADD             R5, PC; off_25000|125-68
82870|code|SUBS            R6, R6, R5|118-27
82872|code|ASRS            R6, R6, #2|182-16
82874|code|BEQ             locret_143D2|10-208
82876|code|SUBS            R5, #4|4-61
82878|code|MOVS            R4, #0|0-36
82880|code|ADDS            R4, #1|1-52
82882|code|LDR.W           R3, [R5,#4]!|85-248-4-63
82886|code|MOV             R0, R7|56-70
82888|code|MOV             R1, R8|65-70
82890|code|MOV             R2, R9|74-70
82892|code|BLX             R3|152-71
82894|code|CMP             R4, R6|180-66
82896|code|BNE             loc_143C0|246-209
82898|code|POP.W           {R3-R9,PC}|189-232-248-131
82902|data|ALIGN 4|0-191
82904|data|DCD off_25008 - 0x143B2|86-12-1-0
82908|data|DCD off_25000 - 0x143B8|72-12-1-0
82912|code|BX              LR|112-71
82914|data|ALIGN 4|0-191
82916|code|PUSH            {R3,LR}; _fini|8-64-45-233
82920|code|POP             {R3,PC}|8-128-189-232
82924|data|ALIGN 0x10|0-0-0-0
85508|data|ALIGN 8|0-0-0-0
151552|data|DCD sub_12434+1|53-36-1-0
151556|data|DCD sub_12350+1|81-35-1-0
151560|data|DCD sub_1241C+1|29-36-1-0
151564|data|DCD 0|0-0-0-0
151568|data|Elf32_Dyn <1, <1>>; DT_NEEDED libstdc++.so.6|1-0-0-0-1-0-0-0
151576|data|Elf32_Dyn <1, <0x1EF>>; DT_NEEDED libpthread.so.0|1-0-0-0-239-1-0-0
151584|data|Elf32_Dyn <1, <0x33F>>; DT_NEEDED libgnutls-deb0.so.28|1-0-0-0-63-3-0-0
151592|data|Elf32_Dyn <1, <0x4ED>>; DT_NEEDED libm.so.6|1-0-0-0-237-4-0-0
151600|data|Elf32_Dyn <1, <0x4F7>>; DT_NEEDED libgcc_s.so.1|1-0-0-0-247-4-0-0
151608|data|Elf32_Dyn <1, <0x551>>; DT_NEEDED libc.so.6|1-0-0-0-81-5-0-0
151616|data|Elf32_Dyn <0xC, <0x118B0>>; DT_INIT|12-0-0-0-176-24-1-0
151624|data|Elf32_Dyn <0xD, <0x143E4>>; DT_FINI|13-0-0-0-228-67-1-0
151632|data|Elf32_Dyn <0x19, <0x25000>>; DT_INIT_ARRAY|25-0-0-0-0-80-2-0
151640|data|Elf32_Dyn <0x1B, <8>>; DT_INIT_ARRAYSZ|27-0-0-0-8-0-0-0
151648|data|Elf32_Dyn <0x1A, <0x25008>>; DT_FINI_ARRAY|26-0-0-0-8-80-2-0
151656|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
151664|data|Elf32_Dyn <0x6FFFFEF5, <0x10194>>; DT_GNU_HASH|245-254-255-111-148-1-1-0
151672|data|Elf32_Dyn <5, <0x10CB0>>; DT_STRTAB|5-0-0-0-176-12-1-0
151680|data|Elf32_Dyn <6, <0x10560>>; DT_SYMTAB|6-0-0-0-96-5-1-0
151688|data|Elf32_Dyn <0xA, <0x71B>>; DT_STRSZ|10-0-0-0-27-7-0-0
151696|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
151704|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
151712|data|Elf32_Dyn <3, <0x25120>>; DT_PLTGOT|3-0-0-0-32-81-2-0
151720|data|Elf32_Dyn <2, <0x308>>; DT_PLTRELSZ|2-0-0-0-8-3-0-0
151728|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
151736|data|Elf32_Dyn <0x17, <0x115A8>>; DT_JMPREL|23-0-0-0-168-21-1-0
151744|data|Elf32_Dyn <0x11, <0x11578>>; DT_REL|17-0-0-0-120-21-1-0
151752|data|Elf32_Dyn <0x12, <0x30>>; DT_RELSZ|18-0-0-0-48-0-0-0
151760|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
151768|data|Elf32_Dyn <0x6FFFFFFE, <0x114B8>>; DT_VERNEED|254-255-255-111-184-20-1-0
151776|data|Elf32_Dyn <0x6FFFFFFF, <5>>; DT_VERNEEDNUM|255-255-255-111-5-0-0-0
151784|data|Elf32_Dyn <0x6FFFFFF0, <0x113CC>>; DT_VERSYM|240-255-255-111-204-19-1-0
151792|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
151840|data|DCD stru_25010|16-80-2-0
151844|data|DCD 0|0-0-0-0
151848|data|DCD 0|0-0-0-0
151852|data|DCD __imp__Znwj; operator new(uint)|176-84-2-0
151856|data|DCD __imp_pthread_mutex_lock|84-84-2-0
151860|data|DCD __imp_pthread_mutex_init|248-84-2-0
151864|data|DCD __imp_gnutls_set_default_priority|44-84-2-0
151868|data|DCD __imp___aeabi_atexit|88-84-2-0
151872|data|DCD __imp_strcasecmp|144-84-2-0
151876|data|DCD __imp_fdopen|148-84-2-0
151880|data|DCD __imp_strtol|68-84-2-0
151884|data|DCD __imp_free|196-84-2-0
151888|data|DCD __imp_gnutls_anon_allocate_server_credentials|184-83-2-0
151892|data|DCD __imp_pthread_mutexattr_init|92-84-2-0
151896|data|DCD __imp_pthread_mutexattr_destroy|192-83-2-0
151900|data|DCD __imp__ZSt17__throw_bad_allocv; std::__throw_bad_alloc(void)|60-84-2-0
151904|data|DCD __imp__ZNSs6assignEPKcj; std::string::assign(char const*,uint)|244-84-2-0
151908|data|DCD __imp___cxa_begin_catch|184-84-2-0
151912|data|DCD __imp___aeabi_uidivmod|72-84-2-0
151916|data|DCD __imp_pthread_join|12-84-2-0
151920|data|DCD __imp_gnutls_certificate_server_set_request|224-84-2-0
151924|data|DCD __imp_exit|200-83-2-0
151928|data|DCD __imp_printf|48-84-2-0
151932|data|DCD __imp__ZSt20__throw_length_errorPKc; std::__throw_length_error(char const*)|96-84-2-0
151936|data|DCD __imp_puts|124-84-2-0
151940|data|DCD __imp_gnutls_deinit|16-84-2-0
151944|data|DCD __imp_gnutls_dh_set_prime_bits|20-84-2-0
151948|data|DCD __imp_strtok|64-84-2-0
151952|data|DCD __imp_perror|212-83-2-0
151956|data|DCD __imp__ZNSsC1ERKSs; std::string::string(std::string const&)|204-84-2-0
151960|data|DCD __imp_nanosleep|24-84-2-0
151964|data|DCD __imp_putchar|100-84-2-0
151968|data|DCD __imp_memset|156-84-2-0
151972|data|DCD __imp_listen|140-83-2-0
151976|data|DCD __imp_pthread_mutex_trylock|208-84-2-0
151980|data|DCD __imp_close|240-83-2-0
151984|data|DCD __imp_fopen|220-83-2-0
151988|data|DCD __imp_read|248-83-2-0
151992|data|DCD __imp__ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|76-84-2-0
151996|data|DCD __imp_abort|228-83-2-0
152000|data|DCD __imp_gnutls_check_version|168-84-2-0
152004|data|DCD __imp_poll|52-84-2-0
152008|data|DCD __imp_gnutls_global_init|156-83-2-0
152012|data|DCD __imp_memmove|104-84-2-0
152016|data|DCD __imp_localtime|112-84-2-0
152020|data|DCD __imp_strcpy|148-83-2-0
152024|data|DCD __imp_pthread_attr_setdetachstate|80-84-2-0
152028|data|DCD __imp__ZdlPv; operator delete(void *)|216-84-2-0
152032|data|DCD __imp_getopt|8-84-2-0
152036|data|DCD __imp___pthread_key_create|116-84-2-0
152040|data|DCD __imp_bind|228-84-2-0
152044|data|DCD __imp_pthread_mutex_destroy|180-83-2-0
152048|data|DCD __imp_gnutls_transport_set_ptr|152-83-2-0
152052|data|DCD __imp_gnutls_record_send|212-84-2-0
152056|data|DCD __imp___cxa_end_cleanup|128-84-2-0
152060|data|DCD __imp_socket|232-84-2-0
152064|data|DCD __imp__ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|40-84-2-0
152068|data|DCD __imp_gnutls_anon_set_server_dh_params|252-83-2-0
152072|data|DCD __imp_gnutls_priority_set_direct|200-84-2-0
152076|data|DCD __imp_strncasecmp|108-84-2-0
152080|data|DCD __imp__ZNSs6assignERKSs; std::string::assign(std::string const&)|120-84-2-0
152084|data|DCD __imp_pthread_attr_destroy|164-84-2-0
152088|data|DCD __imp_pthread_attr_setstacksize|132-84-2-0
152092|data|DCD __imp_sigaction|36-84-2-0
152096|data|DCD __imp_pthread_attr_init|168-83-2-0
152100|data|DCD __imp_calloc|136-84-2-0
152104|data|DCD __imp_gnutls_credentials_set|240-84-2-0
152108|data|DCD __imp_fgets|136-83-2-0
152112|data|DCD __imp___aeabi_idiv|208-83-2-0
152116|data|DCD __imp___cxa_rethrow|0-84-2-0
152120|data|DCD __imp_fwrite|28-84-2-0
152124|data|DCD __imp_malloc|236-84-2-0
152128|data|DCD __imp_strlen|224-83-2-0
152132|data|DCD __imp_gnutls_init|172-83-2-0
152136|data|DCD __imp_accept|220-84-2-0
152140|data|DCD __imp_fprintf|188-83-2-0
152144|data|DCD __imp_fclose|152-84-2-0
152148|data|DCD __imp_write|124-83-2-0
152152|data|DCD __imp_sprintf|180-84-2-0
152156|data|DCD __imp___cxa_end_catch|176-83-2-0
152160|data|DCD __imp_random|56-84-2-0
152164|data|DCD __imp___gxx_personality_v0|232-83-2-0
152168|data|DCD __imp_gnutls_dh_params_init|4-84-2-0
152172|data|DCD __imp_gnutls_handshake|172-84-2-0
152176|data|DCD __imp_pthread_create|204-83-2-0
152180|data|DCD __imp_strcmp|128-83-2-0
152184|data|DCD __imp_gnutls_dh_params_generate2|140-84-2-0
152188|data|DCD __imp_pthread_mutexattr_settype|144-83-2-0
152192|data|DCD __imp_time|236-83-2-0
152196|data|DCD __imp___errno_location|216-83-2-0
152200|data|DCD __imp_strncpy|196-83-2-0
152204|data|DCD __imp_fflush|132-83-2-0
152208|data|DCD __imp_memcmp|160-84-2-0
152212|data|DCD __imp_isblank|188-84-2-0
152216|data|DCD __imp_getsockname|160-83-2-0
152220|data|DCD __imp_gnutls_record_recv|192-84-2-0
152224|data|DCD __imp___libc_start_main|164-83-2-0
152228|data|DCD __imp___gmon_start__|4-85-2-0
152232|data|DCD __imp_pthread_mutex_unlock|244-83-2-0
152236|data|DCD __imp_vsnprintf|32-84-2-0
152240|data|DCD __imp___gmon_start__|4-85-2-0
152244|data|ALIGN 8|0-0-0-0
152252|data|DCD aBhmCokerComAu; "bhm.coker.com.au"|28-72-1-0
