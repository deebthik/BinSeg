address|type|disassembly|bytes
65536|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
65540|data|DCB 1; File class: 32-bit|1
65541|data|DCB 1; Data encoding: little-endian|1
65542|data|DCB 1; File version|1
65543|data|DCB 0; OS/ABI: UNIX System V ABI|0
65544|data|DCB 0; ABI Version|0
65545|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
65552|data|DCW 2; File type: Executable|2-0
65554|data|DCW 0x28; Machine: ARM|40-0
65556|data|DCD 1; File version|1-0-0-0
65560|data|DCD _start+1; Entry point|229-110-1-0
65564|data|DCD 0x34; PHT file offset|52-0-0-0
65568|data|DCD 0x149A0; SHT file offset|160-73-1-0
65572|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
65576|data|DCW 0x34; ELF header size|52-0
65578|data|DCW 0x20; PHT entry size|32-0
65580|data|DCW 8; Number of entries in PHT|8-0
65582|data|DCW 0x28; SHT entry size|40-0
65584|data|DCW 0x1D; Number of entries in SHT|29-0
65586|data|DCW 0x1C; SHT entry index for string table|28-0
65588|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
65592|data|DCD 0x13BD0; File offset|208-59-1-0
65596|data|DCD unk_23BD0; Virtual address|208-59-2-0
65600|data|DCD 0x23BD0; Physical address|208-59-2-0
65604|data|DCD 8; Size in file image|8-0-0-0
65608|data|DCD 8; Size in memory image|8-0-0-0
65612|data|DCD 4; Flags|4-0-0-0
65616|data|DCD 4; Alignment|4-0-0-0
65620|data|DCD 6; Type: PHDR|6-0-0-0
65624|data|DCD 0x34; File offset|52-0-0-0
65628|data|DCD dword_10034; Virtual address|52-0-1-0
65632|data|DCD 0x10034; Physical address|52-0-1-0
65636|data|DCD 0x100; Size in file image|0-1-0-0
65640|data|DCD 0x100; Size in memory image|0-1-0-0
65644|data|DCD 5; Flags|5-0-0-0
65648|data|DCD 4; Alignment|4-0-0-0
65652|data|DCD 3; Type: INTERP|3-0-0-0
65656|data|DCD 0x134; File offset|52-1-0-0
65660|data|DCD aLibLdLinuxArmh; Virtual address|52-1-1-0
65664|data|DCD 0x10134; Physical address|52-1-1-0
65668|data|DCD 0x19; Size in file image|25-0-0-0
65672|data|DCD 0x19; Size in memory image|25-0-0-0
65676|data|DCD 4; Flags|4-0-0-0
65680|data|DCD 1; Alignment|1-0-0-0
65684|data|DCD 1; Type: LOAD|1-0-0-0
65688|data|DCD 0; File offset|0-0-0-0
65692|data|DCD dword_10000; Virtual address|0-0-1-0
65696|data|DCD 0x10000; Physical address|0-0-1-0
65700|data|DCD 0x13BDC; Size in file image|220-59-1-0
65704|data|DCD 0x13BDC; Size in memory image|220-59-1-0
65708|data|DCD 5; Flags|5-0-0-0
65712|data|DCD 0x10000; Alignment|0-0-1-0
65716|data|DCD 1; Type: LOAD|1-0-0-0
65720|data|DCD 0x14000; File offset|0-64-1-0
65724|data|DCD off_34000; Virtual address|0-64-3-0
65728|data|DCD 0x34000; Physical address|0-64-3-0
65732|data|DCD 0x850; Size in file image|80-8-0-0
65736|data|DCD 0x4918; Size in memory image|24-73-0-0
65740|data|DCD 6; Flags|6-0-0-0
65744|data|DCD 0x10000; Alignment|0-0-1-0
65748|data|DCD 2; Type: DYNAMIC|2-0-0-0
65752|data|DCD 0x14360; File offset|96-67-1-0
65756|data|DCD stru_34360; Virtual address|96-67-3-0
65760|data|DCD 0x34360; Physical address|96-67-3-0
65764|data|DCD 0x140; Size in file image|64-1-0-0
65768|data|DCD 0x140; Size in memory image|64-1-0-0
65772|data|DCD 6; Flags|6-0-0-0
65776|data|DCD 4; Alignment|4-0-0-0
65780|data|DCD 4; Type: NOTE|4-0-0-0
65784|data|DCD 0x150; File offset|80-1-0-0
65788|data|DCD dword_10150; Virtual address|80-1-1-0
65792|data|DCD 0x10150; Physical address|80-1-1-0
65796|data|DCD 0x44; Size in file image|68-0-0-0
65800|data|DCD 0x44; Size in memory image|68-0-0-0
65804|data|DCD 4; Flags|4-0-0-0
65808|data|DCD 4; Alignment|4-0-0-0
65812|data|DCD 0x6474E551; Type: STACK|81-229-116-100
65816|data|DCD 0; File offset|0-0-0-0
65820|data|DCD 0; Virtual address|0-0-0-0
65824|data|DCD 0; Physical address|0-0-0-0
65828|data|DCD 0; Size in file image|0-0-0-0
65832|data|DCD 0; Size in memory image|0-0-0-0
65836|data|DCD 6; Flags|6-0-0-0
65840|data|DCD 0x10; Alignment|16-0-0-0
65844|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
65869|data|DCB 0, 0, 0|0-0-0
65872|data|DCD 4; Name Size|4-0-0-0
65876|data|DCD 0x10; Desc Size|16-0-0-0
65880|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
65884|data|DCB "GNU",0; Name|71-78-85-0
65888|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
65904|data|DCD 4; Name Size|4-0-0-0
65908|data|DCD 0x14; Desc Size|20-0-0-0
65912|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
65916|data|DCB "GNU",0; Name|71-78-85-0
65920|data|DCB 0xCB, 0xE3, 0x92, 0xA1, 0x99, 0x96, 0x37, 0x30, 0x79; Desc|203-227-146-161-153-150-55-48-121-210-184-233-203-231-107-67-75-0-169-57
65940|data|DCD 0x209|9-2-0-0
65944|data|DCD 0xE|14-0-0-0
65948|data|DCD 0x80|128-0-0-0
65952|data|DCD 0xC|12-0-0-0
65956|data|DCD 0x40021100, 0x258044, 0x10008000, 0x11021441, 0x38008683|0-17-2-64-68-128-37-0-0-128-0-16-65-20-2-17-131-134-0-56-139-105-114-33-24-140-192-1-66-1-32-160-128-102-192-2-20-8-138-14-1-48-11-212-1-32-1-64-20-64-129-9-16-128-0-0-193-96-13-15-96-0-34-0-129-0-0-8-136-33-100-2-48-2-1-0-2-144-1-0-0-17-4-137-84-32-2-17-81-0-0-128-8-192-193-53-130-2-29-8-0-177-251-160-168-0-128-56-0-128-7-8-0-0-0-0-0-64-0-25-32-64-0-0-20-36-25-40-2-48-40-16-4-5-128-0-48-0-128-128-32-0-224-48-130-105-25-65-4-66-1-25-4-0-2-64-33-232-33-56-0-42-72-192-144-18-1-24-45-40-153-34-0-68-224-128-205-2-1-84-66-32-3-42-44-5-146-78-142-66-162-10-167-66-26-72-0-0-0-0-0-192-64-194-0-84-16-134-73-8-138-0-104-9-40-65-0-36-0-10-3-8-10-128-28-64-80-73-136-148-68-145-4-206-144-72-80-0-152-32-4-9-0-6-1-2-18-0-24-144-129-0-168-113-0-96-2-1-8-24-48-72-33-34-196-157-173-32-0-136-25-40-193-22-0-28-129-16-132-8-136-129-10-0-2-0-32-0-97-22-162-1-54-75-0-202-44-65-34-2-209-54-53-1-1-136-192-8-82-64-16-69-152-35-78-197-49-34-18-66-8-82-200-16-13-88-129-2-8-2-64-10-0-68-200-0-32-94-174-32-10-68-0-165-110-2-28-3-0-0-0-0-8-104-2-72-0-0-0-14-128-211-20-96-96-17-89-171-224-160-48-106-186-33-50-96-8-0-8-0-128-195-29-129-96-65-32-4-40-1-0-96-0-0-4-32-133-120-81-4-0-132-4-96-0-4-0-64-32-32-3-64-140-64-21-218-0-132-49-208-12-8-141-166-18-2-20-36-144-0-12-100-100-21-116-16-16-137-16-33-92-1-34-148-142-132-204-2-208-162-32-14-132-64-210-136-2-12-131-64-8-2-0-128-129-0-0-200-17-36-80-96-133-0-82-169-32-49-89-41-149-198-144-138-38-36-6-208-34-1-0-65-168-70-208-128-45-0-0-36-105-65-0-19-14-18-129-80-2-3-148-40
66468|data|DCD 0xE, 0xF, 0x10, 0, 0x11, 0, 0x12, 0x14, 0, 0, 0, 0|14-0-0-0-15-0-0-0-16-0-0-0-0-0-0-0-17-0-0-0-0-0-0-0-18-0-0-0-20-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-21-0-0-0-24-0-0-0-0-0-0-0-25-0-0-0-27-0-0-0-0-0-0-0-30-0-0-0-31-0-0-0-0-0-0-0-32-0-0-0-35-0-0-0-36-0-0-0-0-0-0-0-38-0-0-0-39-0-0-0-40-0-0-0-43-0-0-0-44-0-0-0-0-0-0-0-46-0-0-0-47-0-0-0-48-0-0-0-49-0-0-0-51-0-0-0-53-0-0-0-54-0-0-0-0-0-0-0-55-0-0-0-56-0-0-0-57-0-0-0-59-0-0-0-62-0-0-0-0-0-0-0-0-0-0-0-63-0-0-0-65-0-0-0-66-0-0-0-67-0-0-0-68-0-0-0-69-0-0-0-70-0-0-0-71-0-0-0-72-0-0-0-73-0-0-0-74-0-0-0-0-0-0-0-75-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-76-0-0-0-77-0-0-0-78-0-0-0-79-0-0-0-81-0-0-0-82-0-0-0-84-0-0-0-85-0-0-0-0-0-0-0-86-0-0-0-0-0-0-0-87-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-90-0-0-0-92-0-0-0-93-0-0-0-94-0-0-0-96-0-0-0-0-0-0-0-0-0-0-0-97-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-98-0-0-0-0-0-0-0-100-0-0-0-102-0-0-0-103-0-0-0-104-0-0-0-105-0-0-0-0-0-0-0-106-0-0-0-0-0-0-0-0-0-0-0-108-0-0-0-0-0-0-0-112-0-0-0-113-0-0-0-114-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-115-0-0-0-117-0-0-0-118-0-0-0-0-0-0-0-0-0-0-0-119-0-0-0-120-0-0-0-122-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-123-0-0-0-127-0-0-0-0-0-0-0-128-0-0-0-130-0-0-0-132-0-0-0-0-0-0-0-133-0-0-0-135-0-0-0-136-0-0-0-0-0-0-0-138-0-0-0-139-0-0-0-141-0-0-0-0-0-0-0-144-0-0-0-148-0-0-0-0-0-0-0-0-0-0-0-149-0-0-0-150-0-0-0-152-0-0-0-155-0-0-0-156-0-0-0-161-0-0-0-163-0-0-0-0-0-0-0-166-0-0-0-167-0-0-0-168-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-169-0-0-0-0-0-0-0-0-0-0-0-171-0-0-0-172-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-174-0-0-0-176-0-0-0-177-0-0-0-180-0-0-0-0-0-0-0-181-0-0-0-182-0-0-0-183-0-0-0-185-0-0-0-187-0-0-0-191-0-0-0-0-0-0-0-192-0-0-0-194-0-0-0-0-0-0-0-195-0-0-0-196-0-0-0-0-0-0-0-0-0-0-0-197-0-0-0-200-0-0-0-0-0-0-0-203-0-0-0-204-0-0-0-0-0-0-0-205-0-0-0-0-0-0-0-206-0-0-0-207-0-0-0-0-0-0-0-0-0-0-0-208-0-0-0-0-0-0-0-209-0-0-0-213-0-0-0-214-0-0-0-217-0-0-0-218-0-0-0-220-0-0-0-223-0-0-0-0-0-0-0-224-0-0-0-226-0-0-0-0-0-0-0-0-0-0-0-229-0-0-0-230-0-0-0-232-0-0-0-233-0-0-0-0-0-0-0-234-0-0-0-235-0-0-0-0-0-0-0-236-0-0-0-238-0-0-0-239-0-0-0-0-0-0-0-243-0-0-0-0-0-0-0-246-0-0-0-250-0-0-0-252-0-0-0-0-0-0-0-254-0-0-0-0-0-0-0-2-1-0-0-5-1-0-0-6-1-0-0-8-1-0-0-10-1-0-0-11-1-0-0-12-1-0-0-0-0-0-0-13-1-0-0-14-1-0-0-15-1-0-0-0-0-0-0-0-0-0-0-0-0-0-0-17-1-0-0-0-0-0-0-19-1-0-0-0-0-0-0-20-1-0-0-0-0-0-0-21-1-0-0-0-0-0-0-22-1-0-0-23-1-0-0-25-1-0-0-28-1-0-0-0-0-0-0-29-1-0-0-31-1-0-0-33-1-0-0-35-1-0-0-37-1-0-0-0-0-0-0-38-1-0-0-39-1-0-0-40-1-0-0-41-1-0-0-42-1-0-0-43-1-0-0-46-1-0-0-0-0-0-0-48-1-0-0-49-1-0-0-0-0-0-0-51-1-0-0-52-1-0-0-53-1-0-0-56-1-0-0-0-0-0-0-57-1-0-0-60-1-0-0-0-0-0-0-61-1-0-0-62-1-0-0-64-1-0-0-65-1-0-0-66-1-0-0-67-1-0-0-71-1-0-0-72-1-0-0-74-1-0-0-75-1-0-0-0-0-0-0-76-1-0-0-79-1-0-0-81-1-0-0-82-1-0-0-0-0-0-0-0-0-0-0-0-0-0-0-84-1-0-0-86-1-0-0-0-0-0-0-87-1-0-0-0-0-0-0-0-0-0-0-88-1-0-0-91-1-0-0-92-1-0-0-95-1-0-0-97-1-0-0-99-1-0-0-0-0-0-0-101-1-0-0-103-1-0-0-104-1-0-0-105-1-0-0-106-1-0-0-107-1-0-0-108-1-0-0-0-0-0-0-0-0-0-0-109-1-0-0-110-1-0-0-111-1-0-0-0-0-0-0-112-1-0-0-113-1-0-0-114-1-0-0-116-1-0-0-117-1-0-0-119-1-0-0-121-1-0-0-125-1-0-0-128-1-0-0-0-0-0-0-129-1-0-0-0-0-0-0-130-1-0-0-0-0-0-0-0-0-0-0-0-0-0-0-134-1-0-0-136-1-0-0-138-1-0-0-139-1-0-0-140-1-0-0-0-0-0-0-141-1-0-0-142-1-0-0-0-0-0-0-143-1-0-0-0-0-0-0-145-1-0-0-148-1-0-0-0-0-0-0-149-1-0-0-151-1-0-0-152-1-0-0-0-0-0-0-153-1-0-0-156-1-0-0-0-0-0-0-157-1-0-0-0-0-0-0-0-0-0-0-158-1-0-0-161-1-0-0-162-1-0-0-163-1-0-0-0-0-0-0-0-0-0-0-167-1-0-0-172-1-0-0-173-1-0-0-0-0-0-0-0-0-0-0-174-1-0-0-176-1-0-0-0-0-0-0-177-1-0-0-0-0-0-0-0-0-0-0-179-1-0-0-181-1-0-0-0-0-0-0-0-0-0-0-183-1-0-0-185-1-0-0-0-0-0-0-0-0-0-0-186-1-0-0-187-1-0-0-0-0-0-0-0-0-0-0-188-1-0-0-190-1-0-0-0-0-0-0-192-1-0-0-193-1-0-0-194-1-0-0-196-1-0-0-197-1-0-0-0-0-0-0-0-0-0-0-199-1-0-0-200-1-0-0-201-1-0-0-202-1-0-0-0-0-0-0-206-1-0-0-208-1-0-0-0-0-0-0-0-0-0-0-0-0-0-0-211-1-0-0-212-1-0-0-214-1-0-0-0-0-0-0-218-1-0-0-0-0-0-0-0-0-0-0-219-1-0-0-0-0-0-0-220-1-0-0-0-0-0-0-221-1-0-0-224-1-0-0-0-0-0-0-228-1-0-0-229-1-0-0-0-0-0-0-231-1-0-0-233-1-0-0-234-1-0-0-0-0-0-0-0-0-0-0-236-1-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-237-1-0-0-0-0-0-0-238-1-0-0-239-1-0-0-240-1-0-0-241-1-0-0-0-0-0-0-0-0-0-0-242-1-0-0-0-0-0-0-244-1-0-0-246-1-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-248-1-0-0-0-0-0-0-250-1-0-0-0-0-0-0-251-1-0-0-255-1-0-0-0-0-0-0-0-2-0-0-0-0-0-0-1-2-0-0-4-2-0-0-0-0-0-0-0-0-0-0-6-2-0-0-0-0-0-0-0-0-0-0-9-2-0-0-10-2-0-0-11-2-0-0-12-2-0-0-13-2-0-0-0-0-0-0-14-2-0-0-15-2-0-0-0-0-0-0-0-0-0-0-17-2-0-0-18-2-0-0-20-2-0-0-22-2-0-0-23-2-0-0-26-2-0-0-28-2-0-0-0-0-0-0-29-2-0-0-30-2-0-0-31-2-0-0-33-2-0-0-35-2-0-0-0-0-0-0-37-2-0-0-38-2-0-0-0-0-0-0-39-2-0-0-0-0-0-0-40-2-0-0-0-0-0-0-41-2-0-0-42-2-0-0-0-0-0-0-0-0-0-0-43-2-0-0-45-2-0-0-46-2-0-0-47-2-0-0-49-2-0-0-0-0-0-0-51-2-0-0-55-2-0-0-57-2-0-0
68552|data|DCD 0xB44DAF83, 0xFA33D65, 0xFA99FA1, 0x8EA2952D, 0xC44E602E|131-175-77-180-101-61-163-15-161-159-169-15-45-149-162-142-46-96-78-196-199-66-28-138-71-88-55-15-220-159-206-181-228-25-243-68-19-179-249-48-137-4-135-14-194-117-41-224-67-57-96-137-4-255-173-15-188-77-128-83-185-195-203-226-35-116-165-84-249-44-88-190-64-85-204-236-10-113-87-163-23-231-131-17-241-244-56-130-26-22-80-239-133-107-174-1-191-134-239-14-165-59-52-246-178-182-12-144-146-90-158-62-67-40-129-70-185-141-241-14-84-231-241-235-89-37-60-233-87-53-136-149-201-127-63-249-129-223-51-120-134-165-141-30-147-220-33-27-166-208-159-138-87-56-123-33-229-153-63-25-129-16-216-189-237-35-66-73-255-235-26-68-58-171-245-207-49-181-171-37-204-63-12-175-192-63-244-215-255-6-64-57-119-84-39-144-228-222-147-28-53-130-180-138-209-78-189-175-13-58-151-11-49-51-185-20-35-157-47-84-25-158-68-225-245-67-72-122-237-222-147-28-237-222-147-28-209-36-32-225-215-176-102-25-157-168-148-110-117-63-172-75-161-71-35-194-249-2-229-160-102-61-37-185-251-143-240-19-87-211-3-182-206-56-57-15-217-74-181-209-77-235-58-125-247-206-34-208-187-149-147-28-14-54-231-33-78-246-219-33-201-26-92-52-252-231-234-149-129-116-130-13-239-114-197-235-205-92-118-191-154-65-214-18-217-41-181-104-13-53-73-30-69-68-44-82-62-126-150-124-157-26-1-94-188-110-197-93-201-205-161-79-35-185-5-195-81-238-17-227-51-98-219-237-169-189-240-187-76-193-31-45-75-14-225-227-198-136-110-136-28-212-52-21-134-22-115-92-159-178-83-21-31-6-114-135-71-168-8-56-159-44-93-162-232-159-182-179-23-145-232-82-43-145-249-91-185-111-0-234-5-38-86-6-92-44-61-74-171-170-215-125-231-208-159-37-108-128-177-50-202-53-140-153-162-130-87-172-181-27-107-136-31-181-42-118-4-222-18-21-83-29-132-46-116-56-171-88-199-90-60-94-95-151-72-219-32-207-9-253-13-20-226-158-237-84-13-175-80-216-27-167-21-231-95-185-101-41-103-167-94-193-95-14-47-78-61-246-142-236-183-127-222-28-57-118-77-248-242-13-4-108-178-205-198-254-3-106-58-17-109-144-109-139-226-251-9-70-127-187-245-191-109-181-124-212-135-213-155-8-252-15-52-72-154-114-222-228-157-181-175-96-135-255-107-44-162-67-140-109-148-6-244-97-172-131-190-25-102-177-42-42-4-52-71-43-89-64-248-59-41-231-37-88-31-170-66-69-213-236-60-243-67-122-125-96-156-124-195-154-245-221-227-173-198-27-137-58-39-145-112-35-223-201-97-172-113-111-109-225-195-126-164-123-112-16-163-48-44-6-8-245-183-49-125-184-247-184-241-73-181-36-122-243-128-106-176-208-66-146-157-192-79-93-7-110-14-196-135-240-150-124-171-14-202-245-112-184-180-106-57-146-227-112-10-205-75-212-201-57-64-31-238-11-81-249-112-236-198-141-158-238-155-124-219-205-227-158-133-91-135-223-46-55-128-15-249-125-77-6-37-47-89-201-9-67-233-28-161-40-87-65-118-155-161-101-124-237-17-15-143-65-118-79-226-37-178-234-130-151-149-213-13-235-73-255-231-215-246-136-157-90-141-88-155-9-132-170-219-69-59-30-29-154-208-149-43-199-180-210-20-35-15-134-140-122-157-154-234-22-169-24-117-103-176-86-27-71-140-40-80-146-176-27-14-58-152-21-209-229-131-218-35-255-107-168-238-21-40-99-69-213-73-100-158-14-184-59-130-93-38-191-117-248-58-69-217-181-39-255-166-21-58-60-93-211-159-138-80-153-75-2-162-234-238-73-93-211-159-138-39-34-21-79-48-184-130-13-195-239-149-79-17-59-228-250-57-55-206-225-49-234-78-124-231-188-163-120-146-234-28-239-195-59-121-28-35-61-75-196-152-219-166-209-244-16-100-56-76-123-154-53-79-219-157-124-160-224-118-201-126-166-121-157-61-247-131-48-114-170-250-131-0-175-52-232-22-234-118-254-127-95-184-73-174-143-200-119-41-153-214-113-110-111-43-125-251-14-35-151-48-32-254-15-118-170-142-127-200-169-147-19-61-173-57-13-136-194-64-213-122-75-181-209-1-35-249-164-63-220-53-172-232-149-137-126-119-84-60-148-62-25-158-52-81-49-117-202-95-150-147-28-199-253-161-5-173-98-30-34-189-139-168-175-253-210-239-15-82-213-114-126-37-117-130-13-42-132-236-73-205-73-234-128-219-49-25-75-107-150-133-7-73-154-160-31-59-13-133-179-194-45-14-81-197-93-143-68-2-55-118-253-242-22-230-245-237-179-111-170-131-54-63-80-242-45-219-57-215-222-99-42-214-128-137-158-51-177-83-21-64-1-209-120-79-88-217-242-78-155-128-156-199-25-205-178-165-241-98-111-243-31-198-148-113-160-116-157-125-139-115-15-113-251-27-167-39-197-97-218-18-84-203-159-188-143-173-172-45-50-64-253-136-109-217-150-61-88-27-123-227-76-55-73-34-190-15-175-7-3-75-223-49-110-213-53-155-39-0-219-72-221-109-144-194-7-189-228-75-126-133-89-17-237-159-208-196-133-176-181-10-235-6-134-45-10-127-33-69-143-226-83-21-93-109-224-196-247-204-243-197-227-128-27-167-73-243-147-23-89-0-245-147-173-4-98-134-75-133-230-20-254-58-21-92-240-108-15-109-108-191-28-243-44-9-213-140-200-211-149-245-142-54-166-53-32-74-73-149-123-132-86-26-159-214-189-228-228-28-60-179-54-214-203-72-184-152-98-113-35-117-63-139-104-2-248-64-174-172-135-109-230-14-54-120-9-66-103-103-89-47-229-165-210-80-201-255-236-132-20-136-152-240-114-174-73-52-153-249-109-123-230-3-79-111-56-252-242-18-0-6-174-213-39-191-27-98-27-238-29-52-163-55-65-186-224-130-5-244-52-241-51-147-138-88-102-243-148-223-2-24-55-224-196-183-30-5-190-253-27-227-87-196-24-185-4-241-217-143-121-13-248-119-204-216-5-209-12-147-33-241-117-228-4-155-160-32-111-205-225-52-7-65-77-157-124-45-99-59-33-169-23-87-233-24-231-26-209-67-89-135-255-181-86-49-253-146-130-25-65-175-196-77-15-102-76-37-82-161-128-56-75-218-214-162-215-90-154-59-15-22-229-169-65-15-159-62-249-64-143-29-253-170-236-145-181-161-138-93-97-139-228-83-203-157-149-210-231-188-18-83-201-254-12-255-58-230-75-181-209-237-233-67-43-202-150-147-28-119-234-64-141-98-62-180-100-209-159-44-252-159-251-110-15-79-183-159-137-253-124-216-83-145-117-130-13-9-9-120-189-172-75-227-192-173-112-14-175-222-105-167-202-236-212-247-56-7-178-207-82-251-117-117-132-88-239-151-121-69-82-206-65-95-231-168-231-31-128-136-11-168-54-127-7-48-83-49-117-69-115-24-218-11-89-131-28-171-64-21-73-14-159-73-141-164-63-160-136-227-125-131-90-67-119-41-145-141-228-144-104-228-135-142-182-150-205-217-90-126-85-221-113-105-201-86-22-186-137-29-157-148-52-43-101-244-149-201-211-50-119-128-237-215-159-192-146-9-24-252-158-91-51-2-82-76-161-211-200-7-2-4-249-239-43-231-122-134-190-189-180-39-32-217-5-222-57-87-207-51-157-227-252-54-195-242-122-251-60-70-49-102-91-226-9-225-88-107-147-115-59-25-144-157-187-147-28-107-70-69-246-96-242-216-195-139-144-182-157-94-17-67-253-195-58-195-119-127-158-208-24-191-218-87-27-46-126-45-215-25-209-120-133-241-75-175-72-150-185-20-64-173-139-6-92-211-177-63-66-69-173-101-201-79-246-46-211-14-92-131-116-62-92-220-102-148-77-157-124-247-223-109-5-198-1-229-175-131-229-39-15-246-50-172-159-106-101-45-111-133-186-150-124-217-1-232-243-106-9-67-214-239-125-250-46-254-199-60-16-208-56-24-21-14-113-6-190-11-187-185-61-139-135-154-206-139-122-41-75-53-67-113-27-208-45-158-167-6-22-25-255-77-235-81-54-8-172-249-143-174-141-24-215-80-181-168-16-135-168-189-182-249-162-123-186-232-240-27-57-27-56-215-27-108-9-158-89-233-139-218-118-181-222-217-216-168-36-184-207-37-153-69-37-171-77-107-195-35-140-172-94-219-78-95-177-17-137-153-124-57-33-226-15-139-6-14-28-228-17-155-4-7-47-116-15-50-125-221-160-13-105-248-168-166-200-56-38-109-236-108-70-66-137-208-73-187-227-146-124-59-155-215-80-186-196-75-119-118-229-150-124-94-116-59-197-55-154-211-167-205-119-183-187-23-47-116-15-252-211-64-15-196-240-110-244-171-78-140-84-106-127-154-124-67-106-37-30-130-118-53-183-144-33-252-248-249-62-229-194-139-236-141-91-195-142-135-255-195-165-31-180-51-199-155-205-199-14-224-61-165-54-147-138-160-48-12-189-167-54-147-138-55-55-140-153-68-41-152-5-173-238-107-15-78-137-98-137-97-1-237-14-127-45-205-203-44-175-192-52-16-192-214-5-151-129-207-221-36-185-192-110-15-253-55-136-153-228-206-178-57-232-68-16-85-139-168-121-188-213-38-41-49-239-233-188-102-73-73-34-185-80-77-9-74-183-230-71-119-215-155-124-217-113-88-28-121-0-236-109-235-211-239-14-73-235-219-8-127-173-179-210-235-180-111-170-28-56-131-219-115-71-156-124-105-127-173-62-123-184-209-171-34-10-190-238-225-153-210-186-176-21-11-67-203-48-0-180-22-234-90-241-42-253-227-250-62-233-84-218-133-47-254-235-210-154-112-209-149-58-243-170-112-194-190-249-46-131-218-169-183-184-165-239
70784|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
70800|data|Elf32_Sym <aOpterr - byte_13840, 0, 0, 0x11, 0, 0>; "opterr"|236-8-0-0-0-0-0-0-0-0-0-0-17-0-0-0
70816|data|Elf32_Sym <aStackChkGuard - byte_13840, 0, 0, 0x11, 0, 0>; "__stack_chk_guard"|121-9-0-0-0-0-0-0-0-0-0-0-17-0-0-0
70832|data|Elf32_Sym <aProgname - byte_13840, 0, 0, 0x11, 0, 0>; "__progname"|204-5-0-0-0-0-0-0-0-0-0-0-17-0-0-0
70848|data|Elf32_Sym <aOptind - byte_13840, 0, 0, 0x11, 0, 0>; "optind"|175-5-0-0-0-0-0-0-0-0-0-0-17-0-0-0
70864|data|Elf32_Sym <aOptarg - byte_13840, 0, 0, 0x11, 0, 0>; "optarg"|139-7-0-0-0-0-0-0-0-0-0-0-17-0-0-0
70880|data|Elf32_Sym <aStderr - byte_13840, 0, 0, 0x11, 0, 0>; "stderr"|146-7-0-0-0-0-0-0-0-0-0-0-17-0-0-0
70896|data|Elf32_Sym <aOptopt - byte_13840, 0, 0, 0x11, 0, 0>; "optopt"|189-7-0-0-0-0-0-0-0-0-0-0-17-0-0-0
70912|data|Elf32_Sym <aJvRegisterclas - byte_13840, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
70928|data|Elf32_Sym <aStdout - byte_13840, 0, 0, 0x11, 0, 0>; "stdout"|22-7-0-0-0-0-0-0-0-0-0-0-17-0-0-0
70944|data|Elf32_Sym <aItmDeregistert - byte_13840, 0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|18-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
70960|data|Elf32_Sym <aProgramInvocat - byte_13840, 0, 0, 0x21, 0, 0>; "program_invocation_short_name"|58-9-0-0-0-0-0-0-0-0-0-0-33-0-0-0
70976|data|Elf32_Sym <aGmonStart - byte_13840, 0, 0, 0x20, 0, 0>; "__gmon_start__"|46-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
70992|data|Elf32_Sym <aItmRegistertmc - byte_13840, 0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
71008|data|Elf32_Sym <aBrlapiReadkey - byte_13840, 0, 0, 0x12, 0, 0>; "brlapi_readKey"|181-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71024|data|Elf32_Sym <aIconv - byte_13840, 0, 0, 0x12, 0, 0>; "iconv"|140-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71040|data|Elf32_Sym <aIoctl - byte_13840, 0, 0, 0x12, 0, 0>; "ioctl"|163-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71056|data|Elf32_Sym <aEnsuredirector - byte_13840, ensureDirectory+1, 0x88, \; "ensureDirectory"|255-31-0-0-205-171-1-0-136-0-0-0-18-0-13-0
71072|data|Elf32_Sym <aAsyncnewevent - byte_13840, asyncNewEvent+1, 0x94, 0x12, \; "asyncNewEvent"|177-30-0-0-133-214-1-0-148-0-0-0-18-0-13-0
71088|data|Elf32_Sym <aAsyncdeletesig - byte_13840, asyncDeleteSignalEntry+1, \; "asyncDeleteSignalEntry"|147-33-0-0-101-216-1-0-26-0-0-0-18-0-13-0
71104|data|Elf32_Sym <aSigaction - byte_13840, 0, 0, 0x12, 0, 0>; "sigaction"|123-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71120|data|Elf32_Sym <aConvertchartow - byte_13840, convertCharToWchar+1, 0x88, \; "convertCharToWchar"|201-15-0-0-185-16-2-0-136-0-0-0-18-0-13-0
71136|data|Elf32_Sym <aEnableports - byte_13840, enablePorts+1, 0x44, 0x12, 0, \; "enablePorts"|38-19-0-0-49-230-1-0-68-0-0-0-18-0-13-0
71152|data|Elf32_Sym <aFlushstream - byte_13840, flushStream+1, 4, 0x12, 0, 0xD>; "flushStream"|8-23-0-0-237-175-1-0-4-0-0-0-18-0-13-0
71168|data|Elf32_Sym <aBrldotnumbers - byte_13840, brlDotNumbers, 0x20, 0x11, 0, \; "brlDotNumbers"|100-25-0-0-64-56-2-0-32-0-0-0-17-0-15-0
71184|data|Elf32_Sym <aXquerytree - byte_13840, 0, 0, 0x12, 0, 0>; "XQueryTree"|111-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71200|data|Elf32_Sym <aGetdevicepath - byte_13840, getDevicePath+1, 0x12, 0x12, \; "getDevicePath"|233-14-0-0-197-180-1-0-18-0-0-0-18-0-13-0
71216|data|Elf32_Sym <aWriteutf8chara - byte_13840, writeUtf8Character+1, 0x74, \; "writeUtf8Character"|62-13-0-0-241-15-2-0-116-0-0-0-18-0-13-0
71232|data|Elf32_Sym <aValidateyesno - byte_13840, validateYesNo+1, 0x14, 0x12, \; "validateYesNo"|210-17-0-0-189-187-1-0-20-0-0-0-18-0-13-0
71248|data|Elf32_Sym <aDeallocatequeu - byte_13840, deallocateQueue+1, 0x12, \; "deallocateQueue"|180-27-0-0-165-226-1-0-18-0-0-0-18-0-13-0
71264|data|Elf32_Sym <aGetprogramqueu - byte_13840, getProgramQueue+1, 0x3C, \; "getProgramQueue"|88-31-0-0-209-226-1-0-60-0-0-0-18-0-13-0
71280|data|Elf32_Sym <aSnprintf - byte_13840, 0, 0, 0x12, 0, 0>; "snprintf"|44-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71296|data|Elf32_Sym <aAsyncawaitcond - byte_13840, asyncAwaitCondition+1, 0x120,\; "asyncAwaitCondition"|220-13-0-0-109-198-1-0-32-1-0-0-18-0-13-0
71312|data|Elf32_Sym <aNanosleep - byte_13840, 0, 0, 0x12, 0, 0>; "nanosleep"|53-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71328|data|Elf32_Sym <aLogsystemerror - byte_13840, logSystemError+1, 0x14, 0x12,\; "logSystemError"|124-30-0-0-45-164-1-0-20-0-0-0-18-0-13-0
71344|data|Elf32_Sym <aAsyncexecuteal - byte_13840, asyncExecuteAlarmCallback+1, \; "asyncExecuteAlarmCallback"|189-11-0-0-33-202-1-0-244-0-0-0-18-0-13-0
71360|data|Elf32_Sym <aAsyncmonitorfi_1 - byte_13840, asyncMonitorFileInput+1, \; "asyncMonitorFileInput"|159-23-0-0-97-212-1-0-72-0-0-0-18-0-13-0
71376|data|Elf32_Sym <aXopendisplay - byte_13840, 0, 0, 0x12, 0, 0>; "XOpenDisplay"|122-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71392|data|Elf32_Sym <aExit - byte_13840, 0, 0, 0x12, 0, 0>; "_exit"|79-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71408|data|Elf32_Sym <aGetdatatext - byte_13840, getDataText+1, 0x40, 0x12, 0, \; "getDataText"|196-27-0-0-125-250-1-0-64-0-0-0-18-0-13-0
71424|data|Elf32_Sym <aStrftime - byte_13840, 0, 0, 0x12, 0, 0>; "strftime"|105-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71440|data|Elf32_Sym <aInitializesyst - byte_13840, initializeSystemObject+1, 2, \; "initializeSystemObject"|68-19-0-0-125-238-1-0-2-0-0-0-18-0-13-0
71456|data|Elf32_Sym <aClosesystemlog - byte_13840, closeSystemLog+1, 0x18, 0x12,\; "closeSystemLog"|38-33-0-0-61-160-1-0-24-0-0-0-18-0-13-0
71472|data|Elf32_Sym <aPthreadRwlockI+0xE - byte_13840, .init_proc, 0, 0x12, 0, \; "_init"|136-4-0-0-120-101-1-0-0-0-0-0-18-0-11-0
71488|data|Elf32_Sym <aOpencharacterd - byte_13840, openCharacterDevice+1, 0x198,\; "openCharacterDevice"|43-14-0-0-109-232-1-0-152-1-0-0-18-0-13-0
71504|data|Elf32_Sym <aAsyncrevertsig - byte_13840, asyncRevertSignal+1, 8, 0x12,\; "asyncRevertSignal"|22-27-0-0-21-217-1-0-8-0-0-0-18-0-13-0
71520|data|Elf32_Sym <aIsabbreviation - byte_13840, isAbbreviation+1, 0x1E, 0x12,\; "isAbbreviation"|121-12-0-0-101-185-1-0-30-0-0-0-18-0-13-0
71536|data|Elf32_Sym <aReadline - byte_13840, readLine+1, 0xEC, 0x12, 0, 0xD>; "readLine"|252-26-0-0-77-176-1-0-236-0-0-0-18-0-13-0
71552|data|Elf32_Sym <aInitializehost - byte_13840, \; "initializeHostCommandOptions"|63-28-0-0-33-239-1-0-18-0-0-0-18-0-13-0
71568|data|Elf32_Sym <aMoveelement - byte_13840, moveElement+1, 0x50, 0x12, 0, \; "moveElement"|210-25-0-0-177-228-1-0-80-0-0-0-18-0-13-0
71584|data|Elf32_Sym <aGetcharacterwi - byte_13840, getCharacterWidth+1, 0x8C, \; "getCharacterWidth"|219-31-0-0-253-8-2-0-140-0-0-0-18-0-13-0
71600|data|Elf32_Sym <aLinuxkeymapXt0 - byte_13840, linuxKeyMap_xt00, 0x100, \; "linuxKeyMap_xt00"|235-26-0-0-84-51-2-0-0-1-0-0-17-0-15-0
71616|data|Elf32_Sym <aReadport1 - byte_13840, readPort1+1, 4, 0x12, 0, 0xD>; "readPort1"|156-30-0-0-181-230-1-0-4-0-0-0-18-0-13-0
71632|data|Elf32_Sym <aReportdataerro - byte_13840, reportDataError+1, 0x68, \; "reportDataError"|215-11-0-0-69-246-1-0-104-0-0-0-18-0-13-0
71648|data|Elf32_Sym <aMempcpy - byte_13840, 0, 0, 0x12, 0, 0>; "mempcpy"|241-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71664|data|Elf32_Sym <aAsynchandlesig - byte_13840, asyncHandleSignal+1, 0x70, \; "asyncHandleSignal"|189-22-0-0-157-216-1-0-112-0-0-0-18-0-13-0
71680|data|Elf32_Sym <aAsyncreadfile - byte_13840, asyncReadFile+1, 0x40, 0x12, \; "asyncReadFile"|246-28-0-0-57-213-1-0-64-0-0-0-18-0-13-0
71696|data|Elf32_Sym <aPthreadSigmask - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_sigmask"|26-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71712|data|Elf32_Sym <aAsyncblockobta - byte_13840, \; "asyncBlockObtainableSignals"|222-25-0-0-173-223-1-0-32-0-0-0-18-0-13-0
71728|data|Elf32_Sym <aStrncmp - byte_13840, 0, 0, 0x12, 0, 0>; "strncmp"|157-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71744|data|Elf32_Sym <aGetcellsoperan - byte_13840, getCellsOperand+1, 0x48, \; "getCellsOperand"|92-20-0-0-233-0-2-0-72-0-0-0-18-0-13-0
71760|data|Elf32_Sym <aXtestfakekeyev - byte_13840, 0, 0, 0x12, 0, 0>; "XTestFakeKeyEvent"|112-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71776|data|Elf32_Sym <aAsyncmakeeleme - byte_13840, asyncMakeElementHandle+1, \; "asyncMakeElementHandle"|78-32-0-0-25-197-1-0-60-0-0-0-18-0-13-0
71792|data|Elf32_Sym <aStrtod - byte_13840, 0, 0, 0x12, 0, 0>; "strtod"|126-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71808|data|Elf32_Sym <aGetdotoperand - byte_13840, getDotOperand+1, 0x74, 0x12, \; "getDotOperand"|232-32-0-0-53-255-1-0-116-0-0-0-18-0-13-0
71824|data|Elf32_Sym <aComparekeyword_0 - byte_13840, compareKeyword+1, 0x52, \; "compareKeyword"|8-22-0-0-173-246-1-0-82-0-0-0-18-0-13-0
71840|data|Elf32_Sym <aDataStart+2 - byte_13840, __data_start, 0, 0x20, 0, 0x18>; "data_start"|181-25-0-0-36-72-3-0-0-0-0-0-32-0-24-0
71856|data|Elf32_Sym <aSetqueuedata - byte_13840, setQueueData+1, 8, 0x12, 0, \; "setQueueData"|168-32-0-0-21-227-1-0-8-0-0-0-18-0-13-0
71872|data|Elf32_Sym <aWriteconsole - byte_13840, writeConsole+1, 0x5C, 0x12, 0, \; "writeConsole"|138-26-0-0-77-179-1-0-92-0-0-0-18-0-13-0
71888|data|Elf32_Sym <aOpenlogfile - byte_13840, openLogFile+1, 0x24, 0x12, 0, \; "openLogFile"|252-22-0-0-245-159-1-0-36-0-0-0-18-0-13-0
71904|data|Elf32_Sym <aNewqueue - byte_13840, newQueue+1, 0x50, 0x12, 0, 0xD>; "newQueue"|163-31-0-0-65-226-1-0-80-0-0-0-18-0-13-0
71920|data|Elf32_Sym <aStrtok - byte_13840, 0, 0, 0x12, 0, 0>; "strtok"|156-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71936|data|Elf32_Sym <aStrtol - byte_13840, 0, 0, 0x12, 0, 0>; "strtol"|163-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71952|data|Elf32_Sym <aXseterrorhandl - byte_13840, 0, 0, 0x12, 0, 0>; "XSetErrorHandler"|187-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
71968|data|Elf32_Sym <aCreatepidfile - byte_13840, createPidFile+1, 0x1FC, 0x12, \; "createPidFile"|211-21-0-0-145-131-1-0-252-1-0-0-18-0-13-0
71984|data|Elf32_Sym <aAdjusttimevalu - byte_13840, adjustTimeValue+1, 0x7C, \; "adjustTimeValue"|128-10-0-0-213-192-1-0-124-0-0-0-18-0-13-0
72000|data|Elf32_Sym <aRingbell - byte_13840, ringBell+1, 0x10, 0x12, 0, 0xD>; "ringBell"|108-20-0-0-169-179-1-0-16-0-0-0-18-0-13-0
72016|data|Elf32_Sym <aReadfiledescri - byte_13840, readFileDescriptor+1, 4, \; "readFileDescriptor"|71-22-0-0-121-178-1-0-4-0-0-0-18-0-13-0
72032|data|Elf32_Sym <aAsyncwait - byte_13840, asyncWait+1, 8, 0x12, 0, 0xD>; "asyncWait"|114-30-0-0-141-199-1-0-8-0-0-0-18-0-13-0
72048|data|Elf32_Sym <aGetprocessiden - byte_13840, getProcessIdentifier+1, 4, \; "getProcessIdentifier"|196-32-0-0-77-138-1-0-4-0-0-0-18-0-13-0
72064|data|Elf32_Sym <aIswcntrl - byte_13840, 0, 0, 0x12, 0, 0>; "iswcntrl"|105-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72080|data|Elf32_Sym <aWaitpid - byte_13840, 0, 0, 0x12, 0, 0>; "waitpid"|63-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72096|data|Elf32_Sym <aChdir - byte_13840, 0, 0, 0x12, 0, 0>; "chdir"|222-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72112|data|Elf32_Sym <aWmemchr - byte_13840, 0, 0, 0x12, 0, 0>; "wmemchr"|198-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72128|data|Elf32_Sym <aSnprintfChk - byte_13840, 0, 0, 0x12, 0, 0>; "__snprintf_chk"|174-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72144|data|Elf32_Sym <aResolvedevicen - byte_13840, resolveDeviceName+1, 0xCC, \; "resolveDeviceName"|224-17-0-0-217-180-1-0-204-0-0-0-18-0-13-0
72160|data|Elf32_Sym <aStrchr - byte_13840, 0, 0, 0x12, 0, 0>; "strchr"|98-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72176|data|Elf32_Sym <aRegisterprogra_0 - byte_13840, registerProgramStream+1, \; "registerProgramStream"|225-21-0-0-221-175-1-0-16-0-0-0-18-0-13-0
72192|data|Elf32_Sym <aPthreadRwlockW - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_rwlock_wrlock"|228-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72208|data|Elf32_Sym <aAsyncdeallocat_3 - byte_13840, \; "asyncDeallocateSignalData"|76-29-0-0-129-216-1-0-26-0-0-0-18-0-13-0
72224|data|Elf32_Sym <aPreparehostcom - byte_13840, prepareHostCommandStream+1, \; "prepareHostCommandStream"|158-24-0-0-245-240-1-0-32-0-0-0-18-0-13-0
72240|data|Elf32_Sym <aWmemchr+1 - byte_13840, 0, 0, 0x12, 0, 0>; "memchr"|199-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72256|data|Elf32_Sym <aGetutf8length - byte_13840, getUtf8Length+1, 0x5C, 0x12, \; "getUtf8Length"|155-14-0-0-237-12-2-0-92-0-0-0-18-0-13-0
72272|data|Elf32_Sym <aIsabsolutepath - byte_13840, isAbsolutePath+1, 0x10, 0x12,\; "isAbsolutePath"|159-17-0-0-193-167-1-0-16-0-0-0-18-0-13-0
72288|data|Elf32_Sym <aRegisterprogra - byte_13840, registerProgramMemory+1, \; "registerProgramMemory"|150-12-0-0-141-134-1-0-16-0-0-0-18-0-13-0
72304|data|Elf32_Sym <aReleasepressed - byte_13840, releasePressedKeys+1, 0x56, \; "releasePressedKeys"|183-26-0-0-229-236-1-0-86-0-0-0-18-0-13-0
72320|data|Elf32_Sym <aAsynccallwiths - byte_13840, asyncCallWithSignalBlocked+1,\; "asyncCallWithSignalBlocked"|253-12-0-0-13-218-1-0-76-0-0-0-18-0-13-0
72336|data|Elf32_Sym <aValidatefloat - byte_13840, validateFloat+1, 0x78, 0x12, \; "validateFloat"|100-11-0-0-33-188-1-0-120-0-0-0-18-0-13-0
72352|data|Elf32_Sym <aExit+1 - byte_13840, 0, 0, 0x12, 0, 0>; "exit"|80-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72368|data|Elf32_Sym <aCloselog - byte_13840, 0, 0, 0x12, 0, 0>; "closelog"|35-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72384|data|Elf32_Sym <aWritedotscells - byte_13840, writeDotsCells+1, 0x38, 0x12,\; "writeDotsCells"|202-24-0-0-133-1-2-0-56-0-0-0-18-0-13-0
72400|data|Elf32_Sym <aSplitstring - byte_13840, splitString+1, 0xF4, 0x12, 0, \; "splitString"|217-24-0-0-81-184-1-0-244-0-0-0-18-0-13-0
72416|data|Elf32_Sym <aVsnprintfChk - byte_13840, 0, 0, 0x12, 0, 0>; "__vsnprintf_chk"|48-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72432|data|Elf32_Sym <aFprintfChk - byte_13840, 0, 0, 0x12, 0, 0>; "__fprintf_chk"|254-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72448|data|Elf32_Sym <aDataStart+6 - byte_13840, _start+1, 0, 0x12, 0, 0xD>; "_start"|185-25-0-0-229-110-1-0-0-0-0-0-18-0-13-0
72464|data|Elf32_Sym <aStrncasecmp - byte_13840, 0, 0, 0x12, 0, 0>; "strncasecmp"|224-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72480|data|Elf32_Sym <aConstructhostc - byte_13840, \; "constructHostCommandPackageData"|151-26-0-0-189-240-1-0-14-0-0-0-18-0-13-0
72496|data|Elf32_Sym <aDestroyuinputo - byte_13840, destroyUinputObject+1, 0x18, \; "destroyUinputObject"|204-28-0-0-61-237-1-0-24-0-0-0-18-0-13-0
72512|data|Elf32_Sym <aIshexadecimald - byte_13840, isHexadecimalDigit+1, 0x32, \; "isHexadecimalDigit"|74-16-0-0-161-242-1-0-50-0-0-0-18-0-13-0
72528|data|Elf32_Sym <aPthreadRwlockR - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_rwlock_rdlock"|154-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72544|data|Elf32_Sym <aIskeyword - byte_13840, isKeyword+1, 0xE, 0x12, 0, 0xD>; "isKeyword"|249-18-0-0-29-247-1-0-14-0-0-0-18-0-13-0
72560|data|Elf32_Sym <aAsyncsetalarmt - byte_13840, asyncSetAlarmTo+1, 0x3C, \; "asyncSetAlarmTo"|102-29-0-0-241-200-1-0-60-0-0-0-18-0-13-0
72576|data|Elf32_Sym <aProcessdatafil - byte_13840, processDataFile+1, 0x44, \; "processDataFile"|202-26-0-0-129-7-2-0-68-0-0-0-18-0-13-0
72592|data|Elf32_Sym <aLocatepathexte - byte_13840, locatePathExtension+1, 0x10, \; "locatePathExtension"|124-19-0-0-153-168-1-0-16-0-0-0-18-0-13-0
72608|data|Elf32_Sym <aPthreadSetspec - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_setspecific"|18-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72624|data|Elf32_Sym <aGetdeviceparam - byte_13840, getDeviceParameters+1, 0xCC, \; "getDeviceParameters"|54-24-0-0-253-181-1-0-204-0-0-0-18-0-13-0
72640|data|Elf32_Sym <aGetdatastring - byte_13840, getDataString+1, 0x54, 0x12, \; "getDataString"|23-31-0-0-21-254-1-0-84-0-0-0-18-0-13-0
72656|data|Elf32_Sym <aComparetimeval - byte_13840, compareTimeValues+1, 0x24, \; "compareTimeValues"|4-29-0-0-81-193-1-0-36-0-0-0-18-0-13-0
72672|data|Elf32_Sym <aLogpossiblecau - byte_13840, logPossibleCause+1, 0x10, \; "logPossibleCause"|213-12-0-0-117-164-1-0-16-0-0-0-18-0-13-0
72688|data|Elf32_Sym <aConvertutf8tow - byte_13840, convertUtf8ToWchar+1, 0xE8, \; "convertUtf8ToWchar"|214-9-0-0-5-12-2-0-232-0-0-0-18-0-13-0
72704|data|Elf32_Sym <aLogsymbol - byte_13840, logSymbol+1, 0x50, 0x12, 0, 0xD>; "logSymbol"|40-26-0-0-185-163-1-0-80-0-0-0-18-0-13-0
72720|data|Elf32_Sym <aPthreadMutexUn - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_mutex_unlock"|133-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72736|data|Elf32_Sym <aProcessendifop - byte_13840, processEndIfOperands+1, 0x3C,\; "processEndIfOperands"|18-18-0-0-177-4-2-0-60-0-0-0-18-0-13-0
72752|data|Elf32_Sym <aUGetintpropert - byte_13840, 0, 0, 0x12, 0, 0>; "u_getIntPropertyValue_52"|187-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72768|data|Elf32_Sym <aAsyncresetalar_1 - byte_13840, asyncResetAlarmIn+1, 0x44, \; "asyncResetAlarmIn"|41-21-0-0-177-201-1-0-68-0-0-0-18-0-13-0
72784|data|Elf32_Sym <aJoinpath - byte_13840, joinPath+1, 0x7C, 0x12, 0, 0xD>; "joinPath"|108-23-0-0-185-168-1-0-124-0-0-0-18-0-13-0
72800|data|Elf32_Sym <aIconvOpen - byte_13840, 0, 0, 0x12, 0, 0>; "iconv_open"|159-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72816|data|Elf32_Sym <aXinternatom - byte_13840, 0, 0, 0x12, 0, 0>; "XInternAtom"|6-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72832|data|Elf32_Sym <aIswspace - byte_13840, 0, 0, 0x12, 0, 0>; "iswspace"|3-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72848|data|Elf32_Sym <aRescaleinteger - byte_13840, rescaleInteger+1, 0x1E, 0x12,\; "rescaleInteger"|167-29-0-0-69-185-1-0-30-0-0-0-18-0-13-0
72864|data|Elf32_Sym <aGetwritabledir - byte_13840, getWritableDirectory+1, 0x28,\; "getWritableDirectory"|113-13-0-0-85-172-1-0-40-0-0-0-18-0-13-0
72880|data|Elf32_Sym <aGetlogcategory_0 - byte_13840, getLogCategoryName+1, 0x2C,\; "getLogCategoryName"|191-17-0-0-29-158-1-0-44-0-0-0-18-0-13-0
72896|data|Elf32_Sym <aAsyncresetalar - byte_13840, asyncResetAlarmEvery+1, 0x2C,\; "asyncResetAlarmEvery"|176-13-0-0-245-201-1-0-44-0-0-0-18-0-13-0
72912|data|Elf32_Sym <aFclose - byte_13840, 0, 0, 0x12, 0, 0>; "fclose"|41-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72928|data|Elf32_Sym <aLibcCsuFini - byte_13840, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|37-31-0-0-229-21-2-0-2-0-0-0-18-0-13-0
72944|data|Elf32_Sym <aStrpbrk - byte_13840, 0, 0, 0x12, 0, 0>; "strpbrk"|85-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
72960|data|Elf32_Sym <aLinuxkeymapHid - byte_13840, linuxKeyMap_hid, 0x100, 0x11,\; "linuxKeyMap_hid"|66-26-0-0-84-44-2-0-0-1-0-0-17-0-15-0
72976|data|Elf32_Sym <aWritabledirect - byte_13840, writableDirectory, 4, 0x11, \; "writableDirectory"|70-31-0-0-168-136-3-0-4-0-0-0-17-0-25-0
72992|data|Elf32_Sym <aComparekeyword - byte_13840, compareKeywords+1, 0x1A, \; "compareKeywords"|231-11-0-0-1-247-1-0-26-0-0-0-18-0-13-0
73008|data|Elf32_Sym <aXfree - byte_13840, 0, 0, 0x12, 0, 0>; "XFree"|86-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73024|data|Elf32_Sym <aLibcStartMain - byte_13840, 0, 0, 0x12, 0, 0>; "__libc_start_main"|3-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73040|data|Elf32_Sym <aReleaselock - byte_13840, releaseLock+1, 4, 0x12, 0, 0xD>; "releaseLock"|188-21-0-0-57-10-2-0-4-0-0-0-18-0-13-0
73056|data|Elf32_Sym <aXnextevent - byte_13840, 0, 0, 0x12, 0, 0>; "XNextEvent"|176-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73072|data|Elf32_Sym <aMktime - byte_13840, 0, 0, 0x12, 0, 0>; "mktime"|133-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73088|data|Elf32_Sym <aStrdup - byte_13840, 0, 0, 0x12, 0, 0>; "__strdup"|195-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73104|data|Elf32_Sym <aGetpathdirecto - byte_13840, getPathDirectory+1, 0xA0, \; "getPathDirectory"|218-26-0-0-209-167-1-0-160-0-0-0-18-0-13-0
73120|data|Elf32_Sym <aValidatechoice - byte_13840, validateChoice+1, 0x4A, 0x12,\; "validateChoice"|181-32-0-0-37-187-1-0-74-0-0-0-18-0-13-0
73136|data|Elf32_Sym <aGetaddressname - byte_13840, getAddressName+1, 0x58, 0x12,\; "getAddressName"|217-32-0-0-197-166-1-0-88-0-0-0-18-0-13-0
73152|data|Elf32_Sym <aXrefreshkeyboa - byte_13840, 0, 0, 0x12, 0, 0>; "XRefreshKeyboardMapping"|238-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73168|data|Elf32_Sym <aDefaultcharset - byte_13840, defaultCharset, 0xB, 0x11, 0,\; "defaultCharset" ...|217-29-0-0-0-59-2-0-11-0-0-0-17-0-15-0
73184|data|Elf32_Sym <aLogunsupported_0 - byte_13840, logUnsupportedFeature+1, \; "logUnsupportedFeature"|224-28-0-0-77-164-1-0-16-0-0-0-18-0-13-0
73200|data|Elf32_Sym <aMillisecondsti_0 - byte_13840, \; "millisecondsTillNextSecond"|22-29-0-0-217-193-1-0-68-0-0-0-18-0-13-0
73216|data|Elf32_Sym <aXkblockmodifie - byte_13840, 0, 0, 0x12, 0, 0>; "XkbLockModifiers"|63-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73232|data|Elf32_Sym <aOpensystemlog - byte_13840, openSystemLog+1, 0x24, 0x12, \; "openSystemLog"|238-22-0-0-25-160-1-0-36-0-0-0-18-0-13-0
73248|data|Elf32_Sym <aGetenv - byte_13840, 0, 0, 0x12, 0, 0>; "getenv"|116-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73264|data|Elf32_Sym <aBrlapiEntertty - byte_13840, 0, 0, 0x12, 0, 0>; "brlapi_enterTtyModeWithPath"|16-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73280|data|Elf32_Sym <aNlLanginfo - byte_13840, 0, 0, 0x12, 0, 0>; "nl_langinfo"|90-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73296|data|Elf32_Sym <aEnableuinputev - byte_13840, enableUinputEventType+1, \; "enableUinputEventType"|29-20-0-0-209-235-1-0-44-0-0-0-18-0-13-0
73312|data|Elf32_Sym <aGetprimaryover - byte_13840, \; "getPrimaryOverrideDirectory"|13-21-0-0-145-175-1-0-36-0-0-0-18-0-13-0
73328|data|Elf32_Sym <aApiSetname - byte_13840, api_setName+1, 0x90, 0x12, 0, \; "api_setName"|67-23-0-0-213-119-1-0-144-0-0-0-18-0-13-0
73344|data|Elf32_Sym <aTestprocesside - byte_13840, testProcessIdentifier+1, \; "testProcessIdentifier"|92-30-0-0-81-138-1-0-16-0-0-0-18-0-13-0
73360|data|Elf32_Sym <aWritesocketdes - byte_13840, writeSocketDescriptor+1, 6, \; "writeSocketDescriptor"|86-10-0-0-229-178-1-0-6-0-0-0-18-0-13-0
73376|data|Elf32_Sym <aIsqualifieddev - byte_13840, isQualifiedDevice+1, 0x36, \; "isQualifiedDevice"|151-18-0-0-165-181-1-0-54-0-0-0-18-0-13-0
73392|data|Elf32_Sym <aEdata - byte_13840, __bss_start, 0, 0x10, 0, 0x18>; "_edata"|139-9-0-0-80-72-3-0-0-0-0-0-16-0-24-0
73408|data|Elf32_Sym <aValidateintege - byte_13840, validateInteger+1, 0x68, \; "validateInteger"|34-16-0-0-189-186-1-0-104-0-0-0-18-0-13-0
73424|data|Elf32_Sym <aPoll - byte_13840, 0, 0, 0x12, 0, 0>; "poll"|249-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73440|data|Elf32_Sym <aIncludedatafil - byte_13840, includeDataFile+1, 0xF4, \; "includeDataFile"|171-28-0-0-49-6-2-0-244-0-0-0-18-0-13-0
73456|data|Elf32_Sym <aSignal - byte_13840, 0, 0, 0x12, 0, 0>; "signal"|245-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73472|data|Elf32_Sym <aProcessifnotva - byte_13840, processIfNotVarOperands+1, \; "processIfNotVarOperands"|225-10-0-0-181-3-2-0-36-0-0-0-18-0-13-0
73488|data|Elf32_Sym <aFtruncate - byte_13840, 0, 0, 0x12, 0, 0>; "ftruncate"|165-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73504|data|Elf32_Sym <aWriterepeatdel - byte_13840, writeRepeatDelay+1, 0x24, \; "writeRepeatDelay"|174-17-0-0-85-237-1-0-36-0-0-0-18-0-13-0
73520|data|Elf32_Sym <aGetbootparamet - byte_13840, getBootParameters+1, 0xDC, \; "getBootParameters"|94-18-0-0-125-155-1-0-220-0-0-0-18-0-13-0
73536|data|Elf32_Sym <aToxF - byte_13840, toX_f+1, 0x994, 0x12, 0, 0xD>; "toX_f"|114-11-0-0-77-121-1-0-148-9-0-0-18-0-13-0
73552|data|Elf32_Sym <aFixinstallpath - byte_13840, fixInstallPaths+1, 0x118, \; "fixInstallPaths"|85-15-0-0-89-136-1-0-24-1-0-0-18-0-13-0
73568|data|Elf32_Sym <aRealpathChk - byte_13840, 0, 0, 0x12, 0, 0>; "__realpath_chk"|254-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73584|data|Elf32_Sym <aCloselogfile - byte_13840, closeLogFile+1, 0x18, 0x12, 0, \; "closeLogFile"|189-31-0-0-221-159-1-0-24-0-0-0-18-0-13-0
73600|data|Elf32_Sym <aWcslen - byte_13840, 0, 0, 0x12, 0, 0>; "wcslen"|28-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73616|data|Elf32_Sym <aGetworkingdire - byte_13840, getWorkingDirectory+1, 0x8C, \; "getWorkingDirectory"|18-19-0-0-149-172-1-0-140-0-0-0-18-0-13-0
73632|data|Elf32_Sym <aOpendatafile - byte_13840, openDataFile+1, 0x14, 0x12, 0, \; "openDataFile"|79-23-0-0-237-4-2-0-20-0-0-0-18-0-13-0
73648|data|Elf32_Sym <aDeallocatestri - byte_13840, deallocateStrings+1, 0x20, \; "deallocateStrings"|229-24-0-0-49-184-1-0-32-0-0-0-18-0-13-0
73664|data|Elf32_Sym <aOpen2 - byte_13840, 0, 0, 0x12, 0, 0>; "__open_2"|130-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73680|data|Elf32_Sym <aFree - byte_13840, 0, 0, 0x12, 0, 0>; "free"|53-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73696|data|Elf32_Sym <aWritedots - byte_13840, writeDots+1, 0x3C, 0x12, 0, 0xD>; "writeDots"|0-28-0-0-49-1-2-0-60-0-0-0-18-0-13-0
73712|data|Elf32_Sym <aCreateanonymou - byte_13840, createAnonymousPipe+1, 0x50, \; "createAnonymousPipe"|132-25-0-0-141-178-1-0-80-0-0-0-18-0-13-0
73728|data|Elf32_Sym <aOpenlog - byte_13840, 0, 0, 0x12, 0, 0>; "openlog"|207-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73744|data|Elf32_Sym <aWritedotscell - byte_13840, writeDotsCell+1, 0x18, 0x12, \; "writeDotsCell"|175-11-0-0-109-1-2-0-24-0-0-0-18-0-13-0
73760|data|Elf32_Sym <aStackChkFail - byte_13840, 0, 0, 0x12, 0, 0>; "__stack_chk_fail"|35-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73776|data|Elf32_Sym <aReadlink - byte_13840, 0, 0, 0x12, 0, 0>; "readlink"|196-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73792|data|Elf32_Sym <aMakefilepath - byte_13840, makeFilePath+1, 0x28, 0x12, 0, \; "makeFilePath"|242-17-0-0-121-170-1-0-40-0-0-0-18-0-13-0
73808|data|Elf32_Sym <aOutb - byte_13840, 0, 0, 0x12, 0, 0>; "outb"|169-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73824|data|Elf32_Sym <aLibcCsuInit - byte_13840, __libc_csu_init+1, 0x40, 0x12, \; "__libc_csu_init"|240-27-0-0-165-21-2-0-64-0-0-0-18-0-13-0
73840|data|Elf32_Sym <aProcessassigno - byte_13840, processAssignOperands+1, \; "processAssignOperands"|125-31-0-0-217-3-2-0-120-0-0-0-18-0-13-0
73856|data|Elf32_Sym <aGetvt - byte_13840, getVT+1, 0x2E8, 0x12, 0, 0xD>; "getVT"|23-22-0-0-237-116-1-0-232-2-0-0-18-0-13-0
73872|data|Elf32_Sym <aAsynccallwitha - byte_13840, \; "asyncCallWithAllSignalsBlocked"|246-32-0-0-89-218-1-0-88-0-0-0-18-0-13-0
73888|data|Elf32_Sym <aGetqueuesize - byte_13840, getQueueSize+1, 4, 0x12, 0, \; "getQueueSize"|109-22-0-0-13-227-1-0-4-0-0-0-18-0-13-0
73904|data|Elf32_Sym <aPthreadRwlockU - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_rwlock_unlock"|142-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73920|data|Elf32_Sym <aChangestringse - byte_13840, changeStringSetting+1, 0x2A, \; "changeStringSetting"|59-21-0-0-73-183-1-0-42-0-0-0-18-0-13-0
73936|data|Elf32_Sym <aConverttexttow - byte_13840, convertTextToWchars+1, 0xB0, \; "convertTextToWchars"|44-15-0-0-173-10-2-0-176-0-0-0-18-0-13-0
73952|data|Elf32_Sym <aAbort - byte_13840, 0, 0, 0x12, 0, 0>; "abort"|73-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
73968|data|Elf32_Sym <aGetcharacterby - byte_13840, getCharacterByName+1, 0x48, \; "getCharacterByName"|93-21-0-0-181-8-2-0-72-0-0-0-18-0-13-0
73984|data|Elf32_Sym <aGethomedirecto - byte_13840, getHomeDirectory+1, 0x38, \; "getHomeDirectory"|172-19-0-0-109-173-1-0-56-0-0-0-18-0-13-0
74000|data|Elf32_Sym <aUngetdatachara - byte_13840, ungetDataCharacters+1, 0x2C, \; "ungetDataCharacters"|208-27-0-0-29-250-1-0-44-0-0-0-18-0-13-0
74016|data|Elf32_Sym <aXgetinputfocus - byte_13840, 0, 0, 0x12, 0, 0>; "XGetInputFocus"|35-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74032|data|Elf32_Sym <aPthreadRwlockD - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_rwlock_destroy"|38-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74048|data|Elf32_Sym <aCategoryloglev - byte_13840, categoryLogLevel, 1, 0x11, 0,\; "categoryLogLevel"|162-10-0-0-48-72-3-0-1-0-0-0-17-0-24-0
74064|data|Elf32_Sym <aUnlockcharset - byte_13840, unlockCharset+1, 0x1C, 0x12, \; "unlockCharset"|39-11-0-0-213-15-2-0-28-0-0-0-18-0-13-0
74080|data|Elf32_Sym <aApiCleanexit - byte_13840, api_cleanExit+1, 0x18, 0x12, 0,\; "api_cleanExit"|60-27-0-0-197-111-1-0-24-0-0-0-18-0-13-0
74096|data|Elf32_Sym <aAsyncaddsignal - byte_13840, asyncAddSignalEntry+1, 0xE, \; "asyncAddSignalEntry"|108-10-0-0-85-216-1-0-14-0-0-0-18-0-13-0
74112|data|Elf32_Sym <aProgrampath - byte_13840, programPath, 4, 0x11, 0, 0x19>; "programPath"|134-28-0-0-0-137-3-0-4-0-0-0-17-0-25-0
74128|data|Elf32_Sym <aEnsurefileexte - byte_13840, ensureFileExtension+1, 0x40, \; "ensureFileExtension"|24-13-0-0-57-170-1-0-64-0-0-0-18-0-13-0
74144|data|Elf32_Sym <aHandlebestchar - byte_13840, handleBestCharacter+1, 0x38, \; "handleBestCharacter"|115-15-0-0-137-9-2-0-56-0-0-0-18-0-13-0
74160|data|Elf32_Sym <aDlclose - byte_13840, 0, 0, 0x12, 0, 0>; "dlclose"|60-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74176|data|Elf32_Sym <aFlockfile - byte_13840, 0, 0, 0x12, 0, 0>; "flockfile"|11-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74192|data|Elf32_Sym <aSetcharset - byte_13840, setCharset+1, 0x88, 0x12, 0, 0xD>; "setCharset"|140-11-0-0-33-15-2-0-136-0-0-0-18-0-13-0
74208|data|Elf32_Sym <aBrldotnumberto - byte_13840, brlDotNumberToIndex+1, 0x2C, \; "brlDotNumberToIndex"|117-23-0-0-241-245-1-0-44-0-0-0-18-0-13-0
74224|data|Elf32_Sym <aCreatedirector - byte_13840, createDirectory+1, 0x50, \; "createDirectory"|100-26-0-0-125-171-1-0-80-0-0-0-18-0-13-0
74240|data|Elf32_Sym <aAsyncissignalb - byte_13840, asyncIsSignalBlocked+1, 0x54,\; "asyncIsSignalBlocked"|104-31-0-0-109-217-1-0-84-0-0-0-18-0-13-0
74256|data|Elf32_Sym <aBrlapiEntertty_0 - byte_13840, 0, 0, 0x12, 0, 0>; "brlapi_enterTtyMode"|44-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74272|data|Elf32_Sym <aLinuxkeymapdes - byte_13840, linuxKeyMapDescriptors, 0x60,\; "linuxKeyMapDescriptors"|216-23-0-0-244-66-3-0-96-0-0-0-17-0-21-0
74288|data|Elf32_Sym <aWriteescapedch_0 - byte_13840, writeEscapedCharacters+1, \; "writeEscapedCharacters"|92-33-0-0-13-255-1-0-40-0-0-0-18-0-13-0
74304|data|Elf32_Sym <aJoinstrings - byte_13840, joinStrings+1, 0x80, 0x12, 0, \; "joinStrings"|82-14-0-0-201-182-1-0-128-0-0-0-18-0-13-0
74320|data|Elf32_Sym <aBeginprogram - byte_13840, beginProgram+1, 0x1BC, 0x12, 0,\; "beginProgram"|160-22-0-0-157-134-1-0-188-1-0-0-18-0-13-0
74336|data|Elf32_Sym <aEndprogram - byte_13840, endProgram+1, 0x78, 0x12, 0, 0xD>; "endProgram"|239-23-0-0-25-131-1-0-120-0-0-0-18-0-13-0
74352|data|Elf32_Sym <aAsyncgethandle - byte_13840, asyncGetHandleElement+1, \; "asyncGetHandleElement"|148-16-0-0-165-196-1-0-54-0-0-0-18-0-13-0
74368|data|Elf32_Sym <aMakeutf8fromwc - byte_13840, makeUtf8FromWchars+1, 0xA8, \; "makeUtf8FromWchars"|108-24-0-0-197-13-2-0-168-0-0-0-18-0-13-0
74384|data|Elf32_Sym <aLinuxkeymapXte - byte_13840, linuxKeyMap_xtE0, 0x100, \; "linuxKeyMap_xtE0"|150-29-0-0-84-50-2-0-0-1-0-0-17-0-15-0
74400|data|Elf32_Sym <aMillisecondsti - byte_13840, millisecondsTillNextMinute+1,\; "millisecondsTillNextMinute"|46-10-0-0-29-194-1-0-96-0-0-0-18-0-13-0
74416|data|Elf32_Sym <aCancelprogram - byte_13840, cancelProgram+1, 0xB8, 0x12, \; "cancelProgram"|8-11-0-0-141-133-1-0-184-0-0-0-18-0-13-0
74432|data|Elf32_Sym <aLinuxkeymapXte_0 - byte_13840, linuxKeyMap_xtE1, 0x100, \; "linuxKeyMap_xtE1"|21-33-0-0-84-49-2-0-0-1-0-0-17-0-15-0
74448|data|Elf32_Sym <aPthreadMutexLo - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_mutex_lock"|90-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74464|data|Elf32_Sym <aMemset - byte_13840, 0, 0, 0x12, 0, 0>; "memset"|215-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74480|data|Elf32_Sym <aNormalizetimev - byte_13840, normalizeTimeValue+1, 0x5A, \; "normalizeTimeValue"|21-26-0-0-121-192-1-0-90-0-0-0-18-0-13-0
74496|data|Elf32_Sym <aDisableports - byte_13840, disablePorts+1, 0x40, 0x12, 0, \; "disablePorts"|81-13-0-0-117-230-1-0-64-0-0-0-18-0-13-0
74512|data|Elf32_Sym <aBrlapiPerror - byte_13840, 0, 0, 0x12, 0, 0>; "brlapi_perror"|196-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74528|data|Elf32_Sym <aFixinstallpath_0 - byte_13840, fixInstallPath+1, 0x34, \; "fixInstallPath"|244-30-0-0-113-137-1-0-52-0-0-0-18-0-13-0
74544|data|Elf32_Sym <aAsyncobtainsig - byte_13840, asyncObtainSignalNumber+1, \; "asyncObtainSignalNumber"|206-16-0-0-1-223-1-0-116-0-0-0-18-0-13-0
74560|data|Elf32_Sym <aUCharfromname5 - byte_13840, 0, 0, 0x12, 0, 0>; "u_charFromName_52"|212-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74576|data|Elf32_Sym <aSscanf - byte_13840, 0, 0, 0x12, 0, 0>; "sscanf"|123-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74592|data|Elf32_Sym <aVlogmessage - byte_13840, vlogMessage+1, 0x3C, 0x12, 0, \; "vlogMessage"|228-27-0-0-237-162-1-0-60-0-0-0-18-0-13-0
74608|data|Elf32_Sym <aGetmonotonicel - byte_13840, getMonotonicElapsed+1, 0x3C, \; "getMonotonicElapsed"|172-12-0-0-1-195-1-0-60-0-0-0-18-0-13-0
74624|data|Elf32_Sym <aFinditem - byte_13840, findItem+1, 0xC, 0x12, 0, 0xD>; "findItem"|107-17-0-0-1-229-1-0-12-0-0-0-18-0-13-0
74640|data|Elf32_Sym <aUnormNormalize - byte_13840, 0, 0, 0x12, 0, 0>; "unorm_normalize_52"|230-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74656|data|Elf32_Sym <aSend - byte_13840, 0, 0, 0x12, 0, 0>; "send"|48-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74672|data|Elf32_Sym <aAsyncdeallocat - byte_13840, asyncDeallocateWaitData+1, 8,\; "asyncDeallocateWaitData"|233-9-0-0-101-198-1-0-8-0-0-0-18-0-13-0
74688|data|Elf32_Sym <aAsyncaddtask - byte_13840, asyncAddTask+1, 0x40, 0x12, 0, \; "asyncAddTask"|204-19-0-0-149-203-1-0-64-0-0-0-18-0-13-0
74704|data|Elf32_Sym <aParsecellsoper - byte_13840, parseCellsOperand+1, 0x140, \; "parseCellsOperand"|192-25-0-0-169-255-1-0-64-1-0-0-18-0-13-0
74720|data|Elf32_Sym <aStderrloglevel - byte_13840, stderrLogLevel, 1, 0x11, 0, \; "stderrLogLevel"|53-11-0-0-49-72-3-0-1-0-0-0-17-0-24-0
74736|data|Elf32_Sym <aBssEnd+1 - byte_13840, _end, 0, 0x10, 0, 0x19>; "_bss_end__"|173-9-0-0-24-137-3-0-0-0-0-0-16-0-25-0
74752|data|Elf32_Sym <aFwrite - byte_13840, 0, 0, 0x12, 0, 0>; "fwrite"|27-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74768|data|Elf32_Sym <aGetlocalechars - byte_13840, getLocaleCharset+1, 0x34, \; "getLocaleCharset"|187-28-0-0-201-17-2-0-52-0-0-0-18-0-13-0
74784|data|Elf32_Sym <aAsyncrelinquis - byte_13840, \; "asyncRelinquishSignalNumber"|120-16-0-0-117-223-1-0-56-0-0-0-18-0-13-0
74800|data|Elf32_Sym <aGetdataoperand - byte_13840, getDataOperand+1, 0x34, 0x12,\; "getDataOperand"|180-18-0-0-73-250-1-0-52-0-0-0-18-0-13-0
74816|data|Elf32_Sym <aLogbytes - byte_13840, logBytes+1, 0x50, 0x12, 0, 0xD>; "logBytes"|199-10-0-0-105-163-1-0-80-0-0-0-18-0-13-0
74832|data|Elf32_Sym <aLogparameters - byte_13840, logParameters+1, 0x40, 0x12, \; "logParameters"|166-27-0-0-209-190-1-0-64-0-0-0-18-0-13-0
74848|data|Elf32_Sym <aLocaltimeR - byte_13840, 0, 0, 0x12, 0, 0>; "localtime_r"|114-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74864|data|Elf32_Sym <aAsyncexecuteta - byte_13840, asyncExecuteTaskCallback+1, \; "asyncExecuteTaskCallback"|0-15-0-0-237-203-1-0-60-0-0-0-18-0-13-0
74880|data|Elf32_Sym <aStandardoutput - byte_13840, standardOutputName, 0x12, \; "standardOutputName" ...|255-17-0-0-232-28-2-0-18-0-0-0-17-0-15-0
74896|data|Elf32_Sym <aMalloc - byte_13840, 0, 0, 0x12, 0, 0>; "malloc"|72-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74912|data|Elf32_Sym <aAsyncreadsocke - byte_13840, asyncReadSocket+1, 4, 0x12, \; "asyncReadSocket"|169-14-0-0-201-213-1-0-4-0-0-0-18-0-13-0
74928|data|Elf32_Sym <aWmemcmp - byte_13840, 0, 0, 0x12, 0, 0>; "wmemcmp"|116-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74944|data|Elf32_Sym <aErrnoLocation - byte_13840, 0, 0, 0x12, 0, 0>; "__errno_location"|250-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
74960|data|Elf32_Sym <aAsynchandlemon - byte_13840, asyncHandleMonitoredSignal+1,\; "asyncHandleMonitoredSignal"|141-32-0-0-249-220-1-0-28-0-0-0-18-0-13-0
74976|data|Elf32_Sym <aReadsocketdesc - byte_13840, readSocketDescriptor+1, 6, \; "readSocketDescriptor"|217-19-0-0-221-178-1-0-6-0-0-0-18-0-13-0
74992|data|Elf32_Sym <aBssStart_0 - byte_13840, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start__"|158-9-0-0-80-72-3-0-0-0-0-0-16-0-25-0
75008|data|Elf32_Sym <aReplacefileext - byte_13840, replaceFileExtension+1, 0x64,\; "replaceFileExtension"|56-12-0-0-213-169-1-0-100-0-0-0-18-0-13-0
75024|data|Elf32_Sym <aExpandtimevalu - byte_13840, expandTimeValue+1, 0x64, \; "expandTimeValue"|94-14-0-0-197-191-1-0-100-0-0-0-18-0-13-0
75040|data|Elf32_Sym <aStrcmp - byte_13840, 0, 0, 0x12, 0, 0>; "strcmp"|243-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75056|data|Elf32_Sym <aLogcategorypre - byte_13840, logCategoryPrefix_disable, 1,\; "logCategoryPrefix_disable" ...|191-29-0-0-120-33-2-0-1-0-0-0-17-0-15-0
75072|data|Elf32_Sym <aGetbasecharact - byte_13840, getBaseCharacter+1, 0x58, \; "getBaseCharacter"|202-31-0-0-197-7-2-0-88-0-0-0-18-0-13-0
75088|data|Elf32_Sym <aFxstat - byte_13840, 0, 0, 0x12, 0, 0>; "__fxstat"|245-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75104|data|Elf32_Sym <aMkdir - byte_13840, 0, 0, 0x12, 0, 0>; "mkdir"|59-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75120|data|Elf32_Sym <aCtypeToupperLo - byte_13840, 0, 0, 0x12, 0, 0>; "__ctype_toupper_loc"|170-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75136|data|Elf32_Sym <aWmemcmp+1 - byte_13840, 0, 0, 0x12, 0, 0>; "memcmp"|117-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75152|data|Elf32_Sym <aCancelprocess - byte_13840, cancelProcess+1, 0x10, 0x12, \; "cancelProcess"|101-15-0-0-97-138-1-0-16-0-0-0-18-0-13-0
75168|data|Elf32_Sym <aGetnamedpipedi - byte_13840, getNamedPipeDirectory+1, 0xC,\; "getNamedPipeDirectory"|222-30-0-0-129-178-1-0-12-0-0-0-18-0-13-0
75184|data|Elf32_Sym <aDisablealllogc - byte_13840, disableAllLogCategories+1, \; "disableAllLogCategories"|40-30-0-0-121-158-1-0-64-0-0-0-18-0-13-0
75200|data|Elf32_Sym <aTestprogrampat - byte_13840, testProgramPath+1, 0x1A, \; "testProgramPath"|233-18-0-0-9-171-1-0-26-0-0-0-18-0-13-0
75216|data|Elf32_Sym <aAsyncdiscardha - byte_13840, asyncDiscardHandle+1, 4, \; "asyncDiscardHandle"|90-22-0-0-221-196-1-0-4-0-0-0-18-0-13-0
75232|data|Elf32_Sym <aStrcasecmp - byte_13840, 0, 0, 0x12, 0, 0>; "strcasecmp"|79-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75248|data|Elf32_Sym <aRegistercharac - byte_13840, registerCharacterSet+1, 0xE8,\; "registerCharacterSet"|73-18-0-0-253-17-2-0-232-0-0-0-18-0-13-0
75264|data|Elf32_Sym <aSystemloglevel - byte_13840, systemLogLevel, 1, 0x11, 0, \; "systemLogLevel"|93-24-0-0-50-72-3-0-1-0-0-0-17-0-24-0
75280|data|Elf32_Sym <aFileno - byte_13840, 0, 0, 0x12, 0, 0>; "fileno"|13-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75296|data|Elf32_Sym <aCalloc - byte_13840, 0, 0, 0x12, 0, 0>; "calloc"|181-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75312|data|Elf32_Sym <aLibcCurrentSig - byte_13840, 0, 0, 0x12, 0, 0>; "__libc_current_sigrtmax"|204-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75328|data|Elf32_Sym <aSetglobaltable - byte_13840, setGlobalTableVariables+1, \; "setGlobalTableVariables"|92-28-0-0-161-248-1-0-44-0-0-0-18-0-13-0
75344|data|Elf32_Sym <aLoglevelnames - byte_13840, logLevelNames, 0x20, 0x11, 0, \; "logLevelNames"|112-21-0-0-156-65-3-0-32-0-0-0-17-0-21-0
75360|data|Elf32_Sym <aUnloadsharedob - byte_13840, unloadSharedObject+1, 0x18, \; "unloadSharedObject"|52-22-0-0-189-229-1-0-24-0-0-0-18-0-13-0
75376|data|Elf32_Sym <aGetcurrenttime - byte_13840, getCurrentTime+1, 0x3C, 0x12,\; "getCurrentTime"|249-10-0-0-17-191-1-0-60-0-0-0-18-0-13-0
75392|data|Elf32_Sym <aAsyncsetalarmi - byte_13840, asyncSetAlarmIn+1, 0x50, \; "asyncSetAlarmIn"|147-31-0-0-45-201-1-0-80-0-0-0-18-0-13-0
75408|data|Elf32_Sym <aAsynccallwiths_0 - byte_13840, \; "asyncCallWithSignalsBlocked"|144-20-0-0-193-217-1-0-76-0-0-0-18-0-13-0
75424|data|Elf32_Sym <aMaketimevalue - byte_13840, makeTimeValue+1, 0x78, 0x12, \; "makeTimeValue"|235-20-0-0-77-191-1-0-120-0-0-0-18-0-13-0
75440|data|Elf32_Sym <aAsyncwritefile - byte_13840, asyncWriteFile+1, 0x44, 0x12,\; "asyncWriteFile"|23-24-0-0-121-213-1-0-68-0-0-0-18-0-13-0
75456|data|Elf32_Sym <aFormatthreadna - byte_13840, formatThreadName+1, 0x22, \; "formatThreadName"|64-33-0-0-237-224-1-0-34-0-0-0-18-0-13-0
75472|data|Elf32_Sym <aIsposixlocale - byte_13840, isPosixLocale+1, 0x24, 0x12, \; "isPosixLocale"|136-12-0-0-137-10-2-0-36-0-0-0-18-0-13-0
75488|data|Elf32_Sym <aLogcategoryfla - byte_13840, logCategoryFlags, 0x11, 0x11,\; "logCategoryFlags"|197-9-0-0-4-137-3-0-17-0-0-0-17-0-25-0
75504|data|Elf32_Sym <aCreatethread - byte_13840, createThread+1, 0x48, 0x12, 0, \; "createThread"|185-20-0-0-101-224-1-0-72-0-0-0-18-0-13-0
75520|data|Elf32_Sym <aFopen - byte_13840, 0, 0, 0x12, 0, 0>; "fopen"|151-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75536|data|Elf32_Sym <aLinuxkeymapPs2 - byte_13840, linuxKeyMap_ps2, 0x100, 0x11,\; "linuxKeyMap_ps2"|135-18-0-0-84-45-2-0-0-1-0-0-17-0-15-0
75552|data|Elf32_Sym <aProcessconditi - byte_13840, processConditionOperands+1, \; "processConditionOperands"|8-25-0-0-149-2-2-0-252-0-0-0-18-0-13-0
75568|data|Elf32_Sym <aUnloadsharedob+2 - byte_13840, loadSharedObject+1, 0x22, \; "loadSharedObject"|54-22-0-0-153-229-1-0-34-0-0-0-18-0-13-0
75584|data|Elf32_Sym <aTobrlttyInit - byte_13840, tobrltty_init+1, 0xB0, 0x12, 0,\; "tobrltty_init"|144-19-0-0-61-116-1-0-176-0-0-0-18-0-13-0
75600|data|Elf32_Sym <aFflush - byte_13840, 0, 0, 0x12, 0, 0>; "fflush"|102-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75616|data|Elf32_Sym <aIsunqualifiedd - byte_13840, isUnqualifiedDevice+1, 0x1E, \; "isUnqualifiedDevice"|249-20-0-0-221-181-1-0-30-0-0-0-18-0-13-0
75632|data|Elf32_Sym <aFormatseconds - byte_13840, formatSeconds+1, 0x50, 0x12, \; "formatSeconds"|79-21-0-0-41-192-1-0-80-0-0-0-18-0-13-0
75648|data|Elf32_Sym <aUtf8conv - byte_13840, utf8Conv, 4, 0x11, 0, 0x18>; "utf8Conv"|247-14-0-0-44-72-3-0-4-0-0-0-17-0-24-0
75664|data|Elf32_Sym <aStrtoul - byte_13840, 0, 0, 0x12, 0, 0>; "strtoul"|64-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75680|data|Elf32_Sym <aDeleteitem - byte_13840, deleteItem+1, 0x20, 0x12, 0, 0xD>; "deleteItem"|81-33-0-0-89-229-1-0-32-0-0-0-18-0-13-0
75696|data|Elf32_Sym <aPthreadRwlockI - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_rwlock_init"|122-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75712|data|Elf32_Sym <aEnableuinputke - byte_13840, enableUinputKey+1, 0x2C, \; "enableUinputKey"|217-18-0-0-117-236-1-0-44-0-0-0-18-0-13-0
75728|data|Elf32_Sym <aAftertimeperio - byte_13840, afterTimePeriod+1, 0x1A, \; "afterTimePeriod"|50-26-0-0-73-195-1-0-26-0-0-0-18-0-13-0
75744|data|Elf32_Sym <aCtypeGetMbCurM - byte_13840, 0, 0, 0x12, 0, 0>; "__ctype_get_mb_cur_max"|133-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75760|data|Elf32_Sym <aMakewritablepa - byte_13840, makeWritablePath+1, 0x16, \; "makeWritablePath"|253-29-0-0-125-172-1-0-22-0-0-0-18-0-13-0
75776|data|Elf32_Sym <aFindelement - byte_13840, findElement+1, 0x28, 0x12, 0, \; "findElement"|132-20-0-0-137-227-1-0-40-0-0-0-18-0-13-0
75792|data|Elf32_Sym <aXkblibraryvers - byte_13840, 0, 0, 0x12, 0, 0>; "XkbLibraryVersion"|220-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75808|data|Elf32_Sym <aFatalBrlapiErr - byte_13840, fatal_brlapi_errno+1, 0x40, \; "fatal_brlapi_errno"|183-24-0-0-5-112-1-0-64-0-0-0-18-0-13-0
75824|data|Elf32_Sym <aEnqueueitem - byte_13840, enqueueItem+1, 0x5C, 0x12, 0, \; "enqueueItem"|210-30-0-0-41-228-1-0-92-0-0-0-18-0-13-0
75840|data|Elf32_Sym <aConvertwcharto - byte_13840, convertWcharToUtf8+1, 0x9C, \; "convertWcharToUtf8"|102-12-0-0-105-11-2-0-156-0-0-0-18-0-13-0
75856|data|Elf32_Sym <aGetqueueelemen - byte_13840, getQueueElement+1, 0x30, \; "getQueueElement"|42-25-0-0-41-227-1-0-48-0-0-0-18-0-13-0
75872|data|Elf32_Sym <aGetwcharcharse - byte_13840, getWcharCharset+1, 0x84, \; "getWcharCharset"|160-13-0-0-157-14-2-0-132-0-0-0-18-0-13-0
75888|data|Elf32_Sym <aSelect - byte_13840, 0, 0, 0x12, 0, 0>; "select"|52-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75904|data|Elf32_Sym <aXkeysymtokeyco - byte_13840, 0, 0, 0x12, 0, 0>; "XKeysymToKeycode"|18-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75920|data|Elf32_Sym <aNewlockdescrip - byte_13840, newLockDescriptor+1, 0x2A, \; "newLockDescriptor"|114-25-0-0-193-9-2-0-42-0-0-0-18-0-13-0
75936|data|Elf32_Sym <aPthreadGetspec - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_getspecific"|103-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75952|data|Elf32_Sym <aGettimeofday - byte_13840, 0, 0, 0x12, 0, 0>; "gettimeofday"|46-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
75968|data|Elf32_Sym <aMillisecondsbe - byte_13840, millisecondsBetween+1, 0x64, \; "millisecondsBetween"|120-11-0-0-117-193-1-0-100-0-0-0-18-0-13-0
75984|data|Elf32_Sym <aFcntl - byte_13840, 0, 0, 0x12, 0, 0>; "fcntl"|61-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76000|data|Elf32_Sym <aAttemptfileloc - byte_13840, attemptFileLock+1, 0xE, 0x12,\; "attemptFileLock"|38-24-0-0-197-175-1-0-14-0-0-0-18-0-13-0
76016|data|Elf32_Sym <aWritehexadecim - byte_13840, writeHexadecimalCharacter+1, \; "writeHexadecimalCharacter"|207-14-0-0-105-254-1-0-80-0-0-0-18-0-13-0
76032|data|Elf32_Sym <aVlogmessage+1 - byte_13840, logMessage+1, 0x40, 0x12, 0, \; "logMessage"|229-27-0-0-41-163-1-0-64-0-0-0-18-0-13-0
76048|data|Elf32_Sym <aGetelementqueu - byte_13840, getElementQueue+1, 4, 0x12, \; "getElementQueue"|41-17-0-0-53-226-1-0-4-0-0-0-18-0-13-0
76064|data|Elf32_Sym <aExecutehostcom - byte_13840, executeHostCommand+1, 6, \; "executeHostCommand"|127-24-0-0-9-240-1-0-6-0-0-0-18-0-13-0
76080|data|Elf32_Sym <aXdisplayname - byte_13840, 0, 0, 0x12, 0, 0>; "XDisplayName"|80-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76096|data|Elf32_Sym <aMemmove - byte_13840, 0, 0, 0x12, 0, 0>; "memmove"|206-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76112|data|Elf32_Sym <aNewuinputkeybo - byte_13840, newUinputKeyboard+1, 0xE0, \; "newUinputKeyboard"|82-26-0-0-157-237-1-0-224-0-0-0-18-0-13-0
76128|data|Elf32_Sym <aGetsharedsymbo - byte_13840, getSharedSymbolName+1, 0x40, \; "getSharedSymbolName"|24-32-0-0-241-229-1-0-64-0-0-0-18-0-13-0
76144|data|Elf32_Sym <aFormatinputerr - byte_13840, formatInputError+1, 0xA8, \; "formatInputError"|90-17-0-0-209-177-1-0-168-0-0-0-18-0-13-0
76160|data|Elf32_Sym <aMakepath - byte_13840, makePath+1, 0x34, 0x12, 0, 0xD>; "makePath"|33-25-0-0-53-169-1-0-52-0-0-0-18-0-13-0
76176|data|Elf32_Sym <aWriteutf8cells - byte_13840, writeUtf8Cells+1, 0x26, 0x12,\; "writeUtf8Cells"|124-17-0-0-197-1-2-0-38-0-0-0-18-0-13-0
76192|data|Elf32_Sym <aLogdata - byte_13840, logData+1, 0x298, 0x12, 0, 0xD>; "logData"|116-17-0-0-85-160-1-0-152-2-0-0-18-0-13-0
76208|data|Elf32_Sym <aGetdatacharact - byte_13840, getDataCharacter+1, 0x1A, \; "getDataCharacter"|126-21-0-0-1-250-1-0-26-0-0-0-18-0-13-0
76224|data|Elf32_Sym <aProcessifvarop - byte_13840, processIfVarOperands+1, 0x24,\; "processIfVarOperands"|192-12-0-0-145-3-2-0-36-0-0-0-18-0-13-0
76240|data|Elf32_Sym <aVfprintfChk - byte_13840, 0, 0, 0x12, 0, 0>; "__vfprintf_chk"|118-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76256|data|Elf32_Sym <aGetqueuedata - byte_13840, getQueueData+1, 4, 0x12, 0, \; "getQueueData"|33-10-0-0-17-227-1-0-4-0-0-0-18-0-13-0
76272|data|Elf32_Sym <aBrlapiPerror+7 - byte_13840, 0, 0, 0x12, 0, 0>; "perror"|203-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76288|data|Elf32_Sym <aProcesselseope - byte_13840, processElseOperands+1, 0x60, \; "processElseOperands"|14-16-0-0-81-4-2-0-96-0-0-0-18-0-13-0
76304|data|Elf32_Sym <aAsyncemptysign - byte_13840, asyncEmptySignalHandler+1, 2,\; "asyncEmptySignalHandler"|5-20-0-0-29-217-1-0-2-0-0-0-18-0-13-0
76320|data|Elf32_Sym <aGetparameters - byte_13840, getParameters+1, 0x238, 0x12, \; "getParameters"|143-21-0-0-153-188-1-0-56-2-0-0-18-0-13-0
76336|data|Elf32_Sym <aExtendstringse - byte_13840, extendStringSetting+1, 0xBC, \; "extendStringSetting"|21-17-0-0-117-183-1-0-188-0-0-0-18-0-13-0
76352|data|Elf32_Sym <aRestarttimeper - byte_13840, restartTimePeriod+1, 4, 0x12,\; "restartTimePeriod"|1-10-0-0-61-195-1-0-4-0-0-0-18-0-13-0
76368|data|Elf32_Sym <aGetoptLong - byte_13840, 0, 0, 0x12, 0, 0>; "getopt_long"|205-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76384|data|Elf32_Sym <aAsyncdeallocat_2 - byte_13840, asyncDeallocateTaskData+1, \; "asyncDeallocateTaskData"|142-27-0-0-121-203-1-0-26-0-0-0-18-0-13-0
76400|data|Elf32_Sym <aWritefiledescr - byte_13840, writeFileDescriptor+1, 4, \; "writeFileDescriptor"|181-23-0-0-125-178-1-0-4-0-0-0-18-0-13-0
76416|data|Elf32_Sym <aWriteutf8cell - byte_13840, writeUtf8Cell+1, 8, 0x12, 0, \; "writeUtf8Cell"|49-29-0-0-189-1-2-0-8-0-0-0-18-0-13-0
76432|data|Elf32_Sym <aAsyncsignaleve - byte_13840, asyncSignalEvent+1, 0x4C, \; "asyncSignalEvent"|22-11-0-0-57-214-1-0-76-0-0-0-18-0-13-0
76448|data|Elf32_Sym <aLinuxkeymapAt0 - byte_13840, linuxKeyMap_at00, 0x100, \; "linuxKeyMap_at00"|5-27-0-0-84-48-2-0-0-1-0-0-17-0-15-0
76464|data|Elf32_Sym <aIconvClose - byte_13840, 0, 0, 0x12, 0, 0>; "iconv_close"|34-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76480|data|Elf32_Sym <aAsyncdiscardev - byte_13840, asyncDiscardEvent+1, 0x30, \; "asyncDiscardEvent"|14-30-0-0-25-215-1-0-48-0-0-0-18-0-13-0
76496|data|Elf32_Sym <aBrlapiOpenconn - byte_13840, 0, 0, 0x12, 0, 0>; "brlapi_openConnection"|210-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76512|data|Elf32_Sym <aPoplogprefix - byte_13840, popLogPrefix+1, 0x2C, 0x12, 0, \; "popLogPrefix"|250-23-0-0-177-159-1-0-44-0-0-0-18-0-13-0
76528|data|Elf32_Sym <aMemcpyChk - byte_13840, 0, 0, 0x12, 0, 0>; "__memcpy_chk"|59-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76544|data|Elf32_Sym <aUnlockcharset+2 - byte_13840, lockCharset+1, 0x24, 0x12, \; "lockCharset"|41-11-0-0-177-15-2-0-36-0-0-0-18-0-13-0
76560|data|Elf32_Sym <aGetcharset - byte_13840, getCharset+1, 6, 0x12, 0, 0xD>; "getCharset"|169-18-0-0-169-15-2-0-6-0-0-0-18-0-13-0
76576|data|Elf32_Sym <aPthreadSelf - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_self"|109-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76592|data|Elf32_Sym <aXtestqueryexte - byte_13840, 0, 0, 0x12, 0, 0>; "XTestQueryExtension"|92-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76608|data|Elf32_Sym <aIoperm - byte_13840, 0, 0, 0x12, 0, 0>; "ioperm"|252-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76624|data|Elf32_Sym <aFindelementwit - byte_13840, findElementWithItem+1, 0x10, \; "findElementWithItem"|91-19-0-0-13-229-1-0-16-0-0-0-18-0-13-0
76640|data|Elf32_Sym <aGetlockdescrip - byte_13840, getLockDescriptor+1, 0x2C, \; "getLockDescriptor"|116-28-0-0-61-10-2-0-44-0-0-0-18-0-13-0
76656|data|Elf32_Sym <aCreatesignalsa+0x12 - byte_13840, 0, 0, 0x12, 0, 0>; "read"|28-28-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76672|data|Elf32_Sym <aInstallservice - byte_13840, installService+1, 0x14, 0x12,\; "installService"|189-19-0-0-37-138-1-0-20-0-0-0-18-0-13-0
76688|data|Elf32_Sym <aLogmallocerror - byte_13840, logMallocError+1, 0xC, 0x12, \; "logMallocError"|101-32-0-0-65-164-1-0-12-0-0-0-18-0-13-0
76704|data|Elf32_Sym <aConvertutf8tow_0 - byte_13840, convertUtf8ToWchars+1, \; "convertUtf8ToWchars"|40-27-0-0-73-13-2-0-124-0-0-0-18-0-13-0
76720|data|Elf32_Sym <aGetcwd - byte_13840, 0, 0, 0x12, 0, 0>; "getcwd"|20-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76736|data|Elf32_Sym <aFerror - byte_13840, 0, 0, 0x12, 0, 0>; "ferror"|21-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76752|data|Elf32_Sym <aWriteescapedch - byte_13840, writeEscapedCharacter+1, \; "writeEscapedCharacter"|234-15-0-0-185-254-1-0-84-0-0-0-18-0-13-0
76768|data|Elf32_Sym <aDlsym - byte_13840, 0, 0, 0x12, 0, 0>; "dlsym"|39-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76784|data|Elf32_Sym <aStandardinputn - byte_13840, standardInputName, 0x11, \; "standardInputName" ...|50-19-0-0-252-28-2-0-17-0-0-0-17-0-15-0
76800|data|Elf32_Sym <aUnlockmutex+2 - byte_13840, lockMutex+1, 0x20, 0x12, 0, \; "lockMutex"|228-22-0-0-173-224-1-0-32-0-0-0-18-0-13-0
76816|data|Elf32_Sym <aGetalloverride - byte_13840, getAllOverrideDirectories+1, \; "getAllOverrideDirectories"|134-13-0-0-165-173-1-0-236-1-0-0-18-0-13-0
76832|data|Elf32_Sym <aIconvClose+6 - byte_13840, 0, 0, 0x12, 0, 0>; "close"|40-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76848|data|Elf32_Sym <aXconnectionnum - byte_13840, 0, 0, 0x12, 0, 0>; "XConnectionNumber"|135-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76864|data|Elf32_Sym <aReleasefileloc - byte_13840, releaseFileLock+1, 8, 0x12, \; "releaseFileLock"|7-24-0-0-213-175-1-0-8-0-0-0-18-0-13-0
76880|data|Elf32_Sym <aFdopen - byte_13840, 0, 0, 0x12, 0, 0>; "fdopen"|146-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76896|data|Elf32_Sym <aIsnumber - byte_13840, isNumber+1, 0x8C, 0x12, 0, 0xD>; "isNumber"|121-14-0-0-45-247-1-0-140-0-0-0-18-0-13-0
76912|data|Elf32_Sym <aSetlocale - byte_13840, 0, 0, 0x12, 0, 0>; "setlocale"|124-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76928|data|Elf32_Sym <aLocatepathname - byte_13840, locatePathName+1, 0x28, 0x12,\; "locatePathName"|127-27-0-0-113-168-1-0-40-0-0-0-18-0-13-0
76944|data|Elf32_Sym <aAsyncmonitorfi - byte_13840, asyncMonitorFileOutput+1, \; "asyncMonitorFileOutput"|238-19-0-0-169-212-1-0-72-0-0-0-18-0-13-0
76960|data|Elf32_Sym <aGetqueuehead - byte_13840, getQueueHead+1, 4, 0x12, 0, \; "getQueueHead"|73-10-0-0-29-227-1-0-4-0-0-0-18-0-13-0
76976|data|Elf32_Sym <aBrlapiIgnoreke_0 - byte_13840, 0, 0, 0x12, 0, 0>; "brlapi_ignoreKeys"|232-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
76992|data|Elf32_Sym <aWmemcpy - byte_13840, 0, 0, 0x12, 0, 0>; "wmemcpy"|225-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77008|data|Elf32_Sym <aCxaAtexit - byte_13840, 0, 0, 0x12, 0, 0>; "__cxa_atexit"|88-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77024|data|Elf32_Sym <aStrcpy - byte_13840, 0, 0, 0x12, 0, 0>; "strcpy"|109-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77040|data|Elf32_Sym <aOpenfile - byte_13840, openFile+1, 0x5C, 0x12, 0, 0xD>; "openFile"|15-32-0-0-241-175-1-0-92-0-0-0-18-0-13-0
77056|data|Elf32_Sym <aSigemptyset - byte_13840, 0, 0, 0x12, 0, 0>; "sigemptyset"|195-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77072|data|Elf32_Sym <aExecvp - byte_13840, 0, 0, 0x12, 0, 0>; "execvp"|217-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77088|data|Elf32_Sym <aFgets - byte_13840, 0, 0, 0x12, 0, 0>; "fgets"|175-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77104|data|Elf32_Sym <aFreelockdescri - byte_13840, freeLockDescriptor+1, 0x12, \; "freeLockDescriptor"|191-30-0-0-237-9-2-0-18-0-0-0-18-0-13-0
77120|data|Elf32_Sym <aConvertwcharto_0 - byte_13840, convertWcharToChar+1, 0x88,\; "convertWcharToChar"|74-24-0-0-65-17-2-0-136-0-0-0-18-0-13-0
77136|data|Elf32_Sym <aWmemcpy+1 - byte_13840, 0, 0, 0x12, 0, 0>; "memcpy"|226-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77152|data|Elf32_Sym <aAsyncmonitorsi - byte_13840, asyncMonitorSignal+1, 0x3C, \; "asyncMonitorSignal"|216-20-0-0-33-222-1-0-60-0-0-0-18-0-13-0
77168|data|Elf32_Sym <aIoStdinUsed - byte_13840, _IO_stdin_used, 4, 0x11, 0, 0xF>; "_IO_stdin_used"|240-13-0-0-16-22-2-0-4-0-0-0-17-0-15-0
77184|data|Elf32_Sym <aStrrchr - byte_13840, 0, 0, 0x12, 0, 0>; "strrchr"|182-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77200|data|Elf32_Sym <aBrldotbits - byte_13840, brlDotBits, 8, 0x11, 0, 0xF>; "brlDotBits"|200-21-0-0-56-56-2-0-8-0-0-0-17-0-15-0
77216|data|Elf32_Sym <aIspathdelimite - byte_13840, isPathDelimiter+1, 0xC, 0x12,\; "isPathDelimiter"|173-22-0-0-181-167-1-0-12-0-0-0-18-0-13-0
77232|data|Elf32_Sym <aValidateonoff - byte_13840, validateOnOff+1, 0x14, 0x12, \; "validateOnOff"|53-23-0-0-169-187-1-0-20-0-0-0-18-0-13-0
77248|data|Elf32_Sym <aSigfillset - byte_13840, 0, 0, 0x12, 0, 0>; "sigfillset"|24-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77264|data|Elf32_Sym <aEnd - byte_13840, _end, 0, 0x10, 0, 0x19>; "__end__"|184-9-0-0-24-137-3-0-0-0-0-0-16-0-25-0
77280|data|Elf32_Sym <aProcessinclude - byte_13840, processIncludeOperands+1, \; "processIncludeOperands"|112-18-0-0-37-7-2-0-92-0-0-0-18-0-13-0
77296|data|Elf32_Sym <aLogcategorynam - byte_13840, logCategoryName_all, 4, 0x11,\; "logCategoryName_all" ...|157-15-0-0-124-33-2-0-4-0-0-0-17-0-15-0
77312|data|Elf32_Sym <aInb - byte_13840, 0, 0, 0x12, 0, 0>; "inb"|114-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77328|data|Elf32_Sym <aTowlower - byte_13840, 0, 0, 0x12, 0, 0>; "towlower"|142-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77344|data|Elf32_Sym <aSetlogcategory - byte_13840, setLogCategory+1, 0xAC, 0x12,\; "setLogCategory"|3-19-0-0-185-158-1-0-172-0-0-0-18-0-13-0
77360|data|Elf32_Sym <aIsoctaldigit - byte_13840, isOctalDigit+1, 0x14, 0x12, 0, \; "isOctalDigit"|89-27-0-0-213-242-1-0-20-0-0-0-18-0-13-0
77376|data|Elf32_Sym <aBrlapiAcceptke - byte_13840, 0, 0, 0x12, 0, 0>; "brlapi_acceptKeys"|163-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77392|data|Elf32_Sym <aNewuinputobjec - byte_13840, newUinputObject+1, 0x1A8, \; "newUinputObject"|134-29-0-0-5-234-1-0-168-1-0-0-18-0-13-0
77408|data|Elf32_Sym <aCreatesignalsa - byte_13840, createSignalSafeThread+1, \; "createSignalSafeThread"|10-28-0-0-205-223-1-0-152-0-0-0-18-0-13-0
77424|data|Elf32_Sym <aLinuxkeymapcou - byte_13840, linuxKeyMapCount, 1, 0x11, 0,\; "linuxKeyMapCount" ...|172-31-0-0-80-44-2-0-1-0-0-0-17-0-15-0
77440|data|Elf32_Sym <aDeleteelement - byte_13840, deleteElement+1, 0x58, 0x12, \; "deleteElement"|115-33-0-0-193-225-1-0-88-0-0-0-18-0-13-0
77456|data|Elf32_Sym <aBindtextdomain+4 - byte_13840, 0, 0, 0x12, 0, 0>; "textdomain"|218-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77472|data|Elf32_Sym <aGetstackhead - byte_13840, getStackHead+1, 8, 0x12, 0, \; "getStackHead"|111-19-0-0-33-227-1-0-8-0-0-0-18-0-13-0
77488|data|Elf32_Sym <aStandardstream - byte_13840, standardStreamArgument, 2, \; "standardStreamArgument" ...|197-13-0-0-16-29-2-0-2-0-0-0-17-0-15-0
77504|data|Elf32_Sym <aGetlocalename - byte_13840, getLocaleName+1, 0x20, 0x12, \; "getLocaleName"|255-13-0-0-105-10-2-0-32-0-0-0-18-0-13-0
77520|data|Elf32_Sym <aClockGettime - byte_13840, 0, 0, 0x12, 0, 0>; "clock_gettime"|84-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77536|data|Elf32_Sym <aSigdelset - byte_13840, 0, 0, 0x12, 0, 0>; "sigdelset"|153-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77552|data|Elf32_Sym <aXgetwindowprop - byte_13840, 0, 0, 0x12, 0, 0>; "XGetWindowProperty"|153-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77568|data|Elf32_Sym <aResetoptions - byte_13840, resetOptions+1, 0x40, 0x12, 0, \; "resetOptions"|77-17-0-0-65-142-1-0-64-0-0-0-18-0-13-0
77584|data|Elf32_Sym <aPushlogprefix - byte_13840, pushLogPrefix+1, 0x4C, 0x12, \; "pushLogPrefix"|158-19-0-0-101-159-1-0-76-0-0-0-18-0-13-0
77600|data|Elf32_Sym <aTestfilepath - byte_13840, testFilePath+1, 0x58, 0x12, 0, \; "testFilePath"|213-22-0-0-177-170-1-0-88-0-0-0-18-0-13-0
77616|data|Elf32_Sym <aRunhostcommand - byte_13840, runHostCommand+1, 0xD4, 0x12,\; "runHostCommand"|74-27-0-0-53-239-1-0-212-0-0-0-18-0-13-0
77632|data|Elf32_Sym <aPthreadKeyCrea - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_key_create"|176-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77648|data|Elf32_Sym <aAsyncgetthread - byte_13840, asyncGetThreadSpecificData+1,\; "asyncGetThreadSpecificData"|152-25-0-0-181-197-1-0-132-0-0-0-18-0-13-0
77664|data|Elf32_Sym <aAsyncmonitorso - byte_13840, asyncMonitorSocketAlert+1, 4,\; "asyncMonitorSocketAlert"|151-11-0-0-197-213-1-0-4-0-0-0-18-0-13-0
77680|data|Elf32_Sym <aDlopen - byte_13840, 0, 0, 0x12, 0, 0>; "dlopen"|68-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77696|data|Elf32_Sym <aBrlapiGetdispl - byte_13840, 0, 0, 0x12, 0, 0>; "brlapi_getDisplaySize"|250-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77712|data|Elf32_Sym <aSetworkingdire - byte_13840, setWorkingDirectory+1, 0x4C, \; "setWorkingDirectory"|179-10-0-0-33-173-1-0-76-0-0-0-18-0-13-0
77728|data|Elf32_Sym <aBrldotbittoind - byte_13840, brlDotBitToIndex+1, 0x28, \; "brlDotBitToIndex"|36-23-0-0-29-246-1-0-40-0-0-0-18-0-13-0
77744|data|Elf32_Sym <aProcesslines - byte_13840, processLines+1, 0x98, 0x12, 0, \; "processLines"|63-29-0-0-57-177-1-0-152-0-0-0-18-0-13-0
77760|data|Elf32_Sym <aTestpath - byte_13840, testPath+1, 0x10, 0x12, 0, 0xD>; "testPath"|182-29-0-0-161-170-1-0-16-0-0-0-18-0-13-0
77776|data|Elf32_Sym <aXstat - byte_13840, 0, 0, 0x12, 0, 0>; "__xstat"|190-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77792|data|Elf32_Sym <aUnsetaddressna - byte_13840, unsetAddressName+1, 0x68, \; "unsetAddressName"|64-30-0-0-93-166-1-0-104-0-0-0-18-0-13-0
77808|data|Elf32_Sym <aXkblookupkeysy - byte_13840, 0, 0, 0x12, 0, 0>; "XkbLookupKeySym"|204-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77824|data|Elf32_Sym <aAsyncsetsignal - byte_13840, asyncSetSignalBlocked+1, \; "asyncSetSignalBlocked"|116-26-0-0-33-217-1-0-76-0-0-0-18-0-13-0
77840|data|Elf32_Sym <aFindsharedsymb - byte_13840, findSharedSymbol+1, 0x1C, \; "findSharedSymbol"|53-31-0-0-213-229-1-0-28-0-0-0-18-0-13-0
77856|data|Elf32_Sym <aStrlen - byte_13840, 0, 0, 0x12, 0, 0>; "strlen"|188-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77872|data|Elf32_Sym <aSetthreadname - byte_13840, setThreadName+1, 0x12, 0x12, \; "setThreadName"|220-15-0-0-17-225-1-0-18-0-0-0-18-0-13-0
77888|data|Elf32_Sym <aLogunsupported - byte_13840, logUnsupportedOperation+1, \; "logUnsupportedOperation"|177-15-0-0-93-164-1-0-22-0-0-0-18-0-13-0
77904|data|Elf32_Sym <aGetprogrampath - byte_13840, getProgramPath+1, 0x80, 0x12,\; "getProgramPath"|245-16-0-0-165-137-1-0-128-0-0-0-18-0-13-0
77920|data|Elf32_Sym <aGetelementitem - byte_13840, getElementItem+1, 4, 0x12, 0,\; "getElementItem"|68-11-0-0-61-226-1-0-4-0-0-0-18-0-13-0
77936|data|Elf32_Sym <aDequeueitem - byte_13840, dequeueItem+1, 0x1A, 0x12, 0, \; "dequeueItem"|77-12-0-0-25-226-1-0-26-0-0-0-18-0-13-0
77952|data|Elf32_Sym <aDlerror - byte_13840, 0, 0, 0x12, 0, 0>; "dlerror"|52-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
77968|data|Elf32_Sym <aBssEnd - byte_13840, _end, 0, 0x10, 0, 0x19>; "__bss_end__"|172-9-0-0-24-137-3-0-0-0-0-0-16-0-25-0
77984|data|Elf32_Sym <aCreateuinputde - byte_13840, createUinputDevice+1, 0x24, \; "createUinputDevice"|94-13-0-0-173-235-1-0-36-0-0-0-18-0-13-0
78000|data|Elf32_Sym <aSyslogChk - byte_13840, 0, 0, 0x12, 0, 0>; "__syslog_chk"|228-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78016|data|Elf32_Sym <aIsexplicitpath - byte_13840, isExplicitPath+1, 0x10, 0x12,\; "isExplicitPath"|201-23-0-0-169-168-1-0-16-0-0-0-18-0-13-0
78032|data|Elf32_Sym <aDestructhostco - byte_13840, \; "destructHostCommandPackageData"|157-21-0-0-205-240-1-0-38-0-0-0-18-0-13-0
78048|data|Elf32_Sym <aAsyncmakehandl - byte_13840, asyncMakeHandle+1, 0x98, \; "asyncMakeHandle"|20-23-0-0-233-195-1-0-152-0-0-0-18-0-13-0
78064|data|Elf32_Sym <aFatalErrno - byte_13840, fatal_errno+1, 0x40, 0x12, 0, \; "fatal_errno"|93-16-0-0-69-112-1-0-64-0-0-0-18-0-13-0
78080|data|Elf32_Sym <aAsyncmonitorso_1 - byte_13840, asyncMonitorSocketInput+1, \; "asyncMonitorSocketInput"|50-16-0-0-189-213-1-0-4-0-0-0-18-0-13-0
78096|data|Elf32_Sym <aBrlapiWritetex - byte_13840, 0, 0, 0x12, 0, 0>; "brlapi_writeText"|123-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78112|data|Elf32_Sym <aConvertutf8toc - byte_13840, convertUtf8ToChar+1, 0x14, \; "convertUtf8ToChar"|144-10-0-0-137-14-2-0-20-0-0-0-18-0-13-0
78128|data|Elf32_Sym <aApproximatedel - byte_13840, approximateDelay+1, 0x80, \; "approximateDelay"|208-10-0-0-101-195-1-0-128-0-0-0-18-0-13-0
78144|data|Elf32_Sym <aRecv - byte_13840, 0, 0, 0x12, 0, 0>; "recv"|220-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78160|data|Elf32_Sym <aWriteutf8chara_0 - byte_13840, writeUtf8Characters+1, \; "writeUtf8Characters"|3-31-0-0-101-16-2-0-40-0-0-0-18-0-13-0
78176|data|Elf32_Sym <aWriteport1 - byte_13840, writePort1+1, 0xA, 0x12, 0, 0xD>; "writePort1"|7-12-0-0-185-230-1-0-10-0-0-0-18-0-13-0
78192|data|Elf32_Sym <aWriteinputeven - byte_13840, writeInputEvent+1, 0x78, \; "writeInputEvent"|47-28-0-0-253-235-1-0-120-0-0-0-18-0-13-0
78208|data|Elf32_Sym <aPthreadSetname - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_setname_np"|71-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78224|data|Elf32_Sym <aPthreadGetname - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_getname_np"|67-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78240|data|Elf32_Sym <aFeof - byte_13840, 0, 0, 0x12, 0, 0>; "feof"|170-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78256|data|Elf32_Sym <aRuncommand - byte_13840, runCommand+1, 0x18C, 0x12, 0, \; "runCommand"|110-14-0-0-21-241-1-0-140-1-0-0-18-0-13-0
78272|data|Elf32_Sym <aDataStart - byte_13840, __data_start, 0, 0x10, 0, 0x18>; "__data_start"|179-25-0-0-36-72-3-0-0-0-0-0-16-0-24-0
78288|data|Elf32_Sym <aAsynctesthandl - byte_13840, asyncTestHandle+1, 0x24, \; "asyncTestHandle"|118-29-0-0-129-196-1-0-36-0-0-0-18-0-13-0
78304|data|Elf32_Sym <aQsort - byte_13840, 0, 0, 0x12, 0, 0>; "qsort"|153-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78320|data|Elf32_Sym <aAsynccallwitho - byte_13840, \; "asyncCallWithObtainableSignalsBlocked"|122-22-0-0-1-222-1-0-32-0-0-0-18-0-13-0
78336|data|Elf32_Sym <aPthreadRwlockT_0 - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_rwlock_trywrlock"|249-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78352|data|Elf32_Sym <aAsyncnewaddtas - byte_13840, asyncNewAddTaskEvent+1, 0x18,\; "asyncNewAddTaskEvent"|232-29-0-0-213-203-1-0-24-0-0-0-18-0-13-0
78368|data|Elf32_Sym <aAsyncreleasesi - byte_13840, asyncReleaseSignalNumber+1, \; "asyncReleaseSignalNumber"|116-32-0-0-201-222-1-0-56-0-0-0-18-0-13-0
78384|data|Elf32_Sym <aProcessdatastr - byte_13840, processDataStream+1, 0x130, \; "processDataStream"|188-16-0-0-1-5-2-0-48-1-0-0-18-0-13-0
78400|data|Elf32_Sym <aOnprogramexit - byte_13840, onProgramExit+1, 0x48, 0x12, \; "onProgramExit"|0-16-0-0-69-134-1-0-72-0-0-0-18-0-13-0
78416|data|Elf32_Sym <aParsedatastrin - byte_13840, parseDataString+1, 0x358, \; "parseDataString"|27-14-0-0-189-250-1-0-88-3-0-0-18-0-13-0
78432|data|Elf32_Sym <aFdeltChk - byte_13840, 0, 0, 0x12, 0, 0>; "__fdelt_chk"|233-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78448|data|Elf32_Sym <aIsunsignedinte - byte_13840, isUnsignedInteger+1, 0x4C, \; "isUnsignedInteger"|60-32-0-0-209-185-1-0-76-0-0-0-18-0-13-0
78464|data|Elf32_Sym <aStrerror - byte_13840, 0, 0, 0x12, 0, 0>; "strerror"|250-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78480|data|Elf32_Sym <aIsinteger - byte_13840, isInteger+1, 0x4C, 0x12, 0, 0xD>; "isInteger"|39-18-0-0-133-185-1-0-76-0-0-0-18-0-13-0
78496|data|Elf32_Sym <aFwrite+1 - byte_13840, 0, 0, 0x12, 0, 0>; "write"|28-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78512|data|Elf32_Sym <aTestdirectoryp - byte_13840, testDirectoryPath+1, 0x58, \; "testDirectoryPath"|237-31-0-0-37-171-1-0-88-0-0-0-18-0-13-0
78528|data|Elf32_Sym <aGettranslitera - byte_13840, getTransliteratedCharacter+1,\; "getTransliteratedCharacter"|250-25-0-0-29-8-2-0-152-0-0-0-18-0-13-0
78544|data|Elf32_Sym <aLoglevelcount - byte_13840, logLevelCount, 4, 0x11, 0, \; "logLevelCount" ...|19-10-0-0-116-33-2-0-4-0-0-0-17-0-15-0
78560|data|Elf32_Sym <aAsyncexecuteio - byte_13840, asyncExecuteIoCallback+1, \; "asyncExecuteIoCallback"|230-12-0-0-245-210-1-0-108-1-0-0-18-0-13-0
78576|data|Elf32_Sym <aAsynchandleadd - byte_13840, asyncHandleAddTaskEvent+1, 4,\; "asyncHandleAddTaskEvent"|32-12-0-0-117-203-1-0-4-0-0-0-18-0-13-0
78592|data|Elf32_Sym <aValidateflag - byte_13840, validateFlag+1, 0x38, 0x12, 0, \; "validateFlag"|89-12-0-0-113-187-1-0-56-0-0-0-18-0-13-0
78608|data|Elf32_Sym <aXmknod - byte_13840, 0, 0, 0x12, 0, 0>; "__xmknod"|236-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78624|data|Elf32_Sym <aProcessqueue - byte_13840, processQueue+1, 0x3C, 0x12, 0, \; "processQueue"|172-20-0-0-29-229-1-0-60-0-0-0-18-0-13-0
78640|data|Elf32_Sym <aAsyncignoresig - byte_13840, asyncIgnoreSignal+1, 8, 0x12,\; "asyncIgnoreSignal"|198-20-0-0-13-217-1-0-8-0-0-0-18-0-13-0
78656|data|Elf32_Sym <aObtainlock - byte_13840, obtainLock+1, 0x36, 0x12, 0, 0xD>; "obtainLock"|166-30-0-0-1-10-2-0-54-0-0-0-18-0-13-0
78672|data|Elf32_Sym <aAsyncdeallocat_0 - byte_13840, asyncDeallocateIoData+1, \; "asyncDeallocateIoData"|185-14-0-0-217-210-1-0-26-0-0-0-18-0-13-0
78688|data|Elf32_Sym <aPthreadRwlockT - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_rwlock_tryrdlock"|195-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78704|data|Elf32_Sym <aKill - byte_13840, 0, 0, 0x12, 0, 0>; "kill"|100-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78720|data|Elf32_Sym <aLseek - byte_13840, 0, 0, 0x12, 0, 0>; "lseek"|42-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78736|data|Elf32_Sym <aRequeueelement - byte_13840, requeueElement+1, 0x2A, 0x12,\; "requeueElement"|105-16-0-0-133-228-1-0-42-0-0-0-18-0-13-0
78752|data|Elf32_Sym <aAsyncmonitorso_0 - byte_13840, asyncMonitorSocketOutput+1,\; "asyncMonitorSocketOutput"|130-14-0-0-193-213-1-0-4-0-0-0-18-0-13-0
78768|data|Elf32_Sym <aFputc - byte_13840, 0, 0, 0x12, 0, 0>; "fputc"|29-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78784|data|Elf32_Sym <aGetelementiden - byte_13840, getElementIdentifier+1, 4, \; "getElementIdentifier"|64-15-0-0-57-226-1-0-4-0-0-0-18-0-13-0
78800|data|Elf32_Sym <aXgeterrortext - byte_13840, 0, 0, 0x12, 0, 0>; "XGetErrorText"|162-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78816|data|Elf32_Sym <aGetlogcategory - byte_13840, getLogCategoryTitle+1, 0x30, \; "getLogCategoryTitle"|139-17-0-0-73-158-1-0-48-0-0-0-18-0-13-0
78832|data|Elf32_Sym <aProcessdirecti - byte_13840, processDirectiveOperand+1, \; "processDirectiveOperand"|58-25-0-0-237-1-2-0-168-0-0-0-18-0-13-0
78848|data|Elf32_Sym <aSetglobaldatav - byte_13840, setGlobalDataVariable+1, \; "setGlobalDataVariable"|195-18-0-0-185-247-1-0-232-0-0-0-18-0-13-0
78864|data|Elf32_Sym <aEnd_0 - byte_13840, _end, 0, 0x10, 0, 0x19>; "_end"|192-9-0-0-24-137-3-0-0-0-0-0-16-0-25-0
78880|data|Elf32_Sym <aWritekeyevent - byte_13840, writeKeyEvent+1, 0x44, 0x12, \; "writeKeyEvent"|33-28-0-0-161-236-1-0-68-0-0-0-18-0-13-0
78896|data|Elf32_Sym <aAsyncmonitorev - byte_13840, asyncMonitorEventPipe+1, \; "asyncMonitorEventPipe"|135-15-0-0-217-213-1-0-96-0-0-0-18-0-13-0
78912|data|Elf32_Sym <aFork - byte_13840, 0, 0, 0x12, 0, 0>; "fork"|21-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78928|data|Elf32_Sym <aBindtextdomain - byte_13840, 0, 0, 0x12, 0, 0>; "bindtextdomain"|214-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78944|data|Elf32_Sym <aIsfloat - byte_13840, isFloat+1, 0x50, 0x12, 0, 0xD>; "isFloat"|32-30-0-0-209-187-1-0-80-0-0-0-18-0-13-0
78960|data|Elf32_Sym <aGettextlength - byte_13840, getTextLength+1, 0xA, 0x12, 0,\; "getTextLength"|13-14-0-0-93-11-2-0-10-0-0-0-18-0-13-0
78976|data|Elf32_Sym <aFputs - byte_13840, 0, 0, 0x12, 0, 0>; "fputs"|35-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
78992|data|Elf32_Sym <aSigaddset - byte_13840, 0, 0, 0x12, 0, 0>; "sigaddset"|12-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79008|data|Elf32_Sym <aUnlockmutex - byte_13840, unlockMutex+1, 0x20, 0x12, 0, \; "unlockMutex"|226-22-0-0-205-224-1-0-32-0-0-0-18-0-13-0
79024|data|Elf32_Sym <aBrlapiSetfocus - byte_13840, 0, 0, 0x12, 0, 0>; "brlapi_setFocus"|107-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79040|data|Elf32_Sym <aLibcStartMain+0xD - byte_13840, main+1, 0x44, 0x12, 0, \; "main"|16-9-0-0-161-110-1-0-68-0-0-0-18-0-13-0
79056|data|Elf32_Sym <aInstallkernelm - byte_13840, installKernelModule+1, 0x14, \; "installKernelModule"|57-17-0-0-89-232-1-0-20-0-0-0-18-0-13-0
79072|data|Elf32_Sym <aMbrtowc - byte_13840, 0, 0, 0x12, 0, 0>; "mbrtowc"|134-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79088|data|Elf32_Sym <aDladdr - byte_13840, 0, 0, 0x12, 0, 0>; "dladdr"|45-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79104|data|Elf32_Sym <aUnsetaddressna+2 - byte_13840, setAddressName+1, 0x158, \; "setAddressName"|66-30-0-0-5-165-1-0-88-1-0-0-18-0-13-0
79120|data|Elf32_Sym <aGetmonotonicti - byte_13840, getMonotonicTime+1, 0x84, \; "getMonotonicTime"|4-17-0-0-125-194-1-0-132-0-0-0-18-0-13-0
79136|data|Elf32_Sym <aGetpid - byte_13840, 0, 0, 0x12, 0, 0>; "getpid"|93-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79152|data|Elf32_Sym <aXpending - byte_13840, 0, 0, 0x12, 0, 0>; "XPending"|77-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79168|data|Elf32_Sym <aAsynchandlepen - byte_13840, asyncHandlePendingSignal+1, \; "asyncHandlePendingSignal"|146-28-0-0-45-219-1-0-148-0-0-0-18-0-13-0
79184|data|Elf32_Sym <aRealloc - byte_13840, 0, 0, 0x12, 0, 0>; "realloc"|65-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79200|data|Elf32_Sym <aLinuxkeymapAte - byte_13840, linuxKeyMap_atE0, 0x100, \; "linuxKeyMap_atE0"|247-21-0-0-84-47-2-0-0-1-0-0-17-0-15-0
79216|data|Elf32_Sym <aStandarderrorn - byte_13840, standardErrorName, 0x11, \; "standardErrorName" ...|82-25-0-0-212-28-2-0-17-0-0-0-17-0-15-0
79232|data|Elf32_Sym <aLinuxkeymapAte_0 - byte_13840, linuxKeyMap_atE1, 0x100, \; "linuxKeyMap_atE1"|139-30-0-0-84-46-2-0-0-1-0-0-17-0-15-0
79248|data|Elf32_Sym <aAsyncresetalar_0 - byte_13840, asyncResetAlarmTo+1, 0x32, \; "asyncResetAlarmTo"|170-16-0-0-125-201-1-0-50-0-0-0-18-0-13-0
79264|data|Elf32_Sym <aGetstackelemen - byte_13840, getStackElement+1, 0x30, \; "getStackElement"|247-11-0-0-89-227-1-0-48-0-0-0-18-0-13-0
79280|data|Elf32_Sym <aFatal - byte_13840, fatal+1, 0x38, 0x12, 0, 0xD>; "fatal"|207-22-0-0-197-112-1-0-56-0-0-0-18-0-13-0
79296|data|Elf32_Sym <aConvertchartou - byte_13840, convertCharToUtf8+1, 0x1A, \; "convertCharToUtf8"|44-13-0-0-109-14-2-0-26-0-0-0-18-0-13-0
79312|data|Elf32_Sym <aProcesshostcom - byte_13840, processHostCommandStreams+1, \; "processHostCommandStreams"|51-20-0-0-245-238-1-0-42-0-0-0-18-0-13-0
79328|data|Elf32_Sym <aHasfileextensi - byte_13840, hasFileExtension+1, 0x1A, \; "hasFileExtension"|83-11-0-0-185-169-1-0-26-0-0-0-18-0-13-0
79344|data|Elf32_Sym <aXselectinput - byte_13840, 0, 0, 0x12, 0, 0>; "XSelectInput"|50-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79360|data|Elf32_Sym <aPthreadOnce - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_once"|191-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79376|data|Elf32_Sym <aAsyncwritesock - byte_13840, asyncWriteSocket+1, 0xA, \; "asyncWriteSocket"|247-24-0-0-205-213-1-0-10-0-0-0-18-0-13-0
79392|data|Elf32_Sym <aRemoveservice - byte_13840, removeService+1, 0x14, 0x12, \; "removeService"|18-12-0-0-57-138-1-0-20-0-0-0-18-0-13-0
79408|data|Elf32_Sym <aFinishhostcomm - byte_13840, finishHostCommandStream+1, \; "finishHostCommandStream"|49-18-0-0-181-238-1-0-64-0-0-0-18-0-13-0
79424|data|Elf32_Sym <aAsyncdeallocat_1 - byte_13840, asyncDeallocateAlarmData+1,\; "asyncDeallocateAlarmData"|102-27-0-0-213-200-1-0-26-0-0-0-18-0-13-0
79440|data|Elf32_Sym <aRaise - byte_13840, 0, 0, 0x12, 0, 0>; "raise"|86-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79456|data|Elf32_Sym <aWriterepeatper - byte_13840, writeRepeatPeriod+1, 0x24, \; "writeRepeatPeriod"|129-33-0-0-121-237-1-0-36-0-0-0-18-0-13-0
79472|data|Elf32_Sym <aXkbqueryextens - byte_13840, 0, 0, 0x12, 0, 0>; "XkbQueryExtension"|93-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79488|data|Elf32_Sym <aDcgettext - byte_13840, 0, 0, 0x12, 0, 0>; "dcgettext"|215-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79504|data|Elf32_Sym <aCtypeBLoc - byte_13840, 0, 0, 0x12, 0, 0>; "__ctype_b_loc"|102-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79520|data|Elf32_Sym <aGetconsole - byte_13840, getConsole+1, 0x60, 0x12, 0, 0xD>; "getConsole"|81-30-0-0-237-178-1-0-96-0-0-0-18-0-13-0
79536|data|Elf32_Sym <aGetdevicedirec - byte_13840, getDeviceDirectory+1, 0x10C, \; "getDeviceDirectory"|63-14-0-0-185-179-1-0-12-1-0-0-18-0-13-0
79552|data|Elf32_Sym <aIconvOpen+6 - byte_13840, 0, 0, 0x12, 0, 0>; "open"|165-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79568|data|Elf32_Sym <aBssStart - byte_13840, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start"|146-9-0-0-80-72-3-0-0-0-0-0-16-0-25-0
79584|data|Elf32_Sym <aAcquirefileloc - byte_13840, acquireFileLock+1, 0xE, 0x12,\; "acquireFileLock"|44-32-0-0-181-175-1-0-14-0-0-0-18-0-13-0
79600|data|Elf32_Sym <aLibcCsuFini+0xA - byte_13840, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|47-31-0-0-8-22-2-0-0-0-0-0-18-0-14-0
79616|data|Elf32_Sym <aSigprocmask - byte_13840, 0, 0, 0x12, 0, 0>; "sigprocmask"|12-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79632|data|Elf32_Sym <aProgramname - byte_13840, programName, 4, 0x11, 0, 0x19>; "programName"|146-24-0-0-252-136-3-0-4-0-0-0-17-0-25-0
79648|data|Elf32_Sym <aLibcCurrentSig_0 - byte_13840, 0, 0, 0x12, 0, 0>; "__libc_current_sigrtmin"|225-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79664|data|Elf32_Sym <aSigismember - byte_13840, 0, 0, 0x12, 0, 0>; "sigismember"|72-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79680|data|Elf32_Sym <aPipe - byte_13840, 0, 0, 0x12, 0, 0>; "pipe"|190-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79696|data|Elf32_Sym <aFinddataoperan - byte_13840, findDataOperand+1, 0x4C, \; "findDataOperand"|92-23-0-0-205-248-1-0-76-0-0-0-18-0-13-0
79712|data|Elf32_Sym <aIsloglevel - byte_13840, isLogLevel+1, 0xA0, 0x12, 0, 0xD>; "isLogLevel"|53-33-0-0-29-186-1-0-160-0-0-0-18-0-13-0
79728|data|Elf32_Sym <aAsyncmonitorfi_0 - byte_13840, asyncMonitorFileAlert+1, \; "asyncMonitorFileAlert"|137-23-0-0-241-212-1-0-72-0-0-0-18-0-13-0
79744|data|Elf32_Sym <aPthreadCreate - byte_13840, 0, 0, 0x12, 0, 0>; "pthread_create"|176-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79760|data|Elf32_Sym <aAsyncclaimsign - byte_13840, asyncClaimSignalNumber+1, \; "asyncClaimSignalNumber"|29-22-0-0-93-222-1-0-108-0-0-0-18-0-13-0
79776|data|Elf32_Sym <aBrlapiSetfocus+3 - byte_13840, api_setFocus+1, 0x30, 0x12,\; "api_setFocus"|110-0-0-0-101-120-1-0-48-0-0-0-18-0-13-0
79792|data|Elf32_Sym <aAccess - byte_13840, 0, 0, 0x12, 0, 0>; "access"|229-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79808|data|Elf32_Sym <aBrlapiIgnoreke - byte_13840, 0, 0, 0x12, 0, 0>; "brlapi_ignoreKeyRanges"|140-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79824|data|Elf32_Sym <aXflush - byte_13840, 0, 0, 0x12, 0, 0>; "XFlush"|143-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79840|data|Elf32_Sym <aRestarttimeper+2 - byte_13840, startTimePeriod+1, 6, 0x12,\; "startTimePeriod"|3-10-0-0-65-195-1-0-6-0-0-0-18-0-13-0
79856|data|Elf32_Sym <aAsynccancelreq - byte_13840, asyncCancelRequest+1, 0x38, \; "asyncCancelRequest"|25-15-0-0-225-196-1-0-56-0-0-0-18-0-13-0
79872|data|Elf32_Sym <aDeleteelements - byte_13840, deleteElements+1, 0x14, 0x12,\; "deleteElements"|230-16-0-0-145-226-1-0-20-0-0-0-18-0-13-0
79888|data|Elf32_Sym <aProcessoptions - byte_13840, processOptions+1, 0xCF8, \; "processOptions"|77-20-0-0-133-142-1-0-248-12-0-0-18-0-13-0
79904|data|Elf32_Sym <aLogactionerror - byte_13840, logActionError+1, 0x24, 0x12,\; "logActionError"|117-20-0-0-9-164-1-0-36-0-0-0-18-0-13-0
79920|data|Elf32_Sym <aFunlockfile - byte_13840, 0, 0, 0x12, 0, 0>; "funlockfile"|164-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
79936|data|DCB 0|0
79937|data|DCB "libbrlapi.so.0.6",0|108-105-98-98-114-108-97-112-105-46-115-111-46-48-46-54-0
79954|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
79982|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
79997|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
80017|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
80043|data|DCB "brlapi_setFocus",0|98-114-108-97-112-105-95-115-101-116-70-111-99-117-115-0
80059|data|DCB "brlapi_writeText",0|98-114-108-97-112-105-95-119-114-105-116-101-84-101-120-116-0
80076|data|DCB "brlapi_ignoreKeyRanges",0|98-114-108-97-112-105-95-105-103-110-111-114-101-75-101-121-82-97-110-103-101-115-0
80099|data|DCB "brlapi_acceptKeys",0|98-114-108-97-112-105-95-97-99-99-101-112-116-75-101-121-115-0
80117|data|DCB "brlapi_readKey",0|98-114-108-97-112-105-95-114-101-97-100-75-101-121-0
80132|data|DCB "brlapi_perror",0|98-114-108-97-112-105-95-112-101-114-114-111-114-0
80146|data|DCB "brlapi_openConnection",0|98-114-108-97-112-105-95-111-112-101-110-67-111-110-110-101-99-116-105-111-110-0
80168|data|DCB "brlapi_ignoreKeys",0|98-114-108-97-112-105-95-105-103-110-111-114-101-75-101-121-115-0
80186|data|DCB "brlapi_getDisplaySize",0|98-114-108-97-112-105-95-103-101-116-68-105-115-112-108-97-121-83-105-122-101-0
80208|data|DCB "brlapi_enterTtyModeWithPath",0|98-114-108-97-112-105-95-101-110-116-101-114-84-116-121-77-111-100-101-87-105-116-104-80-97-116-104-0
80236|data|DCB "brlapi_enterTtyMode",0|98-114-108-97-112-105-95-101-110-116-101-114-84-116-121-77-111-100-101-0
80256|data|DCB "libXtst.so.6",0|108-105-98-88-116-115-116-46-115-111-46-54-0
80269|data|DCB "XPending",0|88-80-101-110-100-105-110-103-0
80278|data|DCB "XFree",0|88-70-114-101-101-0
80284|data|DCB "XTestQueryExtension",0|88-84-101-115-116-81-117-101-114-121-69-120-116-101-110-115-105-111-110-0
80304|data|DCB "XTestFakeKeyEvent",0|88-84-101-115-116-70-97-107-101-75-101-121-69-118-101-110-116-0
80322|data|DCB "libXext.so.6",0|108-105-98-88-101-120-116-46-115-111-46-54-0
80335|data|DCB "XFlush",0|88-70-108-117-115-104-0
80342|data|DCB "libX11.so.6",0|108-105-98-88-49-49-46-115-111-46-54-0
80354|data|DCB "XGetErrorText",0|88-71-101-116-69-114-114-111-114-84-101-120-116-0
80368|data|DCB "XNextEvent",0|88-78-101-120-116-69-118-101-110-116-0
80379|data|DCB "XSetErrorHandler",0|88-83-101-116-69-114-114-111-114-72-97-110-100-108-101-114-0
80396|data|DCB "XkbLookupKeySym",0|88-107-98-76-111-111-107-117-112-75-101-121-83-121-109-0
80412|data|DCB "XkbLibraryVersion",0|88-107-98-76-105-98-114-97-114-121-86-101-114-115-105-111-110-0
80430|data|DCB "XRefreshKeyboardMapping",0|88-82-101-102-114-101-115-104-75-101-121-98-111-97-114-100-77-97-112-112-105-110-103-0
80454|data|DCB "XInternAtom",0|88-73-110-116-101-114-110-65-116-111-109-0
80466|data|DCB "XKeysymToKeycode",0|88-75-101-121-115-121-109-84-111-75-101-121-99-111-100-101-0
80483|data|DCB "XGetInputFocus",0|88-71-101-116-73-110-112-117-116-70-111-99-117-115-0
80498|data|DCB "XSelectInput",0|88-83-101-108-101-99-116-73-110-112-117-116-0
80511|data|DCB "XkbLockModifiers",0|88-107-98-76-111-99-107-77-111-100-105-102-105-101-114-115-0
80528|data|DCB "XDisplayName",0|88-68-105-115-112-108-97-121-78-97-109-101-0
80541|data|DCB "XkbQueryExtension",0|88-107-98-81-117-101-114-121-69-120-116-101-110-115-105-111-110-0
80559|data|DCB "XQueryTree",0|88-81-117-101-114-121-84-114-101-101-0
80570|data|DCB "XOpenDisplay",0|88-79-112-101-110-68-105-115-112-108-97-121-0
80583|data|DCB "XConnectionNumber",0|88-67-111-110-110-101-99-116-105-111-110-78-117-109-98-101-114-0
80601|data|DCB "XGetWindowProperty",0|88-71-101-116-87-105-110-100-111-119-80-114-111-112-101-114-116-121-0
80620|data|DCB "libicuuc.so.52",0|108-105-98-105-99-117-117-99-46-115-111-46-53-50-0
80635|data|DCB "u_getIntPropertyValue_52",0|117-95-103-101-116-73-110-116-80-114-111-112-101-114-116-121-86-97-108-117-101-95-53-50-0
80660|data|DCB "u_charFromName_52",0|117-95-99-104-97-114-70-114-111-109-78-97-109-101-95-53-50-0
80678|data|DCB "unorm_normalize_52",0|117-110-111-114-109-95-110-111-114-109-97-108-105-122-101-95-53-50-0
80697|data|DCB "libicudata.so.52",0|108-105-98-105-99-117-100-97-116-97-46-115-111-46-53-50-0
80714|data|DCB "libbluetooth.so.3",0|108-105-98-98-108-117-101-116-111-111-116-104-46-115-111-46-51-0
80732|data|DCB "libdl.so.2",0|108-105-98-100-108-46-115-111-46-50-0
80743|data|DCB "dlsym",0|100-108-115-121-109-0
80749|data|DCB "dladdr",0|100-108-97-100-100-114-0
80756|data|DCB "dlerror",0|100-108-101-114-114-111-114-0
80764|data|DCB "dlclose",0|100-108-99-108-111-115-101-0
80772|data|DCB "dlopen",0|100-108-111-112-101-110-0
80779|data|DCB "libgpm.so.2",0|108-105-98-103-112-109-46-115-111-46-50-0
80791|data|DCB "libpthread.so.0",0|108-105-98-112-116-104-114-101-97-100-46-115-111-46-48-0
80807|data|DCB "pthread_getspecific",0|112-116-104-114-101-97-100-95-103-101-116-115-112-101-99-105-102-105-99-0
80827|data|DCB "sigaction",0|115-105-103-97-99-116-105-111-110-0
80837|data|DCB "pthread_mutex_unlock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-117-110-108-111-99-107-0
80858|data|DCB "pthread_rwlock_rdlock",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-114-100-108-111-99-107-0
80880|data|DCB "pthread_create",0|112-116-104-114-101-97-100-95-99-114-101-97-116-101-0
80895|data|DCB "pthread_once",0|112-116-104-114-101-97-100-95-111-110-99-101-0
80908|data|DCB "__libc_current_sigrtmax",0|95-95-108-105-98-99-95-99-117-114-114-101-110-116-95-115-105-103-114-116-109-97-120-0
80932|data|DCB "pthread_rwlock_wrlock",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-119-114-108-111-99-107-0
80954|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
80971|data|DCB "flockfile",0|102-108-111-99-107-102-105-108-101-0
80981|data|DCB "fork",0|102-111-114-107-0
80986|data|DCB "pthread_sigmask",0|112-116-104-114-101-97-100-95-115-105-103-109-97-115-107-0
81002|data|DCB "lseek",0|108-115-101-101-107-0
81008|data|DCB "send",0|115-101-110-100-0
81013|data|DCB "nanosleep",0|110-97-110-111-115-108-101-101-112-0
81023|data|DCB "waitpid",0|119-97-105-116-112-105-100-0
81031|data|DCB "pthread_setname_np",0|112-116-104-114-101-97-100-95-115-101-116-110-97-109-101-95-110-112-0
81050|data|DCB "pthread_mutex_lock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-108-111-99-107-0
81069|data|DCB "pthread_self",0|112-116-104-114-101-97-100-95-115-101-108-102-0
81082|data|DCB "pthread_rwlock_init",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-105-110-105-116-0
81102|data|DCB "pthread_rwlock_unlock",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-117-110-108-111-99-107-0
81124|data|DCB "funlockfile",0|102-117-110-108-111-99-107-102-105-108-101-0
81136|data|DCB "pthread_key_create",0|112-116-104-114-101-97-100-95-107-101-121-95-99-114-101-97-116-101-0
81155|data|DCB "pthread_rwlock_tryrdlock",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-116-114-121-114-100-108-111-99-107-0
81180|data|DCB "recv",0|114-101-99-118-0
81185|data|DCB "__libc_current_sigrtmin",0|95-95-108-105-98-99-95-99-117-114-114-101-110-116-95-115-105-103-114-116-109-105-110-0
81209|data|DCB "pthread_rwlock_trywrlock",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-116-114-121-119-114-108-111-99-107-0
81234|data|DCB "pthread_setspecific",0|112-116-104-114-101-97-100-95-115-101-116-115-112-101-99-105-102-105-99-0
81254|data|DCB "pthread_rwlock_destroy",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-100-101-115-116-114-111-121-0
81277|data|DCB "fcntl",0|102-99-110-116-108-0
81283|data|DCB "pthread_getname_np",0|112-116-104-114-101-97-100-95-103-101-116-110-97-109-101-95-110-112-0
81302|data|DCB "raise",0|114-97-105-115-101-0
81308|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
81318|data|DCB "fflush",0|102-102-108-117-115-104-0
81325|data|DCB "strcpy",0|115-116-114-99-112-121-0
81332|data|DCB "wmemcmp",0|119-109-101-109-99-109-112-0
81340|data|DCB "setlocale",0|115-101-116-108-111-99-97-108-101-0
81350|data|DCB "mbrtowc",0|109-98-114-116-111-119-99-0
81358|data|DCB "towlower",0|116-111-119-108-111-119-101-114-0
81367|data|DCB "fopen",0|102-111-112-101-110-0
81373|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
81381|data|DCB "ftruncate",0|102-116-114-117-110-99-97-116-101-0
81391|data|DCB "optind",0|111-112-116-105-110-100-0
81398|data|DCB "strrchr",0|115-116-114-114-99-104-114-0
81406|data|DCB "pipe",0|112-105-112-101-0
81411|data|DCB "__strdup",0|95-95-115-116-114-100-117-112-0
81420|data|DCB "__progname",0|95-95-112-114-111-103-110-97-109-101-0
81431|data|DCB "dcgettext",0|100-99-103-101-116-116-101-120-116-0
81441|data|DCB "wmemcpy",0|119-109-101-109-99-112-121-0
81449|data|DCB "__fdelt_chk",0|95-95-102-100-101-108-116-95-99-104-107-0
81461|data|DCB "signal",0|115-105-103-110-97-108-0
81468|data|DCB "ioperm",0|105-111-112-101-114-109-0
81475|data|DCB "iswspace",0|105-115-119-115-112-97-99-101-0
81484|data|DCB "sigprocmask",0|115-105-103-112-114-111-99-109-97-115-107-0
81496|data|DCB "sigfillset",0|115-105-103-102-105-108-108-115-101-116-0
81507|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
81524|data|DCB "select",0|115-101-108-101-99-116-0
81531|data|DCB "mkdir",0|109-107-100-105-114-0
81537|data|DCB "realloc",0|114-101-97-108-108-111-99-0
81545|data|DCB "abort",0|97-98-111-114-116-0
81551|data|DCB "_exit",0|95-101-120-105-116-0
81557|data|DCB "strpbrk",0|115-116-114-112-98-114-107-0
81565|data|DCB "getpid",0|103-101-116-112-105-100-0
81572|data|DCB "kill",0|107-105-108-108-0
81577|data|DCB "strftime",0|115-116-114-102-116-105-109-101-0
81586|data|DCB "localtime_r",0|108-111-99-97-108-116-105-109-101-95-114-0
81598|data|DCB "strtod",0|115-116-114-116-111-100-0
81605|data|DCB "__ctype_get_mb_cur_max",0|95-95-99-116-121-112-101-95-103-101-116-95-109-98-95-99-117-114-95-109-97-120-0
81628|data|DCB "strtok",0|115-116-114-116-111-107-0
81635|data|DCB "strtol",0|115-116-114-116-111-108-0
81642|data|DCB "feof",0|102-101-111-102-0
81647|data|DCB "fgets",0|102-103-101-116-115-0
81653|data|DCB "calloc",0|99-97-108-108-111-99-0
81660|data|DCB "strlen",0|115-116-114-108-101-110-0
81667|data|DCB "sigemptyset",0|115-105-103-101-109-112-116-121-115-101-116-0
81679|data|DCB "openlog",0|111-112-101-110-108-111-103-0
81687|data|DCB "memset",0|109-101-109-115-101-116-0
81694|data|DCB "chdir",0|99-104-100-105-114-0
81700|data|DCB "__syslog_chk",0|95-95-115-121-115-108-111-103-95-99-104-107-0
81713|data|DCB "mempcpy",0|109-101-109-112-99-112-121-0
81721|data|DCB "poll",0|112-111-108-108-0
81726|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
81740|data|DCB "sigaddset",0|115-105-103-97-100-100-115-101-116-0
81750|data|DCB "stdout",0|115-116-100-111-117-116-0
81757|data|DCB "fputc",0|102-112-117-116-99-0
81763|data|DCB "fputs",0|102-112-117-116-115-0
81769|data|DCB "fclose",0|102-99-108-111-115-101-0
81776|data|DCB "__vsnprintf_chk",0|95-95-118-115-110-112-114-105-110-116-102-95-99-104-107-0
81792|data|DCB "strtoul",0|115-116-114-116-111-117-108-0
81800|data|DCB "malloc",0|109-97-108-108-111-99-0
81807|data|DCB "strcasecmp",0|115-116-114-99-97-115-101-99-109-112-0
81818|data|DCB "nl_langinfo",0|110-108-95-108-97-110-103-105-110-102-111-0
81830|data|DCB "__ctype_b_loc",0|95-95-99-116-121-112-101-95-98-95-108-111-99-0
81844|data|DCB "getenv",0|103-101-116-101-110-118-0
81851|data|DCB "sscanf",0|115-115-99-97-110-102-0
81858|data|DCB "__open_2",0|95-95-111-112-101-110-95-50-0
81867|data|DCB "optarg",0|111-112-116-97-114-103-0
81874|data|DCB "stderr",0|115-116-100-101-114-114-0
81881|data|DCB "sigdelset",0|115-105-103-100-101-108-115-101-116-0
81891|data|DCB "ioctl",0|105-111-99-116-108-0
81897|data|DCB "outb",0|111-117-116-98-0
81902|data|DCB "__snprintf_chk",0|95-95-115-110-112-114-105-110-116-102-95-99-104-107-0
81917|data|DCB "optopt",0|111-112-116-111-112-116-0
81924|data|DCB "readlink",0|114-101-97-100-108-105-110-107-0
81933|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
81945|data|DCB "execvp",0|101-120-101-99-118-112-0
81952|data|DCB "strncasecmp",0|115-116-114-110-99-97-115-101-99-109-112-0
81964|data|DCB "__xmknod",0|95-95-120-109-107-110-111-100-0
81973|data|DCB "__fxstat",0|95-95-102-120-115-116-97-116-0
81982|data|DCB "__realpath_chk",0|95-95-114-101-97-108-112-97-116-104-95-99-104-107-0
81997|data|DCB "fileno",0|102-105-108-101-110-111-0
82004|data|DCB "getcwd",0|103-101-116-99-119-100-0
82011|data|DCB "fwrite",0|102-119-114-105-116-101-0
82018|data|DCB "iconv_close",0|105-99-111-110-118-95-99-108-111-115-101-0
82030|data|DCB "gettimeofday",0|103-101-116-116-105-109-101-111-102-100-97-121-0
82043|data|DCB "__memcpy_chk",0|95-95-109-101-109-99-112-121-95-99-104-107-0
82056|data|DCB "sigismember",0|115-105-103-105-115-109-101-109-98-101-114-0
82068|data|DCB "clock_gettime",0|99-108-111-99-107-95-103-101-116-116-105-109-101-0
82082|data|DCB "strchr",0|115-116-114-99-104-114-0
82089|data|DCB "iswcntrl",0|105-115-119-99-110-116-114-108-0
82098|data|DCB "inb",0|105-110-98-0
82102|data|DCB "__vfprintf_chk",0|95-95-118-102-112-114-105-110-116-102-95-99-104-107-0
82117|data|DCB "mktime",0|109-107-116-105-109-101-0
82124|data|DCB "iconv",0|105-99-111-110-118-0
82130|data|DCB "fdopen",0|102-100-111-112-101-110-0
82137|data|DCB "qsort",0|113-115-111-114-116-0
82143|data|DCB "iconv_open",0|105-99-111-110-118-95-111-112-101-110-0
82154|data|DCB "__ctype_toupper_loc",0|95-95-99-116-121-112-101-95-116-111-117-112-112-101-114-95-108-111-99-0
82174|data|DCB "__xstat",0|95-95-120-115-116-97-116-0
82182|data|DCB "wmemchr",0|119-109-101-109-99-104-114-0
82190|data|DCB "memmove",0|109-101-109-109-111-118-101-0
82198|data|DCB "bindtextdomain",0|98-105-110-100-116-101-120-116-100-111-109-97-105-110-0
82213|data|DCB "access",0|97-99-99-101-115-115-0
82220|data|DCB "opterr",0|111-112-116-101-114-114-0
82227|data|DCB "strcmp",0|115-116-114-99-109-112-0
82234|data|DCB "strerror",0|115-116-114-101-114-114-111-114-0
82243|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
82261|data|DCB "ferror",0|102-101-114-114-111-114-0
82268|data|DCB "wcslen",0|119-99-115-108-101-110-0
82275|data|DCB "closelog",0|99-108-111-115-101-108-111-103-0
82284|data|DCB "snprintf",0|115-110-112-114-105-110-116-102-0
82293|data|DCB "free",0|102-114-101-101-0
82298|data|DCB "program_invocation_short_name",0|112-114-111-103-114-97-109-95-105-110-118-111-99-97-116-105-111-110-95-115-104-111-114-116-95-110-97-109-101-0
82328|data|DCB "__cxa_atexit",0|95-95-99-120-97-95-97-116-101-120-105-116-0
82341|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
82361|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
82379|data|DCB "_edata",0|95-101-100-97-116-97-0
82386|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
82398|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
82412|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
82424|data|DCB "__end__",0|95-95-101-110-100-95-95-0
82432|data|DCB "_end",0|95-101-110-100-0
82437|data|DCB "logCategoryFlags",0|108-111-103-67-97-116-101-103-111-114-121-70-108-97-103-115-0
82454|data|DCB "convertUtf8ToWchar",0|99-111-110-118-101-114-116-85-116-102-56-84-111-87-99-104-97-114-0
82473|data|DCB "asyncDeallocateWaitData",0|97-115-121-110-99-68-101-97-108-108-111-99-97-116-101-87-97-105-116-68-97-116-97-0
82497|data|DCB "restartTimePeriod",0|114-101-115-116-97-114-116-84-105-109-101-80-101-114-105-111-100-0
82515|data|DCB "logLevelCount",0|108-111-103-76-101-118-101-108-67-111-117-110-116-0
82529|data|DCB "getQueueData",0|103-101-116-81-117-101-117-101-68-97-116-97-0
82542|data|DCB "millisecondsTillNextMinute",0|109-105-108-108-105-115-101-99-111-110-100-115-84-105-108-108-78-101-120-116-77-105-110-117-116-101-0
82569|data|DCB "getQueueHead",0|103-101-116-81-117-101-117-101-72-101-97-100-0
82582|data|DCB "writeSocketDescriptor",0|119-114-105-116-101-83-111-99-107-101-116-68-101-115-99-114-105-112-116-111-114-0
82604|data|DCB "asyncAddSignalEntry",0|97-115-121-110-99-65-100-100-83-105-103-110-97-108-69-110-116-114-121-0
82624|data|DCB "adjustTimeValue",0|97-100-106-117-115-116-84-105-109-101-86-97-108-117-101-0
82640|data|DCB "convertUtf8ToChar",0|99-111-110-118-101-114-116-85-116-102-56-84-111-67-104-97-114-0
82658|data|DCB "categoryLogLevel",0|99-97-116-101-103-111-114-121-76-111-103-76-101-118-101-108-0
82675|data|DCB "setWorkingDirectory",0|115-101-116-87-111-114-107-105-110-103-68-105-114-101-99-116-111-114-121-0
82695|data|DCB "logBytes",0|108-111-103-66-121-116-101-115-0
82704|data|DCB "approximateDelay",0|97-112-112-114-111-120-105-109-97-116-101-68-101-108-97-121-0
82721|data|DCB "processIfNotVarOperands",0|112-114-111-99-101-115-115-73-102-78-111-116-86-97-114-79-112-101-114-97-110-100-115-0
82745|data|DCB "getCurrentTime",0|103-101-116-67-117-114-114-101-110-116-84-105-109-101-0
82760|data|DCB "cancelProgram",0|99-97-110-99-101-108-80-114-111-103-114-97-109-0
82774|data|DCB "asyncSignalEvent",0|97-115-121-110-99-83-105-103-110-97-108-69-118-101-110-116-0
82791|data|DCB "unlockCharset",0|117-110-108-111-99-107-67-104-97-114-115-101-116-0
82805|data|DCB "stderrLogLevel",0|115-116-100-101-114-114-76-111-103-76-101-118-101-108-0
82820|data|DCB "getElementItem",0|103-101-116-69-108-101-109-101-110-116-73-116-101-109-0
82835|data|DCB "hasFileExtension",0|104-97-115-70-105-108-101-69-120-116-101-110-115-105-111-110-0
82852|data|DCB "validateFloat",0|118-97-108-105-100-97-116-101-70-108-111-97-116-0
82866|data|DCB "toX_f",0|116-111-88-95-102-0
82872|data|DCB "millisecondsBetween",0|109-105-108-108-105-115-101-99-111-110-100-115-66-101-116-119-101-101-110-0
82892|data|DCB "setCharset",0|115-101-116-67-104-97-114-115-101-116-0
82903|data|DCB "asyncMonitorSocketAlert",0|97-115-121-110-99-77-111-110-105-116-111-114-83-111-99-107-101-116-65-108-101-114-116-0
82927|data|DCB "writeDotsCell",0|119-114-105-116-101-68-111-116-115-67-101-108-108-0
82941|data|DCB "asyncExecuteAlarmCallback",0|97-115-121-110-99-69-120-101-99-117-116-101-65-108-97-114-109-67-97-108-108-98-97-99-107-0
82967|data|DCB "reportDataError",0|114-101-112-111-114-116-68-97-116-97-69-114-114-111-114-0
82983|data|DCB "compareKeywords",0|99-111-109-112-97-114-101-75-101-121-119-111-114-100-115-0
82999|data|DCB "getStackElement",0|103-101-116-83-116-97-99-107-69-108-101-109-101-110-116-0
83015|data|DCB "writePort1",0|119-114-105-116-101-80-111-114-116-49-0
83026|data|DCB "removeService",0|114-101-109-111-118-101-83-101-114-118-105-99-101-0
83040|data|DCB "asyncHandleAddTaskEvent",0|97-115-121-110-99-72-97-110-100-108-101-65-100-100-84-97-115-107-69-118-101-110-116-0
83064|data|DCB "replaceFileExtension",0|114-101-112-108-97-99-101-70-105-108-101-69-120-116-101-110-115-105-111-110-0
83085|data|DCB "dequeueItem",0|100-101-113-117-101-117-101-73-116-101-109-0
83097|data|DCB "validateFlag",0|118-97-108-105-100-97-116-101-70-108-97-103-0
83110|data|DCB "convertWcharToUtf8",0|99-111-110-118-101-114-116-87-99-104-97-114-84-111-85-116-102-56-0
83129|data|DCB "isAbbreviation",0|105-115-65-98-98-114-101-118-105-97-116-105-111-110-0
83144|data|DCB "isPosixLocale",0|105-115-80-111-115-105-120-76-111-99-97-108-101-0
83158|data|DCB "registerProgramMemory",0|114-101-103-105-115-116-101-114-80-114-111-103-114-97-109-77-101-109-111-114-121-0
83180|data|DCB "getMonotonicElapsed",0|103-101-116-77-111-110-111-116-111-110-105-99-69-108-97-112-115-101-100-0
83200|data|DCB "processIfVarOperands",0|112-114-111-99-101-115-115-73-102-86-97-114-79-112-101-114-97-110-100-115-0
83221|data|DCB "logPossibleCause",0|108-111-103-80-111-115-115-105-98-108-101-67-97-117-115-101-0
83238|data|DCB "asyncExecuteIoCallback",0|97-115-121-110-99-69-120-101-99-117-116-101-73-111-67-97-108-108-98-97-99-107-0
83261|data|DCB "asyncCallWithSignalBlocked",0|97-115-121-110-99-67-97-108-108-87-105-116-104-83-105-103-110-97-108-66-108-111-99-107-101-100-0
83288|data|DCB "ensureFileExtension",0|101-110-115-117-114-101-70-105-108-101-69-120-116-101-110-115-105-111-110-0
83308|data|DCB "convertCharToUtf8",0|99-111-110-118-101-114-116-67-104-97-114-84-111-85-116-102-56-0
83326|data|DCB "writeUtf8Character",0|119-114-105-116-101-85-116-102-56-67-104-97-114-97-99-116-101-114-0
83345|data|DCB "disablePorts",0|100-105-115-97-98-108-101-80-111-114-116-115-0
83358|data|DCB "createUinputDevice",0|99-114-101-97-116-101-85-105-110-112-117-116-68-101-118-105-99-101-0
83377|data|DCB "getWritableDirectory",0|103-101-116-87-114-105-116-97-98-108-101-68-105-114-101-99-116-111-114-121-0
83398|data|DCB "getAllOverrideDirectories",0|103-101-116-65-108-108-79-118-101-114-114-105-100-101-68-105-114-101-99-116-111-114-105-101-115-0
83424|data|DCB "getWcharCharset",0|103-101-116-87-99-104-97-114-67-104-97-114-115-101-116-0
83440|data|DCB "asyncResetAlarmEvery",0|97-115-121-110-99-82-101-115-101-116-65-108-97-114-109-69-118-101-114-121-0
83461|data|DCB "standardStreamArgument",0|115-116-97-110-100-97-114-100-83-116-114-101-97-109-65-114-103-117-109-101-110-116-0
83484|data|DCB "asyncAwaitCondition",0|97-115-121-110-99-65-119-97-105-116-67-111-110-100-105-116-105-111-110-0
83504|data|DCB "_IO_stdin_used",0|95-73-79-95-115-116-100-105-110-95-117-115-101-100-0
83519|data|DCB "getLocaleName",0|103-101-116-76-111-99-97-108-101-78-97-109-101-0
83533|data|DCB "getTextLength",0|103-101-116-84-101-120-116-76-101-110-103-116-104-0
83547|data|DCB "parseDataString",0|112-97-114-115-101-68-97-116-97-83-116-114-105-110-103-0
83563|data|DCB "openCharacterDevice",0|111-112-101-110-67-104-97-114-97-99-116-101-114-68-101-118-105-99-101-0
83583|data|DCB "getDeviceDirectory",0|103-101-116-68-101-118-105-99-101-68-105-114-101-99-116-111-114-121-0
83602|data|DCB "joinStrings",0|106-111-105-110-83-116-114-105-110-103-115-0
83614|data|DCB "expandTimeValue",0|101-120-112-97-110-100-84-105-109-101-86-97-108-117-101-0
83630|data|DCB "runCommand",0|114-117-110-67-111-109-109-97-110-100-0
83641|data|DCB "isNumber",0|105-115-78-117-109-98-101-114-0
83650|data|DCB "asyncMonitorSocketOutput",0|97-115-121-110-99-77-111-110-105-116-111-114-83-111-99-107-101-116-79-117-116-112-117-116-0
83675|data|DCB "getUtf8Length",0|103-101-116-85-116-102-56-76-101-110-103-116-104-0
83689|data|DCB "asyncReadSocket",0|97-115-121-110-99-82-101-97-100-83-111-99-107-101-116-0
83705|data|DCB "asyncDeallocateIoData",0|97-115-121-110-99-68-101-97-108-108-111-99-97-116-101-73-111-68-97-116-97-0
83727|data|DCB "writeHexadecimalCharacter",0|119-114-105-116-101-72-101-120-97-100-101-99-105-109-97-108-67-104-97-114-97-99-116-101-114-0
83753|data|DCB "getDevicePath",0|103-101-116-68-101-118-105-99-101-80-97-116-104-0
83767|data|DCB "utf8Conv",0|117-116-102-56-67-111-110-118-0
83776|data|DCB "asyncExecuteTaskCallback",0|97-115-121-110-99-69-120-101-99-117-116-101-84-97-115-107-67-97-108-108-98-97-99-107-0
83801|data|DCB "asyncCancelRequest",0|97-115-121-110-99-67-97-110-99-101-108-82-101-113-117-101-115-116-0
83820|data|DCB "convertTextToWchars",0|99-111-110-118-101-114-116-84-101-120-116-84-111-87-99-104-97-114-115-0
83840|data|DCB "getElementIdentifier",0|103-101-116-69-108-101-109-101-110-116-73-100-101-110-116-105-102-105-101-114-0
83861|data|DCB "fixInstallPaths",0|102-105-120-73-110-115-116-97-108-108-80-97-116-104-115-0
83877|data|DCB "cancelProcess",0|99-97-110-99-101-108-80-114-111-99-101-115-115-0
83891|data|DCB "handleBestCharacter",0|104-97-110-100-108-101-66-101-115-116-67-104-97-114-97-99-116-101-114-0
83911|data|DCB "asyncMonitorEventPipe",0|97-115-121-110-99-77-111-110-105-116-111-114-69-118-101-110-116-80-105-112-101-0
83933|data|DCB "logCategoryName_all",0|108-111-103-67-97-116-101-103-111-114-121-78-97-109-101-95-97-108-108-0
83953|data|DCB "logUnsupportedOperation",0|108-111-103-85-110-115-117-112-112-111-114-116-101-100-79-112-101-114-97-116-105-111-110-0
83977|data|DCB "convertCharToWchar",0|99-111-110-118-101-114-116-67-104-97-114-84-111-87-99-104-97-114-0
83996|data|DCB "setThreadName",0|115-101-116-84-104-114-101-97-100-78-97-109-101-0
84010|data|DCB "writeEscapedCharacter",0|119-114-105-116-101-69-115-99-97-112-101-100-67-104-97-114-97-99-116-101-114-0
84032|data|DCB "onProgramExit",0|111-110-80-114-111-103-114-97-109-69-120-105-116-0
84046|data|DCB "processElseOperands",0|112-114-111-99-101-115-115-69-108-115-101-79-112-101-114-97-110-100-115-0
84066|data|DCB "validateInteger",0|118-97-108-105-100-97-116-101-73-110-116-101-103-101-114-0
84082|data|DCB "asyncMonitorSocketInput",0|97-115-121-110-99-77-111-110-105-116-111-114-83-111-99-107-101-116-73-110-112-117-116-0
84106|data|DCB "isHexadecimalDigit",0|105-115-72-101-120-97-100-101-99-105-109-97-108-68-105-103-105-116-0
84125|data|DCB "fatal_errno",0|102-97-116-97-108-95-101-114-114-110-111-0
84137|data|DCB "requeueElement",0|114-101-113-117-101-117-101-69-108-101-109-101-110-116-0
84152|data|DCB "asyncRelinquishSignalNumber",0|97-115-121-110-99-82-101-108-105-110-113-117-105-115-104-83-105-103-110-97-108-78-117-109-98-101-114-0
84180|data|DCB "asyncGetHandleElement",0|97-115-121-110-99-71-101-116-72-97-110-100-108-101-69-108-101-109-101-110-116-0
84202|data|DCB "asyncResetAlarmTo",0|97-115-121-110-99-82-101-115-101-116-65-108-97-114-109-84-111-0
84220|data|DCB "processDataStream",0|112-114-111-99-101-115-115-68-97-116-97-83-116-114-101-97-109-0
84238|data|DCB "asyncObtainSignalNumber",0|97-115-121-110-99-79-98-116-97-105-110-83-105-103-110-97-108-78-117-109-98-101-114-0
84262|data|DCB "deleteElements",0|100-101-108-101-116-101-69-108-101-109-101-110-116-115-0
84277|data|DCB "getProgramPath",0|103-101-116-80-114-111-103-114-97-109-80-97-116-104-0
84292|data|DCB "getMonotonicTime",0|103-101-116-77-111-110-111-116-111-110-105-99-84-105-109-101-0
84309|data|DCB "extendStringSetting",0|101-120-116-101-110-100-83-116-114-105-110-103-83-101-116-116-105-110-103-0
84329|data|DCB "getElementQueue",0|103-101-116-69-108-101-109-101-110-116-81-117-101-117-101-0
84345|data|DCB "installKernelModule",0|105-110-115-116-97-108-108-75-101-114-110-101-108-77-111-100-117-108-101-0
84365|data|DCB "resetOptions",0|114-101-115-101-116-79-112-116-105-111-110-115-0
84378|data|DCB "formatInputError",0|102-111-114-109-97-116-73-110-112-117-116-69-114-114-111-114-0
84395|data|DCB "findItem",0|102-105-110-100-73-116-101-109-0
84404|data|DCB "logData",0|108-111-103-68-97-116-97-0
84412|data|DCB "writeUtf8Cells",0|119-114-105-116-101-85-116-102-56-67-101-108-108-115-0
84427|data|DCB "getLogCategoryTitle",0|103-101-116-76-111-103-67-97-116-101-103-111-114-121-84-105-116-108-101-0
84447|data|DCB "isAbsolutePath",0|105-115-65-98-115-111-108-117-116-101-80-97-116-104-0
84462|data|DCB "writeRepeatDelay",0|119-114-105-116-101-82-101-112-101-97-116-68-101-108-97-121-0
84479|data|DCB "getLogCategoryName",0|103-101-116-76-111-103-67-97-116-101-103-111-114-121-78-97-109-101-0
84498|data|DCB "validateYesNo",0|118-97-108-105-100-97-116-101-89-101-115-78-111-0
84512|data|DCB "resolveDeviceName",0|114-101-115-111-108-118-101-68-101-118-105-99-101-78-97-109-101-0
84530|data|DCB "makeFilePath",0|109-97-107-101-70-105-108-101-80-97-116-104-0
84543|data|DCB "standardOutputName",0|115-116-97-110-100-97-114-100-79-117-116-112-117-116-78-97-109-101-0
84562|data|DCB "processEndIfOperands",0|112-114-111-99-101-115-115-69-110-100-73-102-79-112-101-114-97-110-100-115-0
84583|data|DCB "isInteger",0|105-115-73-110-116-101-103-101-114-0
84593|data|DCB "finishHostCommandStream",0|102-105-110-105-115-104-72-111-115-116-67-111-109-109-97-110-100-83-116-114-101-97-109-0
84617|data|DCB "registerCharacterSet",0|114-101-103-105-115-116-101-114-67-104-97-114-97-99-116-101-114-83-101-116-0
84638|data|DCB "getBootParameters",0|103-101-116-66-111-111-116-80-97-114-97-109-101-116-101-114-115-0
84656|data|DCB "processIncludeOperands",0|112-114-111-99-101-115-115-73-110-99-108-117-100-101-79-112-101-114-97-110-100-115-0
84679|data|DCB "linuxKeyMap_ps2",0|108-105-110-117-120-75-101-121-77-97-112-95-112-115-50-0
84695|data|DCB "isQualifiedDevice",0|105-115-81-117-97-108-105-102-105-101-100-68-101-118-105-99-101-0
84713|data|DCB "getCharset",0|103-101-116-67-104-97-114-115-101-116-0
84724|data|DCB "getDataOperand",0|103-101-116-68-97-116-97-79-112-101-114-97-110-100-0
84739|data|DCB "setGlobalDataVariable",0|115-101-116-71-108-111-98-97-108-68-97-116-97-86-97-114-105-97-98-108-101-0
84761|data|DCB "enableUinputKey",0|101-110-97-98-108-101-85-105-110-112-117-116-75-101-121-0
84777|data|DCB "testProgramPath",0|116-101-115-116-80-114-111-103-114-97-109-80-97-116-104-0
84793|data|DCB "isKeyword",0|105-115-75-101-121-119-111-114-100-0
84803|data|DCB "setLogCategory",0|115-101-116-76-111-103-67-97-116-101-103-111-114-121-0
84818|data|DCB "getWorkingDirectory",0|103-101-116-87-111-114-107-105-110-103-68-105-114-101-99-116-111-114-121-0
84838|data|DCB "enablePorts",0|101-110-97-98-108-101-80-111-114-116-115-0
84850|data|DCB "standardInputName",0|115-116-97-110-100-97-114-100-73-110-112-117-116-78-97-109-101-0
84868|data|DCB "initializeSystemObject",0|105-110-105-116-105-97-108-105-122-101-83-121-115-116-101-109-79-98-106-101-99-116-0
84891|data|DCB "findElementWithItem",0|102-105-110-100-69-108-101-109-101-110-116-87-105-116-104-73-116-101-109-0
84911|data|DCB "getStackHead",0|103-101-116-83-116-97-99-107-72-101-97-100-0
84924|data|DCB "locatePathExtension",0|108-111-99-97-116-101-80-97-116-104-69-120-116-101-110-115-105-111-110-0
84944|data|DCB "tobrltty_init",0|116-111-98-114-108-116-116-121-95-105-110-105-116-0
84958|data|DCB "pushLogPrefix",0|112-117-115-104-76-111-103-80-114-101-102-105-120-0
84972|data|DCB "getHomeDirectory",0|103-101-116-72-111-109-101-68-105-114-101-99-116-111-114-121-0
84989|data|DCB "installService",0|105-110-115-116-97-108-108-83-101-114-118-105-99-101-0
85004|data|DCB "asyncAddTask",0|97-115-121-110-99-65-100-100-84-97-115-107-0
85017|data|DCB "readSocketDescriptor",0|114-101-97-100-83-111-99-107-101-116-68-101-115-99-114-105-112-116-111-114-0
85038|data|DCB "asyncMonitorFileOutput",0|97-115-121-110-99-77-111-110-105-116-111-114-70-105-108-101-79-117-116-112-117-116-0
85061|data|DCB "asyncEmptySignalHandler",0|97-115-121-110-99-69-109-112-116-121-83-105-103-110-97-108-72-97-110-100-108-101-114-0
85085|data|DCB "enableUinputEventType",0|101-110-97-98-108-101-85-105-110-112-117-116-69-118-101-110-116-84-121-112-101-0
85107|data|DCB "processHostCommandStreams",0|112-114-111-99-101-115-115-72-111-115-116-67-111-109-109-97-110-100-83-116-114-101-97-109-115-0
85133|data|DCB "processOptions",0|112-114-111-99-101-115-115-79-112-116-105-111-110-115-0
85148|data|DCB "getCellsOperand",0|103-101-116-67-101-108-108-115-79-112-101-114-97-110-100-0
85164|data|DCB "ringBell",0|114-105-110-103-66-101-108-108-0
85173|data|DCB "logActionError",0|108-111-103-65-99-116-105-111-110-69-114-114-111-114-0
85188|data|DCB "findElement",0|102-105-110-100-69-108-101-109-101-110-116-0
85200|data|DCB "asyncCallWithSignalsBlocked",0|97-115-121-110-99-67-97-108-108-87-105-116-104-83-105-103-110-97-108-115-66-108-111-99-107-101-100-0
85228|data|DCB "processQueue",0|112-114-111-99-101-115-115-81-117-101-117-101-0
85241|data|DCB "createThread",0|99-114-101-97-116-101-84-104-114-101-97-100-0
85254|data|DCB "asyncIgnoreSignal",0|97-115-121-110-99-73-103-110-111-114-101-83-105-103-110-97-108-0
85272|data|DCB "asyncMonitorSignal",0|97-115-121-110-99-77-111-110-105-116-111-114-83-105-103-110-97-108-0
85291|data|DCB "makeTimeValue",0|109-97-107-101-84-105-109-101-86-97-108-117-101-0
85305|data|DCB "isUnqualifiedDevice",0|105-115-85-110-113-117-97-108-105-102-105-101-100-68-101-118-105-99-101-0
85325|data|DCB "getPrimaryOverrideDirectory",0|103-101-116-80-114-105-109-97-114-121-79-118-101-114-114-105-100-101-68-105-114-101-99-116-111-114-121-0
85353|data|DCB "asyncResetAlarmIn",0|97-115-121-110-99-82-101-115-101-116-65-108-97-114-109-73-110-0
85371|data|DCB "changeStringSetting",0|99-104-97-110-103-101-83-116-114-105-110-103-83-101-116-116-105-110-103-0
85391|data|DCB "formatSeconds",0|102-111-114-109-97-116-83-101-99-111-110-100-115-0
85405|data|DCB "getCharacterByName",0|103-101-116-67-104-97-114-97-99-116-101-114-66-121-78-97-109-101-0
85424|data|DCB "logLevelNames",0|108-111-103-76-101-118-101-108-78-97-109-101-115-0
85438|data|DCB "getDataCharacter",0|103-101-116-68-97-116-97-67-104-97-114-97-99-116-101-114-0
85455|data|DCB "getParameters",0|103-101-116-80-97-114-97-109-101-116-101-114-115-0
85469|data|DCB "destructHostCommandPackageData",0|100-101-115-116-114-117-99-116-72-111-115-116-67-111-109-109-97-110-100-80-97-99-107-97-103-101-68-97-116-97-0
85500|data|DCB "releaseLock",0|114-101-108-101-97-115-101-76-111-99-107-0
85512|data|DCB "brlDotBits",0|98-114-108-68-111-116-66-105-116-115-0
85523|data|DCB "createPidFile",0|99-114-101-97-116-101-80-105-100-70-105-108-101-0
85537|data|DCB "registerProgramStream",0|114-101-103-105-115-116-101-114-80-114-111-103-114-97-109-83-116-114-101-97-109-0
85559|data|DCB "linuxKeyMap_atE0",0|108-105-110-117-120-75-101-121-77-97-112-95-97-116-69-48-0
85576|data|DCB "compareKeyword",0|99-111-109-112-97-114-101-75-101-121-119-111-114-100-0
85591|data|DCB "getVT",0|103-101-116-86-84-0
85597|data|DCB "asyncClaimSignalNumber",0|97-115-121-110-99-67-108-97-105-109-83-105-103-110-97-108-78-117-109-98-101-114-0
85620|data|DCB "unloadSharedObject",0|117-110-108-111-97-100-83-104-97-114-101-100-79-98-106-101-99-116-0
85639|data|DCB "readFileDescriptor",0|114-101-97-100-70-105-108-101-68-101-115-99-114-105-112-116-111-114-0
85658|data|DCB "asyncDiscardHandle",0|97-115-121-110-99-68-105-115-99-97-114-100-72-97-110-100-108-101-0
85677|data|DCB "getQueueSize",0|103-101-116-81-117-101-117-101-83-105-122-101-0
85690|data|DCB "asyncCallWithObtainableSignalsBlocked",0|97-115-121-110-99-67-97-108-108-87-105-116-104-79-98-116-97-105-110-97-98-108-101-83-105-103-110-97-108-115-66-108-111-99-107-101-100-0
85728|data|DCB "beginProgram",0|98-101-103-105-110-80-114-111-103-114-97-109-0
85741|data|DCB "isPathDelimiter",0|105-115-80-97-116-104-68-101-108-105-109-105-116-101-114-0
85757|data|DCB "asyncHandleSignal",0|97-115-121-110-99-72-97-110-100-108-101-83-105-103-110-97-108-0
85775|data|DCB "fatal",0|102-97-116-97-108-0
85781|data|DCB "testFilePath",0|116-101-115-116-70-105-108-101-80-97-116-104-0
85794|data|DCB "unlockMutex",0|117-110-108-111-99-107-77-117-116-101-120-0
85806|data|DCB "openSystemLog",0|111-112-101-110-83-121-115-116-101-109-76-111-103-0
85820|data|DCB "openLogFile",0|111-112-101-110-76-111-103-70-105-108-101-0
85832|data|DCB "flushStream",0|102-108-117-115-104-83-116-114-101-97-109-0
85844|data|DCB "asyncMakeHandle",0|97-115-121-110-99-77-97-107-101-72-97-110-100-108-101-0
85860|data|DCB "brlDotBitToIndex",0|98-114-108-68-111-116-66-105-116-84-111-73-110-100-101-120-0
85877|data|DCB "validateOnOff",0|118-97-108-105-100-97-116-101-79-110-79-102-102-0
85891|data|DCB "api_setName",0|97-112-105-95-115-101-116-78-97-109-101-0
85903|data|DCB "openDataFile",0|111-112-101-110-68-97-116-97-70-105-108-101-0
85916|data|DCB "findDataOperand",0|102-105-110-100-68-97-116-97-79-112-101-114-97-110-100-0
85932|data|DCB "joinPath",0|106-111-105-110-80-97-116-104-0
85941|data|DCB "brlDotNumberToIndex",0|98-114-108-68-111-116-78-117-109-98-101-114-84-111-73-110-100-101-120-0
85961|data|DCB "asyncMonitorFileAlert",0|97-115-121-110-99-77-111-110-105-116-111-114-70-105-108-101-65-108-101-114-116-0
85983|data|DCB "asyncMonitorFileInput",0|97-115-121-110-99-77-111-110-105-116-111-114-70-105-108-101-73-110-112-117-116-0
86005|data|DCB "writeFileDescriptor",0|119-114-105-116-101-70-105-108-101-68-101-115-99-114-105-112-116-111-114-0
86025|data|DCB "isExplicitPath",0|105-115-69-120-112-108-105-99-105-116-80-97-116-104-0
86040|data|DCB "linuxKeyMapDescriptors",0|108-105-110-117-120-75-101-121-77-97-112-68-101-115-99-114-105-112-116-111-114-115-0
86063|data|DCB "endProgram",0|101-110-100-80-114-111-103-114-97-109-0
86074|data|DCB "popLogPrefix",0|112-111-112-76-111-103-80-114-101-102-105-120-0
86087|data|DCB "releaseFileLock",0|114-101-108-101-97-115-101-70-105-108-101-76-111-99-107-0
86103|data|DCB "asyncWriteFile",0|97-115-121-110-99-87-114-105-116-101-70-105-108-101-0
86118|data|DCB "attemptFileLock",0|97-116-116-101-109-112-116-70-105-108-101-76-111-99-107-0
86134|data|DCB "getDeviceParameters",0|103-101-116-68-101-118-105-99-101-80-97-114-97-109-101-116-101-114-115-0
86154|data|DCB "convertWcharToChar",0|99-111-110-118-101-114-116-87-99-104-97-114-84-111-67-104-97-114-0
86173|data|DCB "systemLogLevel",0|115-121-115-116-101-109-76-111-103-76-101-118-101-108-0
86188|data|DCB "makeUtf8FromWchars",0|109-97-107-101-85-116-102-56-70-114-111-109-87-99-104-97-114-115-0
86207|data|DCB "executeHostCommand",0|101-120-101-99-117-116-101-72-111-115-116-67-111-109-109-97-110-100-0
86226|data|DCB "programName",0|112-114-111-103-114-97-109-78-97-109-101-0
86238|data|DCB "prepareHostCommandStream",0|112-114-101-112-97-114-101-72-111-115-116-67-111-109-109-97-110-100-83-116-114-101-97-109-0
86263|data|DCB "fatal_brlapi_errno",0|102-97-116-97-108-95-98-114-108-97-112-105-95-101-114-114-110-111-0
86282|data|DCB "writeDotsCells",0|119-114-105-116-101-68-111-116-115-67-101-108-108-115-0
86297|data|DCB "splitString",0|115-112-108-105-116-83-116-114-105-110-103-0
86309|data|DCB "deallocateStrings",0|100-101-97-108-108-111-99-97-116-101-83-116-114-105-110-103-115-0
86327|data|DCB "asyncWriteSocket",0|97-115-121-110-99-87-114-105-116-101-83-111-99-107-101-116-0
86344|data|DCB "processConditionOperands",0|112-114-111-99-101-115-115-67-111-110-100-105-116-105-111-110-79-112-101-114-97-110-100-115-0
86369|data|DCB "makePath",0|109-97-107-101-80-97-116-104-0
86378|data|DCB "getQueueElement",0|103-101-116-81-117-101-117-101-69-108-101-109-101-110-116-0
86394|data|DCB "processDirectiveOperand",0|112-114-111-99-101-115-115-68-105-114-101-99-116-105-118-101-79-112-101-114-97-110-100-0
86418|data|DCB "standardErrorName",0|115-116-97-110-100-97-114-100-69-114-114-111-114-78-97-109-101-0
86436|data|DCB "brlDotNumbers",0|98-114-108-68-111-116-78-117-109-98-101-114-115-0
86450|data|DCB "newLockDescriptor",0|110-101-119-76-111-99-107-68-101-115-99-114-105-112-116-111-114-0
86468|data|DCB "createAnonymousPipe",0|99-114-101-97-116-101-65-110-111-110-121-109-111-117-115-80-105-112-101-0
86488|data|DCB "asyncGetThreadSpecificData",0|97-115-121-110-99-71-101-116-84-104-114-101-97-100-83-112-101-99-105-102-105-99-68-97-116-97-0
86515|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
86528|data|DCB "parseCellsOperand",0|112-97-114-115-101-67-101-108-108-115-79-112-101-114-97-110-100-0
86546|data|DCB "moveElement",0|109-111-118-101-69-108-101-109-101-110-116-0
86558|data|DCB "asyncBlockObtainableSignals",0|97-115-121-110-99-66-108-111-99-107-79-98-116-97-105-110-97-98-108-101-83-105-103-110-97-108-115-0
86586|data|DCB "getTransliteratedCharacter",0|103-101-116-84-114-97-110-115-108-105-116-101-114-97-116-101-100-67-104-97-114-97-99-116-101-114-0
86613|data|DCB "normalizeTimeValue",0|110-111-114-109-97-108-105-122-101-84-105-109-101-86-97-108-117-101-0
86632|data|DCB "logSymbol",0|108-111-103-83-121-109-98-111-108-0
86642|data|DCB "afterTimePeriod",0|97-102-116-101-114-84-105-109-101-80-101-114-105-111-100-0
86658|data|DCB "linuxKeyMap_hid",0|108-105-110-117-120-75-101-121-77-97-112-95-104-105-100-0
86674|data|DCB "newUinputKeyboard",0|110-101-119-85-105-110-112-117-116-75-101-121-98-111-97-114-100-0
86692|data|DCB "createDirectory",0|99-114-101-97-116-101-68-105-114-101-99-116-111-114-121-0
86708|data|DCB "asyncSetSignalBlocked",0|97-115-121-110-99-83-101-116-83-105-103-110-97-108-66-108-111-99-107-101-100-0
86730|data|DCB "writeConsole",0|119-114-105-116-101-67-111-110-115-111-108-101-0
86743|data|DCB "constructHostCommandPackageData",0|99-111-110-115-116-114-117-99-116-72-111-115-116-67-111-109-109-97-110-100-80-97-99-107-97-103-101-68-97-116-97-0
86775|data|DCB "releasePressedKeys",0|114-101-108-101-97-115-101-80-114-101-115-115-101-100-75-101-121-115-0
86794|data|DCB "processDataFile",0|112-114-111-99-101-115-115-68-97-116-97-70-105-108-101-0
86810|data|DCB "getPathDirectory",0|103-101-116-80-97-116-104-68-105-114-101-99-116-111-114-121-0
86827|data|DCB "linuxKeyMap_xt00",0|108-105-110-117-120-75-101-121-77-97-112-95-120-116-48-48-0
86844|data|DCB "readLine",0|114-101-97-100-76-105-110-101-0
86853|data|DCB "linuxKeyMap_at00",0|108-105-110-117-120-75-101-121-77-97-112-95-97-116-48-48-0
86870|data|DCB "asyncRevertSignal",0|97-115-121-110-99-82-101-118-101-114-116-83-105-103-110-97-108-0
86888|data|DCB "convertUtf8ToWchars",0|99-111-110-118-101-114-116-85-116-102-56-84-111-87-99-104-97-114-115-0
86908|data|DCB "api_cleanExit",0|97-112-105-95-99-108-101-97-110-69-120-105-116-0
86922|data|DCB "runHostCommand",0|114-117-110-72-111-115-116-67-111-109-109-97-110-100-0
86937|data|DCB "isOctalDigit",0|105-115-79-99-116-97-108-68-105-103-105-116-0
86950|data|DCB "asyncDeallocateAlarmData",0|97-115-121-110-99-68-101-97-108-108-111-99-97-116-101-65-108-97-114-109-68-97-116-97-0
86975|data|DCB "locatePathName",0|108-111-99-97-116-101-80-97-116-104-78-97-109-101-0
86990|data|DCB "asyncDeallocateTaskData",0|97-115-121-110-99-68-101-97-108-108-111-99-97-116-101-84-97-115-107-68-97-116-97-0
87014|data|DCB "logParameters",0|108-111-103-80-97-114-97-109-101-116-101-114-115-0
87028|data|DCB "deallocateQueue",0|100-101-97-108-108-111-99-97-116-101-81-117-101-117-101-0
87044|data|DCB "getDataText",0|103-101-116-68-97-116-97-84-101-120-116-0
87056|data|DCB "ungetDataCharacters",0|117-110-103-101-116-68-97-116-97-67-104-97-114-97-99-116-101-114-115-0
87076|data|DCB "vlogMessage",0|118-108-111-103-77-101-115-115-97-103-101-0
87088|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
87104|data|DCB "writeDots",0|119-114-105-116-101-68-111-116-115-0
87114|data|DCB "createSignalSafeThread",0|99-114-101-97-116-101-83-105-103-110-97-108-83-97-102-101-84-104-114-101-97-100-0
87137|data|DCB "writeKeyEvent",0|119-114-105-116-101-75-101-121-69-118-101-110-116-0
87151|data|DCB "writeInputEvent",0|119-114-105-116-101-73-110-112-117-116-69-118-101-110-116-0
87167|data|DCB "initializeHostCommandOptions",0|105-110-105-116-105-97-108-105-122-101-72-111-115-116-67-111-109-109-97-110-100-79-112-116-105-111-110-115-0
87196|data|DCB "setGlobalTableVariables",0|115-101-116-71-108-111-98-97-108-84-97-98-108-101-86-97-114-105-97-98-108-101-115-0
87220|data|DCB "getLockDescriptor",0|103-101-116-76-111-99-107-68-101-115-99-114-105-112-116-111-114-0
87238|data|DCB "programPath",0|112-114-111-103-114-97-109-80-97-116-104-0
87250|data|DCB "asyncHandlePendingSignal",0|97-115-121-110-99-72-97-110-100-108-101-80-101-110-100-105-110-103-83-105-103-110-97-108-0
87275|data|DCB "includeDataFile",0|105-110-99-108-117-100-101-68-97-116-97-70-105-108-101-0
87291|data|DCB "getLocaleCharset",0|103-101-116-76-111-99-97-108-101-67-104-97-114-115-101-116-0
87308|data|DCB "destroyUinputObject",0|100-101-115-116-114-111-121-85-105-110-112-117-116-79-98-106-101-99-116-0
87328|data|DCB "logUnsupportedFeature",0|108-111-103-85-110-115-117-112-112-111-114-116-101-100-70-101-97-116-117-114-101-0
87350|data|DCB "asyncReadFile",0|97-115-121-110-99-82-101-97-100-70-105-108-101-0
87364|data|DCB "compareTimeValues",0|99-111-109-112-97-114-101-84-105-109-101-86-97-108-117-101-115-0
87382|data|DCB "millisecondsTillNextSecond",0|109-105-108-108-105-115-101-99-111-110-100-115-84-105-108-108-78-101-120-116-83-101-99-111-110-100-0
87409|data|DCB "writeUtf8Cell",0|119-114-105-116-101-85-116-102-56-67-101-108-108-0
87423|data|DCB "processLines",0|112-114-111-99-101-115-115-76-105-110-101-115-0
87436|data|DCB "asyncDeallocateSignalData",0|97-115-121-110-99-68-101-97-108-108-111-99-97-116-101-83-105-103-110-97-108-68-97-116-97-0
87462|data|DCB "asyncSetAlarmTo",0|97-115-121-110-99-83-101-116-65-108-97-114-109-84-111-0
87478|data|DCB "asyncTestHandle",0|97-115-121-110-99-84-101-115-116-72-97-110-100-108-101-0
87494|data|DCB "newUinputObject",0|110-101-119-85-105-110-112-117-116-79-98-106-101-99-116-0
87510|data|DCB "linuxKeyMap_xtE0",0|108-105-110-117-120-75-101-121-77-97-112-95-120-116-69-48-0
87527|data|DCB "rescaleInteger",0|114-101-115-99-97-108-101-73-110-116-101-103-101-114-0
87542|data|DCB "testPath",0|116-101-115-116-80-97-116-104-0
87551|data|DCB "logCategoryPrefix_disable",0|108-111-103-67-97-116-101-103-111-114-121-80-114-101-102-105-120-95-100-105-115-97-98-108-101-0
87577|data|DCB "defaultCharset",0|100-101-102-97-117-108-116-67-104-97-114-115-101-116-0
87592|data|DCB "asyncNewAddTaskEvent",0|97-115-121-110-99-78-101-119-65-100-100-84-97-115-107-69-118-101-110-116-0
87613|data|DCB "makeWritablePath",0|109-97-107-101-87-114-105-116-97-98-108-101-80-97-116-104-0
87630|data|DCB "asyncDiscardEvent",0|97-115-121-110-99-68-105-115-99-97-114-100-69-118-101-110-116-0
87648|data|DCB "isFloat",0|105-115-70-108-111-97-116-0
87656|data|DCB "disableAllLogCategories",0|100-105-115-97-98-108-101-65-108-108-76-111-103-67-97-116-101-103-111-114-105-101-115-0
87680|data|DCB "unsetAddressName",0|117-110-115-101-116-65-100-100-114-101-115-115-78-97-109-101-0
87697|data|DCB "getConsole",0|103-101-116-67-111-110-115-111-108-101-0
87708|data|DCB "testProcessIdentifier",0|116-101-115-116-80-114-111-99-101-115-115-73-100-101-110-116-105-102-105-101-114-0
87730|data|DCB "asyncWait",0|97-115-121-110-99-87-97-105-116-0
87740|data|DCB "logSystemError",0|108-111-103-83-121-115-116-101-109-69-114-114-111-114-0
87755|data|DCB "linuxKeyMap_atE1",0|108-105-110-117-120-75-101-121-77-97-112-95-97-116-69-49-0
87772|data|DCB "readPort1",0|114-101-97-100-80-111-114-116-49-0
87782|data|DCB "obtainLock",0|111-98-116-97-105-110-76-111-99-107-0
87793|data|DCB "asyncNewEvent",0|97-115-121-110-99-78-101-119-69-118-101-110-116-0
87807|data|DCB "freeLockDescriptor",0|102-114-101-101-76-111-99-107-68-101-115-99-114-105-112-116-111-114-0
87826|data|DCB "enqueueItem",0|101-110-113-117-101-117-101-73-116-101-109-0
87838|data|DCB "getNamedPipeDirectory",0|103-101-116-78-97-109-101-100-80-105-112-101-68-105-114-101-99-116-111-114-121-0
87860|data|DCB "fixInstallPath",0|102-105-120-73-110-115-116-97-108-108-80-97-116-104-0
87875|data|DCB "writeUtf8Characters",0|119-114-105-116-101-85-116-102-56-67-104-97-114-97-99-116-101-114-115-0
87895|data|DCB "getDataString",0|103-101-116-68-97-116-97-83-116-114-105-110-103-0
87909|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
87925|data|DCB "findSharedSymbol",0|102-105-110-100-83-104-97-114-101-100-83-121-109-98-111-108-0
87942|data|DCB "writableDirectory",0|119-114-105-116-97-98-108-101-68-105-114-101-99-116-111-114-121-0
87960|data|DCB "getProgramQueue",0|103-101-116-80-114-111-103-114-97-109-81-117-101-117-101-0
87976|data|DCB "asyncIsSignalBlocked",0|97-115-121-110-99-73-115-83-105-103-110-97-108-66-108-111-99-107-101-100-0
87997|data|DCB "processAssignOperands",0|112-114-111-99-101-115-115-65-115-115-105-103-110-79-112-101-114-97-110-100-115-0
88019|data|DCB "asyncSetAlarmIn",0|97-115-121-110-99-83-101-116-65-108-97-114-109-73-110-0
88035|data|DCB "newQueue",0|110-101-119-81-117-101-117-101-0
88044|data|DCB "linuxKeyMapCount",0|108-105-110-117-120-75-101-121-77-97-112-67-111-117-110-116-0
88061|data|DCB "closeLogFile",0|99-108-111-115-101-76-111-103-70-105-108-101-0
88074|data|DCB "getBaseCharacter",0|103-101-116-66-97-115-101-67-104-97-114-97-99-116-101-114-0
88091|data|DCB "getCharacterWidth",0|103-101-116-67-104-97-114-97-99-116-101-114-87-105-100-116-104-0
88109|data|DCB "testDirectoryPath",0|116-101-115-116-68-105-114-101-99-116-111-114-121-80-97-116-104-0
88127|data|DCB "ensureDirectory",0|101-110-115-117-114-101-68-105-114-101-99-116-111-114-121-0
88143|data|DCB "openFile",0|111-112-101-110-70-105-108-101-0
88152|data|DCB "getSharedSymbolName",0|103-101-116-83-104-97-114-101-100-83-121-109-98-111-108-78-97-109-101-0
88172|data|DCB "acquireFileLock",0|97-99-113-117-105-114-101-70-105-108-101-76-111-99-107-0
88188|data|DCB "isUnsignedInteger",0|105-115-85-110-115-105-103-110-101-100-73-110-116-101-103-101-114-0
88206|data|DCB "asyncMakeElementHandle",0|97-115-121-110-99-77-97-107-101-69-108-101-109-101-110-116-72-97-110-100-108-101-0
88229|data|DCB "logMallocError",0|108-111-103-77-97-108-108-111-99-69-114-114-111-114-0
88244|data|DCB "asyncReleaseSignalNumber",0|97-115-121-110-99-82-101-108-101-97-115-101-83-105-103-110-97-108-78-117-109-98-101-114-0
88269|data|DCB "asyncHandleMonitoredSignal",0|97-115-121-110-99-72-97-110-100-108-101-77-111-110-105-116-111-114-101-100-83-105-103-110-97-108-0
88296|data|DCB "setQueueData",0|115-101-116-81-117-101-117-101-68-97-116-97-0
88309|data|DCB "validateChoice",0|118-97-108-105-100-97-116-101-67-104-111-105-99-101-0
88324|data|DCB "getProcessIdentifier",0|103-101-116-80-114-111-99-101-115-115-73-100-101-110-116-105-102-105-101-114-0
88345|data|DCB "getAddressName",0|103-101-116-65-100-100-114-101-115-115-78-97-109-101-0
88360|data|DCB "getDotOperand",0|103-101-116-68-111-116-79-112-101-114-97-110-100-0
88374|data|DCB "asyncCallWithAllSignalsBlocked",0|97-115-121-110-99-67-97-108-108-87-105-116-104-65-108-108-83-105-103-110-97-108-115-66-108-111-99-107-101-100-0
88405|data|DCB "linuxKeyMap_xtE1",0|108-105-110-117-120-75-101-121-77-97-112-95-120-116-69-49-0
88422|data|DCB "closeSystemLog",0|99-108-111-115-101-83-121-115-116-101-109-76-111-103-0
88437|data|DCB "isLogLevel",0|105-115-76-111-103-76-101-118-101-108-0
88448|data|DCB "formatThreadName",0|102-111-114-109-97-116-84-104-114-101-97-100-78-97-109-101-0
88465|data|DCB "deleteItem",0|100-101-108-101-116-101-73-116-101-109-0
88476|data|DCB "writeEscapedCharacters",0|119-114-105-116-101-69-115-99-97-112-101-100-67-104-97-114-97-99-116-101-114-115-0
88499|data|DCB "deleteElement",0|100-101-108-101-116-101-69-108-101-109-101-110-116-0
88513|data|DCB "writeRepeatPeriod",0|119-114-105-116-101-82-101-112-101-97-116-80-101-114-105-111-100-0
88531|data|DCB "asyncDeleteSignalEntry",0|97-115-121-110-99-68-101-108-101-116-101-83-105-103-110-97-108-69-110-116-114-121-0
88554|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
88564|data|DCB "GLIBC_2.12",0|71-76-73-66-67-95-50-46-49-50-0
88575|data|DCB "GLIBC_2.15",0|71-76-73-66-67-95-50-46-49-53-0
88586|data|DCB "GLIBC_2.17",0|71-76-73-66-67-95-50-46-49-55-0
88597|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
88607|data|DCB 0|0
88608|data|DCW 0|0-0
88610|data|DCW 2; opterr@@GLIBC_2.4|2-0
88612|data|DCW 5; __stack_chk_guard@@GLIBC_2.4|5-0
88614|data|DCW 2; __progname@@GLIBC_2.4|2-0
88616|data|DCW 2; optind@@GLIBC_2.4|2-0
88618|data|DCW 2; optarg@@GLIBC_2.4|2-0
88620|data|DCW 2; stderr@@GLIBC_2.4|2-0
88622|data|DCW 2; optopt@@GLIBC_2.4|2-0
88624|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
88626|data|DCW 2; stdout@@GLIBC_2.4|2-0
88628|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
88630|data|DCW 2; program_invocation_short_name@@GLIBC_2.4|2-0
88632|data|DCW 0; local  symbol: __gmon_start__|0-0
88634|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
88636|data|DCW 0; local  symbol: brlapi_readKey|0-0
88638|data|DCW 2; iconv@@GLIBC_2.4|2-0
88640|data|DCW 2; ioctl@@GLIBC_2.4|2-0
88642|data|DCW 1; global symbol: ensureDirectory|1-0
88644|data|DCW 1; global symbol: asyncNewEvent|1-0
88646|data|DCW 1; global symbol: asyncDeleteSignalEntry|1-0
88648|data|DCW 3; sigaction@@GLIBC_2.4|3-0
88650|data|DCW 1; global symbol: convertCharToWchar|1-0
88652|data|DCW 1; global symbol: enablePorts|1-0
88654|data|DCW 1; global symbol: flushStream|1-0
88656|data|DCW 1; global symbol: brlDotNumbers|1-0
88658|data|DCW 0; local  symbol: XQueryTree|0-0
88660|data|DCW 1; global symbol: getDevicePath|1-0
88662|data|DCW 1; global symbol: writeUtf8Character|1-0
88664|data|DCW 1; global symbol: validateYesNo|1-0
88666|data|DCW 1; global symbol: deallocateQueue|1-0
88668|data|DCW 1; global symbol: getProgramQueue|1-0
88670|data|DCW 2; snprintf@@GLIBC_2.4|2-0
88672|data|DCW 1; global symbol: asyncAwaitCondition|1-0
88674|data|DCW 3; nanosleep@@GLIBC_2.4|3-0
88676|data|DCW 1; global symbol: logSystemError|1-0
88678|data|DCW 1; global symbol: asyncExecuteAlarmCallback|1-0
88680|data|DCW 1; global symbol: asyncMonitorFileInput|1-0
88682|data|DCW 0; local  symbol: XOpenDisplay|0-0
88684|data|DCW 2; _exit@@GLIBC_2.4|2-0
88686|data|DCW 1; global symbol: getDataText|1-0
88688|data|DCW 2; strftime@@GLIBC_2.4|2-0
88690|data|DCW 1; global symbol: initializeSystemObject|1-0
88692|data|DCW 1; global symbol: closeSystemLog|1-0
88694|data|DCW 1; global symbol: _init|1-0
88696|data|DCW 1; global symbol: openCharacterDevice|1-0
88698|data|DCW 1; global symbol: asyncRevertSignal|1-0
88700|data|DCW 1; global symbol: isAbbreviation|1-0
88702|data|DCW 1; global symbol: readLine|1-0
88704|data|DCW 1; global symbol: initializeHostCommandOptions|1-0
88706|data|DCW 1; global symbol: moveElement|1-0
88708|data|DCW 1; global symbol: getCharacterWidth|1-0
88710|data|DCW 1; global symbol: linuxKeyMap_xt00|1-0
88712|data|DCW 1; global symbol: readPort1|1-0
88714|data|DCW 1; global symbol: reportDataError|1-0
88716|data|DCW 2; mempcpy@@GLIBC_2.4|2-0
88718|data|DCW 1; global symbol: asyncHandleSignal|1-0
88720|data|DCW 1; global symbol: asyncReadFile|1-0
88722|data|DCW 3; pthread_sigmask@@GLIBC_2.4|3-0
88724|data|DCW 1; global symbol: asyncBlockObtainableSignals|1-0
88726|data|DCW 2; strncmp@@GLIBC_2.4|2-0
88728|data|DCW 1; global symbol: getCellsOperand|1-0
88730|data|DCW 0; local  symbol: XTestFakeKeyEvent|0-0
88732|data|DCW 1; global symbol: asyncMakeElementHandle|1-0
88734|data|DCW 2; strtod@@GLIBC_2.4|2-0
88736|data|DCW 1; global symbol: getDotOperand|1-0
88738|data|DCW 1; global symbol: compareKeyword|1-0
88740|data|DCW 1; global symbol: data_start|1-0
88742|data|DCW 1; global symbol: setQueueData|1-0
88744|data|DCW 1; global symbol: writeConsole|1-0
88746|data|DCW 1; global symbol: openLogFile|1-0
88748|data|DCW 1; global symbol: newQueue|1-0
88750|data|DCW 2; strtok@@GLIBC_2.4|2-0
88752|data|DCW 2; strtol@@GLIBC_2.4|2-0
88754|data|DCW 0; local  symbol: XSetErrorHandler|0-0
88756|data|DCW 1; global symbol: createPidFile|1-0
88758|data|DCW 1; global symbol: adjustTimeValue|1-0
88760|data|DCW 1; global symbol: ringBell|1-0
88762|data|DCW 1; global symbol: readFileDescriptor|1-0
88764|data|DCW 1; global symbol: asyncWait|1-0
88766|data|DCW 1; global symbol: getProcessIdentifier|1-0
88768|data|DCW 2; iswcntrl@@GLIBC_2.4|2-0
88770|data|DCW 3; waitpid@@GLIBC_2.4|3-0
88772|data|DCW 2; chdir@@GLIBC_2.4|2-0
88774|data|DCW 2; wmemchr@@GLIBC_2.4|2-0
88776|data|DCW 2; __snprintf_chk@@GLIBC_2.4|2-0
88778|data|DCW 1; global symbol: resolveDeviceName|1-0
88780|data|DCW 2; strchr@@GLIBC_2.4|2-0
88782|data|DCW 1; global symbol: registerProgramStream|1-0
88784|data|DCW 3; pthread_rwlock_wrlock@@GLIBC_2.4|3-0
88786|data|DCW 1; global symbol: asyncDeallocateSignalData|1-0
88788|data|DCW 1; global symbol: prepareHostCommandStream|1-0
88790|data|DCW 2; memchr@@GLIBC_2.4|2-0
88792|data|DCW 1; global symbol: getUtf8Length|1-0
88794|data|DCW 1; global symbol: isAbsolutePath|1-0
88796|data|DCW 1; global symbol: registerProgramMemory|1-0
88798|data|DCW 1; global symbol: releasePressedKeys|1-0
88800|data|DCW 1; global symbol: asyncCallWithSignalBlocked|1-0
88802|data|DCW 1; global symbol: validateFloat|1-0
88804|data|DCW 2; exit@@GLIBC_2.4|2-0
88806|data|DCW 2; closelog@@GLIBC_2.4|2-0
88808|data|DCW 1; global symbol: writeDotsCells|1-0
88810|data|DCW 1; global symbol: splitString|1-0
88812|data|DCW 2; __vsnprintf_chk@@GLIBC_2.4|2-0
88814|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
88816|data|DCW 1; global symbol: _start|1-0
88818|data|DCW 2; strncasecmp@@GLIBC_2.4|2-0
88820|data|DCW 1; global symbol: constructHostCommandPackageData|1-0
88822|data|DCW 1; global symbol: destroyUinputObject|1-0
88824|data|DCW 1; global symbol: isHexadecimalDigit|1-0
88826|data|DCW 3; pthread_rwlock_rdlock@@GLIBC_2.4|3-0
88828|data|DCW 1; global symbol: isKeyword|1-0
88830|data|DCW 1; global symbol: asyncSetAlarmTo|1-0
88832|data|DCW 1; global symbol: processDataFile|1-0
88834|data|DCW 1; global symbol: locatePathExtension|1-0
88836|data|DCW 3; pthread_setspecific@@GLIBC_2.4|3-0
88838|data|DCW 1; global symbol: getDeviceParameters|1-0
88840|data|DCW 1; global symbol: getDataString|1-0
88842|data|DCW 1; global symbol: compareTimeValues|1-0
88844|data|DCW 1; global symbol: logPossibleCause|1-0
88846|data|DCW 1; global symbol: convertUtf8ToWchar|1-0
88848|data|DCW 1; global symbol: logSymbol|1-0
88850|data|DCW 3; pthread_mutex_unlock@@GLIBC_2.4|3-0
88852|data|DCW 1; global symbol: processEndIfOperands|1-0
88854|data|DCW 0; local  symbol: u_getIntPropertyValue_52|0-0
88856|data|DCW 1; global symbol: asyncResetAlarmIn|1-0
88858|data|DCW 1; global symbol: joinPath|1-0
88860|data|DCW 2; iconv_open@@GLIBC_2.4|2-0
88862|data|DCW 0; local  symbol: XInternAtom|0-0
88864|data|DCW 2; iswspace@@GLIBC_2.4|2-0
88866|data|DCW 1; global symbol: rescaleInteger|1-0
88868|data|DCW 1; global symbol: getWritableDirectory|1-0
88870|data|DCW 1; global symbol: getLogCategoryName|1-0
88872|data|DCW 1; global symbol: asyncResetAlarmEvery|1-0
88874|data|DCW 2; fclose@@GLIBC_2.4|2-0
88876|data|DCW 1; global symbol: __libc_csu_fini|1-0
88878|data|DCW 2; strpbrk@@GLIBC_2.4|2-0
88880|data|DCW 1; global symbol: linuxKeyMap_hid|1-0
88882|data|DCW 1; global symbol: writableDirectory|1-0
88884|data|DCW 1; global symbol: compareKeywords|1-0
88886|data|DCW 0; local  symbol: XFree|0-0
88888|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
88890|data|DCW 1; global symbol: releaseLock|1-0
88892|data|DCW 0; local  symbol: XNextEvent|0-0
88894|data|DCW 2; mktime@@GLIBC_2.4|2-0
88896|data|DCW 2; __strdup@@GLIBC_2.4|2-0
88898|data|DCW 1; global symbol: getPathDirectory|1-0
88900|data|DCW 1; global symbol: validateChoice|1-0
88902|data|DCW 1; global symbol: getAddressName|1-0
88904|data|DCW 0; local  symbol: XRefreshKeyboardMapping|0-0
88906|data|DCW 1; global symbol: defaultCharset|1-0
88908|data|DCW 1; global symbol: logUnsupportedFeature|1-0
88910|data|DCW 1; global symbol: millisecondsTillNextSecond|1-0
88912|data|DCW 0; local  symbol: XkbLockModifiers|0-0
88914|data|DCW 1; global symbol: openSystemLog|1-0
88916|data|DCW 2; getenv@@GLIBC_2.4|2-0
88918|data|DCW 0; local  symbol: brlapi_enterTtyModeWithPath|0-0
88920|data|DCW 2; nl_langinfo@@GLIBC_2.4|2-0
88922|data|DCW 1; global symbol: enableUinputEventType|1-0
88924|data|DCW 1; global symbol: getPrimaryOverrideDirectory|1-0
88926|data|DCW 1; global symbol: api_setName|1-0
88928|data|DCW 1; global symbol: testProcessIdentifier|1-0
88930|data|DCW 1; global symbol: writeSocketDescriptor|1-0
88932|data|DCW 1; global symbol: isQualifiedDevice|1-0
88934|data|DCW 1; global symbol: _edata|1-0
88936|data|DCW 1; global symbol: validateInteger|1-0
88938|data|DCW 2; poll@@GLIBC_2.4|2-0
88940|data|DCW 1; global symbol: includeDataFile|1-0
88942|data|DCW 2; signal@@GLIBC_2.4|2-0
88944|data|DCW 1; global symbol: processIfNotVarOperands|1-0
88946|data|DCW 2; ftruncate@@GLIBC_2.4|2-0
88948|data|DCW 1; global symbol: writeRepeatDelay|1-0
88950|data|DCW 1; global symbol: getBootParameters|1-0
88952|data|DCW 1; global symbol: toX_f|1-0
88954|data|DCW 1; global symbol: fixInstallPaths|1-0
88956|data|DCW 2; __realpath_chk@@GLIBC_2.4|2-0
88958|data|DCW 1; global symbol: closeLogFile|1-0
88960|data|DCW 2; wcslen@@GLIBC_2.4|2-0
88962|data|DCW 1; global symbol: getWorkingDirectory|1-0
88964|data|DCW 1; global symbol: openDataFile|1-0
88966|data|DCW 1; global symbol: deallocateStrings|1-0
88968|data|DCW 7; __open_2@@GLIBC_2.7|7-0
88970|data|DCW 2; free@@GLIBC_2.4|2-0
88972|data|DCW 1; global symbol: writeDots|1-0
88974|data|DCW 1; global symbol: createAnonymousPipe|1-0
88976|data|DCW 2; openlog@@GLIBC_2.4|2-0
88978|data|DCW 1; global symbol: writeDotsCell|1-0
88980|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
88982|data|DCW 2; readlink@@GLIBC_2.4|2-0
88984|data|DCW 1; global symbol: makeFilePath|1-0
88986|data|DCW 2; outb@@GLIBC_2.4|2-0
88988|data|DCW 1; global symbol: __libc_csu_init|1-0
88990|data|DCW 1; global symbol: processAssignOperands|1-0
88992|data|DCW 1; global symbol: getVT|1-0
88994|data|DCW 1; global symbol: asyncCallWithAllSignalsBlocked|1-0
88996|data|DCW 1; global symbol: getQueueSize|1-0
88998|data|DCW 3; pthread_rwlock_unlock@@GLIBC_2.4|3-0
89000|data|DCW 1; global symbol: changeStringSetting|1-0
89002|data|DCW 1; global symbol: convertTextToWchars|1-0
89004|data|DCW 2; abort@@GLIBC_2.4|2-0
89006|data|DCW 1; global symbol: getCharacterByName|1-0
89008|data|DCW 1; global symbol: getHomeDirectory|1-0
89010|data|DCW 1; global symbol: ungetDataCharacters|1-0
89012|data|DCW 0; local  symbol: XGetInputFocus|0-0
89014|data|DCW 3; pthread_rwlock_destroy@@GLIBC_2.4|3-0
89016|data|DCW 1; global symbol: categoryLogLevel|1-0
89018|data|DCW 1; global symbol: unlockCharset|1-0
89020|data|DCW 1; global symbol: api_cleanExit|1-0
89022|data|DCW 1; global symbol: asyncAddSignalEntry|1-0
89024|data|DCW 1; global symbol: programPath|1-0
89026|data|DCW 1; global symbol: ensureFileExtension|1-0
89028|data|DCW 1; global symbol: handleBestCharacter|1-0
89030|data|DCW 4; dlclose@@GLIBC_2.4|4-0
89032|data|DCW 3; flockfile@@GLIBC_2.4|3-0
89034|data|DCW 1; global symbol: setCharset|1-0
89036|data|DCW 1; global symbol: brlDotNumberToIndex|1-0
89038|data|DCW 1; global symbol: createDirectory|1-0
89040|data|DCW 1; global symbol: asyncIsSignalBlocked|1-0
89042|data|DCW 0; local  symbol: brlapi_enterTtyMode|0-0
89044|data|DCW 1; global symbol: linuxKeyMapDescriptors|1-0
89046|data|DCW 1; global symbol: writeEscapedCharacters|1-0
89048|data|DCW 1; global symbol: joinStrings|1-0
89050|data|DCW 1; global symbol: beginProgram|1-0
89052|data|DCW 1; global symbol: endProgram|1-0
89054|data|DCW 1; global symbol: asyncGetHandleElement|1-0
89056|data|DCW 1; global symbol: makeUtf8FromWchars|1-0
89058|data|DCW 1; global symbol: linuxKeyMap_xtE0|1-0
89060|data|DCW 1; global symbol: millisecondsTillNextMinute|1-0
89062|data|DCW 1; global symbol: cancelProgram|1-0
89064|data|DCW 1; global symbol: linuxKeyMap_xtE1|1-0
89066|data|DCW 3; pthread_mutex_lock@@GLIBC_2.4|3-0
89068|data|DCW 2; memset@@GLIBC_2.4|2-0
89070|data|DCW 1; global symbol: normalizeTimeValue|1-0
89072|data|DCW 1; global symbol: disablePorts|1-0
89074|data|DCW 0; local  symbol: brlapi_perror|0-0
89076|data|DCW 1; global symbol: fixInstallPath|1-0
89078|data|DCW 1; global symbol: asyncObtainSignalNumber|1-0
89080|data|DCW 0; local  symbol: u_charFromName_52|0-0
89082|data|DCW 2; sscanf@@GLIBC_2.4|2-0
89084|data|DCW 1; global symbol: vlogMessage|1-0
89086|data|DCW 1; global symbol: getMonotonicElapsed|1-0
89088|data|DCW 1; global symbol: findItem|1-0
89090|data|DCW 0; local  symbol: unorm_normalize_52|0-0
89092|data|DCW 3; send@@GLIBC_2.4|3-0
89094|data|DCW 1; global symbol: asyncDeallocateWaitData|1-0
89096|data|DCW 1; global symbol: asyncAddTask|1-0
89098|data|DCW 1; global symbol: parseCellsOperand|1-0
89100|data|DCW 1; global symbol: stderrLogLevel|1-0
89102|data|DCW 1; global symbol: _bss_end__|1-0
89104|data|DCW 2; fwrite@@GLIBC_2.4|2-0
89106|data|DCW 1; global symbol: getLocaleCharset|1-0
89108|data|DCW 1; global symbol: asyncRelinquishSignalNumber|1-0
89110|data|DCW 1; global symbol: getDataOperand|1-0
89112|data|DCW 1; global symbol: logBytes|1-0
89114|data|DCW 1; global symbol: logParameters|1-0
89116|data|DCW 2; localtime_r@@GLIBC_2.4|2-0
89118|data|DCW 1; global symbol: asyncExecuteTaskCallback|1-0
89120|data|DCW 1; global symbol: standardOutputName|1-0
89122|data|DCW 2; malloc@@GLIBC_2.4|2-0
89124|data|DCW 1; global symbol: asyncReadSocket|1-0
89126|data|DCW 2; wmemcmp@@GLIBC_2.4|2-0
89128|data|DCW 3; __errno_location@@GLIBC_2.4|3-0
89130|data|DCW 1; global symbol: asyncHandleMonitoredSignal|1-0
89132|data|DCW 1; global symbol: readSocketDescriptor|1-0
89134|data|DCW 1; global symbol: __bss_start__|1-0
89136|data|DCW 1; global symbol: replaceFileExtension|1-0
89138|data|DCW 1; global symbol: expandTimeValue|1-0
89140|data|DCW 2; strcmp@@GLIBC_2.4|2-0
89142|data|DCW 1; global symbol: logCategoryPrefix_disable|1-0
89144|data|DCW 1; global symbol: getBaseCharacter|1-0
89146|data|DCW 2; __fxstat@@GLIBC_2.4|2-0
89148|data|DCW 2; mkdir@@GLIBC_2.4|2-0
89150|data|DCW 2; __ctype_toupper_loc@@GLIBC_2.4|2-0
89152|data|DCW 2; memcmp@@GLIBC_2.4|2-0
89154|data|DCW 1; global symbol: cancelProcess|1-0
89156|data|DCW 1; global symbol: getNamedPipeDirectory|1-0
89158|data|DCW 1; global symbol: disableAllLogCategories|1-0
89160|data|DCW 1; global symbol: testProgramPath|1-0
89162|data|DCW 1; global symbol: asyncDiscardHandle|1-0
89164|data|DCW 2; strcasecmp@@GLIBC_2.4|2-0
89166|data|DCW 1; global symbol: registerCharacterSet|1-0
89168|data|DCW 1; global symbol: systemLogLevel|1-0
89170|data|DCW 2; fileno@@GLIBC_2.4|2-0
89172|data|DCW 2; calloc@@GLIBC_2.4|2-0
89174|data|DCW 3; __libc_current_sigrtmax@@GLIBC_2.4|3-0
89176|data|DCW 1; global symbol: setGlobalTableVariables|1-0
89178|data|DCW 1; global symbol: logLevelNames|1-0
89180|data|DCW 1; global symbol: unloadSharedObject|1-0
89182|data|DCW 1; global symbol: getCurrentTime|1-0
89184|data|DCW 1; global symbol: asyncSetAlarmIn|1-0
89186|data|DCW 1; global symbol: asyncCallWithSignalsBlocked|1-0
89188|data|DCW 1; global symbol: makeTimeValue|1-0
89190|data|DCW 1; global symbol: asyncWriteFile|1-0
89192|data|DCW 1; global symbol: formatThreadName|1-0
89194|data|DCW 1; global symbol: isPosixLocale|1-0
89196|data|DCW 1; global symbol: logCategoryFlags|1-0
89198|data|DCW 1; global symbol: createThread|1-0
89200|data|DCW 2; fopen@@GLIBC_2.4|2-0
89202|data|DCW 1; global symbol: linuxKeyMap_ps2|1-0
89204|data|DCW 1; global symbol: processConditionOperands|1-0
89206|data|DCW 1; global symbol: loadSharedObject|1-0
89208|data|DCW 1; global symbol: tobrltty_init|1-0
89210|data|DCW 2; fflush@@GLIBC_2.4|2-0
89212|data|DCW 1; global symbol: isUnqualifiedDevice|1-0
89214|data|DCW 1; global symbol: formatSeconds|1-0
89216|data|DCW 1; global symbol: utf8Conv|1-0
89218|data|DCW 2; strtoul@@GLIBC_2.4|2-0
89220|data|DCW 1; global symbol: deleteItem|1-0
89222|data|DCW 3; pthread_rwlock_init@@GLIBC_2.4|3-0
89224|data|DCW 1; global symbol: enableUinputKey|1-0
89226|data|DCW 1; global symbol: afterTimePeriod|1-0
89228|data|DCW 2; __ctype_get_mb_cur_max@@GLIBC_2.4|2-0
89230|data|DCW 1; global symbol: makeWritablePath|1-0
89232|data|DCW 1; global symbol: findElement|1-0
89234|data|DCW 0; local  symbol: XkbLibraryVersion|0-0
89236|data|DCW 1; global symbol: fatal_brlapi_errno|1-0
89238|data|DCW 1; global symbol: enqueueItem|1-0
89240|data|DCW 1; global symbol: convertWcharToUtf8|1-0
89242|data|DCW 1; global symbol: getQueueElement|1-0
89244|data|DCW 1; global symbol: getWcharCharset|1-0
89246|data|DCW 2; select@@GLIBC_2.4|2-0
89248|data|DCW 0; local  symbol: XKeysymToKeycode|0-0
89250|data|DCW 1; global symbol: newLockDescriptor|1-0
89252|data|DCW 3; pthread_getspecific@@GLIBC_2.4|3-0
89254|data|DCW 2; gettimeofday@@GLIBC_2.4|2-0
89256|data|DCW 1; global symbol: millisecondsBetween|1-0
89258|data|DCW 3; fcntl@@GLIBC_2.4|3-0
89260|data|DCW 1; global symbol: attemptFileLock|1-0
89262|data|DCW 1; global symbol: writeHexadecimalCharacter|1-0
89264|data|DCW 1; global symbol: logMessage|1-0
89266|data|DCW 1; global symbol: getElementQueue|1-0
89268|data|DCW 1; global symbol: executeHostCommand|1-0
89270|data|DCW 0; local  symbol: XDisplayName|0-0
89272|data|DCW 2; memmove@@GLIBC_2.4|2-0
89274|data|DCW 1; global symbol: newUinputKeyboard|1-0
89276|data|DCW 1; global symbol: getSharedSymbolName|1-0
89278|data|DCW 1; global symbol: formatInputError|1-0
89280|data|DCW 1; global symbol: makePath|1-0
89282|data|DCW 1; global symbol: writeUtf8Cells|1-0
89284|data|DCW 1; global symbol: logData|1-0
89286|data|DCW 1; global symbol: getDataCharacter|1-0
89288|data|DCW 1; global symbol: processIfVarOperands|1-0
89290|data|DCW 2; __vfprintf_chk@@GLIBC_2.4|2-0
89292|data|DCW 1; global symbol: getQueueData|1-0
89294|data|DCW 2; perror@@GLIBC_2.4|2-0
89296|data|DCW 1; global symbol: processElseOperands|1-0
89298|data|DCW 1; global symbol: asyncEmptySignalHandler|1-0
89300|data|DCW 1; global symbol: getParameters|1-0
89302|data|DCW 1; global symbol: extendStringSetting|1-0
89304|data|DCW 1; global symbol: restartTimePeriod|1-0
89306|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
89308|data|DCW 1; global symbol: asyncDeallocateTaskData|1-0
89310|data|DCW 1; global symbol: writeFileDescriptor|1-0
89312|data|DCW 1; global symbol: writeUtf8Cell|1-0
89314|data|DCW 1; global symbol: asyncSignalEvent|1-0
89316|data|DCW 1; global symbol: linuxKeyMap_at00|1-0
89318|data|DCW 2; iconv_close@@GLIBC_2.4|2-0
89320|data|DCW 1; global symbol: asyncDiscardEvent|1-0
89322|data|DCW 0; local  symbol: brlapi_openConnection|0-0
89324|data|DCW 1; global symbol: popLogPrefix|1-0
89326|data|DCW 2; __memcpy_chk@@GLIBC_2.4|2-0
89328|data|DCW 1; global symbol: lockCharset|1-0
89330|data|DCW 1; global symbol: getCharset|1-0
89332|data|DCW 3; pthread_self@@GLIBC_2.4|3-0
89334|data|DCW 0; local  symbol: XTestQueryExtension|0-0
89336|data|DCW 2; ioperm@@GLIBC_2.4|2-0
89338|data|DCW 1; global symbol: findElementWithItem|1-0
89340|data|DCW 1; global symbol: getLockDescriptor|1-0
89342|data|DCW 3; read@@GLIBC_2.4|3-0
89344|data|DCW 1; global symbol: installService|1-0
89346|data|DCW 1; global symbol: logMallocError|1-0
89348|data|DCW 1; global symbol: convertUtf8ToWchars|1-0
89350|data|DCW 2; getcwd@@GLIBC_2.4|2-0
89352|data|DCW 2; ferror@@GLIBC_2.4|2-0
89354|data|DCW 1; global symbol: writeEscapedCharacter|1-0
89356|data|DCW 4; dlsym@@GLIBC_2.4|4-0
89358|data|DCW 1; global symbol: standardInputName|1-0
89360|data|DCW 1; global symbol: lockMutex|1-0
89362|data|DCW 1; global symbol: getAllOverrideDirectories|1-0
89364|data|DCW 3; close@@GLIBC_2.4|3-0
89366|data|DCW 0; local  symbol: XConnectionNumber|0-0
89368|data|DCW 1; global symbol: releaseFileLock|1-0
89370|data|DCW 2; fdopen@@GLIBC_2.4|2-0
89372|data|DCW 1; global symbol: isNumber|1-0
89374|data|DCW 2; setlocale@@GLIBC_2.4|2-0
89376|data|DCW 1; global symbol: locatePathName|1-0
89378|data|DCW 1; global symbol: asyncMonitorFileOutput|1-0
89380|data|DCW 1; global symbol: getQueueHead|1-0
89382|data|DCW 0; local  symbol: brlapi_ignoreKeys|0-0
89384|data|DCW 2; wmemcpy@@GLIBC_2.4|2-0
89386|data|DCW 2; __cxa_atexit@@GLIBC_2.4|2-0
89388|data|DCW 2; strcpy@@GLIBC_2.4|2-0
89390|data|DCW 1; global symbol: openFile|1-0
89392|data|DCW 2; sigemptyset@@GLIBC_2.4|2-0
89394|data|DCW 2; execvp@@GLIBC_2.4|2-0
89396|data|DCW 2; fgets@@GLIBC_2.4|2-0
89398|data|DCW 1; global symbol: freeLockDescriptor|1-0
89400|data|DCW 1; global symbol: convertWcharToChar|1-0
89402|data|DCW 2; memcpy@@GLIBC_2.4|2-0
89404|data|DCW 1; global symbol: asyncMonitorSignal|1-0
89406|data|DCW 1; global symbol: _IO_stdin_used|1-0
89408|data|DCW 2; strrchr@@GLIBC_2.4|2-0
89410|data|DCW 1; global symbol: brlDotBits|1-0
89412|data|DCW 1; global symbol: isPathDelimiter|1-0
89414|data|DCW 1; global symbol: validateOnOff|1-0
89416|data|DCW 2; sigfillset@@GLIBC_2.4|2-0
89418|data|DCW 1; global symbol: __end__|1-0
89420|data|DCW 1; global symbol: processIncludeOperands|1-0
89422|data|DCW 1; global symbol: logCategoryName_all|1-0
89424|data|DCW 2; inb@@GLIBC_2.4|2-0
89426|data|DCW 2; towlower@@GLIBC_2.4|2-0
89428|data|DCW 1; global symbol: setLogCategory|1-0
89430|data|DCW 1; global symbol: isOctalDigit|1-0
89432|data|DCW 0; local  symbol: brlapi_acceptKeys|0-0
89434|data|DCW 1; global symbol: newUinputObject|1-0
89436|data|DCW 1; global symbol: createSignalSafeThread|1-0
89438|data|DCW 1; global symbol: linuxKeyMapCount|1-0
89440|data|DCW 1; global symbol: deleteElement|1-0
89442|data|DCW 2; textdomain@@GLIBC_2.4|2-0
89444|data|DCW 1; global symbol: getStackHead|1-0
89446|data|DCW 1; global symbol: standardStreamArgument|1-0
89448|data|DCW 1; global symbol: getLocaleName|1-0
89450|data|DCW 8; clock_gettime@@GLIBC_2.17|8-0
89452|data|DCW 2; sigdelset@@GLIBC_2.4|2-0
89454|data|DCW 0; local  symbol: XGetWindowProperty|0-0
89456|data|DCW 1; global symbol: resetOptions|1-0
89458|data|DCW 1; global symbol: pushLogPrefix|1-0
89460|data|DCW 1; global symbol: testFilePath|1-0
89462|data|DCW 1; global symbol: runHostCommand|1-0
89464|data|DCW 3; pthread_key_create@@GLIBC_2.4|3-0
89466|data|DCW 1; global symbol: asyncGetThreadSpecificData|1-0
89468|data|DCW 1; global symbol: asyncMonitorSocketAlert|1-0
89470|data|DCW 4; dlopen@@GLIBC_2.4|4-0
89472|data|DCW 0; local  symbol: brlapi_getDisplaySize|0-0
89474|data|DCW 1; global symbol: setWorkingDirectory|1-0
89476|data|DCW 1; global symbol: brlDotBitToIndex|1-0
89478|data|DCW 1; global symbol: processLines|1-0
89480|data|DCW 1; global symbol: testPath|1-0
89482|data|DCW 2; __xstat@@GLIBC_2.4|2-0
89484|data|DCW 1; global symbol: unsetAddressName|1-0
89486|data|DCW 0; local  symbol: XkbLookupKeySym|0-0
89488|data|DCW 1; global symbol: asyncSetSignalBlocked|1-0
89490|data|DCW 1; global symbol: findSharedSymbol|1-0
89492|data|DCW 2; strlen@@GLIBC_2.4|2-0
89494|data|DCW 1; global symbol: setThreadName|1-0
89496|data|DCW 1; global symbol: logUnsupportedOperation|1-0
89498|data|DCW 1; global symbol: getProgramPath|1-0
89500|data|DCW 1; global symbol: getElementItem|1-0
89502|data|DCW 1; global symbol: dequeueItem|1-0
89504|data|DCW 4; dlerror@@GLIBC_2.4|4-0
89506|data|DCW 1; global symbol: __bss_end__|1-0
89508|data|DCW 1; global symbol: createUinputDevice|1-0
89510|data|DCW 2; __syslog_chk@@GLIBC_2.4|2-0
89512|data|DCW 1; global symbol: isExplicitPath|1-0
89514|data|DCW 1; global symbol: destructHostCommandPackageData|1-0
89516|data|DCW 1; global symbol: asyncMakeHandle|1-0
89518|data|DCW 1; global symbol: fatal_errno|1-0
89520|data|DCW 1; global symbol: asyncMonitorSocketInput|1-0
89522|data|DCW 0; local  symbol: brlapi_writeText|0-0
89524|data|DCW 1; global symbol: convertUtf8ToChar|1-0
89526|data|DCW 1; global symbol: approximateDelay|1-0
89528|data|DCW 3; recv@@GLIBC_2.4|3-0
89530|data|DCW 1; global symbol: writeUtf8Characters|1-0
89532|data|DCW 1; global symbol: writePort1|1-0
89534|data|DCW 1; global symbol: writeInputEvent|1-0
89536|data|DCW 6; pthread_setname_np@@GLIBC_2.12|6-0
89538|data|DCW 6; pthread_getname_np@@GLIBC_2.12|6-0
89540|data|DCW 2; feof@@GLIBC_2.4|2-0
89542|data|DCW 1; global symbol: runCommand|1-0
89544|data|DCW 1; global symbol: __data_start|1-0
89546|data|DCW 1; global symbol: asyncTestHandle|1-0
89548|data|DCW 2; qsort@@GLIBC_2.4|2-0
89550|data|DCW 1; global symbol: asyncCallWithObtainableSignalsBlocked|1-0
89552|data|DCW 3; pthread_rwlock_trywrlock@@GLIBC_2.4|3-0
89554|data|DCW 1; global symbol: asyncNewAddTaskEvent|1-0
89556|data|DCW 1; global symbol: asyncReleaseSignalNumber|1-0
89558|data|DCW 1; global symbol: processDataStream|1-0
89560|data|DCW 1; global symbol: onProgramExit|1-0
89562|data|DCW 1; global symbol: parseDataString|1-0
89564|data|DCW 9; __fdelt_chk@@GLIBC_2.15|9-0
89566|data|DCW 1; global symbol: isUnsignedInteger|1-0
89568|data|DCW 2; strerror@@GLIBC_2.4|2-0
89570|data|DCW 1; global symbol: isInteger|1-0
89572|data|DCW 3; write@@GLIBC_2.4|3-0
89574|data|DCW 1; global symbol: testDirectoryPath|1-0
89576|data|DCW 1; global symbol: getTransliteratedCharacter|1-0
89578|data|DCW 1; global symbol: logLevelCount|1-0
89580|data|DCW 1; global symbol: asyncExecuteIoCallback|1-0
89582|data|DCW 1; global symbol: asyncHandleAddTaskEvent|1-0
89584|data|DCW 1; global symbol: validateFlag|1-0
89586|data|DCW 2; __xmknod@@GLIBC_2.4|2-0
89588|data|DCW 1; global symbol: processQueue|1-0
89590|data|DCW 1; global symbol: asyncIgnoreSignal|1-0
89592|data|DCW 1; global symbol: obtainLock|1-0
89594|data|DCW 1; global symbol: asyncDeallocateIoData|1-0
89596|data|DCW 3; pthread_rwlock_tryrdlock@@GLIBC_2.4|3-0
89598|data|DCW 2; kill@@GLIBC_2.4|2-0
89600|data|DCW 3; lseek@@GLIBC_2.4|3-0
89602|data|DCW 1; global symbol: requeueElement|1-0
89604|data|DCW 1; global symbol: asyncMonitorSocketOutput|1-0
89606|data|DCW 2; fputc@@GLIBC_2.4|2-0
89608|data|DCW 1; global symbol: getElementIdentifier|1-0
89610|data|DCW 0; local  symbol: XGetErrorText|0-0
89612|data|DCW 1; global symbol: getLogCategoryTitle|1-0
89614|data|DCW 1; global symbol: processDirectiveOperand|1-0
89616|data|DCW 1; global symbol: setGlobalDataVariable|1-0
89618|data|DCW 1; global symbol: _end|1-0
89620|data|DCW 1; global symbol: writeKeyEvent|1-0
89622|data|DCW 1; global symbol: asyncMonitorEventPipe|1-0
89624|data|DCW 3; fork@@GLIBC_2.4|3-0
89626|data|DCW 2; bindtextdomain@@GLIBC_2.4|2-0
89628|data|DCW 1; global symbol: isFloat|1-0
89630|data|DCW 1; global symbol: getTextLength|1-0
89632|data|DCW 2; fputs@@GLIBC_2.4|2-0
89634|data|DCW 2; sigaddset@@GLIBC_2.4|2-0
89636|data|DCW 1; global symbol: unlockMutex|1-0
89638|data|DCW 0; local  symbol: brlapi_setFocus|0-0
89640|data|DCW 1; global symbol: main|1-0
89642|data|DCW 1; global symbol: installKernelModule|1-0
89644|data|DCW 2; mbrtowc@@GLIBC_2.4|2-0
89646|data|DCW 4; dladdr@@GLIBC_2.4|4-0
89648|data|DCW 1; global symbol: setAddressName|1-0
89650|data|DCW 1; global symbol: getMonotonicTime|1-0
89652|data|DCW 2; getpid@@GLIBC_2.4|2-0
89654|data|DCW 0; local  symbol: XPending|0-0
89656|data|DCW 1; global symbol: asyncHandlePendingSignal|1-0
89658|data|DCW 2; realloc@@GLIBC_2.4|2-0
89660|data|DCW 1; global symbol: linuxKeyMap_atE0|1-0
89662|data|DCW 1; global symbol: standardErrorName|1-0
89664|data|DCW 1; global symbol: linuxKeyMap_atE1|1-0
89666|data|DCW 1; global symbol: asyncResetAlarmTo|1-0
89668|data|DCW 1; global symbol: getStackElement|1-0
89670|data|DCW 1; global symbol: fatal|1-0
89672|data|DCW 1; global symbol: convertCharToUtf8|1-0
89674|data|DCW 1; global symbol: processHostCommandStreams|1-0
89676|data|DCW 1; global symbol: hasFileExtension|1-0
89678|data|DCW 0; local  symbol: XSelectInput|0-0
89680|data|DCW 3; pthread_once@@GLIBC_2.4|3-0
89682|data|DCW 1; global symbol: asyncWriteSocket|1-0
89684|data|DCW 1; global symbol: removeService|1-0
89686|data|DCW 1; global symbol: finishHostCommandStream|1-0
89688|data|DCW 1; global symbol: asyncDeallocateAlarmData|1-0
89690|data|DCW 3; raise@@GLIBC_2.4|3-0
89692|data|DCW 1; global symbol: writeRepeatPeriod|1-0
89694|data|DCW 0; local  symbol: XkbQueryExtension|0-0
89696|data|DCW 2; dcgettext@@GLIBC_2.4|2-0
89698|data|DCW 2; __ctype_b_loc@@GLIBC_2.4|2-0
89700|data|DCW 1; global symbol: getConsole|1-0
89702|data|DCW 1; global symbol: getDeviceDirectory|1-0
89704|data|DCW 3; open@@GLIBC_2.4|3-0
89706|data|DCW 1; global symbol: __bss_start|1-0
89708|data|DCW 1; global symbol: acquireFileLock|1-0
89710|data|DCW 1; global symbol: _fini|1-0
89712|data|DCW 2; sigprocmask@@GLIBC_2.4|2-0
89714|data|DCW 1; global symbol: programName|1-0
89716|data|DCW 3; __libc_current_sigrtmin@@GLIBC_2.4|3-0
89718|data|DCW 2; sigismember@@GLIBC_2.4|2-0
89720|data|DCW 2; pipe@@GLIBC_2.4|2-0
89722|data|DCW 1; global symbol: findDataOperand|1-0
89724|data|DCW 1; global symbol: isLogLevel|1-0
89726|data|DCW 1; global symbol: asyncMonitorFileAlert|1-0
89728|data|DCW 3; pthread_create@@GLIBC_2.4|3-0
89730|data|DCW 1; global symbol: asyncClaimSignalNumber|1-0
89732|data|DCW 1; global symbol: api_setFocus|1-0
89734|data|DCW 2; access@@GLIBC_2.4|2-0
89736|data|DCW 0; local  symbol: brlapi_ignoreKeyRanges|0-0
89738|data|DCW 0; local  symbol: XFlush|0-0
89740|data|DCW 1; global symbol: startTimePeriod|1-0
89742|data|DCW 1; global symbol: asyncCancelRequest|1-0
89744|data|DCW 1; global symbol: deleteElements|1-0
89746|data|DCW 1; global symbol: processOptions|1-0
89748|data|DCW 1; global symbol: logActionError|1-0
89750|data|DCW 3; funlockfile@@GLIBC_2.4|3-0
89752|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_13840, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-101-9-0-0-16-0-0-0-32-0-0-0
89768|data|Elf32_Vernaux <0xD696914, 0, 5, aGlibc24 - byte_13840, 0>; "GLIBC_2.4"|20-105-105-13-0-0-5-0-170-33-0-0-0-0-0-0
89784|data|Elf32_Verneed <1, 1, aLibdlSo2 - byte_13840, 0x10, 0x20>; "libdl.so.2"|1-0-1-0-28-3-0-0-16-0-0-0-32-0-0-0
89800|data|Elf32_Vernaux <0xD696914, 0, 4, aGlibc24 - byte_13840, 0>; "GLIBC_2.4"|20-105-105-13-0-0-4-0-170-33-0-0-0-0-0-0
89816|data|Elf32_Verneed <1, 2, aLibpthreadSo0 - byte_13840, 0x10, 0x30>; "libpthread.so.0"|1-0-2-0-87-3-0-0-16-0-0-0-48-0-0-0
89832|data|Elf32_Vernaux <0x6969192, 0, 6, aGlibc212 - byte_13840, 0x10>; "GLIBC_2.12"|146-145-150-6-0-0-6-0-180-33-0-0-16-0-0-0
89848|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_13840, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-170-33-0-0-0-0-0-0
89864|data|Elf32_Verneed <1, 4, aLibcSo6 - byte_13840, 0x10, 0>; "libc.so.6"|1-0-4-0-92-5-0-0-16-0-0-0-0-0-0-0
89880|data|Elf32_Vernaux <0x6969195, 0, 9, aGlibc215 - byte_13840, 0x10>; "GLIBC_2.15"|149-145-150-6-0-0-9-0-191-33-0-0-16-0-0-0
89896|data|Elf32_Vernaux <0x6969197, 0, 8, aGlibc217 - byte_13840, 0x10>; "GLIBC_2.17"|151-145-150-6-0-0-8-0-202-33-0-0-16-0-0-0
89912|data|Elf32_Vernaux <0xD696917, 0, 7, aGlibc27 - byte_13840, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-7-0-213-33-0-0-16-0-0-0
89928|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_13840, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-170-33-0-0-0-0-0-0
89944|data|Elf32_Rel <0x347AC, 0x115>; R_ARM_GLOB_DAT opterr|172-71-3-0-21-1-0-0
89952|data|Elf32_Rel <0x347B4, 0x215>; R_ARM_GLOB_DAT __stack_chk_guard|180-71-3-0-21-2-0-0
89960|data|Elf32_Rel <0x347B8, 0x315>; R_ARM_GLOB_DAT __progname|184-71-3-0-21-3-0-0
89968|data|Elf32_Rel <0x347BC, 0x415>; R_ARM_GLOB_DAT optind|188-71-3-0-21-4-0-0
89976|data|Elf32_Rel <0x347D0, 0x515>; R_ARM_GLOB_DAT optarg|208-71-3-0-21-5-0-0
89984|data|Elf32_Rel <0x347DC, 0x615>; R_ARM_GLOB_DAT stderr|220-71-3-0-21-6-0-0
89992|data|Elf32_Rel <0x347E0, 0x715>; R_ARM_GLOB_DAT optopt|224-71-3-0-21-7-0-0
90000|data|Elf32_Rel <0x3480C, 0x915>; R_ARM_GLOB_DAT stdout|12-72-3-0-21-9-0-0
90008|data|Elf32_Rel <0x34818, 0xC15>; R_ARM_GLOB_DAT __gmon_start__|24-72-3-0-21-12-0-0
90016|data|Elf32_Rel <0x344AC, 0xA716>; R_ARM_JUMP_SLOT signal|172-68-3-0-22-167-0-0
90024|data|Elf32_Rel <0x344B0, 0x5216>; R_ARM_JUMP_SLOT chdir|176-68-3-0-22-82-0-0
90032|data|Elf32_Rel <0x344B4, 0xE516>; R_ARM_JUMP_SLOT pthread_mutex_lock|180-68-3-0-22-229-0-0
90040|data|Elf32_Rel <0x344B8, 0xFE16>; R_ARM_JUMP_SLOT localtime_r|184-68-3-0-22-254-0-0
90048|data|Elf32_Rel <0x344BC, 0xB016>; R_ARM_JUMP_SLOT wcslen|188-68-3-0-22-176-0-0
90056|data|Elf32_Rel <0x344C0, 0x19916>; R_ARM_JUMP_SLOT towlower|192-68-3-0-22-153-1-0
90064|data|Elf32_Rel <0x344C4, 0xA916>; R_ARM_JUMP_SLOT ftruncate|196-68-3-0-22-169-0-0
90072|data|Elf32_Rel <0x344C8, 0x8016>; R_ARM_JUMP_SLOT iswspace|200-68-3-0-22-128-0-0
90080|data|Elf32_Rel <0x344CC, 0x20A16>; R_ARM_JUMP_SLOT getpid|204-68-3-0-22-10-2-0
90088|data|Elf32_Rel <0x344D0, 0x16716>; R_ARM_JUMP_SLOT __memcpy_chk|208-68-3-0-22-103-1-0
90096|data|Elf32_Rel <0x344D4, 0x20616>; R_ARM_JUMP_SLOT mbrtowc|212-68-3-0-22-6-2-0
90104|data|Elf32_Rel <0x344D8, 0xCB16>; R_ARM_JUMP_SLOT pthread_rwlock_destroy|216-68-3-0-22-203-0-0
90112|data|Elf32_Rel <0x344DC, 0x1C016>; R_ARM_JUMP_SLOT dlerror|220-68-3-0-22-192-1-0
90120|data|Elf32_Rel <0x344E0, 0x14316>; R_ARM_JUMP_SLOT gettimeofday|224-68-3-0-22-67-1-0
90128|data|Elf32_Rel <0x344E4, 0x18316>; R_ARM_JUMP_SLOT brlapi_ignoreKeys|228-68-3-0-22-131-1-0
90136|data|Elf32_Rel <0x344E8, 0x16B16>; R_ARM_JUMP_SLOT XTestQueryExtension|232-68-3-0-22-107-1-0
90144|data|Elf32_Rel <0x344EC, 0x11616>; R_ARM_JUMP_SLOT strcasecmp|236-68-3-0-22-22-1-0
90152|data|Elf32_Rel <0x344F0, 0x17D16>; R_ARM_JUMP_SLOT fdopen|240-68-3-0-22-125-1-0
90160|data|Elf32_Rel <0x344F4, 0x4816>; R_ARM_JUMP_SLOT strtol|244-68-3-0-22-72-0-0
90168|data|Elf32_Rel <0x344F8, 0xB516>; R_ARM_JUMP_SLOT free|248-68-3-0-22-181-0-0
90176|data|Elf32_Rel <0x344FC, 0x1A716>; R_ARM_JUMP_SLOT XGetWindowProperty|252-68-3-0-22-167-1-0
90184|data|Elf32_Rel <0x34500, 0x20716>; R_ARM_JUMP_SLOT dladdr|0-69-3-0-22-7-2-0
90192|data|Elf32_Rel <0x34504, 0x4916>; R_ARM_JUMP_SLOT XSetErrorHandler|4-69-3-0-22-73-0-0
90200|data|Elf32_Rel <0x34508, 0x9B16>; R_ARM_JUMP_SLOT brlapi_enterTtyModeWithPath|8-69-3-0-22-155-0-0
90208|data|Elf32_Rel <0x3450C, 0x1D016>; R_ARM_JUMP_SLOT pthread_setname_np|12-69-3-0-22-208-1-0
90216|data|Elf32_Rel <0x34510, 0x1D616>; R_ARM_JUMP_SLOT qsort|16-69-3-0-22-214-1-0
90224|data|Elf32_Rel <0x34514, 0x3B16>; R_ARM_JUMP_SLOT strncmp|20-69-3-0-22-59-0-0
90232|data|Elf32_Rel <0x34518, 0xB416>; R_ARM_JUMP_SLOT __open_2|24-69-3-0-22-180-0-0
90240|data|Elf32_Rel <0x3451C, 0x1916>; R_ARM_JUMP_SLOT XQueryTree|28-69-3-0-22-25-0-0
90248|data|Elf32_Rel <0x34520, 0x13916>; R_ARM_JUMP_SLOT XkbLibraryVersion|32-69-3-0-22-57-1-0
90256|data|Elf32_Rel <0x34524, 0x7B16>; R_ARM_JUMP_SLOT u_getIntPropertyValue_52|36-69-3-0-22-123-0-0
90264|data|Elf32_Rel <0x34528, 0xE16>; R_ARM_JUMP_SLOT brlapi_readKey|40-69-3-0-22-14-0-0
90272|data|Elf32_Rel <0x3452C, 0x16516>; R_ARM_JUMP_SLOT brlapi_openConnection|44-69-3-0-22-101-1-0
90280|data|Elf32_Rel <0x34530, 0x6216>; R_ARM_JUMP_SLOT exit|48-69-3-0-22-98-0-0
90288|data|Elf32_Rel <0x34534, 0x1E016>; R_ARM_JUMP_SLOT strerror|52-69-3-0-22-224-1-0
90296|data|Elf32_Rel <0x34538, 0x1E916>; R_ARM_JUMP_SLOT __xmknod|56-69-3-0-22-233-1-0
90304|data|Elf32_Rel <0x3453C, 0x6616>; R_ARM_JUMP_SLOT __vsnprintf_chk|60-69-3-0-22-102-0-0
90312|data|Elf32_Rel <0x34540, 0xD316>; R_ARM_JUMP_SLOT dlclose|64-69-3-0-22-211-0-0
90320|data|Elf32_Rel <0x34544, 0x1D116>; R_ARM_JUMP_SLOT pthread_getname_np|68-69-3-0-22-209-1-0
90328|data|Elf32_Rel <0x34548, 0x1D216>; R_ARM_JUMP_SLOT feof|72-69-3-0-22-210-1-0
90336|data|Elf32_Rel <0x3454C, 0x4716>; R_ARM_JUMP_SLOT strtok|76-69-3-0-22-71-0-0
90344|data|Elf32_Rel <0x34550, 0x15716>; R_ARM_JUMP_SLOT perror|80-69-3-0-22-87-1-0
90352|data|Elf32_Rel <0x34554, 0x9C16>; R_ARM_JUMP_SLOT nl_langinfo|84-69-3-0-22-156-0-0
90360|data|Elf32_Rel <0x34558, 0x18416>; R_ARM_JUMP_SLOT wmemcpy|88-69-3-0-22-132-1-0
90368|data|Elf32_Rel <0x3455C, 0x14016>; R_ARM_JUMP_SLOT XKeysymToKeycode|92-69-3-0-22-64-1-0
90376|data|Elf32_Rel <0x34560, 0x19416>; R_ARM_JUMP_SLOT sigfillset|96-69-3-0-22-148-1-0
90384|data|Elf32_Rel <0x34564, 0x21716>; R_ARM_JUMP_SLOT XSelectInput|100-69-3-0-22-23-2-0
90392|data|Elf32_Rel <0x34568, 0x1A116>; R_ARM_JUMP_SLOT textdomain|104-69-3-0-22-161-1-0
90400|data|Elf32_Rel <0x3456C, 0xBB16>; R_ARM_JUMP_SLOT readlink|108-69-3-0-22-187-0-0
90408|data|Elf32_Rel <0x34570, 0x6716>; R_ARM_JUMP_SLOT __fprintf_chk|112-69-3-0-22-103-0-0
90416|data|Elf32_Rel <0x34574, 0x19C16>; R_ARM_JUMP_SLOT brlapi_acceptKeys|116-69-3-0-22-156-1-0
90424|data|Elf32_Rel <0x34578, 0x13116>; R_ARM_JUMP_SLOT strtoul|120-69-3-0-22-49-1-0
90432|data|Elf32_Rel <0x3457C, 0x2116>; R_ARM_JUMP_SLOT nanosleep|124-69-3-0-22-33-0-0
90440|data|Elf32_Rel <0x34580, 0x2816>; R_ARM_JUMP_SLOT strftime|128-69-3-0-22-40-0-0
90448|data|Elf32_Rel <0x34584, 0xE616>; R_ARM_JUMP_SLOT memset|132-69-3-0-22-230-0-0
90456|data|Elf32_Rel <0x34588, 0x16A16>; R_ARM_JUMP_SLOT pthread_self|136-69-3-0-22-106-1-0
90464|data|Elf32_Rel <0x3458C, 0x6316>; R_ARM_JUMP_SLOT closelog|140-69-3-0-22-99-0-0
90472|data|Elf32_Rel <0x34590, 0x1CC16>; R_ARM_JUMP_SLOT recv|144-69-3-0-22-204-1-0
90480|data|Elf32_Rel <0x34594, 0x14516>; R_ARM_JUMP_SLOT fcntl|148-69-3-0-22-69-1-0
90488|data|Elf32_Rel <0x34598, 0x3916>; R_ARM_JUMP_SLOT pthread_sigmask|152-69-3-0-22-57-0-0
90496|data|Elf32_Rel <0x3459C, 0x6D16>; R_ARM_JUMP_SLOT pthread_rwlock_rdlock|156-69-3-0-22-109-0-0
90504|data|Elf32_Rel <0x345A0, 0x7F16>; R_ARM_JUMP_SLOT XInternAtom|160-69-3-0-22-127-0-0
90512|data|Elf32_Rel <0x345A4, 0x1F16>; R_ARM_JUMP_SLOT snprintf|164-69-3-0-22-31-0-0
90520|data|Elf32_Rel <0x345A8, 0x9016>; R_ARM_JUMP_SLOT __strdup|168-69-3-0-22-144-0-0
90528|data|Elf32_Rel <0x345AC, 0x20116>; R_ARM_JUMP_SLOT sigaddset|172-69-3-0-22-1-2-0
90536|data|Elf32_Rel <0x345B0, 0x17A16>; R_ARM_JUMP_SLOT close|176-69-3-0-22-122-1-0
90544|data|Elf32_Rel <0x345B4, 0x9816>; R_ARM_JUMP_SLOT XkbLockModifiers|180-69-3-0-22-152-0-0
90552|data|Elf32_Rel <0x345B8, 0x10316>; R_ARM_JUMP_SLOT wmemcmp|184-69-3-0-22-3-1-0
90560|data|Elf32_Rel <0x345BC, 0x12816>; R_ARM_JUMP_SLOT fopen|188-69-3-0-22-40-1-0
90568|data|Elf32_Rel <0x345C0, 0x16F16>; R_ARM_JUMP_SLOT read|192-69-3-0-22-111-1-0
90576|data|Elf32_Rel <0x345C4, 0x5316>; R_ARM_JUMP_SLOT wmemchr|196-69-3-0-22-83-0-0
90584|data|Elf32_Rel <0x345C8, 0xC616>; R_ARM_JUMP_SLOT abort|200-69-3-0-22-198-0-0
90592|data|Elf32_Rel <0x345CC, 0x21816>; R_ARM_JUMP_SLOT pthread_once|204-69-3-0-22-24-2-0
90600|data|Elf32_Rel <0x345D0, 0xA516>; R_ARM_JUMP_SLOT poll|208-69-3-0-22-165-0-0
90608|data|Elf32_Rel <0x345D4, 0x10F16>; R_ARM_JUMP_SLOT __ctype_toupper_loc|212-69-3-0-22-15-1-0
90616|data|Elf32_Rel <0x345D8, 0x14C16>; R_ARM_JUMP_SLOT memmove|216-69-3-0-22-76-1-0
90624|data|Elf32_Rel <0x345DC, 0x21F16>; R_ARM_JUMP_SLOT XkbQueryExtension|220-69-3-0-22-31-2-0
90632|data|Elf32_Rel <0x345E0, 0x8716>; R_ARM_JUMP_SLOT strpbrk|224-69-3-0-22-135-0-0
90640|data|Elf32_Rel <0x345E4, 0x20B16>; R_ARM_JUMP_SLOT XPending|228-69-3-0-22-11-2-0
90648|data|Elf32_Rel <0x345E8, 0x1AF16>; R_ARM_JUMP_SLOT dlopen|232-69-3-0-22-175-1-0
90656|data|Elf32_Rel <0x345EC, 0x1C916>; R_ARM_JUMP_SLOT brlapi_writeText|236-69-3-0-22-201-1-0
90664|data|Elf32_Rel <0x345F0, 0x22A16>; R_ARM_JUMP_SLOT __libc_current_sigrtmin|240-69-3-0-22-42-2-0
90672|data|Elf32_Rel <0x345F4, 0x1EF16>; R_ARM_JUMP_SLOT kill|244-69-3-0-22-239-1-0
90680|data|Elf32_Rel <0x345F8, 0x1016>; R_ARM_JUMP_SLOT ioctl|248-69-3-0-22-16-0-0
90688|data|Elf32_Rel <0x345FC, 0x1A516>; R_ARM_JUMP_SLOT clock_gettime|252-69-3-0-22-165-1-0
90696|data|Elf32_Rel <0x34600, 0x20D16>; R_ARM_JUMP_SLOT realloc|0-70-3-0-22-13-2-0
90704|data|Elf32_Rel <0x34604, 0x18616>; R_ARM_JUMP_SLOT strcpy|4-70-3-0-22-134-1-0
90712|data|Elf32_Rel <0x34608, 0x3F16>; R_ARM_JUMP_SLOT strtod|8-70-3-0-22-63-0-0
90720|data|Elf32_Rel <0x3460C, 0x22416>; R_ARM_JUMP_SLOT open|12-70-3-0-22-36-2-0
90728|data|Elf32_Rel <0x34610, 0x5116>; R_ARM_JUMP_SLOT waitpid|16-70-3-0-22-81-0-0
90736|data|Elf32_Rel <0x34614, 0x14216>; R_ARM_JUMP_SLOT pthread_getspecific|20-70-3-0-22-66-1-0
90744|data|Elf32_Rel <0x34618, 0x11916>; R_ARM_JUMP_SLOT fileno|24-70-3-0-22-25-1-0
90752|data|Elf32_Rel <0x3461C, 0xC316>; R_ARM_JUMP_SLOT pthread_rwlock_unlock|28-70-3-0-22-195-0-0
90760|data|Elf32_Rel <0x34620, 0x17B16>; R_ARM_JUMP_SLOT XConnectionNumber|32-70-3-0-22-123-1-0
90768|data|Elf32_Rel <0x34624, 0x1C316>; R_ARM_JUMP_SLOT __syslog_chk|36-70-3-0-22-195-1-0
90776|data|Elf32_Rel <0x34628, 0x5816>; R_ARM_JUMP_SLOT pthread_rwlock_wrlock|40-70-3-0-22-88-0-0
90784|data|Elf32_Rel <0x3462C, 0xBA16>; R_ARM_JUMP_SLOT __stack_chk_fail|44-70-3-0-22-186-0-0
90792|data|Elf32_Rel <0x34630, 0x1EE16>; R_ARM_JUMP_SLOT pthread_rwlock_tryrdlock|48-70-3-0-22-238-1-0
90800|data|Elf32_Rel <0x34634, 0x1FC16>; R_ARM_JUMP_SLOT fork|52-70-3-0-22-252-1-0
90808|data|Elf32_Rel <0x34638, 0x23316>; R_ARM_JUMP_SLOT access|56-70-3-0-22-51-2-0
90816|data|Elf32_Rel <0x3463C, 0x1A616>; R_ARM_JUMP_SLOT sigdelset|60-70-3-0-22-166-1-0
90824|data|Elf32_Rel <0x34640, 0x22016>; R_ARM_JUMP_SLOT dcgettext|64-70-3-0-22-32-2-0
90832|data|Elf32_Rel <0x34644, 0x10E16>; R_ARM_JUMP_SLOT mkdir|68-70-3-0-22-14-1-0
90840|data|Elf32_Rel <0x34648, 0x18516>; R_ARM_JUMP_SLOT __cxa_atexit|72-70-3-0-22-133-1-0
90848|data|Elf32_Rel <0x3464C, 0x9416>; R_ARM_JUMP_SLOT XRefreshKeyboardMapping|76-70-3-0-22-148-0-0
90856|data|Elf32_Rel <0x34650, 0x3D16>; R_ARM_JUMP_SLOT XTestFakeKeyEvent|80-70-3-0-22-61-0-0
90864|data|Elf32_Rel <0x34654, 0x8B16>; R_ARM_JUMP_SLOT XFree|84-70-3-0-22-139-0-0
90872|data|Elf32_Rel <0x34658, 0x6916>; R_ARM_JUMP_SLOT strncasecmp|88-70-3-0-22-105-0-0
90880|data|Elf32_Rel <0x3465C, 0x1B716>; R_ARM_JUMP_SLOT XkbLookupKeySym|92-70-3-0-22-183-1-0
90888|data|Elf32_Rel <0x34660, 0x20316>; R_ARM_JUMP_SLOT brlapi_setFocus|96-70-3-0-22-3-2-0
90896|data|Elf32_Rel <0x34664, 0x1AC16>; R_ARM_JUMP_SLOT pthread_key_create|100-70-3-0-22-172-1-0
90904|data|Elf32_Rel <0x34668, 0x15D16>; R_ARM_JUMP_SLOT getopt_long|104-70-3-0-22-93-1-0
90912|data|Elf32_Rel <0x3466C, 0x13F16>; R_ARM_JUMP_SLOT select|108-70-3-0-22-63-1-0
90920|data|Elf32_Rel <0x34670, 0x1F016>; R_ARM_JUMP_SLOT lseek|112-70-3-0-22-240-1-0
90928|data|Elf32_Rel <0x34674, 0x21D16>; R_ARM_JUMP_SLOT raise|116-70-3-0-22-29-2-0
90936|data|Elf32_Rel <0x34678, 0x22116>; R_ARM_JUMP_SLOT __ctype_b_loc|120-70-3-0-22-33-2-0
90944|data|Elf32_Rel <0x3467C, 0x23416>; R_ARM_JUMP_SLOT brlapi_ignoreKeyRanges|124-70-3-0-22-52-2-0
90952|data|Elf32_Rel <0x34680, 0x1FD16>; R_ARM_JUMP_SLOT bindtextdomain|128-70-3-0-22-253-1-0
90960|data|Elf32_Rel <0x34684, 0x1416>; R_ARM_JUMP_SLOT sigaction|132-70-3-0-22-20-0-0
90968|data|Elf32_Rel <0x34688, 0x2516>; R_ARM_JUMP_SLOT XOpenDisplay|136-70-3-0-22-37-0-0
90976|data|Elf32_Rel <0x3468C, 0x11A16>; R_ARM_JUMP_SLOT calloc|140-70-3-0-22-26-1-0
90984|data|Elf32_Rel <0x34690, 0x15516>; R_ARM_JUMP_SLOT __vfprintf_chk|144-70-3-0-22-85-1-0
90992|data|Elf32_Rel <0x34694, 0x17F16>; R_ARM_JUMP_SLOT setlocale|148-70-3-0-22-127-1-0
91000|data|Elf32_Rel <0x34698, 0x17416>; R_ARM_JUMP_SLOT ferror|152-70-3-0-22-116-1-0
91008|data|Elf32_Rel <0x3469C, 0x16316>; R_ARM_JUMP_SLOT iconv_close|156-70-3-0-22-99-1-0
91016|data|Elf32_Rel <0x346A0, 0x8E16>; R_ARM_JUMP_SLOT XNextEvent|160-70-3-0-22-142-0-0
91024|data|Elf32_Rel <0x346A4, 0x18A16>; R_ARM_JUMP_SLOT fgets|164-70-3-0-22-138-1-0
91032|data|Elf32_Rel <0x346A8, 0x1F516>; R_ARM_JUMP_SLOT XGetErrorText|168-70-3-0-22-245-1-0
91040|data|Elf32_Rel <0x346AC, 0x10D16>; R_ARM_JUMP_SLOT __fxstat|172-70-3-0-22-13-1-0
91048|data|Elf32_Rel <0x346B0, 0xEC16>; R_ARM_JUMP_SLOT u_charFromName_52|176-70-3-0-22-236-0-0
91056|data|Elf32_Rel <0x346B4, 0xD416>; R_ARM_JUMP_SLOT flockfile|180-70-3-0-22-212-0-0
91064|data|Elf32_Rel <0x346B8, 0x1F316>; R_ARM_JUMP_SLOT fputc|184-70-3-0-22-243-1-0
91072|data|Elf32_Rel <0x346BC, 0xF816>; R_ARM_JUMP_SLOT fwrite|188-70-3-0-22-248-0-0
91080|data|Elf32_Rel <0x346C0, 0x18D16>; R_ARM_JUMP_SLOT memcpy|192-70-3-0-22-141-1-0
91088|data|Elf32_Rel <0x346C4, 0xF116>; R_ARM_JUMP_SLOT unorm_normalize_52|196-70-3-0-22-241-0-0
91096|data|Elf32_Rel <0x346C8, 0x10116>; R_ARM_JUMP_SLOT malloc|200-70-3-0-22-1-1-0
91104|data|Elf32_Rel <0x346CC, 0x1BA16>; R_ARM_JUMP_SLOT strlen|204-70-3-0-22-186-1-0
91112|data|Elf32_Rel <0x346D0, 0x5416>; R_ARM_JUMP_SLOT __snprintf_chk|208-70-3-0-22-84-0-0
91120|data|Elf32_Rel <0x346D4, 0x16C16>; R_ARM_JUMP_SLOT ioperm|212-70-3-0-22-108-1-0
91128|data|Elf32_Rel <0x346D8, 0xBD16>; R_ARM_JUMP_SLOT outb|216-70-3-0-22-189-0-0
91136|data|Elf32_Rel <0x346DC, 0x23516>; R_ARM_JUMP_SLOT XFlush|220-70-3-0-22-53-2-0
91144|data|Elf32_Rel <0x346E0, 0x7216>; R_ARM_JUMP_SLOT pthread_setspecific|224-70-3-0-22-114-0-0
91152|data|Elf32_Rel <0x346E4, 0x17316>; R_ARM_JUMP_SLOT getcwd|228-70-3-0-22-115-1-0
91160|data|Elf32_Rel <0x346E8, 0x8516>; R_ARM_JUMP_SLOT fclose|232-70-3-0-22-133-0-0
91168|data|Elf32_Rel <0x346EC, 0x14B16>; R_ARM_JUMP_SLOT XDisplayName|236-70-3-0-22-75-1-0
91176|data|Elf32_Rel <0x346F0, 0x1E216>; R_ARM_JUMP_SLOT write|240-70-3-0-22-226-1-0
91184|data|Elf32_Rel <0x346F4, 0x19816>; R_ARM_JUMP_SLOT inb|244-70-3-0-22-152-1-0
91192|data|Elf32_Rel <0x346F8, 0x1DE16>; R_ARM_JUMP_SLOT __fdelt_chk|248-70-3-0-22-222-1-0
91200|data|Elf32_Rel <0x346FC, 0x22B16>; R_ARM_JUMP_SLOT sigismember|252-70-3-0-22-43-2-0
91208|data|Elf32_Rel <0x34700, 0x3616>; R_ARM_JUMP_SLOT mempcpy|0-71-3-0-22-54-0-0
91216|data|Elf32_Rel <0x34704, 0x1B516>; R_ARM_JUMP_SLOT __xstat|4-71-3-0-22-181-1-0
91224|data|Elf32_Rel <0x34708, 0x1D816>; R_ARM_JUMP_SLOT pthread_rwlock_trywrlock|8-71-3-0-22-216-1-0
91232|data|Elf32_Rel <0x3470C, 0xAE16>; R_ARM_JUMP_SLOT __realpath_chk|12-71-3-0-22-174-0-0
91240|data|Elf32_Rel <0x34710, 0x7E16>; R_ARM_JUMP_SLOT iconv_open|16-71-3-0-22-126-0-0
91248|data|Elf32_Rel <0x34714, 0x13316>; R_ARM_JUMP_SLOT pthread_rwlock_init|20-71-3-0-22-51-1-0
91256|data|Elf32_Rel <0x34718, 0x13616>; R_ARM_JUMP_SLOT __ctype_get_mb_cur_max|24-71-3-0-22-54-1-0
91264|data|Elf32_Rel <0x3471C, 0x2616>; R_ARM_JUMP_SLOT _exit|28-71-3-0-22-38-0-0
91272|data|Elf32_Rel <0x34720, 0x23016>; R_ARM_JUMP_SLOT pthread_create|32-71-3-0-22-48-2-0
91280|data|Elf32_Rel <0x34724, 0x10A16>; R_ARM_JUMP_SLOT strcmp|36-71-3-0-22-10-1-0
91288|data|Elf32_Rel <0x34728, 0xCA16>; R_ARM_JUMP_SLOT XGetInputFocus|40-71-3-0-22-202-0-0
91296|data|Elf32_Rel <0x3472C, 0xF16>; R_ARM_JUMP_SLOT iconv|44-71-3-0-22-15-0-0
91304|data|Elf32_Rel <0x34730, 0x10416>; R_ARM_JUMP_SLOT __errno_location|48-71-3-0-22-4-1-0
91312|data|Elf32_Rel <0x34734, 0xF216>; R_ARM_JUMP_SLOT send|52-71-3-0-22-242-0-0
91320|data|Elf32_Rel <0x34738, 0x5B16>; R_ARM_JUMP_SLOT memchr|56-71-3-0-22-91-0-0
91328|data|Elf32_Rel <0x3473C, 0xED16>; R_ARM_JUMP_SLOT sscanf|60-71-3-0-22-237-0-0
91336|data|Elf32_Rel <0x34740, 0x12D16>; R_ARM_JUMP_SLOT fflush|64-71-3-0-22-45-1-0
91344|data|Elf32_Rel <0x34744, 0x11016>; R_ARM_JUMP_SLOT memcmp|68-71-3-0-22-16-1-0
91352|data|Elf32_Rel <0x34748, 0x11B16>; R_ARM_JUMP_SLOT __libc_current_sigrtmax|72-71-3-0-22-27-1-0
91360|data|Elf32_Rel <0x3474C, 0x18816>; R_ARM_JUMP_SLOT sigemptyset|76-71-3-0-22-136-1-0
91368|data|Elf32_Rel <0x34750, 0x1B016>; R_ARM_JUMP_SLOT brlapi_getDisplaySize|80-71-3-0-22-176-1-0
91376|data|Elf32_Rel <0x34754, 0x19016>; R_ARM_JUMP_SLOT strrchr|84-71-3-0-22-144-1-0
91384|data|Elf32_Rel <0x34758, 0x23B16>; R_ARM_JUMP_SLOT funlockfile|88-71-3-0-22-59-2-0
91392|data|Elf32_Rel <0x3475C, 0x8F16>; R_ARM_JUMP_SLOT mktime|92-71-3-0-22-143-0-0
91400|data|Elf32_Rel <0x34760, 0xB816>; R_ARM_JUMP_SLOT openlog|96-71-3-0-22-184-0-0
91408|data|Elf32_Rel <0x34764, 0x20016>; R_ARM_JUMP_SLOT fputs|100-71-3-0-22-0-2-0
91416|data|Elf32_Rel <0x34768, 0x9A16>; R_ARM_JUMP_SLOT getenv|104-71-3-0-22-154-0-0
91424|data|Elf32_Rel <0x3476C, 0x8C16>; R_ARM_JUMP_SLOT __libc_start_main|108-71-3-0-22-140-0-0
91432|data|Elf32_Rel <0x34770, 0x17616>; R_ARM_JUMP_SLOT dlsym|112-71-3-0-22-118-1-0
91440|data|Elf32_Rel <0x34774, 0x18916>; R_ARM_JUMP_SLOT execvp|116-71-3-0-22-137-1-0
91448|data|Elf32_Rel <0x34778, 0xC16>; R_ARM_JUMP_SLOT __gmon_start__|120-71-3-0-22-12-0-0
91456|data|Elf32_Rel <0x3477C, 0xE916>; R_ARM_JUMP_SLOT brlapi_perror|124-71-3-0-22-233-0-0
91464|data|Elf32_Rel <0x34780, 0xD916>; R_ARM_JUMP_SLOT brlapi_enterTtyMode|128-71-3-0-22-217-0-0
91472|data|Elf32_Rel <0x34784, 0x22816>; R_ARM_JUMP_SLOT sigprocmask|132-71-3-0-22-40-2-0
91480|data|Elf32_Rel <0x34788, 0x5616>; R_ARM_JUMP_SLOT strchr|136-71-3-0-22-86-0-0
91488|data|Elf32_Rel <0x3478C, 0x7916>; R_ARM_JUMP_SLOT pthread_mutex_unlock|140-71-3-0-22-121-0-0
91496|data|Elf32_Rel <0x34790, 0x5016>; R_ARM_JUMP_SLOT iswcntrl|144-71-3-0-22-80-0-0
91504|data|Elf32_Rel <0x34794, 0x22C16>; R_ARM_JUMP_SLOT pipe|148-71-3-0-22-44-2-0
91512|code|PUSH            {R3,LR}; _init|8-64-45-233
91516|code|BL              sub_16F14|100-2-0-235
91520|code|POP             {R3,PC}|8-128-189-232
91524|code|PUSH            {LR}|4-224-45-229
91528|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x16594)|4-224-159-229
91532|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
91536|code|LDR             PC, [LR,#8]!|8-240-190-229
91540|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x16594|12-223-1-0
91544|code|ADR             R12, 0x165A0|0-198-143-226
91548|code|ADD             R12, R12, #0x1D000|29-202-140-226
91552|code|LDR             PC, [R12,#(signal_ptr - 0x335A0)]!; __imp_signal|12-255-188-229
91556|code|ADR             R12, 0x165AC|0-198-143-226
91560|code|ADD             R12, R12, #0x1D000|29-202-140-226
91564|code|LDR             PC, [R12,#(chdir_ptr - 0x335AC)]!; __imp_chdir|4-255-188-229
91568|code|ADR             R12, 0x165B8|0-198-143-226
91572|code|ADD             R12, R12, #0x1D000|29-202-140-226
91576|code|LDR             PC, [R12,#(pthread_mutex_lock_ptr - 0x335B8)]!; __imp_pthread_mutex_lock|252-254-188-229
91580|code|ADR             R12, 0x165C4|0-198-143-226
91584|code|ADD             R12, R12, #0x1D000|29-202-140-226
91588|code|LDR             PC, [R12,#(localtime_r_ptr - 0x335C4)]!; __imp_localtime_r|244-254-188-229
91592|code|ADR             R12, 0x165D0|0-198-143-226
91596|code|ADD             R12, R12, #0x1D000|29-202-140-226
91600|code|LDR             PC, [R12,#(wcslen_ptr - 0x335D0)]!; __imp_wcslen|236-254-188-229
91604|code|ADR             R12, 0x165DC|0-198-143-226
91608|code|ADD             R12, R12, #0x1D000|29-202-140-226
91612|code|LDR             PC, [R12,#(towlower_ptr - 0x335DC)]!; __imp_towlower|228-254-188-229
91616|code|ADR             R12, 0x165E8|0-198-143-226
91620|code|ADD             R12, R12, #0x1D000|29-202-140-226
91624|code|LDR             PC, [R12,#(ftruncate_ptr - 0x335E8)]!; __imp_ftruncate|220-254-188-229
91628|code|ADR             R12, 0x165F4|0-198-143-226
91632|code|ADD             R12, R12, #0x1D000|29-202-140-226
91636|code|LDR             PC, [R12,#(iswspace_ptr - 0x335F4)]!; __imp_iswspace|212-254-188-229
91640|code|BX              PC|120-71
91642|data|ALIGN 4|192-70
91644|code|ADR             R12, 0x16604|0-198-143-226
91648|code|ADD             R12, R12, #0x1D000|29-202-140-226
91652|code|LDR             PC, [R12,#(getpid_ptr - 0x33604)]!; __imp_getpid|200-254-188-229
91656|code|ADR             R12, 0x16610|0-198-143-226
91660|code|ADD             R12, R12, #0x1D000|29-202-140-226
91664|code|LDR             PC, [R12,#(__memcpy_chk_ptr - 0x33610)]!; __imp___memcpy_chk|192-254-188-229
91668|code|ADR             R12, 0x1661C|0-198-143-226
91672|code|ADD             R12, R12, #0x1D000|29-202-140-226
91676|code|LDR             PC, [R12,#(mbrtowc_ptr - 0x3361C)]!; __imp_mbrtowc|184-254-188-229
91680|code|ADR             R12, 0x16628|0-198-143-226
91684|code|ADD             R12, R12, #0x1D000|29-202-140-226
91688|code|LDR             PC, [R12,#(pthread_rwlock_destroy_ptr - 0x33628)]!; __imp_pthread_rwlock_destroy|176-254-188-229
91692|code|ADR             R12, 0x16634|0-198-143-226
91696|code|ADD             R12, R12, #0x1D000|29-202-140-226
91700|code|LDR             PC, [R12,#(dlerror_ptr - 0x33634)]!; __imp_dlerror|168-254-188-229
91704|code|ADR             R12, 0x16640|0-198-143-226
91708|code|ADD             R12, R12, #0x1D000|29-202-140-226
91712|code|LDR             PC, [R12,#(gettimeofday_ptr - 0x33640)]!; __imp_gettimeofday|160-254-188-229
91716|code|ADR             R12, 0x1664C|0-198-143-226
91720|code|ADD             R12, R12, #0x1D000|29-202-140-226
91724|code|LDR             PC, [R12,#(brlapi_ignoreKeys_ptr - 0x3364C)]!; __imp_brlapi_ignoreKeys|152-254-188-229
91728|code|ADR             R12, 0x16658|0-198-143-226
91732|code|ADD             R12, R12, #0x1D000|29-202-140-226
91736|code|LDR             PC, [R12,#(XTestQueryExtension_ptr - 0x33658)]!; __imp_XTestQueryExtension|144-254-188-229
91740|code|ADR             R12, 0x16664|0-198-143-226
91744|code|ADD             R12, R12, #0x1D000|29-202-140-226
91748|code|LDR             PC, [R12,#(strcasecmp_ptr - 0x33664)]!; __imp_strcasecmp|136-254-188-229
91752|code|ADR             R12, 0x16670|0-198-143-226
91756|code|ADD             R12, R12, #0x1D000|29-202-140-226
91760|code|LDR             PC, [R12,#(fdopen_ptr - 0x33670)]!; __imp_fdopen|128-254-188-229
91764|code|ADR             R12, 0x1667C|0-198-143-226
91768|code|ADD             R12, R12, #0x1D000|29-202-140-226
91772|code|LDR             PC, [R12,#(strtol_ptr - 0x3367C)]!; __imp_strtol|120-254-188-229
91776|code|BX              PC|120-71
91778|data|ALIGN 4|192-70
91780|code|ADR             R12, 0x1668C|0-198-143-226
91784|code|ADD             R12, R12, #0x1D000|29-202-140-226
91788|code|LDR             PC, [R12,#(free_ptr - 0x3368C)]!; __imp_free|108-254-188-229
91792|code|ADR             R12, 0x16698|0-198-143-226
91796|code|ADD             R12, R12, #0x1D000|29-202-140-226
91800|code|LDR             PC, [R12,#(XGetWindowProperty_ptr - 0x33698)]!; __imp_XGetWindowProperty|100-254-188-229
91804|code|ADR             R12, 0x166A4|0-198-143-226
91808|code|ADD             R12, R12, #0x1D000|29-202-140-226
91812|code|LDR             PC, [R12,#(dladdr_ptr - 0x336A4)]!; __imp_dladdr|92-254-188-229
91816|code|ADR             R12, 0x166B0|0-198-143-226
91820|code|ADD             R12, R12, #0x1D000|29-202-140-226
91824|code|LDR             PC, [R12,#(XSetErrorHandler_ptr - 0x336B0)]!; __imp_XSetErrorHandler|84-254-188-229
91828|code|ADR             R12, 0x166BC|0-198-143-226
91832|code|ADD             R12, R12, #0x1D000|29-202-140-226
91836|code|LDR             PC, [R12,#(brlapi_enterTtyModeWithPath_ptr - 0x336BC)]!; __imp_brlapi_enterTtyModeWithPath|76-254-188-229
91840|code|BX              PC|120-71
91842|data|ALIGN 4|192-70
91844|code|ADR             R12, 0x166CC|0-198-143-226
91848|code|ADD             R12, R12, #0x1D000|29-202-140-226
91852|code|LDR             PC, [R12,#(pthread_setname_np_ptr - 0x336CC)]!; __imp_pthread_setname_np|64-254-188-229
91856|code|ADR             R12, 0x166D8|0-198-143-226
91860|code|ADD             R12, R12, #0x1D000|29-202-140-226
91864|code|LDR             PC, [R12,#(qsort_ptr - 0x336D8)]!; __imp_qsort|56-254-188-229
91868|code|ADR             R12, 0x166E4|0-198-143-226
91872|code|ADD             R12, R12, #0x1D000|29-202-140-226
91876|code|LDR             PC, [R12,#(strncmp_ptr - 0x336E4)]!; __imp_strncmp|48-254-188-229
91880|code|ADR             R12, 0x166F0|0-198-143-226
91884|code|ADD             R12, R12, #0x1D000|29-202-140-226
91888|code|LDR             PC, [R12,#(__open_2_ptr - 0x336F0)]!; __imp___open_2|40-254-188-229
91892|code|ADR             R12, 0x166FC|0-198-143-226
91896|code|ADD             R12, R12, #0x1D000|29-202-140-226
91900|code|LDR             PC, [R12,#(XQueryTree_ptr - 0x336FC)]!; __imp_XQueryTree|32-254-188-229
91904|code|ADR             R12, 0x16708|0-198-143-226
91908|code|ADD             R12, R12, #0x1D000|29-202-140-226
91912|code|LDR             PC, [R12,#(XkbLibraryVersion_ptr - 0x33708)]!; __imp_XkbLibraryVersion|24-254-188-229
91916|code|ADR             R12, 0x16714|0-198-143-226
91920|code|ADD             R12, R12, #0x1D000|29-202-140-226
91924|code|LDR             PC, [R12,#(u_getIntPropertyValue_52_ptr - 0x33714)]!; __imp_u_getIntPropertyValue_52|16-254-188-229
91928|code|ADR             R12, 0x16720|0-198-143-226
91932|code|ADD             R12, R12, #0x1D000|29-202-140-226
91936|code|LDR             PC, [R12,#(brlapi_readKey_ptr - 0x33720)]!; __imp_brlapi_readKey|8-254-188-229
91940|code|ADR             R12, 0x1672C|0-198-143-226
91944|code|ADD             R12, R12, #0x1D000|29-202-140-226
91948|code|LDR             PC, [R12,#(brlapi_openConnection_ptr - 0x3372C)]!; __imp_brlapi_openConnection|0-254-188-229
91952|code|ADR             R12, 0x16738|0-198-143-226
91956|code|ADD             R12, R12, #0x1D000|29-202-140-226
91960|code|LDR             PC, [R12,#(exit_ptr - 0x33738)]!; __imp_exit|248-253-188-229
91964|code|ADR             R12, 0x16744|0-198-143-226
91968|code|ADD             R12, R12, #0x1D000|29-202-140-226
91972|code|LDR             PC, [R12,#(strerror_ptr - 0x33744)]!; __imp_strerror|240-253-188-229
91976|code|ADR             R12, 0x16750|0-198-143-226
91980|code|ADD             R12, R12, #0x1D000|29-202-140-226
91984|code|LDR             PC, [R12,#(__xmknod_ptr - 0x33750)]!; __imp___xmknod|232-253-188-229
91988|code|ADR             R12, 0x1675C|0-198-143-226
91992|code|ADD             R12, R12, #0x1D000|29-202-140-226
91996|code|LDR             PC, [R12,#(__vsnprintf_chk_ptr - 0x3375C)]!; __imp___vsnprintf_chk|224-253-188-229
92000|code|ADR             R12, 0x16768|0-198-143-226
92004|code|ADD             R12, R12, #0x1D000|29-202-140-226
92008|code|LDR             PC, [R12,#(dlclose_ptr - 0x33768)]!; __imp_dlclose|216-253-188-229
92012|code|ADR             R12, 0x16774|0-198-143-226
92016|code|ADD             R12, R12, #0x1D000|29-202-140-226
92020|code|LDR             PC, [R12,#(pthread_getname_np_ptr - 0x33774)]!; __imp_pthread_getname_np|208-253-188-229
92024|code|ADR             R12, 0x16780|0-198-143-226
92028|code|ADD             R12, R12, #0x1D000|29-202-140-226
92032|code|LDR             PC, [R12,#(feof_ptr - 0x33780)]!; __imp_feof|200-253-188-229
92036|code|ADR             R12, 0x1678C|0-198-143-226
92040|code|ADD             R12, R12, #0x1D000|29-202-140-226
92044|code|LDR             PC, [R12,#(strtok_ptr - 0x3378C)]!; __imp_strtok|192-253-188-229
92048|code|ADR             R12, 0x16798|0-198-143-226
92052|code|ADD             R12, R12, #0x1D000|29-202-140-226
92056|code|LDR             PC, [R12,#(perror_ptr - 0x33798)]!; __imp_perror|184-253-188-229
92060|code|BX              PC|120-71
92062|data|ALIGN 4|192-70
92064|code|ADR             R12, 0x167A8|0-198-143-226
92068|code|ADD             R12, R12, #0x1D000|29-202-140-226
92072|code|LDR             PC, [R12,#(nl_langinfo_ptr - 0x337A8)]!; __imp_nl_langinfo|172-253-188-229
92076|code|ADR             R12, 0x167B4|0-198-143-226
92080|code|ADD             R12, R12, #0x1D000|29-202-140-226
92084|code|LDR             PC, [R12,#(wmemcpy_ptr - 0x337B4)]!; __imp_wmemcpy|164-253-188-229
92088|code|ADR             R12, 0x167C0|0-198-143-226
92092|code|ADD             R12, R12, #0x1D000|29-202-140-226
92096|code|LDR             PC, [R12,#(XKeysymToKeycode_ptr - 0x337C0)]!; __imp_XKeysymToKeycode|156-253-188-229
92100|code|ADR             R12, 0x167CC|0-198-143-226
92104|code|ADD             R12, R12, #0x1D000|29-202-140-226
92108|code|LDR             PC, [R12,#(sigfillset_ptr - 0x337CC)]!; __imp_sigfillset|148-253-188-229
92112|code|ADR             R12, 0x167D8|0-198-143-226
92116|code|ADD             R12, R12, #0x1D000|29-202-140-226
92120|code|LDR             PC, [R12,#(XSelectInput_ptr - 0x337D8)]!; __imp_XSelectInput|140-253-188-229
92124|code|ADR             R12, 0x167E4|0-198-143-226
92128|code|ADD             R12, R12, #0x1D000|29-202-140-226
92132|code|LDR             PC, [R12,#(textdomain_ptr - 0x337E4)]!; __imp_textdomain|132-253-188-229
92136|code|ADR             R12, 0x167F0|0-198-143-226
92140|code|ADD             R12, R12, #0x1D000|29-202-140-226
92144|code|LDR             PC, [R12,#(readlink_ptr - 0x337F0)]!; __imp_readlink|124-253-188-229
92148|code|BX              PC|120-71
92150|data|ALIGN 4|192-70
92152|code|ADR             R12, 0x16800|0-198-143-226
92156|code|ADD             R12, R12, #0x1D000|29-202-140-226
92160|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x33800)]!; __imp___fprintf_chk|112-253-188-229
92164|code|ADR             R12, 0x1680C|0-198-143-226
92168|code|ADD             R12, R12, #0x1D000|29-202-140-226
92172|code|LDR             PC, [R12,#(brlapi_acceptKeys_ptr - 0x3380C)]!; __imp_brlapi_acceptKeys|104-253-188-229
92176|code|ADR             R12, 0x16818|0-198-143-226
92180|code|ADD             R12, R12, #0x1D000|29-202-140-226
92184|code|LDR             PC, [R12,#(strtoul_ptr - 0x33818)]!; __imp_strtoul|96-253-188-229
92188|code|ADR             R12, 0x16824|0-198-143-226
92192|code|ADD             R12, R12, #0x1D000|29-202-140-226
92196|code|LDR             PC, [R12,#(nanosleep_ptr - 0x33824)]!; __imp_nanosleep|88-253-188-229
92200|code|ADR             R12, 0x16830|0-198-143-226
92204|code|ADD             R12, R12, #0x1D000|29-202-140-226
92208|code|LDR             PC, [R12,#(strftime_ptr - 0x33830)]!; __imp_strftime|80-253-188-229
92212|code|ADR             R12, 0x1683C|0-198-143-226
92216|code|ADD             R12, R12, #0x1D000|29-202-140-226
92220|code|LDR             PC, [R12,#(memset_ptr - 0x3383C)]!; __imp_memset|72-253-188-229
92224|code|ADR             R12, 0x16848|0-198-143-226
92228|code|ADD             R12, R12, #0x1D000|29-202-140-226
92232|code|LDR             PC, [R12,#(pthread_self_ptr - 0x33848)]!; __imp_pthread_self|64-253-188-229
92236|code|ADR             R12, 0x16854|0-198-143-226
92240|code|ADD             R12, R12, #0x1D000|29-202-140-226
92244|code|LDR             PC, [R12,#(closelog_ptr - 0x33854)]!; __imp_closelog|56-253-188-229
92248|code|BX              PC|120-71
92250|data|ALIGN 4|192-70
92252|code|ADR             R12, 0x16864|0-198-143-226
92256|code|ADD             R12, R12, #0x1D000|29-202-140-226
92260|code|LDR             PC, [R12,#(recv_ptr - 0x33864)]!; __imp_recv|44-253-188-229
92264|code|ADR             R12, 0x16870|0-198-143-226
92268|code|ADD             R12, R12, #0x1D000|29-202-140-226
92272|code|LDR             PC, [R12,#(fcntl_ptr - 0x33870)]!; __imp_fcntl|36-253-188-229
92276|code|ADR             R12, 0x1687C|0-198-143-226
92280|code|ADD             R12, R12, #0x1D000|29-202-140-226
92284|code|LDR             PC, [R12,#(pthread_sigmask_ptr - 0x3387C)]!; __imp_pthread_sigmask|28-253-188-229
92288|code|ADR             R12, 0x16888|0-198-143-226
92292|code|ADD             R12, R12, #0x1D000|29-202-140-226
92296|code|LDR             PC, [R12,#(pthread_rwlock_rdlock_ptr - 0x33888)]!; __imp_pthread_rwlock_rdlock|20-253-188-229
92300|code|ADR             R12, 0x16894|0-198-143-226
92304|code|ADD             R12, R12, #0x1D000|29-202-140-226
92308|code|LDR             PC, [R12,#(XInternAtom_ptr - 0x33894)]!; __imp_XInternAtom|12-253-188-229
92312|code|ADR             R12, 0x168A0|0-198-143-226
92316|code|ADD             R12, R12, #0x1D000|29-202-140-226
92320|code|LDR             PC, [R12,#(snprintf_ptr - 0x338A0)]!; __imp_snprintf|4-253-188-229
92324|code|ADR             R12, 0x168AC|0-198-143-226
92328|code|ADD             R12, R12, #0x1D000|29-202-140-226
92332|code|LDR             PC, [R12,#(__strdup_ptr - 0x338AC)]!; __imp___strdup|252-252-188-229
92336|code|ADR             R12, 0x168B8|0-198-143-226
92340|code|ADD             R12, R12, #0x1D000|29-202-140-226
92344|code|LDR             PC, [R12,#(sigaddset_ptr - 0x338B8)]!; __imp_sigaddset|244-252-188-229
92348|code|ADR             R12, 0x168C4|0-198-143-226
92352|code|ADD             R12, R12, #0x1D000|29-202-140-226
92356|code|LDR             PC, [R12,#(close_ptr - 0x338C4)]!; __imp_close|236-252-188-229
92360|code|ADR             R12, 0x168D0|0-198-143-226
92364|code|ADD             R12, R12, #0x1D000|29-202-140-226
92368|code|LDR             PC, [R12,#(XkbLockModifiers_ptr - 0x338D0)]!; __imp_XkbLockModifiers|228-252-188-229
92372|code|ADR             R12, 0x168DC|0-198-143-226
92376|code|ADD             R12, R12, #0x1D000|29-202-140-226
92380|code|LDR             PC, [R12,#(wmemcmp_ptr - 0x338DC)]!; __imp_wmemcmp|220-252-188-229
92384|code|ADR             R12, 0x168E8|0-198-143-226
92388|code|ADD             R12, R12, #0x1D000|29-202-140-226
92392|code|LDR             PC, [R12,#(fopen_ptr - 0x338E8)]!; __imp_fopen|212-252-188-229
92396|code|BX              PC|120-71
92398|data|ALIGN 4|192-70
92400|code|ADR             R12, 0x168F8|0-198-143-226
92404|code|ADD             R12, R12, #0x1D000|29-202-140-226
92408|code|LDR             PC, [R12,#(read_ptr - 0x338F8)]!; __imp_read|200-252-188-229
92412|code|ADR             R12, 0x16904|0-198-143-226
92416|code|ADD             R12, R12, #0x1D000|29-202-140-226
92420|code|LDR             PC, [R12,#(wmemchr_ptr - 0x33904)]!; __imp_wmemchr|192-252-188-229
92424|code|ADR             R12, 0x16910|0-198-143-226
92428|code|ADD             R12, R12, #0x1D000|29-202-140-226
92432|code|LDR             PC, [R12,#(abort_ptr - 0x33910)]!; __imp_abort|184-252-188-229
92436|code|ADR             R12, 0x1691C|0-198-143-226
92440|code|ADD             R12, R12, #0x1D000|29-202-140-226
92444|code|LDR             PC, [R12,#(pthread_once_ptr - 0x3391C)]!; __imp_pthread_once|176-252-188-229
92448|code|ADR             R12, 0x16928|0-198-143-226
92452|code|ADD             R12, R12, #0x1D000|29-202-140-226
92456|code|LDR             PC, [R12,#(poll_ptr - 0x33928)]!; __imp_poll|168-252-188-229
92460|code|ADR             R12, 0x16934|0-198-143-226
92464|code|ADD             R12, R12, #0x1D000|29-202-140-226
92468|code|LDR             PC, [R12,#(__ctype_toupper_loc_ptr - 0x33934)]!; __imp___ctype_toupper_loc|160-252-188-229
92472|code|ADR             R12, 0x16940|0-198-143-226
92476|code|ADD             R12, R12, #0x1D000|29-202-140-226
92480|code|LDR             PC, [R12,#(memmove_ptr - 0x33940)]!; __imp_memmove|152-252-188-229
92484|code|ADR             R12, 0x1694C|0-198-143-226
92488|code|ADD             R12, R12, #0x1D000|29-202-140-226
92492|code|LDR             PC, [R12,#(XkbQueryExtension_ptr - 0x3394C)]!; __imp_XkbQueryExtension|144-252-188-229
92496|code|ADR             R12, 0x16958|0-198-143-226
92500|code|ADD             R12, R12, #0x1D000|29-202-140-226
92504|code|LDR             PC, [R12,#(strpbrk_ptr - 0x33958)]!; __imp_strpbrk|136-252-188-229
92508|code|ADR             R12, 0x16964|0-198-143-226
92512|code|ADD             R12, R12, #0x1D000|29-202-140-226
92516|code|LDR             PC, [R12,#(XPending_ptr - 0x33964)]!; __imp_XPending|128-252-188-229
92520|code|ADR             R12, 0x16970|0-198-143-226
92524|code|ADD             R12, R12, #0x1D000|29-202-140-226
92528|code|LDR             PC, [R12,#(dlopen_ptr - 0x33970)]!; __imp_dlopen|120-252-188-229
92532|code|ADR             R12, 0x1697C|0-198-143-226
92536|code|ADD             R12, R12, #0x1D000|29-202-140-226
92540|code|LDR             PC, [R12,#(brlapi_writeText_ptr - 0x3397C)]!; __imp_brlapi_writeText|112-252-188-229
92544|code|ADR             R12, 0x16988|0-198-143-226
92548|code|ADD             R12, R12, #0x1D000|29-202-140-226
92552|code|LDR             PC, [R12,#(__libc_current_sigrtmin_ptr - 0x33988)]!; __imp___libc_current_sigrtmin|104-252-188-229
92556|code|ADR             R12, 0x16994|0-198-143-226
92560|code|ADD             R12, R12, #0x1D000|29-202-140-226
92564|code|LDR             PC, [R12,#(kill_ptr - 0x33994)]!; __imp_kill|96-252-188-229
92568|code|ADR             R12, 0x169A0|0-198-143-226
92572|code|ADD             R12, R12, #0x1D000|29-202-140-226
92576|code|LDR             PC, [R12,#(ioctl_ptr - 0x339A0)]!; __imp_ioctl|88-252-188-229
92580|code|ADR             R12, 0x169AC|0-198-143-226
92584|code|ADD             R12, R12, #0x1D000|29-202-140-226
92588|code|LDR             PC, [R12,#(clock_gettime_ptr - 0x339AC)]!; __imp_clock_gettime|80-252-188-229
92592|code|ADR             R12, 0x169B8|0-198-143-226
92596|code|ADD             R12, R12, #0x1D000|29-202-140-226
92600|code|LDR             PC, [R12,#(realloc_ptr - 0x339B8)]!; __imp_realloc|72-252-188-229
92604|code|ADR             R12, 0x169C4|0-198-143-226
92608|code|ADD             R12, R12, #0x1D000|29-202-140-226
92612|code|LDR             PC, [R12,#(strcpy_ptr - 0x339C4)]!; __imp_strcpy|64-252-188-229
92616|code|ADR             R12, 0x169D0|0-198-143-226
92620|code|ADD             R12, R12, #0x1D000|29-202-140-226
92624|code|LDR             PC, [R12,#(strtod_ptr - 0x339D0)]!; __imp_strtod|56-252-188-229
92628|code|ADR             R12, 0x169DC|0-198-143-226
92632|code|ADD             R12, R12, #0x1D000|29-202-140-226
92636|code|LDR             PC, [R12,#(open_ptr - 0x339DC)]!; __imp_open|48-252-188-229
92640|code|ADR             R12, 0x169E8|0-198-143-226
92644|code|ADD             R12, R12, #0x1D000|29-202-140-226
92648|code|LDR             PC, [R12,#(waitpid_ptr - 0x339E8)]!; __imp_waitpid|40-252-188-229
92652|code|ADR             R12, 0x169F4|0-198-143-226
92656|code|ADD             R12, R12, #0x1D000|29-202-140-226
92660|code|LDR             PC, [R12,#(pthread_getspecific_ptr - 0x339F4)]!; __imp_pthread_getspecific|32-252-188-229
92664|code|ADR             R12, 0x16A00|0-198-143-226
92668|code|ADD             R12, R12, #0x1D000|29-202-140-226
92672|code|LDR             PC, [R12,#(fileno_ptr - 0x33A00)]!; __imp_fileno|24-252-188-229
92676|code|BX              PC|120-71
92678|data|ALIGN 4|192-70
92680|code|ADR             R12, 0x16A10|0-198-143-226
92684|code|ADD             R12, R12, #0x1D000|29-202-140-226
92688|code|LDR             PC, [R12,#(pthread_rwlock_unlock_ptr - 0x33A10)]!; __imp_pthread_rwlock_unlock|12-252-188-229
92692|code|ADR             R12, 0x16A1C|0-198-143-226
92696|code|ADD             R12, R12, #0x1D000|29-202-140-226
92700|code|LDR             PC, [R12,#(XConnectionNumber_ptr - 0x33A1C)]!; __imp_XConnectionNumber|4-252-188-229
92704|code|ADR             R12, 0x16A28|0-198-143-226
92708|code|ADD             R12, R12, #0x1D000|29-202-140-226
92712|code|LDR             PC, [R12,#(__syslog_chk_ptr - 0x33A28)]!; __imp___syslog_chk|252-251-188-229
92716|code|ADR             R12, 0x16A34|0-198-143-226
92720|code|ADD             R12, R12, #0x1D000|29-202-140-226
92724|code|LDR             PC, [R12,#(pthread_rwlock_wrlock_ptr - 0x33A34)]!; __imp_pthread_rwlock_wrlock|244-251-188-229
92728|code|ADR             R12, 0x16A40|0-198-143-226
92732|code|ADD             R12, R12, #0x1D000|29-202-140-226
92736|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x33A40)]!; __imp___stack_chk_fail|236-251-188-229
92740|code|ADR             R12, 0x16A4C|0-198-143-226
92744|code|ADD             R12, R12, #0x1D000|29-202-140-226
92748|code|LDR             PC, [R12,#(pthread_rwlock_tryrdlock_ptr - 0x33A4C)]!; __imp_pthread_rwlock_tryrdlock|228-251-188-229
92752|code|ADR             R12, 0x16A58|0-198-143-226
92756|code|ADD             R12, R12, #0x1D000|29-202-140-226
92760|code|LDR             PC, [R12,#(fork_ptr - 0x33A58)]!; __imp_fork|220-251-188-229
92764|code|ADR             R12, 0x16A64|0-198-143-226
92768|code|ADD             R12, R12, #0x1D000|29-202-140-226
92772|code|LDR             PC, [R12,#(access_ptr - 0x33A64)]!; __imp_access|212-251-188-229
92776|code|ADR             R12, 0x16A70|0-198-143-226
92780|code|ADD             R12, R12, #0x1D000|29-202-140-226
92784|code|LDR             PC, [R12,#(sigdelset_ptr - 0x33A70)]!; __imp_sigdelset|204-251-188-229
92788|code|ADR             R12, 0x16A7C|0-198-143-226
92792|code|ADD             R12, R12, #0x1D000|29-202-140-226
92796|code|LDR             PC, [R12,#(dcgettext_ptr - 0x33A7C)]!; __imp_dcgettext|196-251-188-229
92800|code|ADR             R12, 0x16A88|0-198-143-226
92804|code|ADD             R12, R12, #0x1D000|29-202-140-226
92808|code|LDR             PC, [R12,#(mkdir_ptr - 0x33A88)]!; __imp_mkdir|188-251-188-229
92812|code|BX              PC|120-71
92814|data|ALIGN 4|192-70
92816|code|ADR             R12, 0x16A98|0-198-143-226
92820|code|ADD             R12, R12, #0x1D000|29-202-140-226
92824|code|LDR             PC, [R12,#(__cxa_atexit_ptr - 0x33A98)]!; __imp___cxa_atexit|176-251-188-229
92828|code|ADR             R12, 0x16AA4|0-198-143-226
92832|code|ADD             R12, R12, #0x1D000|29-202-140-226
92836|code|LDR             PC, [R12,#(XRefreshKeyboardMapping_ptr - 0x33AA4)]!; __imp_XRefreshKeyboardMapping|168-251-188-229
92840|code|ADR             R12, 0x16AB0|0-198-143-226
92844|code|ADD             R12, R12, #0x1D000|29-202-140-226
92848|code|LDR             PC, [R12,#(XTestFakeKeyEvent_ptr - 0x33AB0)]!; __imp_XTestFakeKeyEvent|160-251-188-229
92852|code|ADR             R12, 0x16ABC|0-198-143-226
92856|code|ADD             R12, R12, #0x1D000|29-202-140-226
92860|code|LDR             PC, [R12,#(XFree_ptr - 0x33ABC)]!; __imp_XFree|152-251-188-229
92864|code|ADR             R12, 0x16AC8|0-198-143-226
92868|code|ADD             R12, R12, #0x1D000|29-202-140-226
92872|code|LDR             PC, [R12,#(strncasecmp_ptr - 0x33AC8)]!; __imp_strncasecmp|144-251-188-229
92876|code|ADR             R12, 0x16AD4|0-198-143-226
92880|code|ADD             R12, R12, #0x1D000|29-202-140-226
92884|code|LDR             PC, [R12,#(XkbLookupKeySym_ptr - 0x33AD4)]!; __imp_XkbLookupKeySym|136-251-188-229
92888|code|ADR             R12, 0x16AE0|0-198-143-226
92892|code|ADD             R12, R12, #0x1D000|29-202-140-226
92896|code|LDR             PC, [R12,#(brlapi_setFocus_ptr - 0x33AE0)]!; __imp_brlapi_setFocus|128-251-188-229
92900|code|ADR             R12, 0x16AEC|0-198-143-226
92904|code|ADD             R12, R12, #0x1D000|29-202-140-226
92908|code|LDR             PC, [R12,#(pthread_key_create_ptr - 0x33AEC)]!; __imp_pthread_key_create|120-251-188-229
92912|code|ADR             R12, 0x16AF8|0-198-143-226
92916|code|ADD             R12, R12, #0x1D000|29-202-140-226
92920|code|LDR             PC, [R12,#(getopt_long_ptr - 0x33AF8)]!; __imp_getopt_long|112-251-188-229
92924|code|ADR             R12, 0x16B04|0-198-143-226
92928|code|ADD             R12, R12, #0x1D000|29-202-140-226
92932|code|LDR             PC, [R12,#(select_ptr - 0x33B04)]!; __imp_select|104-251-188-229
92936|code|ADR             R12, 0x16B10|0-198-143-226
92940|code|ADD             R12, R12, #0x1D000|29-202-140-226
92944|code|LDR             PC, [R12,#(lseek_ptr - 0x33B10)]!; __imp_lseek|96-251-188-229
92948|code|ADR             R12, 0x16B1C|0-198-143-226
92952|code|ADD             R12, R12, #0x1D000|29-202-140-226
92956|code|LDR             PC, [R12,#(raise_ptr - 0x33B1C)]!; __imp_raise|88-251-188-229
92960|code|ADR             R12, 0x16B28|0-198-143-226
92964|code|ADD             R12, R12, #0x1D000|29-202-140-226
92968|code|LDR             PC, [R12,#(__ctype_b_loc_ptr - 0x33B28)]!; __imp___ctype_b_loc|80-251-188-229
92972|code|ADR             R12, 0x16B34|0-198-143-226
92976|code|ADD             R12, R12, #0x1D000|29-202-140-226
92980|code|LDR             PC, [R12,#(brlapi_ignoreKeyRanges_ptr - 0x33B34)]!; __imp_brlapi_ignoreKeyRanges|72-251-188-229
92984|code|ADR             R12, 0x16B40|0-198-143-226
92988|code|ADD             R12, R12, #0x1D000|29-202-140-226
92992|code|LDR             PC, [R12,#(bindtextdomain_ptr - 0x33B40)]!; __imp_bindtextdomain|64-251-188-229
92996|code|ADR             R12, 0x16B4C|0-198-143-226
93000|code|ADD             R12, R12, #0x1D000|29-202-140-226
93004|code|LDR             PC, [R12,#(sigaction_ptr - 0x33B4C)]!; __imp_sigaction|56-251-188-229
93008|code|ADR             R12, 0x16B58|0-198-143-226
93012|code|ADD             R12, R12, #0x1D000|29-202-140-226
93016|code|LDR             PC, [R12,#(XOpenDisplay_ptr - 0x33B58)]!; __imp_XOpenDisplay|48-251-188-229
93020|code|ADR             R12, 0x16B64|0-198-143-226
93024|code|ADD             R12, R12, #0x1D000|29-202-140-226
93028|code|LDR             PC, [R12,#(calloc_ptr - 0x33B64)]!; __imp_calloc|40-251-188-229
93032|code|ADR             R12, 0x16B70|0-198-143-226
93036|code|ADD             R12, R12, #0x1D000|29-202-140-226
93040|code|LDR             PC, [R12,#(__vfprintf_chk_ptr - 0x33B70)]!; __imp___vfprintf_chk|32-251-188-229
93044|code|ADR             R12, 0x16B7C|0-198-143-226
93048|code|ADD             R12, R12, #0x1D000|29-202-140-226
93052|code|LDR             PC, [R12,#(setlocale_ptr - 0x33B7C)]!; __imp_setlocale|24-251-188-229
93056|code|ADR             R12, 0x16B88|0-198-143-226
93060|code|ADD             R12, R12, #0x1D000|29-202-140-226
93064|code|LDR             PC, [R12,#(ferror_ptr - 0x33B88)]!; __imp_ferror|16-251-188-229
93068|code|ADR             R12, 0x16B94|0-198-143-226
93072|code|ADD             R12, R12, #0x1D000|29-202-140-226
93076|code|LDR             PC, [R12,#(iconv_close_ptr - 0x33B94)]!; __imp_iconv_close|8-251-188-229
93080|code|ADR             R12, 0x16BA0|0-198-143-226
93084|code|ADD             R12, R12, #0x1D000|29-202-140-226
93088|code|LDR             PC, [R12,#(XNextEvent_ptr - 0x33BA0)]!; __imp_XNextEvent|0-251-188-229
93092|code|ADR             R12, 0x16BAC|0-198-143-226
93096|code|ADD             R12, R12, #0x1D000|29-202-140-226
93100|code|LDR             PC, [R12,#(fgets_ptr - 0x33BAC)]!; __imp_fgets|248-250-188-229
93104|code|ADR             R12, 0x16BB8|0-198-143-226
93108|code|ADD             R12, R12, #0x1D000|29-202-140-226
93112|code|LDR             PC, [R12,#(XGetErrorText_ptr - 0x33BB8)]!; __imp_XGetErrorText|240-250-188-229
93116|code|ADR             R12, 0x16BC4|0-198-143-226
93120|code|ADD             R12, R12, #0x1D000|29-202-140-226
93124|code|LDR             PC, [R12,#(__fxstat_ptr - 0x33BC4)]!; __imp___fxstat|232-250-188-229
93128|code|ADR             R12, 0x16BD0|0-198-143-226
93132|code|ADD             R12, R12, #0x1D000|29-202-140-226
93136|code|LDR             PC, [R12,#(u_charFromName_52_ptr - 0x33BD0)]!; __imp_u_charFromName_52|224-250-188-229
93140|code|ADR             R12, 0x16BDC|0-198-143-226
93144|code|ADD             R12, R12, #0x1D000|29-202-140-226
93148|code|LDR             PC, [R12,#(flockfile_ptr - 0x33BDC)]!; __imp_flockfile|216-250-188-229
93152|code|ADR             R12, 0x16BE8|0-198-143-226
93156|code|ADD             R12, R12, #0x1D000|29-202-140-226
93160|code|LDR             PC, [R12,#(fputc_ptr - 0x33BE8)]!; __imp_fputc|208-250-188-229
93164|code|ADR             R12, 0x16BF4|0-198-143-226
93168|code|ADD             R12, R12, #0x1D000|29-202-140-226
93172|code|LDR             PC, [R12,#(fwrite_ptr - 0x33BF4)]!; __imp_fwrite|200-250-188-229
93176|code|ADR             R12, 0x16C00|0-198-143-226
93180|code|ADD             R12, R12, #0x1D000|29-202-140-226
93184|code|LDR             PC, [R12,#(memcpy_ptr - 0x33C00)]!; __imp_memcpy|192-250-188-229
93188|code|ADR             R12, 0x16C0C|0-198-143-226
93192|code|ADD             R12, R12, #0x1D000|29-202-140-226
93196|code|LDR             PC, [R12,#(unorm_normalize_52_ptr - 0x33C0C)]!; __imp_unorm_normalize_52|184-250-188-229
93200|code|ADR             R12, 0x16C18|0-198-143-226
93204|code|ADD             R12, R12, #0x1D000|29-202-140-226
93208|code|LDR             PC, [R12,#(malloc_ptr - 0x33C18)]!; __imp_malloc|176-250-188-229
93212|code|BX              PC|120-71
93214|data|ALIGN 4|192-70
93216|code|ADR             R12, 0x16C28|0-198-143-226
93220|code|ADD             R12, R12, #0x1D000|29-202-140-226
93224|code|LDR             PC, [R12,#(strlen_ptr - 0x33C28)]!; __imp_strlen|164-250-188-229
93228|code|ADR             R12, 0x16C34|0-198-143-226
93232|code|ADD             R12, R12, #0x1D000|29-202-140-226
93236|code|LDR             PC, [R12,#(__snprintf_chk_ptr - 0x33C34)]!; __imp___snprintf_chk|156-250-188-229
93240|code|ADR             R12, 0x16C40|0-198-143-226
93244|code|ADD             R12, R12, #0x1D000|29-202-140-226
93248|code|LDR             PC, [R12,#(ioperm_ptr - 0x33C40)]!; __imp_ioperm|148-250-188-229
93252|code|BX              PC|120-71
93254|data|ALIGN 4|192-70
93256|code|ADR             R12, 0x16C50|0-198-143-226
93260|code|ADD             R12, R12, #0x1D000|29-202-140-226
93264|code|LDR             PC, [R12,#(outb_ptr - 0x33C50)]!; __imp_outb|136-250-188-229
93268|code|ADR             R12, 0x16C5C|0-198-143-226
93272|code|ADD             R12, R12, #0x1D000|29-202-140-226
93276|code|LDR             PC, [R12,#(XFlush_ptr - 0x33C5C)]!; __imp_XFlush|128-250-188-229
93280|code|ADR             R12, 0x16C68|0-198-143-226
93284|code|ADD             R12, R12, #0x1D000|29-202-140-226
93288|code|LDR             PC, [R12,#(pthread_setspecific_ptr - 0x33C68)]!; __imp_pthread_setspecific|120-250-188-229
93292|code|ADR             R12, 0x16C74|0-198-143-226
93296|code|ADD             R12, R12, #0x1D000|29-202-140-226
93300|code|LDR             PC, [R12,#(getcwd_ptr - 0x33C74)]!; __imp_getcwd|112-250-188-229
93304|code|ADR             R12, 0x16C80|0-198-143-226
93308|code|ADD             R12, R12, #0x1D000|29-202-140-226
93312|code|LDR             PC, [R12,#(fclose_ptr - 0x33C80)]!; __imp_fclose|104-250-188-229
93316|code|ADR             R12, 0x16C8C|0-198-143-226
93320|code|ADD             R12, R12, #0x1D000|29-202-140-226
93324|code|LDR             PC, [R12,#(XDisplayName_ptr - 0x33C8C)]!; __imp_XDisplayName|96-250-188-229
93328|code|BX              PC|120-71
93330|data|ALIGN 4|192-70
93332|code|ADR             R12, 0x16C9C|0-198-143-226
93336|code|ADD             R12, R12, #0x1D000|29-202-140-226
93340|code|LDR             PC, [R12,#(write_ptr - 0x33C9C)]!; __imp_write|84-250-188-229
93344|code|BX              PC|120-71
93346|data|ALIGN 4|192-70
93348|code|ADR             R12, 0x16CAC|0-198-143-226
93352|code|ADD             R12, R12, #0x1D000|29-202-140-226
93356|code|LDR             PC, [R12,#(inb_ptr - 0x33CAC)]!; __imp_inb|72-250-188-229
93360|code|ADR             R12, 0x16CB8|0-198-143-226
93364|code|ADD             R12, R12, #0x1D000|29-202-140-226
93368|code|LDR             PC, [R12,#(__fdelt_chk_ptr - 0x33CB8)]!; __imp___fdelt_chk|64-250-188-229
93372|code|ADR             R12, 0x16CC4|0-198-143-226
93376|code|ADD             R12, R12, #0x1D000|29-202-140-226
93380|code|LDR             PC, [R12,#(sigismember_ptr - 0x33CC4)]!; __imp_sigismember|56-250-188-229
93384|code|ADR             R12, 0x16CD0|0-198-143-226
93388|code|ADD             R12, R12, #0x1D000|29-202-140-226
93392|code|LDR             PC, [R12,#(mempcpy_ptr - 0x33CD0)]!; __imp_mempcpy|48-250-188-229
93396|code|ADR             R12, 0x16CDC|0-198-143-226
93400|code|ADD             R12, R12, #0x1D000|29-202-140-226
93404|code|LDR             PC, [R12,#(__xstat_ptr - 0x33CDC)]!; __imp___xstat|40-250-188-229
93408|code|ADR             R12, 0x16CE8|0-198-143-226
93412|code|ADD             R12, R12, #0x1D000|29-202-140-226
93416|code|LDR             PC, [R12,#(pthread_rwlock_trywrlock_ptr - 0x33CE8)]!; __imp_pthread_rwlock_trywrlock|32-250-188-229
93420|code|ADR             R12, 0x16CF4|0-198-143-226
93424|code|ADD             R12, R12, #0x1D000|29-202-140-226
93428|code|LDR             PC, [R12,#(__realpath_chk_ptr - 0x33CF4)]!; __imp___realpath_chk|24-250-188-229
93432|code|ADR             R12, 0x16D00|0-198-143-226
93436|code|ADD             R12, R12, #0x1D000|29-202-140-226
93440|code|LDR             PC, [R12,#(iconv_open_ptr - 0x33D00)]!; __imp_iconv_open|16-250-188-229
93444|code|ADR             R12, 0x16D0C|0-198-143-226
93448|code|ADD             R12, R12, #0x1D000|29-202-140-226
93452|code|LDR             PC, [R12,#(pthread_rwlock_init_ptr - 0x33D0C)]!; __imp_pthread_rwlock_init|8-250-188-229
93456|code|ADR             R12, 0x16D18|0-198-143-226
93460|code|ADD             R12, R12, #0x1D000|29-202-140-226
93464|code|LDR             PC, [R12,#(__ctype_get_mb_cur_max_ptr - 0x33D18)]!; __imp___ctype_get_mb_cur_max|0-250-188-229
93468|code|ADR             R12, 0x16D24|0-198-143-226
93472|code|ADD             R12, R12, #0x1D000|29-202-140-226
93476|code|LDR             PC, [R12,#(_exit_ptr - 0x33D24)]!; __imp__exit|248-249-188-229
93480|code|ADR             R12, 0x16D30|0-198-143-226
93484|code|ADD             R12, R12, #0x1D000|29-202-140-226
93488|code|LDR             PC, [R12,#(pthread_create_ptr - 0x33D30)]!; __imp_pthread_create|240-249-188-229
93492|code|ADR             R12, 0x16D3C|0-198-143-226
93496|code|ADD             R12, R12, #0x1D000|29-202-140-226
93500|code|LDR             PC, [R12,#(strcmp_ptr - 0x33D3C)]!; __imp_strcmp|232-249-188-229
93504|code|ADR             R12, 0x16D48|0-198-143-226
93508|code|ADD             R12, R12, #0x1D000|29-202-140-226
93512|code|LDR             PC, [R12,#(XGetInputFocus_ptr - 0x33D48)]!; __imp_XGetInputFocus|224-249-188-229
93516|code|ADR             R12, 0x16D54|0-198-143-226
93520|code|ADD             R12, R12, #0x1D000|29-202-140-226
93524|code|LDR             PC, [R12,#(iconv_ptr - 0x33D54)]!; __imp_iconv|216-249-188-229
93528|code|ADR             R12, 0x16D60|0-198-143-226
93532|code|ADD             R12, R12, #0x1D000|29-202-140-226
93536|code|LDR             PC, [R12,#(__errno_location_ptr - 0x33D60)]!; __imp___errno_location|208-249-188-229
93540|code|BX              PC|120-71
93542|data|ALIGN 4|192-70
93544|code|ADR             R12, 0x16D70|0-198-143-226
93548|code|ADD             R12, R12, #0x1D000|29-202-140-226
93552|code|LDR             PC, [R12,#(send_ptr - 0x33D70)]!; __imp_send|196-249-188-229
93556|code|ADR             R12, 0x16D7C|0-198-143-226
93560|code|ADD             R12, R12, #0x1D000|29-202-140-226
93564|code|LDR             PC, [R12,#(memchr_ptr - 0x33D7C)]!; __imp_memchr|188-249-188-229
93568|code|ADR             R12, 0x16D88|0-198-143-226
93572|code|ADD             R12, R12, #0x1D000|29-202-140-226
93576|code|LDR             PC, [R12,#(sscanf_ptr - 0x33D88)]!; __imp_sscanf|180-249-188-229
93580|code|BX              PC|120-71
93582|data|ALIGN 4|192-70
93584|code|ADR             R12, 0x16D98|0-198-143-226
93588|code|ADD             R12, R12, #0x1D000|29-202-140-226
93592|code|LDR             PC, [R12,#(fflush_ptr - 0x33D98)]!; __imp_fflush|168-249-188-229
93596|code|ADR             R12, 0x16DA4|0-198-143-226
93600|code|ADD             R12, R12, #0x1D000|29-202-140-226
93604|code|LDR             PC, [R12,#(memcmp_ptr - 0x33DA4)]!; __imp_memcmp|160-249-188-229
93608|code|ADR             R12, 0x16DB0|0-198-143-226
93612|code|ADD             R12, R12, #0x1D000|29-202-140-226
93616|code|LDR             PC, [R12,#(__libc_current_sigrtmax_ptr - 0x33DB0)]!; __imp___libc_current_sigrtmax|152-249-188-229
93620|code|ADR             R12, 0x16DBC|0-198-143-226
93624|code|ADD             R12, R12, #0x1D000|29-202-140-226
93628|code|LDR             PC, [R12,#(sigemptyset_ptr - 0x33DBC)]!; __imp_sigemptyset|144-249-188-229
93632|code|ADR             R12, 0x16DC8|0-198-143-226
93636|code|ADD             R12, R12, #0x1D000|29-202-140-226
93640|code|LDR             PC, [R12,#(brlapi_getDisplaySize_ptr - 0x33DC8)]!; __imp_brlapi_getDisplaySize|136-249-188-229
93644|code|BX              PC|120-71
93646|data|ALIGN 4|192-70
93648|code|ADR             R12, 0x16DD8|0-198-143-226
93652|code|ADD             R12, R12, #0x1D000|29-202-140-226
93656|code|LDR             PC, [R12,#(strrchr_ptr - 0x33DD8)]!; __imp_strrchr|124-249-188-229
93660|code|ADR             R12, 0x16DE4|0-198-143-226
93664|code|ADD             R12, R12, #0x1D000|29-202-140-226
93668|code|LDR             PC, [R12,#(funlockfile_ptr - 0x33DE4)]!; __imp_funlockfile|116-249-188-229
93672|code|ADR             R12, 0x16DF0|0-198-143-226
93676|code|ADD             R12, R12, #0x1D000|29-202-140-226
93680|code|LDR             PC, [R12,#(mktime_ptr - 0x33DF0)]!; __imp_mktime|108-249-188-229
93684|code|ADR             R12, 0x16DFC|0-198-143-226
93688|code|ADD             R12, R12, #0x1D000|29-202-140-226
93692|code|LDR             PC, [R12,#(openlog_ptr - 0x33DFC)]!; __imp_openlog|100-249-188-229
93696|code|ADR             R12, 0x16E08|0-198-143-226
93700|code|ADD             R12, R12, #0x1D000|29-202-140-226
93704|code|LDR             PC, [R12,#(fputs_ptr - 0x33E08)]!; __imp_fputs|92-249-188-229
93708|code|ADR             R12, 0x16E14|0-198-143-226
93712|code|ADD             R12, R12, #0x1D000|29-202-140-226
93716|code|LDR             PC, [R12,#(getenv_ptr - 0x33E14)]!; __imp_getenv|84-249-188-229
93720|code|ADR             R12, 0x16E20|0-198-143-226
93724|code|ADD             R12, R12, #0x1D000|29-202-140-226
93728|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x33E20)]!; __imp___libc_start_main|76-249-188-229
93732|code|ADR             R12, 0x16E2C|0-198-143-226
93736|code|ADD             R12, R12, #0x1D000|29-202-140-226
93740|code|LDR             PC, [R12,#(dlsym_ptr - 0x33E2C)]!; __imp_dlsym|68-249-188-229
93744|code|ADR             R12, 0x16E38|0-198-143-226
93748|code|ADD             R12, R12, #0x1D000|29-202-140-226
93752|code|LDR             PC, [R12,#(execvp_ptr - 0x33E38)]!; __imp_execvp|60-249-188-229
93756|code|ADR             R12, 0x16E44|0-198-143-226
93760|code|ADD             R12, R12, #0x1D000|29-202-140-226
93764|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x33E44)]!; __imp___gmon_start__|52-249-188-229
93768|code|ADR             R12, 0x16E50|0-198-143-226
93772|code|ADD             R12, R12, #0x1D000|29-202-140-226
93776|code|LDR             PC, [R12,#(brlapi_perror_ptr - 0x33E50)]!; __imp_brlapi_perror|44-249-188-229
93780|code|ADR             R12, 0x16E5C|0-198-143-226
93784|code|ADD             R12, R12, #0x1D000|29-202-140-226
93788|code|LDR             PC, [R12,#(brlapi_enterTtyMode_ptr - 0x33E5C)]!; __imp_brlapi_enterTtyMode|36-249-188-229
93792|code|ADR             R12, 0x16E68|0-198-143-226
93796|code|ADD             R12, R12, #0x1D000|29-202-140-226
93800|code|LDR             PC, [R12,#(sigprocmask_ptr - 0x33E68)]!; __imp_sigprocmask|28-249-188-229
93804|code|ADR             R12, 0x16E74|0-198-143-226
93808|code|ADD             R12, R12, #0x1D000|29-202-140-226
93812|code|LDR             PC, [R12,#(strchr_ptr - 0x33E74)]!; __imp_strchr|20-249-188-229
93816|code|BX              PC|120-71
93818|data|ALIGN 4|192-70
93820|code|ADR             R12, 0x16E84|0-198-143-226
93824|code|ADD             R12, R12, #0x1D000|29-202-140-226
93828|code|LDR             PC, [R12,#(pthread_mutex_unlock_ptr - 0x33E84)]!; __imp_pthread_mutex_unlock|8-249-188-229
93832|code|ADR             R12, 0x16E90|0-198-143-226
93836|code|ADD             R12, R12, #0x1D000|29-202-140-226
93840|code|LDR             PC, [R12,#(iswcntrl_ptr - 0x33E90)]!; __imp_iswcntrl|0-249-188-229
93844|code|ADR             R12, 0x16E9C|0-198-143-226
93848|code|ADD             R12, R12, #0x1D000|29-202-140-226
93852|code|LDR             PC, [R12,#(pipe_ptr - 0x33E9C)]!; __imp_pipe|248-248-188-229
93856|code|PUSH            {R4,LR}|16-181
93858|code|SUB             SP, SP, #8|130-176
93860|code|STR             R0, [SP,#4]|1-144
93862|code|MOV             R2, SP|106-70
93864|code|LDR             R0, =(off_3400C - 0x16EB2)|12-72
93866|code|STR             R1, [SP]|0-145
93868|code|ADD             R1, SP, #4|1-169
93870|code|ADD             R0, PC; off_3400C|120-68
93872|code|BL              processOptions|1-240-232-255
93876|code|CMP             R0, #1|1-40
93878|code|BEQ             loc_16EBE|2-208
93880|code|CBZ             R0, loc_16EC2|24-177
93882|code|ADD             SP, SP, #8|2-176
93884|code|POP             {R4,PC}|16-189
93886|code|MOVS            R0, #0|0-32
93888|code|B               loc_16EBA|251-231
93890|code|LDR             R4, =(unk_37B3C - 0x16EC8)|7-76
93892|code|ADD             R4, PC; unk_37B3C|124-68
93894|code|LDR.W           R0, [R4,#(dword_38878 - 0x37B3C)]|212-248-60-13
93898|code|LDR.W           R1, [R4,#(dword_3887C - 0x37B3C)]|212-248-64-29
93902|code|BL              tobrltty_init|0-240-181-250
93906|code|LDR.W           R0, [R4,#(dword_38880 - 0x37B3C)]|212-248-68-13
93910|code|BL              toX_f|0-240-57-253
93914|code|NOP|0-191
93916|data|DCD off_3400C - 0x16EB2|90-209-1-0
93920|data|DCD unk_37B3C - 0x16EC8|116-12-2-0
93924|code|MOV.W           R11, #0|79-240-0-11
93928|code|MOV.W           LR, #0|79-240-0-14
93932|code|POP             {R1}; argc|2-188
93934|code|MOV             R2, SP; ubp_av|106-70
93936|code|PUSH            {R2}; stack_end|4-180
93938|code|PUSH            {R0}; rtld_fini|1-180
93940|code|LDR.W           R12, =(__libc_csu_fini+1)|223-248-16-192
93944|code|PUSH.W          {R12}; fini|77-248-4-205
93948|code|LDR             R0, =(main+1); main|3-72
93950|code|LDR             R3, =(__libc_csu_init+1); init|4-75
93952|code|BLX             __libc_start_main|255-247-138-239
93956|code|BLX             abort|255-247-0-237
93960|data|DCD __libc_csu_fini+1|229-21-2-0
93964|data|DCD main+1|161-110-1-0
93968|data|DCD __libc_csu_init+1|165-21-2-0
93972|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x16F24)|20-48-159-229
93976|code|LDR             R2, =(__gmon_start___ptr_0 - 0x344A0)|20-32-159-229
93980|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
93984|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
93988|code|CMP             R2, #0|0-0-82-227
93992|code|BXEQ            LR|30-255-47-1
93996|code|B               __gmon_start__|194-255-255-234
94000|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x16F24|124-213-1-0
94004|data|DCD __gmon_start___ptr_0 - 0x344A0|120-3-0-0
94008|code|LDR             R3, =0x34853|7-75
94010|code|MOV             R0, #0x34850|68-246-80-0-192-242-3-0
94018|code|SUBS            R3, R3, R0|27-26
94020|code|CMP             R3, #6|6-43
94022|code|BLS             locret_16F54|5-217
94024|code|MOV             R3, #0|64-242-0-3-192-242-0-3
94032|code|CBZ             R3, locret_16F54|3-177
94034|code|BX              R3|24-71
94036|code|BX              LR|112-71
94038|data|ALIGN 4|0-191
94040|data|DCD 0x34853|83-72-3-0
94044|code|MOVW            R3, #0x4850|68-246-80-3
94048|code|MOVW            R0, #0x4850|68-246-80-0
94052|code|MOVT.W          R3, #3|192-242-3-3
94056|code|MOVT.W          R0, #3|192-242-3-0
94060|code|SUBS            R1, R3, R0|25-26
94062|code|ASRS            R1, R1, #2|137-16
94064|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
94068|code|ASRS            R1, R1, #1|73-16
94070|code|BEQ             locret_16F84|5-208
94072|code|MOV             R3, #0|64-242-0-3-192-242-0-3
94080|code|CBZ             R3, locret_16F84|3-177
94082|code|BX              R3|24-71
94084|code|BX              LR|112-71
94086|data|ALIGN 4|0-191
94088|code|PUSH            {R4,LR}|16-181
94090|code|MOV             R4, #0x34850|68-246-80-4-192-242-3-4
94098|code|LDRB            R3, [R4]|35-120
94100|code|CBNZ            R3, locret_16F9E|27-185
94102|code|BL              sub_16F38|255-247-207-255
94106|code|MOVS            R3, #1|1-35
94108|code|STRB            R3, [R4]|35-112
94110|code|POP             {R4,PC}|16-189
94112|code|MOVW            R0, #0x4008|68-242-8-0
94116|code|PUSH            {R3,LR}|8-181
94118|code|MOVT.W          R0, #3|192-242-3-0
94122|code|LDR             R3, [R0]|3-104
94124|code|CBNZ            R3, loc_16FB4|19-185
94126|code|POP.W           {R3,LR}|189-232-8-64
94130|code|B               sub_16F5C|211-231
94132|code|MOV             R3, #0|64-242-0-3-192-242-0-3
94140|code|CMP             R3, #0|0-43
94142|code|BEQ             loc_16FAE|246-208
94144|code|BLX             R3|152-71
94146|code|B               loc_16FAE|244-231
94148|code|PUSH            {R3,LR}|8-181
94150|code|LDR             R3, =(dword_34854 - 0x16FCC)|4-75
94152|code|ADD             R3, PC; dword_34854|123-68
94154|code|LDR             R0, [R3]; fd|24-104
94156|code|BLX             close|255-247-118-236
94160|code|MOVS            R0, #0; status|0-32
94162|code|BLX             exit|255-247-174-235
94166|data|ALIGN 4|0-191
94168|data|DCD dword_34854 - 0x16FCC|136-216-1-0
94172|code|PUSH            {R4,LR}|16-181
94174|code|MOV             R1, R0; Window|1-70
94176|code|LDR             R4, =(dword_34854 - 0x16FEC)|7-76
94178|code|MOV.W           R2, #0x680000; int|79-244-208-2
94182|code|MOVS            R3, #0|0-35
94184|code|ADD             R4, PC; dword_34854|124-68
94186|code|LDR             R0, [R4,#(dword_3485C - 0x34854)]; Display *|160-104
94188|code|STR             R3, [R4,#(dword_34858 - 0x34854)]|99-96
94190|code|BLX             XSelectInput|255-247-240-235
94194|code|CBZ             R0, locret_16FFC|24-177
94196|code|LDR             R0, [R4,#(dword_34858 - 0x34854)]|96-104
94198|code|CLZ.W           R0, R0|176-250-128-240
94202|code|LSRS            R0, R0, #5|64-9
94204|code|POP             {R4,PC}|16-189
94206|data|ALIGN 0x10|0-191
94208|data|DCD dword_34854 - 0x16FEC|104-216-1-0
94212|code|PUSH            {R1-R3}|14-180
94214|code|PUSH            {R4,R5,LR}|48-181
94216|code|SUB             SP, SP, #8|130-176
94218|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x17012)|11-76
94220|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|11-75
94222|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
94224|code|LDR             R5, [SP,#0x20+varg_r1]|5-157
94226|code|LDR             R3, [R4,R3]; __stack_chk_guard|227-88
94228|code|LDR             R3, [R3]|27-104
94230|code|STR             R3, [SP,#0x20+var_1C]|1-147
94232|code|BLX             brlapi_perror|255-247-22-239
94236|code|CBZ             R5, loc_17030|69-177
94238|code|LDR             R0, =(stderr_ptr - 0x344A0)|8-72
94240|code|ADD             R3, SP, #0x20+varg_r2|6-171
94242|code|STR             R3, [SP,#0x20+var_20]|0-147
94244|code|MOV             R2, R5|42-70
94246|code|MOVS            R1, #1|1-33
94248|code|LDR             R0, [R4,R0]; stderr|32-88
94250|code|LDR             R0, [R0]|0-104
94252|code|BLX             __vfprintf_chk|255-247-156-237
94256|code|MOVS            R0, #4; status|4-32
94258|code|BLX             exit|255-247-126-235
94262|data|ALIGN 4|0-191
94264|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x17012|142-212-1-0
94268|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
94272|data|DCD stderr_ptr - 0x344A0|60-3-0-0
94276|code|PUSH            {R1-R3}|14-180
94278|code|PUSH            {R4,R5,LR}|48-181
94280|code|SUB             SP, SP, #8|130-176
94282|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x17052)|11-76
94284|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|11-75
94286|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
94288|code|LDR             R5, [SP,#0x20+varg_r1]|5-157
94290|code|LDR             R3, [R4,R3]; __stack_chk_guard|227-88
94292|code|LDR             R3, [R3]|27-104
94294|code|STR             R3, [SP,#0x20+var_1C]|1-147
94296|code|BLX             perror|255-247-154-235
94300|code|CBZ             R5, loc_17070|69-177
94302|code|LDR             R0, =(stderr_ptr - 0x344A0)|8-72
94304|code|ADD             R3, SP, #0x20+varg_r2|6-171
94306|code|STR             R3, [SP,#0x20+var_20]|0-147
94308|code|MOV             R2, R5|42-70
94310|code|MOVS            R1, #1|1-33
94312|code|LDR             R0, [R4,R0]; stderr|32-88
94314|code|LDR             R0, [R0]|0-104
94316|code|BLX             __vfprintf_chk|255-247-124-237
94320|code|MOVS            R0, #4; status|4-32
94322|code|BLX             exit|255-247-94-235
94326|data|ALIGN 4|0-191
94328|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x17052|78-212-1-0
94332|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
94336|data|DCD stderr_ptr - 0x344A0|60-3-0-0
94340|code|PUSH            {R4-R6,LR}|112-181
94342|code|MOV             R4, R0|4-70
94344|code|MOVS            R0, #0x10; size|16-32
94346|code|MOV             R5, R1|13-70
94348|code|MOV             R6, R2|22-70
94350|code|BLX             malloc|255-247-192-237
94354|code|MOV             R1, R0|1-70
94356|code|CBZ             R0, loc_170B4|112-177
94358|code|UBFX.W          R0, R4, #0, #0xC|196-243-11-0
94362|code|LDR             R2, =(dword_34854 - 0x170A6)|8-74
94364|code|EOR.W           R0, R0, R4,LSR#20|128-234-20-80
94368|code|STR             R4, [R1]|12-96
94370|code|ADD             R2, PC; dword_34854|122-68
94372|code|STR             R6, [R1,#8]|142-96
94374|code|ADD.W           R2, R2, R0,LSL#2|2-235-128-2
94378|code|STR             R5, [R1,#4]|77-96
94380|code|LDR             R3, [R2,#0xC]|211-104
94382|code|STR             R1, [R2,#0xC]|209-96
94384|code|STR             R3, [R1,#0xC]|203-96
94386|code|POP             {R4-R6,PC}|112-189
94388|code|LDR             R0, =(aMallocStructWi - 0x170BA); "malloc(struct window)"|2-72
94390|code|ADD             R0, PC; "malloc(struct window)"|120-68
94392|code|BL              fatal_errno|255-247-196-255
94396|data|DCD dword_34854 - 0x170A6|174-215-1-0
94400|data|DCD aMallocStructWi - 0x170BA; "malloc(struct window)"|158-165-0-0
94404|code|PUSH            {R0-R3}|15-180
94406|code|LDR             R0, =(_GLOBAL_OFFSET_TABLE_ - 0x170CE)|10-72
94408|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|10-75
94410|code|ADD             R0, PC; _GLOBAL_OFFSET_TABLE_|120-68
94412|code|PUSH            {R4,LR}|16-181
94414|code|SUB             SP, SP, #8|130-176
94416|code|LDR             R3, [R0,R3]; __stack_chk_guard|195-88
94418|code|LDR             R2, [SP,#0x20+varg_r0]|4-154
94420|code|LDR             R3, [R3]|27-104
94422|code|STR             R3, [SP,#0x20+var_1C]|1-147
94424|code|CBZ             R2, loc_170EA|58-177
94426|code|LDR             R4, =(stderr_ptr - 0x344A0)|7-76
94428|code|ADD             R3, SP, #0x20+varg_r1|5-171
94430|code|STR             R3, [SP,#0x20+var_20]|0-147
94432|code|MOVS            R1, #1|1-33
94434|code|LDR             R0, [R0,R4]; stderr|0-89
94436|code|LDR             R0, [R0]|0-104
94438|code|BLX             __vfprintf_chk|255-247-64-237
94442|code|MOVS            R0, #4; status|4-32
94444|code|BLX             exit|255-247-32-235
94448|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x170CE|210-211-1-0
94452|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
94456|data|DCD stderr_ptr - 0x344A0|60-3-0-0
94460|code|PUSH.W          {R4-R9,LR}|45-233-240-67
94464|code|MOV             R5, R1|13-70
94466|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1710C)|40-76
94468|code|SUB             SP, SP, #0x94|165-176
94470|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|40-75
94472|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
94474|code|LDRB            R1, [R1,#0x10]; int|9-124
94476|code|LDR             R3, [R4,R3]; __stack_chk_guard|227-88
94478|code|CMP             R1, #3|3-41
94480|code|LDR             R2, [R3]|26-104
94482|code|STR             R2, [SP,#0xB0+var_24]|35-146
94484|code|BEQ             loc_17186|55-208
94486|code|ADD             R6, SP, #0xB0+var_A4|3-174
94488|code|MOVS            R3, #0x80; int|128-35
94490|code|MOV             R2, R6; char *|50-70
94492|code|BLX             XGetErrorText|255-247-72-237
94496|code|CBNZ            R0, loc_1712A|24-185
94498|code|LDR             R0, =(aXgeterrortext_0 - 0x17128); "XGetErrorText"|34-72
94500|code|ADD             R0, PC; "XGetErrorText"|120-68
94502|code|BL              fatal|255-247-205-255
94506|code|LDR             R3, =(stderr_ptr - 0x344A0)|33-75
94508|code|MOVS            R2, #5; category|5-34
94510|code|LDR             R1, =(aXErrorDSOnDisp - 0x17138); "X Error %d, %s on display %s\n"|33-73
94512|code|MOVS            R0, #0; domainname|0-32
94514|code|LDR             R4, [R4,R3]; stderr|228-88
94516|code|ADD             R1, PC; "X Error %d, %s on display %s\n"|121-68
94518|code|LDR             R7, [R4]|39-104
94520|code|BLX             dcgettext|255-247-156-236
94524|code|LDR             R1, =(unk_37B3C - 0x17146)|30-73
94526|code|LDR.W           R8, [R5]|213-248-0-128
94530|code|ADD             R1, PC; unk_37B3C|121-68
94532|code|MOV             R9, R0|129-70
94534|code|LDR.W           R0, [R1,#(dword_38860 - 0x37B3C)]; char *|209-248-36-13
94538|code|BLX             XDisplayName|255-247-156-237
94542|code|MOV             R3, R8|67-70
94544|code|MOV             R2, R9|74-70
94546|code|STR             R6, [SP,#0xB0+var_B0]|0-150
94548|code|MOVS            R1, #1|1-33
94550|code|STR             R0, [SP,#0xB0+var_AC]|1-144
94552|code|MOV             R0, R7|56-70
94554|code|BLX             __fprintf_chk|255-247-78-235
94558|code|LDR             R1, =(aResource010lxR - 0x17168); "resource %#010lx, req %u:%u\n"|23-73
94560|code|MOVS            R2, #5; category|5-34
94562|code|MOVS            R0, #0; domainname|0-32
94564|code|ADD             R1, PC; "resource %#010lx, req %u:%u\n"|121-68
94566|code|LDR             R4, [R4]|36-104
94568|code|BLX             dcgettext|255-247-132-236
94572|code|LDRB            R6, [R5,#0x11]|110-124
94574|code|LDR             R3, [R5,#8]|171-104
94576|code|MOVS            R1, #1|1-33
94578|code|MOV             R2, R0|2-70
94580|code|MOV             R0, R4|32-70
94582|code|LDRB            R4, [R5,#0x12]|172-124
94584|code|STR             R6, [SP,#0xB0+var_B0]|0-150
94586|code|STR             R4, [SP,#0xB0+var_AC]|1-148
94588|code|BLX             __fprintf_chk|255-247-60-235
94592|code|MOVS            R0, #4; status|4-32
94594|code|BLX             exit|255-247-214-234
94598|code|LDR             R2, =(dword_34854 - 0x17190)|14-74
94600|code|MOVS            R1, #1|1-33
94602|code|MOVS            R0, #0|0-32
94604|code|ADD             R2, PC; dword_34854|122-68
94606|code|STR             R1, [R2,#(dword_34858 - 0x34854)]|81-96
94608|code|LDR             R2, [SP,#0xB0+var_24]|35-154
94610|code|LDR             R3, [R3]|27-104
94612|code|CMP             R2, R3|154-66
94614|code|BNE             loc_1719E|2-209
94616|code|ADD             SP, SP, #0x94|37-176
94618|code|POP.W           {R4-R9,PC}|189-232-240-131
94622|code|BLX             __stack_chk_fail|255-247-76-236
94626|data|ALIGN 4|0-191
94628|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1710C|148-211-1-0
94632|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
94636|data|DCD aXgeterrortext_0 - 0x17128; "XGetErrorText"|72-165-0-0
94640|data|DCD stderr_ptr - 0x344A0|60-3-0-0
94644|data|DCD aXErrorDSOnDisp - 0x17138; "X Error %d, %s on display %s\n"|72-165-0-0
94648|data|DCD unk_37B3C - 0x17146|246-9-2-0
94652|data|DCD aResource010lxR - 0x17168; "resource %#010lx, req %u:%u\n"|56-165-0-0
94656|data|DCD dword_34854 - 0x17190|196-214-1-0
94660|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x171D2)|103-75
94662|code|MOVS            R1, #0|0-33
94664|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|103-74
94666|code|PUSH.W          {R4-R11,LR}|45-233-240-79
94670|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
94672|code|SUB             SP, SP, #0x64|153-176
94674|code|LDR.W           R11, =(dword_34854 - 0x171EE)|223-248-152-177
94678|code|ADD             R4, SP, #0x64+var_2C|14-172
94680|code|LDR.W           R10, =(unk_37B3C - 0x171F0)|223-248-148-161
94684|code|STR             R4, [SP,#0x64+var_38]|11-148
94686|code|ADD             R4, SP, #0x64+var_28|15-172
94688|code|STR             R4, [SP,#0x64+var_34]|12-148
94690|code|ADD             R4, SP, #0x64+var_24|16-172
94692|code|STR             R4, [SP,#0x64+var_40]|9-148
94694|code|ADD             R6, SP, #0x64+var_20|17-174
94696|code|LDR             R2, [R3,R2]; __stack_chk_guard|154-88
94698|code|ADD             R11, PC; dword_34854|251-68
94700|code|ADD             R10, PC; unk_37B3C|250-68
94702|code|ADD             R7, SP, #0x48|18-175
94704|code|MOV             R8, R0|128-70
94706|code|MOV             R5, R1|13-70
94708|code|STR             R2, [SP,#0x64+var_30]|13-146
94710|code|MOVS            R4, #0x20 ; ' '|32-36
94712|code|LDR             R2, [R2]|18-104
94714|code|STR             R1, [SP,#0x64+var_1C]|18-145
94716|code|STR             R6, [SP,#0x64+var_3C]|10-150
94718|code|STR             R2, [SP,#0x64+var_8]|23-146
94720|code|B               loc_17216|9-224
94722|code|LDR             R3, [SP,#0x64+var_20]|17-155
94724|code|ADD             R4, R3|28-68
94726|code|CMP             R3, #0|0-43
94728|code|BEQ             loc_172A6|77-208
94730|code|LDR             R0, [SP,#0x64+var_1C]; void *|18-152
94732|code|BLX             XFree|255-247-82-236
94736|code|CMP             R0, #0|0-40
94738|code|BEQ.W           loc_17358|0-240-161-128
94742|code|LDR             R6, [SP,#0x64+var_38]|11-158
94744|code|MOV.W           R9, #0|79-240-0-9
94748|code|LDR.W           R0, [R11,#(dword_3485C - 0x34854)]; Display *|219-248-8-0
94752|code|MOV             R3, R9; int|75-70
94754|code|LDR.W           R2, [R10,#(dword_38864 - 0x37B3C)]; Atom|218-248-40-45
94758|code|MOV             R1, R8; Window|65-70
94760|code|STR             R6, [SP,#0x64+var_58]; Atom *|3-150
94762|code|LDR             R6, [SP,#0x64+var_34]|12-158
94764|code|STR             R4, [SP,#0x64+outbytesleft]; int|0-148
94766|code|STR             R5, [SP,#0x64+var_60]; int|1-149
94768|code|STR             R6, [SP,#0x64+var_54]; int *|4-150
94770|code|LDR             R6, [SP,#0x64+var_40]|9-158
94772|code|STR             R5, [SP,#0x64+var_5C]; Atom|2-149
94774|code|STR             R7, [SP,#0x64+var_48]; unsigned __int8 **|7-151
94776|code|STR             R6, [SP,#0x64+var_50]; unsigned int *|5-150
94778|code|LDR             R6, [SP,#0x64+var_3C]|10-158
94780|code|STR             R6, [SP,#0x64+var_4C]; unsigned int *|6-150
94782|code|BLX             XGetWindowProperty|255-247-40-234
94786|code|CMP             R0, #0|0-40
94788|code|BEQ             loc_17202|221-208
94790|code|LDR             R6, [SP,#0x64+var_3C]|10-158
94792|code|STR.W           R9, [SP,#0x64+var_1C]|205-248-72-144
94796|code|LDR.W           R10, =(dword_34854 - 0x17258)|223-248-36-161
94800|code|MOVS            R5, #0|0-37
94802|code|STR             R6, [SP,#0x64+var_3C]|10-150
94804|code|ADD             R10, PC; dword_34854|250-68
94806|code|LDR.W           R9, [SP,#0x64+var_38]|221-248-44-144
94810|code|LDR.W           R11, [SP,#0x64+var_34]|221-248-48-176
94814|code|B               loc_17278|11-224
94816|code|LDR             R3, [SP,#0x64+var_24]|16-155
94818|code|ADDS            R3, #1|1-51
94820|code|CMP             R4, R3|156-66
94822|code|BCS             loc_1734C|113-210
94824|code|LDR             R3, [SP,#0x64+var_20]|17-155
94826|code|LDR             R0, [SP,#0x64+var_1C]; void *|18-152
94828|code|ADDS            R3, #1|1-51
94830|code|ADD             R4, R3|28-68
94832|code|BLX             XFree|255-247-32-236
94836|code|CMP             R0, #0|0-40
94838|code|BEQ             loc_17358|111-208
94840|code|LDR             R6, [SP,#0x64+var_40]|9-158
94842|code|MOV             R1, R8; Window|65-70
94844|code|LDR.W           R0, [R10,#(dword_3485C - 0x34854)]; Display *|218-248-8-0
94848|code|MOVS            R2, #0x27 ; '''; Atom|39-34
94850|code|STR             R4, [SP,#0x64+outbytesleft]; int|0-148
94852|code|MOVS            R3, #0; int|0-35
94854|code|STR             R6, [SP,#0x64+var_50]; unsigned int *|5-150
94856|code|LDR             R6, [SP,#0x64+var_3C]|10-158
94858|code|STR             R5, [SP,#0x64+var_60]; int|1-149
94860|code|STR             R5, [SP,#0x64+var_5C]; Atom|2-149
94862|code|STR.W           R9, [SP,#0x64+var_58]; Atom *|205-248-12-144
94866|code|STR.W           R11, [SP,#0x64+var_54]; int *|205-248-16-176
94870|code|STR             R6, [SP,#0x64+var_4C]; unsigned int *|6-150
94872|code|STR             R7, [SP,#0x64+var_48]; unsigned __int8 **|7-151
94874|code|BLX             XGetWindowProperty|255-247-250-233
94878|code|CMP             R0, #0|0-40
94880|code|BEQ             loc_17260|222-208
94882|code|MOVS            R0, #0|0-32
94884|code|B               loc_172DC|26-224
94886|code|LDR             R0, [SP,#0x64+var_1C]; void *|18-152
94888|code|LDR             R6, [SP,#0x64+var_3C]|10-158
94890|code|CMP             R0, #0|0-40
94892|code|BEQ             loc_1724C|206-208
94894|code|LDR             R4, [SP,#0x64+var_2C]|14-156
94896|code|CMP             R4, #0|0-44
94898|code|BEQ             loc_17344|71-208
94900|code|LDR             R3, [SP,#0x64+var_24]|16-155
94902|code|MOVS            R2, #0|0-34
94904|code|ADDS            R1, R3, #1|89-28
94906|code|STR             R1, [SP,#0x64+var_24]|16-145
94908|code|STRB            R2, [R0,R3]|194-84
94910|code|LDR             R0, [SP,#0x64+var_1C]|18-152
94912|code|BLX             __strdup|255-247-240-234
94916|code|MOV             R4, R0|4-70
94918|code|LDR             R0, [SP,#0x64+var_1C]; void *|18-152
94920|code|BLX             XFree|255-247-244-235
94924|code|LDR             R3, =(unk_37B3C - 0x172D4)|42-75
94926|code|LDR             R2, [SP,#0x64+var_2C]|14-154
94928|code|ADD             R3, PC; unk_37B3C|123-68
94930|code|LDR.W           R3, [R3,#(dword_38868 - 0x37B3C)]|211-248-44-61
94934|code|CMP             R2, R3|154-66
94936|code|BEQ             loc_172EC|8-208
94938|code|MOV             R0, R4|32-70
94940|code|LDR             R3, [SP,#0x64+var_30]|13-155
94942|code|LDR             R2, [SP,#0x64+var_8]|23-154
94944|code|LDR             R3, [R3]|27-104
94946|code|CMP             R2, R3|154-66
94948|code|BNE             loc_17360|60-209
94950|code|ADD             SP, SP, #0x64 ; 'd'|25-176
94952|code|POP.W           {R4-R11,PC}|189-232-240-143
94956|code|LDR             R5, =(utf8Conv - 0x172F2)|35-77
94958|code|ADD             R5, PC; utf8Conv|125-68
94960|code|LDR             R3, [R5]|43-104
94962|code|ADDS            R3, #1|1-51
94964|code|BEQ             loc_172DA|241-208
94966|code|LDR             R3, [SP,#0x64+var_24]|16-155
94968|code|STR             R4, [SP,#0x64+inbuf]|21-148
94970|code|STR             R3, [SP,#0x64+inbytesleft]|19-147
94972|code|BLX             __ctype_get_mb_cur_max|255-247-8-237
94976|code|LDR             R3, [SP,#0x64+var_24]|16-155
94978|code|MUL.W           R3, R3, R0|3-251-0-243
94982|code|MOV             R0, R3; size|24-70
94984|code|STR             R3, [SP,#0x64+var_14]|20-147
94986|code|BLX             malloc|255-247-130-236
94990|code|ADD             R3, SP, #0x64+var_14|20-171
94992|code|ADD             R1, SP, #0x64+inbuf; inbuf|21-169
94994|code|ADD             R2, SP, #0x64+inbytesleft; inbytesleft|19-170
94996|code|MOV             R6, R0|6-70
94998|code|LDR             R0, [R5]; cd|40-104
95000|code|STR             R3, [SP,#0x64+outbytesleft]; outbytesleft|0-147
95002|code|ADD             R3, SP, #0x64+outbuf; outbuf|22-171
95004|code|STR             R6, [SP,#0x64+outbuf]|22-150
95006|code|BLX             iconv|255-247-22-237
95010|code|ADDS            R0, #1|1-48
95012|code|BEQ             loc_17350|20-208
95014|code|MOV             R0, R4; ptr|32-70
95016|code|BLX             free|255-247-172-233
95020|code|BLX             __ctype_get_mb_cur_max|255-247-240-236
95024|code|LDR             R3, [SP,#0x64+var_24]|16-155
95026|code|LDR             R1, [SP,#0x64+var_14]|20-153
95028|code|MUL.W           R3, R3, R0|3-251-0-243
95032|code|MOV             R0, R6; ptr|48-70
95034|code|SUBS            R1, R3, R1; size|89-26
95036|code|BLX             realloc|255-247-56-235
95040|code|MOV             R4, R0|4-70
95042|code|B               loc_172DA|202-231
95044|code|BLX             XFree|255-247-182-235
95048|code|MOV             R0, R4|32-70
95050|code|B               loc_172DC|199-231
95052|code|LDR             R0, [SP,#0x64+var_1C]|18-152
95054|code|B               loc_172AE|174-231
95056|code|MOV             R0, R6; ptr|48-70
95058|code|BLX             free|255-247-152-233
95062|code|B               loc_172DA|192-231
95064|code|LDR             R0, =(aTempoXfreeWmNa - 0x1735E); "tempo_XFree(wm_name)"|9-72
95066|code|ADD             R0, PC; "tempo_XFree(wm_name)"|120-68
95068|code|BL              fatal|255-247-178-254
95072|code|BLX             __stack_chk_fail|255-247-106-235
95076|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x171D2|206-210-1-0
95080|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
95084|data|DCD dword_34854 - 0x171EE|102-214-1-0
95088|data|DCD unk_37B3C - 0x171F0|76-9-2-0
95092|data|DCD dword_34854 - 0x17258|252-213-1-0
95096|data|DCD unk_37B3C - 0x172D4|104-8-2-0
95100|data|DCD utf8Conv - 0x172F2|58-213-1-0
95104|data|DCD aTempoXfreeWmNa - 0x1735E; "tempo_XFree(wm_name)"|98-163-0-0
95108|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1738C)|41-75
95110|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|42-74
95112|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
95114|code|PUSH            {R4-R7,LR}|240-181
95116|code|SUB             SP, SP, #0x24|137-176
95118|code|LDR             R5, [R3,R2]; __stack_chk_guard|157-88
95120|code|MOV             R4, R1|12-70
95122|code|MOV             R6, R0|6-70
95124|code|LDR             R3, [R5]|43-104
95126|code|STR             R3, [SP,#0x38+var_1C]|7-147
95128|code|BL              sub_16FDC|255-247-32-254
95132|code|CBNZ            R0, loc_173AC|48-185
95134|code|MOVS            R0, #1|1-32
95136|code|LDR             R2, [SP,#0x38+var_1C]|7-154
95138|code|LDR             R3, [R5]|43-104
95140|code|CMP             R2, R3|154-66
95142|code|BNE             loc_1741E|58-209
95144|code|ADD             SP, SP, #0x24 ; '$'|9-176
95146|code|POP             {R4-R7,PC}|240-189
95148|code|LDR             R3, =(dword_34854 - 0x173B8)|33-75
95150|code|ADD             R2, SP, #0x38+var_24|5-170
95152|code|MOV             R1, R6; Window|49-70
95154|code|STR             R2, [SP,#0x38+var_38]; Window **|0-146
95156|code|ADD             R3, PC; dword_34854|123-68
95158|code|ADD             R2, SP, #0x38+var_20|6-170
95160|code|STR             R2, [SP,#0x38+var_34]; unsigned int *|1-146
95162|code|ADD             R2, SP, #0x38+var_2C; Window *|3-170
95164|code|LDR             R0, [R3,#(dword_3485C - 0x34854)]; Display *|152-104
95166|code|ADD             R3, SP, #0x38+var_28; Window *|4-171
95168|code|BLX             XQueryTree|255-247-152-233
95172|code|CMP             R0, #0|0-40
95174|code|BEQ             loc_173A0|235-208
95176|code|MOV             R0, R6; Window|48-70
95178|code|LDR             R7, [SP,#0x38+var_2C]|3-159
95180|code|BL              sub_171C4|255-247-250-254
95184|code|MOV             R1, R7|57-70
95186|code|MOV             R2, R0|2-70
95188|code|MOV             R0, R6|48-70
95190|code|BL              sub_17084|255-247-85-254
95194|code|LDR             R3, [SP,#0x38+var_24]|5-155
95196|code|CMP             R3, #0|0-43
95198|code|BEQ             loc_1739E|222-208
95200|code|LDR             R2, [SP,#0x38+var_20]|6-154
95202|code|CBZ             R2, loc_1740A|146-177
95204|code|ADDS            R6, R4, #1|102-28
95206|code|MOVS            R4, #0|0-36
95208|code|B               loc_173F0|2-224
95210|code|ADDS            R4, #1|1-52
95212|code|CMP             R2, R4|162-66
95214|code|BLS             loc_1740A|12-217
95216|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
95220|code|CMP             R0, #0|0-40
95222|code|BEQ             loc_173EA|248-208
95224|code|MOV             R1, R6|49-70
95226|code|BL              sub_17384|255-247-195-255
95230|code|CBZ             R0, loc_17418|88-177
95232|code|LDR             R2, [SP,#0x38+var_20]|6-154
95234|code|ADDS            R4, #1|1-52
95236|code|LDR             R3, [SP,#0x38+var_24]|5-155
95238|code|CMP             R2, R4|162-66
95240|code|BHI             loc_173F0|242-216
95242|code|MOVS            R4, #1|1-36
95244|code|MOV             R0, R3; void *|24-70
95246|code|BLX             XFree|255-247-82-235
95250|code|CBZ             R0, loc_17422|48-177
95252|code|MOV             R0, R4|32-70
95254|code|B               loc_173A0|195-231
95256|code|MOV             R4, R0|4-70
95258|code|LDR             R3, [SP,#0x38+var_24]|5-155
95260|code|B               loc_1740C|246-231
95262|code|BLX             __stack_chk_fail|255-247-12-235
95266|code|LDR             R0, =(aXfreeChildren - 0x17428); "XFree(children)"|5-72
95268|code|ADD             R0, PC; "XFree(children)"|120-68
95270|code|BL              fatal|255-247-77-254
95274|data|ALIGN 4|0-191
95276|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1738C|20-209-1-0
95280|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
95284|data|DCD dword_34854 - 0x173B8|156-212-1-0
95288|data|DCD aXfreeChildren - 0x17428; "XFree(children)"|176-162-0-0
95292|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x17444)|36-75
95294|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|37-74
95296|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
95298|code|PUSH            {R4-R6,LR}|112-181
95300|code|SUB             SP, SP, #0x18|134-176
95302|code|LDR             R6, [R3,R2]; __stack_chk_guard|158-88
95304|code|ADD             R5, SP, #0x28+var_10|6-173
95306|code|LDR             R4, =(api_cleanExit+1 - 0x17458)|35-76
95308|code|STR.W           R0, [R5,#-0xC]!|69-248-12-13
95312|code|MOVS            R0, #0xF; sig|15-32
95314|code|LDR             R3, [R6]|51-104
95316|code|ADD             R4, PC; api_cleanExit|124-68
95318|code|STR             R1, [SP,#0x28+var_18]|4-145
95320|code|MOV             R1, R4; handler|33-70
95322|code|STR             R3, [SP,#0x28+var_14]|5-147
95324|code|BLX             signal|255-247-156-232
95328|code|MOV             R1, R4; handler|33-70
95330|code|MOVS            R0, #2; sig|2-32
95332|code|BLX             signal|255-247-152-232
95336|code|MOV             R1, R4; handler|33-70
95338|code|MOVS            R0, #1; sig|1-32
95340|code|BLX             signal|255-247-148-232
95344|code|MOV             R1, R4; handler|33-70
95346|code|MOVS            R0, #3; sig|3-32
95348|code|BLX             signal|255-247-144-232
95352|code|MOV             R1, R4; handler|33-70
95354|code|MOVS            R0, #0xD; sig|13-32
95356|code|BLX             signal|255-247-140-232
95360|code|MOV             R0, R5|40-70
95362|code|MOV             R1, R5|41-70
95364|code|BLX             brlapi_openConnection|255-247-78-233
95368|code|LDR             R3, =(dword_34854 - 0x1748E)|20-75
95370|code|ADD             R3, PC; dword_34854|123-68
95372|code|CMP             R0, #0|0-40
95374|code|STR             R0, [R3]|24-96
95376|code|BLT             loc_174AA|11-219
95378|code|ADD             R0, SP, #0x28+var_24|1-168
95380|code|ADD             R1, SP, #0x28+var_20|2-169
95382|code|BLX             brlapi_getDisplaySize|255-247-148-236
95386|code|CMP             R0, #0|0-40
95388|code|BLT             loc_174C6|19-219
95390|code|LDR             R2, [SP,#0x28+var_14]|5-154
95392|code|LDR             R3, [R6]|51-104
95394|code|CMP             R2, R3|154-66
95396|code|BNE             loc_174C2|13-209
95398|code|ADD             SP, SP, #0x18|6-176
95400|code|POP             {R4-R6,PC}|112-189
95402|code|LDR             R1, =(aCannotConnectT - 0x174B4); "cannot connect to brltty at %s\n"|13-73
95404|code|MOVS            R2, #5; category|5-34
95406|code|MOVS            R0, #0; domainname|0-32
95408|code|ADD             R1, PC; "cannot connect to brltty at %s\n"|121-68
95410|code|BLX             dcgettext|255-247-224-234
95414|code|LDR             R2, [SP,#0x28+var_18]|4-154
95416|code|MOV             R1, R0|1-70
95418|code|LDR             R0, =(aOpenconnection - 0x174C0); "openConnection"|10-72
95420|code|ADD             R0, PC; "openConnection"|120-68
95422|code|BL              fatal_brlapi_errno|255-247-161-253
95426|code|BLX             __stack_chk_fail|255-247-186-234
95430|code|LDR             R0, =(aGetdisplaysize - 0x174CE); "getDisplaySize"|8-72
95432|code|MOVS            R1, #0|0-33
95434|code|ADD             R0, PC; "getDisplaySize"|120-68
95436|code|BL              fatal_brlapi_errno|255-247-154-253
95440|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x17444|92-208-1-0
95444|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
95448|data|DCD api_cleanExit+1 - 0x17458|109-251-255-255
95452|data|DCD dword_34854 - 0x1748E|198-211-1-0
95456|data|DCD aCannotConnectT - 0x174B4; "cannot connect to brltty at %s\n"|52-162-0-0
95460|data|DCD aOpenconnection - 0x174C0; "openConnection"|72-162-0-0
95464|data|DCD aGetdisplaysize - 0x174CE; "getDisplaySize"|74-162-0-0
95468|code|PUSH.W          {R4-R8,LR}|45-233-240-65
95472|code|SUB             SP, SP, #0x40|144-176
95474|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x174FA)|163-76
95476|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|163-75
95478|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
95480|code|LDR             R0, =(aWindowpath - 0x17500); "WINDOWPATH"|163-72
95482|code|LDR             R5, [R4,R3]; __stack_chk_guard|229-88
95484|code|ADD             R0, PC; "WINDOWPATH"|120-68
95486|code|LDR             R3, [R5]|43-104
95488|code|STR             R3, [SP,#0x58+var_1C]|15-147
95490|code|BLX             getenv|255-247-132-236
95494|code|MOV             R6, R0|6-70
95496|code|LDR             R0, =(aXdgVtnr - 0x1750E); "XDG_VTNR"|160-72
95498|code|ADD             R0, PC; "XDG_VTNR"|120-68
95500|code|BLX             getenv|255-247-126-236
95504|code|CMP             R0, #0|0-40
95506|code|IT EQ|8-191
95508|code|CMPEQ           R6, #0|0-46
95510|code|BEQ             loc_175D2|92-208
95512|code|MOVS            R0, #0|0-32
95514|code|MOV             R1, R0|1-70
95516|code|MOV             R2, R0|2-70
95518|code|BLX             brlapi_enterTtyModeWithPath|255-247-202-232
95522|code|CMP             R0, #0|0-40
95524|code|BLT.W           loc_17762|192-242-29-129
95528|code|MOVS            R0, #0|0-32
95530|code|MOV             R1, R0|1-70
95532|code|MOV             R2, R0|2-70
95534|code|BLX             brlapi_ignoreKeys|255-247-138-232
95538|code|CMP             R0, #0|0-40
95540|code|BLT.W           loc_1774C|192-242-10-129
95544|code|ADD             R4, SP, #0x58+var_18|16-172
95546|code|MOVS            R0, #1|1-32
95548|code|MOVS            R6, #0|0-38
95550|code|MOVS            R7, #0|0-39
95552|code|MOV             R2, R0|2-70
95554|code|STRD.W          R6, R7, [R4,#-0x10]!|100-233-4-103
95558|code|MOV             R1, R4|33-70
95560|code|BLX             brlapi_acceptKeys|255-247-92-233
95564|code|CMP             R0, #0|0-40
95566|code|BNE.W           loc_1773E|64-240-246-128
95570|code|MOVS            R6, #0x4D ; 'M'|77-38
95572|code|MOVS            R0, #3|3-32
95574|code|MOV             R1, R4|33-70
95576|code|MOVS            R2, #1|1-34
95578|code|MOVT.W          R6, #0x2000|194-242-0-6
95582|code|MOVS            R7, #0|0-39
95584|code|STRD.W          R6, R7, [SP,#0x58+var_28]|205-233-12-103
95588|code|BLX             brlapi_acceptKeys|255-247-78-233
95592|code|CMP             R0, #0|0-40
95594|code|BNE.W           loc_1773E|64-240-232-128
95598|code|MOVS            R6, #0x4E ; 'N'|78-38
95600|code|MOVS            R0, #3|3-32
95602|code|MOV             R1, R4|33-70
95604|code|MOVS            R2, #1|1-34
95606|code|MOVT.W          R6, #0x2000|194-242-0-6
95610|code|MOVS            R7, #0|0-39
95612|code|STRD.W          R6, R7, [SP,#0x58+var_28]|205-233-12-103
95616|code|BLX             brlapi_acceptKeys|255-247-64-233
95620|code|CMP             R0, #0|0-40
95622|code|BNE.W           loc_1773E|64-240-218-128
95626|code|MOVS            R6, #0x4F ; 'O'|79-38
95628|code|MOVS            R0, #3|3-32
95630|code|MOV             R1, R4|33-70
95632|code|MOVS            R2, #1|1-34
95634|code|MOVT.W          R6, #0x2000|194-242-0-6
95638|code|MOVS            R7, #0|0-39
95640|code|STRD.W          R6, R7, [SP,#0x58+var_28]|205-233-12-103
95644|code|BLX             brlapi_acceptKeys|255-247-50-233
95648|code|CMP             R0, #0|0-40
95650|code|BNE.W           loc_1773E|64-240-204-128
95654|code|MOVS            R6, #0x50 ; 'P'|80-38
95656|code|MOV             R1, R4|33-70
95658|code|MOVS            R0, #3|3-32
95660|code|MOVS            R2, #1|1-34
95662|code|MOVT.W          R6, #0x2000|194-242-0-6
95666|code|MOVS            R7, #0|0-39
95668|code|STRD.W          R6, R7, [SP,#0x58+var_28]|205-233-12-103
95672|code|BLX             brlapi_acceptKeys|255-247-36-233
95676|code|CMP             R0, #0|0-40
95678|code|BNE.W           loc_1773E|64-240-190-128
95682|code|LDR             R2, [SP,#0x58+var_1C]|15-154
95684|code|LDR             R3, [R5]|43-104
95686|code|CMP             R2, R3|154-66
95688|code|BNE.W           loc_17748|64-240-190-128
95692|code|ADD             SP, SP, #0x40 ; '@'|16-176
95694|code|POP.W           {R4-R8,PC}|189-232-240-129
95698|code|LDR             R7, =(dword_34854 - 0x175DC)|111-79
95700|code|MOVS            R2, #0; int|0-34
95702|code|LDR             R1, =(aXfree86Vt - 0x175DE); "XFree86_VT"|111-73
95704|code|ADD             R7, PC; dword_34854|127-68
95706|code|ADD             R1, PC; "XFree86_VT"|121-68
95708|code|LDR             R6, [R7,#(dword_3485C - 0x34854)]|190-104
95710|code|LDR.W           R3, [R6,#0x84]|214-248-132-48
95714|code|MOV             R0, R6; Display *|48-70
95716|code|LDR.W           R6, [R6,#0x8C]|214-248-140-96
95720|code|ADD.W           R3, R3, R3,LSL#2|3-235-131-3
95724|code|ADD.W           R3, R6, R3,LSL#4|6-235-3-19
95728|code|LDR.W           R8, [R3,#8]|211-248-8-128
95732|code|BLX             XInternAtom|255-247-74-233
95736|code|MOV             R2, R0; Atom|2-70
95738|code|CMP             R0, #0|0-40
95740|code|BEQ.W           loc_17704|0-240-130-128
95744|code|MOVS            R6, #0|0-38
95746|code|LDR             R0, [R7,#(dword_3485C - 0x34854)]; Display *|184-104
95748|code|MOV             R1, R8; Window|65-70
95750|code|ADD             R7, SP, #0x58+var_38|8-175
95752|code|MOV.W           R8, #1|79-240-1-8
95756|code|STR             R7, [SP,#0x58+var_4C]; Atom *|3-151
95758|code|STR             R6, [SP,#0x58+var_54]; int|1-150
95760|code|ADD             R7, SP, #0x58+var_34|9-175
95762|code|MOV             R3, R6; int|51-70
95764|code|STR             R7, [SP,#0x58+var_48]; int *|4-151
95766|code|STR             R6, [SP,#0x58+var_50]; Atom|2-150
95768|code|ADD             R7, SP, #0x58+var_30|10-175
95770|code|STR.W           R8, [SP,#0x58+var_58]; int|205-248-0-128
95774|code|STR             R7, [SP,#0x58+var_44]; unsigned int *|5-151
95776|code|ADD             R7, SP, #0x58+var_2C|11-175
95778|code|STR             R7, [SP,#0x58+var_40]; unsigned int *|6-151
95780|code|ADD             R7, SP, #0x58+var_28|12-175
95782|code|STR             R7, [SP,#0x58+var_3C]; unsigned __int8 **|7-151
95784|code|BLX             XGetWindowProperty|255-247-50-232
95788|code|CMP             R0, #0|0-40
95790|code|BNE             loc_17720|119-209
95792|code|LDR             R3, [SP,#0x58+var_30]|10-155
95794|code|CMP             R3, #0|0-43
95796|code|BEQ             loc_176B8|64-208
95798|code|CMP             R3, #1|1-43
95800|code|BLS             loc_17654|12-217
95802|code|LDR             R3, =(stderr_ptr - 0x344A0)|87-75
95804|code|MOVS            R2, #5; category|5-34
95806|code|LDR             R1, =(aMoreThanOneIte - 0x17646); "more than one item for VT number\n"|87-73
95808|code|LDR             R3, [R4,R3]; stderr|227-88
95810|code|ADD             R1, PC; "more than one item for VT number\n"|121-68
95812|code|LDR             R6, [R3]|30-104
95814|code|BLX             dcgettext|255-247-22-234
95818|code|MOV             R1, R8|65-70
95820|code|MOV             R2, R0|2-70
95822|code|MOV             R0, R6|48-70
95824|code|BLX             __fprintf_chk|255-247-210-232
95828|code|LDR             R3, [SP,#0x58+var_38]|8-155
95830|code|CMP             R3, #0x13|19-43
95832|code|BEQ             loc_176DA|63-208
95834|code|CMP             R3, #0x21 ; '!'|33-43
95836|code|BEQ             loc_176DA|61-208
95838|code|CMP             R3, #6|6-43
95840|code|BEQ             loc_176DA|59-208
95842|code|LDR             R1, =(aBadTypeForVtNu - 0x1766C); "bad type for VT number\n"|79-73
95844|code|MOVS            R0, #0; domainname|0-32
95846|code|LDR             R3, =(stderr_ptr - 0x344A0)|76-75
95848|code|ADD             R1, PC; "bad type for VT number\n"|121-68
95850|code|LDR             R3, [R4,R3]; stderr|227-88
95852|code|MOVS            R2, #5; category|5-34
95854|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
95858|code|LDR             R4, [R3]|28-104
95860|code|BLX             dcgettext|255-247-254-233
95864|code|MOVS            R1, #1|1-33
95866|code|MOV             R2, R0|2-70
95868|code|MOV             R0, R4|32-70
95870|code|BLX             __fprintf_chk|255-247-188-232
95874|code|LDR             R0, [SP,#0x58+var_28]; void *|12-152
95876|code|BLX             XFree|255-247-22-234
95880|code|CMP             R0, #0|0-40
95882|code|BEQ             loc_17778|117-208
95884|code|ADDS            R3, R6, #1|115-28
95886|code|BEQ.W           loc_17518|63-244-67-175
95890|code|MOV             R0, R6|48-70
95892|code|MOVS            R1, #0|0-33
95894|code|BLX             brlapi_enterTtyMode|255-247-222-235
95898|code|CMP             R0, #0|0-40
95900|code|BGE.W           loc_17528|191-246-68-175
95904|code|LDR             R1, =(aCannotGetTtyD - 0x176AA); "cannot get tty %d\n"|64-73
95906|code|MOVS            R2, #5; category|5-34
95908|code|MOVS            R0, #0; domainname|0-32
95910|code|ADD             R1, PC; "cannot get tty %d\n"|121-68
95912|code|BLX             dcgettext|255-247-228-233
95916|code|MOV             R2, R6|50-70
95918|code|MOV             R1, R0|1-70
95920|code|LDR             R0, =(aEnterttymode - 0x176B6); "enterTtyMode"|61-72
95922|code|ADD             R0, PC; "enterTtyMode"|120-68
95924|code|BL              fatal_brlapi_errno|255-247-166-252
95928|code|LDR             R3, =(stderr_ptr - 0x344A0)|55-75
95930|code|MOVS            R2, #5; category|5-34
95932|code|LDR             R1, =(aNoItemsForVtNu - 0x176C8); "no items for VT number\n"|59-73
95934|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
95938|code|LDR             R3, [R4,R3]; stderr|227-88
95940|code|ADD             R1, PC; "no items for VT number\n"|121-68
95942|code|LDR             R4, [R3]|28-104
95944|code|BLX             dcgettext|255-247-212-233
95948|code|MOV             R1, R8|65-70
95950|code|MOV             R2, R0|2-70
95952|code|MOV             R0, R4|32-70
95954|code|BLX             __fprintf_chk|255-247-146-232
95958|code|LDR             R0, [SP,#0x58+var_28]|12-152
95960|code|B               loc_17684|212-231
95962|code|LDR             R3, [SP,#0x58+var_34]|9-155
95964|code|CMP             R3, #0x10|16-43
95966|code|BEQ             loc_176FE|14-208
95968|code|CMP             R3, #0x20 ; ' '|32-43
95970|code|BEQ             loc_176F8|9-208
95972|code|CMP             R3, #8|8-43
95974|code|BEQ             loc_176F2|4-208
95976|code|LDR             R1, =(aBadFormatForVt - 0x176F2); "bad format for VT number\n"|49-73
95978|code|MOVS            R0, #0|0-32
95980|code|LDR             R3, =(stderr_ptr - 0x344A0)|42-75
95982|code|ADD             R1, PC; "bad format for VT number\n"|121-68
95984|code|B               loc_1766A|187-231
95986|code|LDR             R0, [SP,#0x58+var_28]|12-152
95988|code|LDRB            R6, [R0]|6-120
95990|code|B               loc_17684|197-231
95992|code|LDR             R0, [SP,#0x58+var_28]|12-152
95994|code|LDR             R6, [R0]|6-104
95996|code|B               loc_17684|194-231
95998|code|LDR             R0, [SP,#0x58+var_28]|12-152
96000|code|LDRH            R6, [R0]|6-136
96002|code|B               loc_17684|191-231
96004|code|LDR             R3, =(stderr_ptr - 0x344A0)|36-75
96006|code|MOVS            R2, #5; category|5-34
96008|code|LDR             R1, =(aNoXfree86VtAto - 0x17710); "no XFree86_VT atom\n"|42-73
96010|code|LDR             R3, [R4,R3]; stderr|227-88
96012|code|ADD             R1, PC; "no XFree86_VT atom\n"|121-68
96014|code|LDR             R4, [R3]|28-104
96016|code|BLX             dcgettext|255-247-176-233
96020|code|MOVS            R1, #1|1-33
96022|code|MOV             R2, R0|2-70
96024|code|MOV             R0, R4|32-70
96026|code|BLX             __fprintf_chk|255-247-110-232
96030|code|B               loc_17518|251-230
96032|code|LDR             R3, =(stderr_ptr - 0x344A0)|29-75
96034|code|MOV             R0, R6; domainname|48-70
96036|code|LDR             R1, =(aCannotGetRootW - 0x1772E); "cannot get root window XFree86_VT prope"...|36-73
96038|code|MOVS            R2, #5; category|5-34
96040|code|LDR             R3, [R4,R3]; stderr|227-88
96042|code|ADD             R1, PC; "cannot get root window XFree86_VT prope"...|121-68
96044|code|LDR             R4, [R3]|28-104
96046|code|BLX             dcgettext|255-247-162-233
96050|code|MOV             R1, R8|65-70
96052|code|MOV             R2, R0|2-70
96054|code|MOV             R0, R4|32-70
96056|code|BLX             __fprintf_chk|255-247-94-232
96060|code|B               loc_17518|236-230
96062|code|LDR             R0, =(aAcceptkeys - 0x17746); "acceptKeys"|31-72
96064|code|MOVS            R1, #0|0-33
96066|code|ADD             R0, PC; "acceptKeys"|120-68
96068|code|BL              fatal_brlapi_errno|255-247-94-252
96072|code|BLX             __stack_chk_fail|255-247-118-233
96076|code|LDR             R1, =(aCannotIgnoreKe - 0x17756); "cannot ignore keys\n"|28-73
96078|code|MOVS            R0, #0; domainname|0-32
96080|code|MOVS            R2, #5; category|5-34
96082|code|ADD             R1, PC; "cannot ignore keys\n"|121-68
96084|code|BLX             dcgettext|255-247-142-233
96088|code|MOV             R1, R0|1-70
96090|code|LDR             R0, =(aIgnoreallkeys - 0x17760); "ignoreAllKeys"|26-72
96092|code|ADD             R0, PC; "ignoreAllKeys"|120-68
96094|code|BL              fatal_brlapi_errno|255-247-81-252
96098|code|LDR             R1, =(aCannotGetTty - 0x1776C); "cannot get tty\n"|25-73
96100|code|MOVS            R0, #0; domainname|0-32
96102|code|MOVS            R2, #5; category|5-34
96104|code|ADD             R1, PC; "cannot get tty\n"|121-68
96106|code|BLX             dcgettext|255-247-132-233
96110|code|MOV             R1, R0|1-70
96112|code|LDR             R0, =(aGettypath - 0x17776); "geTtyPath"|22-72
96114|code|ADD             R0, PC; "geTtyPath"|120-68
96116|code|BL              fatal_brlapi_errno|255-247-70-252
96120|code|LDR             R0, =(aXfreeVtnobuf - 0x1777E); "XFree(VTnobuf)"|21-72
96122|code|ADD             R0, PC; "XFree(VTnobuf)"|120-68
96124|code|BL              fatal|255-247-162-252
96128|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x174FA|166-207-1-0
96132|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
96136|data|DCD aWindowpath - 0x17500; "WINDOWPATH"|40-162-0-0
96140|data|DCD aXdgVtnr - 0x1750E; "XDG_VTNR"|38-162-0-0
96144|data|DCD dword_34854 - 0x175DC|120-210-1-0
96148|data|DCD aXfree86Vt - 0x175DE; "XFree86_VT"|98-161-0-0
96152|data|DCD stderr_ptr - 0x344A0|60-3-0-0
96156|data|DCD aMoreThanOneIte - 0x17646; "more than one item for VT number\n"|94-161-0-0
96160|data|DCD aBadTypeForVtNu - 0x1766C; "bad type for VT number\n"|120-161-0-0
96164|data|DCD aCannotGetTtyD - 0x176AA; "cannot get tty %d\n"|126-161-0-0
96168|data|DCD aEnterttymode - 0x176B6; "enterTtyMode"|134-161-0-0
96172|data|DCD aNoItemsForVtNu - 0x176C8; "no items for VT number\n"|196-160-0-0
96176|data|DCD aBadFormatForVt - 0x176F2; "bad format for VT number\n"|214-160-0-0
96180|data|DCD aNoXfree86VtAto - 0x17710; "no XFree86_VT atom\n"|60-160-0-0
96184|data|DCD aCannotGetRootW - 0x1772E; "cannot get root window XFree86_VT prope"...|50-160-0-0
96188|data|DCD aAcceptkeys - 0x17746; "acceptKeys"|42-161-0-0
96192|data|DCD aCannotIgnoreKe - 0x17756; "cannot ignore keys\n"|246-160-0-0
96196|data|DCD aIgnoreallkeys - 0x17760; "ignoreAllKeys"|0-161-0-0
96200|data|DCD aCannotGetTty - 0x1776C; "cannot get tty\n"|160-160-0-0
96204|data|DCD aGettypath - 0x17776; "geTtyPath"|166-160-0-0
96208|data|DCD aXfreeVtnobuf - 0x1777E; "XFree(VTnobuf)"|126-160-0-0
96212|code|LDR             R2, =(unk_37B3C - 0x177DC)|28-74
96214|code|PUSH            {R4-R6,LR}|112-181
96216|code|ADD             R2, PC; unk_37B3C|122-68
96218|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x177E6)|28-77
96220|code|MOV             R6, R0|6-70
96222|code|LDR.W           R4, [R2,#(dword_3886C - 0x37B3C)]|210-248-48-77
96226|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
96228|code|CBZ             R4, loc_177F6|60-177
96230|code|MOV             R1, R4; s2|33-70
96232|code|BLX             strcmp|255-247-164-234
96236|code|CBNZ            R0, loc_177F0|0-185
96238|code|POP             {R4-R6,PC}|112-189
96240|code|MOV             R0, R4; ptr|32-70
96242|code|BLX             free|254-247-72-239
96246|code|MOV             R0, R6|48-70
96248|code|BLX             __strdup|255-247-84-232
96252|code|LDR             R3, =(unk_37B3C - 0x17802)|20-75
96254|code|ADD             R3, PC; unk_37B3C|123-68
96256|code|STR.W           R0, [R3,#(dword_3886C - 0x37B3C)]|195-248-48-13
96260|code|CBZ             R0, loc_1783C|208-177
96262|code|MOVS            R0, #0|0-32
96264|code|MOV             R1, R6|49-70
96266|code|BLX             brlapi_writeText|255-247-180-232
96270|code|CMP             R0, #0|0-40
96272|code|BGE             locret_177EE|237-218
96274|code|LDR             R0, =(aWritetext - 0x17818); "writeText"|16-72
96276|code|ADD             R0, PC; "writeText"|120-68
96278|code|BLX             brlapi_perror|255-247-24-235
96282|code|LDR             R3, =(stderr_ptr - 0x344A0)|15-75
96284|code|LDR             R1, =(aCannotWriteWin - 0x17828); "cannot write window name %s\n"|15-73
96286|code|MOVS            R2, #5; category|5-34
96288|code|MOVS            R0, #0; domainname|0-32
96290|code|LDR             R3, [R5,R3]; stderr|235-88
96292|code|ADD             R1, PC; "cannot write window name %s\n"|121-68
96294|code|LDR             R4, [R3]|28-104
96296|code|BLX             dcgettext|255-247-36-233
96300|code|MOV             R3, R6|51-70
96302|code|MOVS            R1, #1|1-33
96304|code|MOV             R2, R0|2-70
96306|code|MOV             R0, R4|32-70
96308|code|POP.W           {R4-R6,LR}|189-232-112-64
96312|code|B.W             j___fprintf_chk|254-247-220-191
96316|code|MOV             R1, R0|1-70
96318|code|LDR             R0, =(aStrdupWmName - 0x17844); "strdup(wm_name)"|8-72
96320|code|ADD             R0, PC; "strdup(wm_name)"|120-68
96322|code|BL              fatal_errno|255-247-255-251
96326|data|ALIGN 4|0-191
96328|data|DCD unk_37B3C - 0x177DC|96-3-2-0
96332|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x177E6|186-204-1-0
96336|data|DCD unk_37B3C - 0x17802|58-3-2-0
96340|data|DCD aWritetext - 0x17818; "writeText"|116-160-0-0
96344|data|DCD stderr_ptr - 0x344A0|60-3-0-0
96348|data|DCD aCannotWriteWin - 0x17828; "cannot write window name %s\n"|112-160-0-0
96352|data|DCD aStrdupWmName - 0x17844; "strdup(wm_name)"|56-160-0-0
96356|code|PUSH            {R4,LR}|16-181
96358|code|MOV             R4, R0|4-70
96360|code|BLX             brlapi_setFocus|255-247-54-233
96364|code|CMP             R0, #0|0-40
96366|code|BLT             loc_17872|0-219
96368|code|POP             {R4,PC}|16-189
96370|code|LDR             R1, =(aCannotSetFocus - 0x1787C); "cannot set focus to %#010x\n"|6-73
96372|code|MOVS            R2, #5; category|5-34
96374|code|MOVS            R0, #0; domainname|0-32
96376|code|ADD             R1, PC; "cannot set focus to %#010x\n"|121-68
96378|code|BLX             dcgettext|255-247-252-232
96382|code|MOV             R2, R4|34-70
96384|code|MOV             R1, R0|1-70
96386|code|LDR             R0, =(aSetfocus - 0x17888); "setFocus"|3-72
96388|code|ADD             R0, PC; "setFocus"|120-68
96390|code|BL              fatal_brlapi_errno|255-247-189-251
96394|data|ALIGN 4|0-191
96396|data|DCD aCannotSetFocus - 0x1787C; "cannot set focus to %#010x\n"|60-160-0-0
96400|data|DCD aSetfocus - 0x17888; "setFocus"|76-160-0-0
96404|code|PUSH            {R4-R6,LR}|112-181
96406|code|MOV             R4, R0|4-70
96408|code|LDR             R5, =(unk_37B3C - 0x178A0)|36-77
96410|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x178A2)|37-78
96412|code|ADD             R5, PC; unk_37B3C|125-68
96414|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
96416|code|STR.W           R0, [R5,#(dword_38870 - 0x37B3C)]|197-248-52-13
96420|code|BL              api_setFocus|255-247-222-255
96424|code|LDR.W           R3, [R5,#(dword_38874 - 0x37B3C)]|213-248-56-61
96428|code|CMP             R3, #0|0-43
96430|code|BNE             locret_1791C|53-209
96432|code|UBFX.W          R2, R4, #0, #0xC|196-243-11-2
96436|code|LDR             R3, =(dword_34854 - 0x178BE)|31-75
96438|code|EOR.W           R2, R2, R4,LSR#20|130-234-20-82
96442|code|ADD             R3, PC; dword_34854|123-68
96444|code|ADD.W           R3, R3, R2,LSL#2|3-235-130-3
96448|code|LDR             R2, [R3,#0xC]|218-104
96450|code|CBZ             R2, loc_178D8|74-177
96452|code|LDR             R3, [R2]|19-104
96454|code|CMP             R4, R3|156-66
96456|code|BNE             loc_178D2|3-209
96458|code|B               loc_17902|26-224
96460|code|LDR             R1, [R2]|17-104
96462|code|CMP             R4, R1|140-66
96464|code|BEQ             loc_17902|23-208
96466|code|LDR             R2, [R2,#0xC]|210-104
96468|code|CMP             R2, #0|0-42
96470|code|BNE             loc_178CC|249-209
96472|code|LDR             R3, =(stderr_ptr - 0x344A0)|23-75
96474|code|MOVS            R2, #5; category|5-34
96476|code|LDR             R1, =(aDidnTGrabWindo - 0x178E6); "didn't grab window %#010lx but got focu"...|23-73
96478|code|MOVS            R0, #0; domainname|0-32
96480|code|LDR             R3, [R6,R3]; stderr|243-88
96482|code|ADD             R1, PC; "didn't grab window %#010lx but got focu"...|121-68
96484|code|LDR             R5, [R3]|29-104
96486|code|BLX             dcgettext|255-247-198-232
96490|code|MOV             R3, R4|35-70
96492|code|MOVS            R1, #1|1-33
96494|code|MOV             R2, R0|2-70
96496|code|MOV             R0, R5|40-70
96498|code|BLX             __fprintf_chk|254-247-130-239
96502|code|LDR             R0, =(aUnknown - 0x178FC); "unknown"|18-72
96504|code|ADD             R0, PC; "unknown"|120-68
96506|code|POP.W           {R4-R6,LR}|189-232-112-64
96510|code|B.W             api_setName|255-247-105-191
96514|code|LDR             R0, [R2,#8]|144-104
96516|code|CMP             R0, #0|0-40
96518|code|BNE             loc_178FA|248-209
96520|code|LDM.W           R2, {R1,R3}|146-232-10-0
96524|code|CMP             R1, R3|153-66
96526|code|BEQ             loc_1791E|6-208
96528|code|LDR             R0, =(aUnknown - 0x1791A); "unknown"|12-72
96530|code|POP.W           {R4-R6,LR}|189-232-112-64
96534|code|ADD             R0, PC; "unknown"|120-68
96536|code|B.W             api_setName|255-247-92-191
96540|code|POP             {R4-R6,PC}|112-189
96542|code|LDR             R0, =(aRoot - 0x17928); "root"|10-72
96544|code|POP.W           {R4-R6,LR}|189-232-112-64
96548|code|ADD             R0, PC; "root"|120-68
96550|code|B.W             api_setName|255-247-85-191
96554|data|ALIGN 4|0-191
96556|data|DCD unk_37B3C - 0x178A0|156-2-2-0
96560|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x178A2|254-203-1-0
96564|data|DCD dword_34854 - 0x178BE|150-207-1-0
96568|data|DCD stderr_ptr - 0x344A0|60-3-0-0
96572|data|DCD aDidnTGrabWindo - 0x178E6; "didn't grab window %#010lx but got focu"...|10-160-0-0
96576|data|DCD aUnknown - 0x178FC; "unknown"|236-159-0-0
96580|data|DCD aUnknown - 0x1791A; "unknown"|206-159-0-0
96584|data|DCD aRoot - 0x17928; "root"|184-159-0-0
96588|code|PUSH.W          {R4-R11,LR}|45-233-240-79
96592|code|SUB.W           SP, SP, #0x224|173-245-9-125
96596|code|LDR.W           R5, =(_GLOBAL_OFFSET_TABLE_ - 0x17962)|223-248-188-88
96600|code|ADD             R7, SP, #8|2-175
96602|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x344A0)|223-248-188-56
96606|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
96608|code|LDR.W           R4, =(unk_37B3C - 0x1796A)|223-248-184-72
96612|code|LDR             R3, [R5,R3]; __stack_chk_guard|235-88
96614|code|ADD             R4, PC; unk_37B3C|124-68
96616|code|STR.W           R0, [R4,#(dword_38860 - 0x37B3C)]|196-248-36-13
96620|code|LDR             R3, [R3]|27-104
96622|code|STR.W           R3, [R7,#0x21C+var_8]|199-248-20-50
96626|code|CMP             R0, #0|0-40
96628|code|BEQ.W           loc_17D74|0-240-254-129
96632|code|BLX             XOpenDisplay|255-247-234-232
96636|code|LDR.W           R8, =(dword_34854 - 0x17984)|223-248-160-136
96640|code|ADD             R8, PC; dword_34854|248-68
96642|code|STR.W           R0, [R8,#(dword_3485C - 0x34854)]|200-248-8-0
96646|code|CMP             R0, #0|0-40
96648|code|BEQ.W           loc_17B7C|0-240-248-128
96652|code|LDR.W           R0, =(sub_170FC+1 - 0x17994)|223-248-148-8
96656|code|ADD             R0, PC; sub_170FC ; XErrorHandler|120-68
96658|code|BLX             XSetErrorHandler|254-247-138-238
96662|code|CMP             R0, #0|0-40
96664|code|BEQ.W           loc_17B96|0-240-253-128
96668|code|LDR.W           R0, [R8,#(dword_3485C - 0x34854)]; Display *|216-248-8-0
96672|code|ADD.W           R1, R7, #0x88; int *|7-241-136-1
96676|code|ADD.W           R3, R7, #0x94|7-241-148-3
96680|code|ADD.W           R2, R7, #0x8C; int *|7-241-140-2
96684|code|STR             R3, [SP,#0x224+timeout]; int *|0-147
96686|code|ADD.W           R3, R7, #0x90; int *|7-241-144-3
96690|code|BLX             XTestQueryExtension|254-247-78-238
96694|code|ADD.W           R10, R7, #0x9C|7-241-156-10
96698|code|ADD.W           R4, R7, #0xA0|7-241-160-4
96702|code|MOVS            R6, #0|0-38
96704|code|MOVS            R3, #1|1-35
96706|code|STR.W           R3, [R10]|202-248-0-48
96710|code|MOV             R1, R4; int *|33-70
96712|code|STR             R6, [R4]|38-96
96714|code|STR.W           R0, [R7,#0x21C+var_198]|199-248-132-0
96718|code|MOV             R0, R10; int *|80-70
96720|code|BLX             XkbLibraryVersion|254-247-150-238
96724|code|CBNZ            R0, loc_179E6|56-185
96726|code|LDR.W           R1, =(aIncompatibleXk - 0x179E0); "Incompatible XKB library\n"|223-248-80-24
96730|code|MOVS            R2, #5; category|5-34
96732|code|ADD             R1, PC; "Incompatible XKB library\n"|121-68
96734|code|BLX             dcgettext|255-247-74-232
96738|code|BL              fatal|255-247-111-251
96742|code|ADD.W           R3, R7, #0x98; int *|7-241-152-3
96746|code|STR             R3, [R7,#0x21C+var_1A0]|251-103
96748|code|STR.W           R10, [SP,#0x224+timeout]; int *|205-248-0-160
96752|code|STR             R4, [SP,#0x224+var_220]; int *|1-148
96754|code|MOV             R1, R3; int *|25-70
96756|code|LDR.W           R0, [R8,#(dword_3485C - 0x34854)]; Display *|216-248-8-0
96760|code|MOV             R2, R3; int *|26-70
96762|code|BLX             XkbQueryExtension|254-247-164-239
96766|code|CMP             R0, #0|0-40
96768|code|BEQ.W           loc_17B6C|0-240-180-128
96772|code|LDR.W           R0, [R8,#(dword_3485C - 0x34854)]; Display *|216-248-8-0
96776|code|BLX             XConnectionNumber|255-247-4-232
96780|code|ADD.W           R3, R7, #0x110|7-245-136-115
96784|code|ADD.W           R2, R7, #0x190|7-245-200-114
96788|code|STR.W           R0, [R7,#0x21C+var_19C]|199-248-128-0
96792|code|STR.W           R6, [R3,#4]!|67-248-4-111
96796|code|CMP             R3, R2|147-66
96798|code|BNE             loc_17A18|251-209
96800|code|LDR.W           R6, =(dword_34854 - 0x17A2C)|223-248-8-104
96804|code|ADD.W           R11, R7, #0x114|7-245-138-123
96808|code|ADD             R6, PC; dword_34854|126-68
96810|code|LDR             R0, [R6]|48-104
96812|code|BLX             __fdelt_chk|255-247-64-233
96816|code|LDR             R2, [R6]|50-104
96818|code|MOVS            R3, #0x1F|31-35
96820|code|LDR.W           R6, [R7,#0x21C+var_19C]|215-248-128-96
96824|code|MOVT.W          R3, #0x8000|200-242-0-3
96828|code|ANDS            R3, R2|19-64
96830|code|CMP             R3, #0|0-43
96832|code|ITTT LT|190-191
96834|code|ADDLT.W         R3, R3, #0xFFFFFFFF|3-241-255-51
96838|code|ORNLT.W         R3, R3, #0x1F|99-240-31-3
96842|code|ADDLT           R3, #1|1-51
96844|code|MOV             R1, R0|1-70
96846|code|MOVS            R0, #1|1-32
96848|code|LDR.W           R2, [R11,R1,LSL#2]|91-248-33-32
96852|code|LSL.W           R3, R0, R3|0-250-3-243
96856|code|MOV             R0, R6|48-70
96858|code|ORRS            R3, R2|19-67
96860|code|STR.W           R3, [R11,R1,LSL#2]|75-248-33-48
96864|code|BLX             __fdelt_chk|255-247-38-233
96868|code|MOVS            R3, #0x8000001F|31-35-200-242-0-3
96874|code|ANDS            R3, R6|51-64
96876|code|CMP             R3, #0|0-43
96878|code|LDR.W           R1, =(dword_34854 - 0x17A86)|223-248-192-23
96882|code|IT LT|184-191
96884|code|ADDLT.W         R3, R3, #0xFFFFFFFF|3-241-255-51
96888|code|MOV.W           R6, #1|79-240-1-6
96892|code|IT LT|184-191
96894|code|ORNLT.W         R3, R3, #0x1F|99-240-31-3
96898|code|ADD             R1, PC; dword_34854|121-68
96900|code|IT LT|184-191
96902|code|ADDLT           R3, #1|1-51
96904|code|LSL.W           R3, R6, R3|6-250-3-243
96908|code|STR             R3, [R7,#0x21C+var_1A8]|123-103
96910|code|MOV             R6, R3|30-70
96912|code|LDR             R3, [R1]|11-104
96914|code|LDR.W           R2, [R11,R0,LSL#2]|91-248-32-32
96918|code|ORRS            R2, R6|50-67
96920|code|STR.W           R2, [R11,R0,LSL#2]|75-248-32-32
96924|code|LDR.W           R2, [R7,#0x21C+var_19C]|215-248-128-32
96928|code|CMP             R2, R3|154-66
96930|code|IT GT|200-191
96932|code|MOVGT           R3, R2|19-70
96934|code|ADDS            R3, #1|1-51
96936|code|STR             R3, [R7,#0x21C+nfds]|187-103
96938|code|BL              getVT|255-247-31-253
96942|code|LDR.W           R3, =(unk_21618 - 0x17AB6)|223-248-132-55
96946|code|ADD             R3, PC; unk_21618|123-68
96948|code|LDM             R3, {R0-R3}|15-203
96950|code|STM.W           R4, {R0-R3}|132-232-15-0
96954|code|MOV             R0, R4|32-70
96956|code|MOVS            R1, #1|1-33
96958|code|BLX             brlapi_ignoreKeyRanges|255-247-54-232
96962|code|MOV             R6, R0|6-70
96964|code|CMP             R0, #0|0-40
96966|code|BNE.W           loc_18074|64-240-213-130
96970|code|LDR.W           R9, =(dword_34854 - 0x17AD8)|223-248-108-151
96974|code|MOV             R2, R0; int|2-70
96976|code|LDR.W           R1, =(aNetWmName - 0x17ADE); "_NET_WM_NAME"|223-248-104-23
96980|code|ADD             R9, PC; dword_34854|249-68
96982|code|LDR.W           R8, =(unk_37B3C - 0x17AE4)|223-248-104-135
96986|code|ADD             R1, PC; "_NET_WM_NAME"|121-68
96988|code|LDR.W           R0, [R9,#(dword_3485C - 0x34854)]; Display *|217-248-8-0
96992|code|ADD             R8, PC; unk_37B3C|248-68
96994|code|BLX             XInternAtom|254-247-212-238
96998|code|LDR.W           R1, =(aUtf8String - 0x17AF4); "UTF8_STRING"|223-248-92-23
97002|code|MOV             R2, R6; int|50-70
97004|code|LDR.W           R6, =(aUtf8 - 0x17AF6); "UTF-8"|223-248-88-103
97008|code|ADD             R1, PC; "UTF8_STRING"|121-68
97010|code|ADD             R6, PC; "UTF-8"|126-68
97012|code|STR.W           R0, [R8,#(dword_38864 - 0x37B3C)]|200-248-40-13
97016|code|LDR.W           R0, [R9,#(dword_3485C - 0x34854)]; Display *|217-248-8-0
97020|code|BLX             XInternAtom|254-247-198-238
97024|code|STR.W           R0, [R8,#(dword_38868 - 0x37B3C)]|200-248-44-13
97028|code|MOVS            R0, #0xE; item|14-32
97030|code|BLX             nl_langinfo|254-247-76-238
97034|code|MOV             R1, R6; s2|49-70
97036|code|MOV             R8, R0|128-70
97038|code|BLX             strcmp|255-247-18-233
97042|code|CMP             R0, #0|0-40
97044|code|BNE.W           loc_17D86|64-240-55-129
97048|code|LDR.W           R3, =(dword_34854 - 0x17B20)|223-248-48-55
97052|code|ADD             R3, PC; dword_34854|123-68
97054|code|LDR             R0, [R3,#(dword_3485C - 0x34854)]; Display *|152-104
97056|code|LDR.W           R3, [R0,#0x88]|208-248-136-48
97060|code|CMP             R3, #0|0-43
97062|code|BLE             loc_17BA6|62-221
97064|code|LDR.W           R6, =(dword_34854 - 0x17B36)|223-248-36-103
97068|code|MOV.W           R9, #0|79-240-0-9
97072|code|MOV             R8, R9|200-70
97074|code|ADD             R6, PC; dword_34854|126-68
97076|code|B               loc_17B48|8-224
97078|code|LDR             R0, [R6,#(dword_3485C - 0x34854)]|176-104
97080|code|ADD.W           R8, R8, #1|8-241-1-8
97084|code|ADD.W           R9, R9, #0x50 ; 'P'|9-241-80-9
97088|code|LDR.W           R3, [R0,#0x88]|208-248-136-48
97092|code|CMP             R3, R8|67-69
97094|code|BLE             loc_17BA6|46-221
97096|code|LDR.W           R3, [R0,#0x8C]|208-248-140-48
97100|code|MOVS            R1, #0|0-33
97102|code|ADD             R3, R9|75-68
97104|code|LDR             R0, [R3,#8]|152-104
97106|code|BL              sub_17384|255-247-23-252
97110|code|CMP             R0, #0|0-40
97112|code|BNE             loc_17B36|237-209
97114|code|LDR.W           R1, =(aCannotGrabWind - 0x17B64); "cannot grab windows on screen %d\n"|223-248-248-22
97118|code|MOVS            R2, #5; category|5-34
97120|code|ADD             R1, PC; "cannot grab windows on screen %d\n"|121-68
97122|code|BLX             dcgettext|254-247-136-239
97126|code|MOV             R1, R8|65-70
97128|code|BL              fatal|255-247-172-250
97132|code|LDR.W           R1, =(aIncompatibleXk_0 - 0x17B76); "Incompatible XKB server support\n"|223-248-232-22
97136|code|MOVS            R2, #5; category|5-34
97138|code|ADD             R1, PC; "Incompatible XKB server support\n"|121-68
97140|code|BLX             dcgettext|254-247-126-239
97144|code|BL              fatal|255-247-164-250
97148|code|LDR.W           R1, =(aCannotConnectT_0 - 0x17B86); "cannot connect to display %s\n"|223-248-220-22
97152|code|MOVS            R2, #5; category|5-34
97154|code|ADD             R1, PC; "cannot connect to display %s\n"|121-68
97156|code|BLX             dcgettext|254-247-118-239
97160|code|LDR.W           R3, =(unk_37B3C - 0x17B90)|223-248-212-54
97164|code|ADD             R3, PC; unk_37B3C|123-68
97166|code|LDR.W           R1, [R3,#(dword_38860 - 0x37B3C)]|211-248-36-29
97170|code|BL              fatal|255-247-151-250
97174|code|LDR.W           R1, =(aStrangeOldErro - 0x17BA0); "strange old error handler\n"|223-248-204-22
97178|code|MOVS            R2, #5; category|5-34
97180|code|ADD             R1, PC; "strange old error handler\n"|121-68
97182|code|BLX             dcgettext|254-247-106-239
97186|code|BL              fatal|255-247-143-250
97190|code|MOV             R1, R10; Window *|81-70
97192|code|MOV             R2, R4; int *|34-70
97194|code|BLX             XGetInputFocus|255-247-202-232
97198|code|CMP             R0, #0|0-40
97200|code|BEQ.W           loc_17FF8|0-240-34-130
97204|code|LDR.W           R0, [R10]|218-248-0-0
97208|code|ADD.W           R3, R7, #0x194|7-245-202-115
97212|code|STR             R3, [R7,#0x21C+var_1D4]|187-100
97214|code|BL              sub_17894|255-247-105-254
97218|code|LDR.W           R3, =(dword_34854 - 0x17BCE)|223-248-164-54
97222|code|LDR.W           R2, =(dword_34854 - 0x17BD4)|223-248-164-38
97226|code|ADD             R3, PC; dword_34854|123-68
97228|code|LDR.W           R6, =(dword_34854 - 0x17BE6)|223-248-160-102
97232|code|ADD             R2, PC; dword_34854|122-68
97234|code|STR             R2, [R7,#0x21C+var_1B4]|186-102
97236|code|MOVS            R2, #0|0-34
97238|code|STR             R2, [R7,#0x21C+var_1DC]|58-100
97240|code|ADD.W           R2, R3, #0xC|3-241-12-2
97244|code|STR             R2, [R7,#0x21C+var_1CC]|58-101
97246|code|LDR.W           R2, =(aUnhandledEvent - 0x17BEC); "unhandled event type: %d\n"|223-248-148-38
97250|code|ADD             R6, PC; dword_34854|126-68
97252|code|LDR.W           R9, [R7,#0x21C+var_1D4]|215-248-72-144
97256|code|ADD             R2, PC; "unhandled event type: %d\n"|122-68
97258|code|STR             R2, [R7,#0x21C+var_1AC]|58-103
97260|code|LDR.W           R2, =(dword_34854 - 0x17BFA)|223-248-136-38
97264|code|STR.W           R10, [R7,#0x21C+var_20C]|199-248-16-160
97268|code|MOV             R10, R4|162-70
97270|code|ADD             R2, PC; dword_34854|122-68
97272|code|STR             R2, [R7,#0x21C+var_1C4]|186-101
97274|code|LDR.W           R2, =(aDidnTGrabWindo_0 - 0x17C04); "didn't grab window %#010lx\n"|223-248-128-38
97278|code|STR             R3, [R7,#0x21C+tocode]|251-102
97280|code|ADD             R2, PC; "didn't grab window %#010lx\n"|122-68
97282|code|STR             R2, [R7,#0x21C+var_1D8]|122-100
97284|code|LDR.W           R2, =(aWindow010lxCha - 0x17C0C); "window %#010lx changed to NULL name\n"|223-248-120-38
97288|code|ADD             R2, PC; "window %#010lx changed to NULL name\n"|122-68
97290|code|STR             R2, [R7,#0x21C+var_1E0]|250-99
97292|code|LDR.W           R2, =(unk_37B3C - 0x17C14)|223-248-116-38
97296|code|ADD             R2, PC; unk_37B3C|122-68
97298|code|STR             R2, [R7,#0x21C+var_1BC]|58-102
97300|code|LDR.W           R2, =(unk_37B3C - 0x17C1C)|223-248-112-38
97304|code|ADD             R2, PC; unk_37B3C|122-68
97306|code|STR             R2, [R7,#0x21C+var_1B8]|122-102
97308|code|LDR.W           R2, =(dword_34854 - 0x17C24)|223-248-108-38
97312|code|ADD             R2, PC; dword_34854|122-68
97314|code|STR             R2, [R7,#0x21C+var_1C0]|250-101
97316|code|LDR.W           R2, =(aDidnTGrabParen - 0x17C2C); "didn't grab parent of %#010lx\n"|223-248-104-38
97320|code|ADD             R2, PC; "didn't grab parent of %#010lx\n"|122-68
97322|code|STR             R2, [R7,#0x21C+msgid]|122-101
97324|code|LDR.W           R2, =(dword_34854 - 0x17C34)|223-248-100-38
97328|code|ADD             R2, PC; dword_34854|122-68
97330|code|STR             R2, [R7,#0x21C+var_1E4]|186-99
97332|code|LDR.W           R2, =(dword_34854 - 0x17C3C)|223-248-96-38
97336|code|ADD             R2, PC; dword_34854|122-68
97338|code|STR             R2, [R7,#0x21C+var_1E8]|122-99
97340|code|LDR.W           R2, =(unk_21618 - 0x17C44)|223-248-92-38
97344|code|ADD             R2, PC; unk_21618|122-68
97346|code|STR             R2, [R7,#0x21C+var_1EC]|58-99
97348|code|LDR.W           R2, =(dword_34854 - 0x17C4C)|223-248-88-38
97352|code|ADD             R2, PC; dword_34854|122-68
97354|code|STR             R2, [R7,#0x21C+var_1F0]|250-98
97356|code|LDR.W           R2, =(aCouldnTFindMod - 0x17C54); "Couldn't find modifiers to apply to %d "...|223-248-84-38
97360|code|ADD             R2, PC; "Couldn't find modifiers to apply to %d "...|122-68
97362|code|STR             R2, [R7,#0x21C+var_1F4]|186-98
97364|code|LDR.W           R2, =(aCouldnTTransla - 0x17C5C); "Couldn't translate keysym %08X to keyco"...|223-248-80-38
97368|code|ADD             R2, PC; "Couldn't translate keysym %08X to keyco"...|122-68
97370|code|STR             R2, [R7,#0x21C+var_1F8]|122-98
97372|code|LDR.W           R2, =(aUnexpectedBloc - 0x17C64); "unexpected block type"|223-248-76-38
97376|code|ADD             R2, PC; "unexpected block type"|122-68
97378|code|STR             R2, [R7,#0x21C+var_1FC]|58-98
97380|code|LDR.W           R2, =(aSLlx - 0x17C6C); "%s: %llx\n"|223-248-72-38
97384|code|ADD             R2, PC; "%s: %llx\n"|122-68
97386|code|STR             R2, [R7,#0x21C+var_200]|250-97
97388|code|LDR.W           R2, =(aUnexpectedCmd - 0x17C74); "unexpected cmd"|223-248-68-38
97392|code|ADD             R2, PC; "unexpected cmd"|122-68
97394|code|STR             R2, [R7,#0x21C+var_204]|186-97
97396|code|LDR.W           R2, =(aSLlx - 0x17C7C); "%s: %llx\n"|223-248-64-38
97400|code|ADD             R2, PC; "%s: %llx\n"|122-68
97402|code|STR             R2, [R7,#0x21C+var_208]|122-97
97404|code|LDR             R3, [R7,#0x21C+var_1B4]|187-110
97406|code|MOV.W           R8, #0|79-240-0-8
97410|code|LDR             R0, [R3,#8]; Display *|152-104
97412|code|BLX             XFlush|254-247-230-239
97416|code|MOV             R1, R11; src|89-70
97418|code|MOVS            R2, #0x80; n|128-34
97420|code|MOV             R0, R9; dest|72-70
97422|code|BLX             memcpy|254-247-180-239
97426|code|STR.W           R8, [SP,#0x224+timeout]; timeout|205-248-0-128
97430|code|MOV             R2, R8; writefds|66-70
97432|code|MOV             R3, R8; exceptfds|67-70
97434|code|LDR             R0, [R7,#0x21C+nfds]; nfds|184-111
97436|code|MOV             R1, R9; readfds|73-70
97438|code|BLX             select|254-247-46-239
97442|code|CMP             R0, R8|64-69
97444|code|BLT.W           loc_18040|192-242-204-129
97448|code|LDR.W           R0, [R7,#0x21C+var_19C]|215-248-128-0
97452|code|BLX             __fdelt_chk|255-247-0-232
97456|code|ADD.W           R3, R7, #0x218|7-245-6-115
97460|code|LDR             R2, [R7,#0x21C+var_1A8]|122-111
97462|code|ADD.W           R0, R3, R0,LSL#2|3-235-128-0
97466|code|LDR.W           R3, [R0,#-0x84]|80-248-132-60
97470|code|TST             R2, R3|26-66
97472|code|BNE.W           def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|64-240-197-128
97476|code|LDR.W           R3, [R7,#0x21C+var_198]|215-248-132-48
97480|code|CMP             R3, #0|0-43
97482|code|BEQ             loc_17C7C|215-208
97484|code|LDR             R4, [R7,#0x21C+var_1E4]|188-107
97486|code|LDR             R0, [R4]|32-104
97488|code|BLX             __fdelt_chk|254-247-238-239
97492|code|LDR             R2, [R4]|34-104
97494|code|MOVS            R3, #0x8000001F|31-35-200-242-0-3
97500|code|ANDS            R3, R2|19-64
97502|code|ADD.W           R2, R7, #0x218|7-245-6-114
97506|code|CMP             R3, #0|0-43
97508|code|ITTT LT|190-191
97510|code|ADDLT.W         R3, R3, #0xFFFFFFFF|3-241-255-51
97514|code|ORNLT.W         R3, R3, #0x1F|99-240-31-3
97518|code|ADDLT           R3, #1|1-51
97520|code|ADD.W           R0, R2, R0,LSL#2|2-235-128-0
97524|code|LDR.W           R2, [R0,#-0x84]|80-248-132-44
97528|code|ASR.W           R3, R2, R3|66-250-3-243
97532|code|LSLS            R3, R3, #0x1F|219-7
97534|code|BPL             loc_17C7C|189-213
97536|code|STR             R6, [R7,#0x21C+var_218]|126-96
97538|code|LDR             R4, [R7,#0x21C+var_1DC]|60-108
97540|code|LDR             R6, [R7,#0x21C+var_1F0]|254-106
97542|code|STR.W           R11, [R7,#0x21C+var_210]|199-248-12-176
97546|code|STR.W           R9, [R7,#0x21C+var_214]|199-248-8-144
97550|code|MOVS            R0, #0|0-32
97552|code|MOV             R1, R10|81-70
97554|code|BLX             brlapi_readKey|254-247-2-237
97558|code|CMP             R0, #1|1-40
97560|code|MOV             R8, R0|128-70
97562|code|BNE.W           loc_181A6|64-240-68-130
97566|code|LDRD.W          R0, R1, [R10]|218-233-0-1
97570|code|STRD.W          R0, R1, [R7,#0x21C+var_1D4]|199-233-18-1
97574|code|AND.W           R0, R0, #0xE0000000|0-240-96-64
97578|code|MOVS            R1, #0|0-33
97580|code|ORRS.W          R3, R0, R1|80-234-1-3
97584|code|BEQ.W           loc_18110|0-240-238-129
97588|code|CMP             R1, #0|0-41
97590|code|IT EQ|8-191
97592|code|CMPEQ.W         R0, #0x20000000|176-241-0-95
97596|code|BNE.W           loc_180E6|64-240-211-129
97600|code|LDRD.W          R0, R1, [R7,#0x21C+var_1D4]|215-233-18-1
97604|code|MOVS            R1, #0|0-33
97606|code|BIC.W           R0, R0, #0xE0000000|32-240-96-64
97610|code|SUBS.W          R8, R0, #0x4D ; 'M'; switch 4 cases|176-241-77-8
97614|code|ADC.W           R9, R1, #0xFFFFFFFF|65-241-255-57
97618|code|CMP.W           R9, #0|185-241-0-15
97622|code|IT EQ|8-191
97624|code|CMPEQ.W         R8, #4|184-241-4-15
97628|code|BCS.W           def_17D68; jumptable 00017D68 default case|128-240-175-129
97632|code|CMP.W           R8, #3|184-241-3-15
97636|code|BHI.W           def_17D68; jumptable 00017D68 default case|0-242-171-129
97640|code|TBH.W           [PC,R8,LSL#1]; switch jump|223-232-24-240
97644|data|DCW 0x1A7; jump table for switch statement|167-1
97646|data|DCW 0x1A5|165-1
97648|data|DCW 0x19E|158-1
97650|data|DCW 0x189|137-1
97652|code|LDR.W           R0, =(aDisplay - 0x17D7C); "DISPLAY"|223-248-68-5
97656|code|ADD             R0, PC; "DISPLAY"|120-68
97658|code|BLX             getenv|255-247-72-232
97662|code|MOV             R3, R0|3-70
97664|code|STR.W           R3, [R4,#(dword_38860 - 0x37B3C)]|196-248-36-61
97668|code|B               loc_17978|248-229
97670|code|MOV             R0, R8; s|64-70
97672|code|STR.W           SP, [R7,#0x21C+var_1AC]|199-248-112-208
97676|code|BLX             strlen|254-247-72-239
97680|code|LDR.W           LR, =(aSTranslit - 0x17D9E); "%s//TRANSLIT"|223-248-44-229
97684|code|MOVS            R2, #1|1-34
97686|code|LDR.W           R9, =(utf8Conv - 0x17DA0)|223-248-44-149
97690|code|ADD             LR, PC; "%s//TRANSLIT"|254-68
97692|code|ADD             R9, PC; utf8Conv|249-68
97694|code|ADD.W           R3, R0, #0x12|0-241-18-3
97698|code|ADD.W           R1, R0, #0xB|0-241-11-1
97702|code|BIC.W           R3, R3, #7|35-240-7-3
97706|code|SUB.W           SP, SP, R3|173-235-3-13
97710|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
97714|code|ADD.W           R12, SP, #0x224+var_21C|13-241-8-12
97718|code|STR.W           LR, [SP,#0x224+timeout]|205-248-0-224
97722|code|STR.W           R8, [SP,#0x224+var_220]|205-248-4-128
97726|code|MOV             R0, R12|96-70
97728|code|STR.W           R12, [R7,#0x21C+tocode]|199-248-108-192
97732|code|BLX             __snprintf_chk|254-247-50-239
97736|code|LDR.W           R12, [R7,#0x21C+tocode]|215-248-108-192
97740|code|MOV             R1, R6; fromcode|49-70
97742|code|MOV             R0, R12; tocode|96-70
97744|code|BLX             iconv_open|254-247-146-239
97748|code|STR.W           R0, [R9]|201-248-0-0
97752|code|ADDS            R0, #1|1-48
97754|code|BEQ.W           loc_18006|0-240-20-129
97758|code|LDR.W           SP, [R7,#0x21C+var_1AC]|215-248-112-208
97762|code|B               loc_17B18|153-230
97764|code|LDR             R3, [R4,#0x14]; jumptable 00017E7E case 28|99-105
97766|code|CMP             R3, #0x27 ; '''|39-43
97768|code|BEQ             loc_17DF6|5-208
97770|code|LDR             R2, [R7,#0x21C+var_1B8]|122-110
97772|code|LDR.W           R2, [R2,#0xD28]|210-248-40-45
97776|code|CBZ             R2, def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|106-179
97778|code|CMP             R3, R2|147-66
97780|code|BNE             def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|43-209
97782|code|LDR.W           R8, [R4,#0x10]|212-248-16-128
97786|code|LDR             R2, [R7,#0x21C+var_1C4]|186-109
97788|code|UBFX.W          R3, R8, #0, #0xC|200-243-11-3
97792|code|EOR.W           R3, R3, R8,LSR#20|131-234-24-83
97796|code|ADD.W           R3, R2, R3,LSL#2|2-235-131-3
97800|code|LDR             R4, [R3,#0xC]|220-104
97802|code|CBNZ            R4, loc_17E16|36-185
97804|code|B               loc_18038|20-225
97806|code|LDR             R4, [R4,#0xC]|228-104
97808|code|CMP             R4, #0|0-44
97810|code|BEQ.W           loc_18038|0-240-17-129
97814|code|LDR             R3, [R4]|35-104
97816|code|CMP             R8, R3|152-69
97818|code|BNE             loc_17E0E|248-209
97820|code|LDR             R0, [R4,#8]; void *|160-104
97822|code|CBZ             R0, loc_17E2A|32-177
97824|code|BLX             XFree|254-247-72-238
97828|code|CMP             R0, #0|0-40
97830|code|BEQ.W           loc_18066|0-240-30-129
97834|code|MOV             R0, R8; Window|64-70
97836|code|BL              sub_171C4|255-247-202-249
97840|code|STR             R0, [R4,#8]|160-96
97842|code|CMP             R0, #0|0-40
97844|code|BEQ.W           loc_1804A|0-240-9-129
97848|code|LDR             R3, [R7,#0x21C+var_1BC]|59-110
97850|code|LDR.W           R3, [R3,#0xD38]|211-248-56-61
97854|code|CBNZ            R3, def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|51-185
97856|code|LDR             R3, [R7,#0x21C+var_1BC]|59-110
97858|code|LDR.W           R3, [R3,#0xD34]|211-248-52-61
97862|code|CMP             R8, R3|152-69
97864|code|BNE             def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|1-209
97866|code|BL              api_setName|255-247-195-252
97870|code|LDR             R0, [R6,#8]; jumptable 00017E7E cases 10,18-24,26,27,33|176-104
97872|code|BLX             XPending|254-247-132-237
97876|code|CMP             R0, #0|0-40
97878|code|BEQ.W           loc_17CC4|63-244-53-175
97882|code|ADD.W           R4, R7, #0xB4|7-241-180-4
97886|code|LDR             R0, [R6,#8]; Display *|176-104
97888|code|MOV             R1, R4; XEvent *|33-70
97890|code|BLX             XNextEvent|254-247-154-238
97894|code|CMP             R0, #0|0-40
97896|code|BNE.W           loc_1802E|64-240-225-128
97900|code|LDR             R3, [R4]|35-104
97902|code|SUBS            R3, #9; switch 26 cases|9-59
97904|code|CMP             R3, #0x19|25-43
97906|code|BHI.W           def_17E7E; jumptable 00017E7E default case, cases 11-15,25,29-32|0-242-173-128
97910|code|ADR             R2, jpt_17E7E|2-162
97912|code|LDR.W           R3, [R2,R3,LSL#2]|82-248-35-48
97916|code|ADD             R2, R3|26-68
97918|code|BX              R2; switch jump|16-71
97920|data|DCD loc_17F9C+1 - 0x17E80; jump table for switch statement|29-1-0-0
97924|data|DCD def_17FAC+1 - 0x17E80; jumptable 00017E7E cases 10,18-24,26,27,33|207-255-255-255
97928|data|DCD def_17E7E+1 - 0x17E80; jumptable 00017E7E default case, cases 11-15,25,29-32|81-1-0-0
97932|data|DCD def_17E7E+1 - 0x17E80; jumptable 00017E7E default case, cases 11-15,25,29-32|81-1-0-0
97936|data|DCD def_17E7E+1 - 0x17E80; jumptable 00017E7E default case, cases 11-15,25,29-32|81-1-0-0
97940|data|DCD def_17E7E+1 - 0x17E80; jumptable 00017E7E default case, cases 11-15,25,29-32|81-1-0-0
97944|data|DCD def_17E7E+1 - 0x17E80; jumptable 00017E7E default case, cases 11-15,25,29-32|81-1-0-0
97948|data|DCD loc_17F40+1 - 0x17E80; jumptable 00017E7E case 16|193-0-0-0
97952|data|DCD loc_17EF0+1 - 0x17E80; jumptable 00017E7E case 17|113-0-0-0
97956|data|DCD def_17FAC+1 - 0x17E80; jumptable 00017E7E cases 10,18-24,26,27,33|207-255-255-255
97960|data|DCD def_17FAC+1 - 0x17E80; jumptable 00017E7E cases 10,18-24,26,27,33|207-255-255-255
97964|data|DCD def_17FAC+1 - 0x17E80; jumptable 00017E7E cases 10,18-24,26,27,33|207-255-255-255
97968|data|DCD def_17FAC+1 - 0x17E80; jumptable 00017E7E cases 10,18-24,26,27,33|207-255-255-255
97972|data|DCD def_17FAC+1 - 0x17E80; jumptable 00017E7E cases 10,18-24,26,27,33|207-255-255-255
97976|data|DCD def_17FAC+1 - 0x17E80; jumptable 00017E7E cases 10,18-24,26,27,33|207-255-255-255
97980|data|DCD def_17FAC+1 - 0x17E80; jumptable 00017E7E cases 10,18-24,26,27,33|207-255-255-255
97984|data|DCD def_17E7E+1 - 0x17E80; jumptable 00017E7E default case, cases 11-15,25,29-32|81-1-0-0
97988|data|DCD def_17FAC+1 - 0x17E80; jumptable 00017E7E cases 10,18-24,26,27,33|207-255-255-255
97992|data|DCD def_17FAC+1 - 0x17E80; jumptable 00017E7E cases 10,18-24,26,27,33|207-255-255-255
97996|data|DCD loc_17DE4+1 - 0x17E80; jumptable 00017E7E case 28|101-255-255-255
98000|data|DCD def_17E7E+1 - 0x17E80; jumptable 00017E7E default case, cases 11-15,25,29-32|81-1-0-0
98004|data|DCD def_17E7E+1 - 0x17E80; jumptable 00017E7E default case, cases 11-15,25,29-32|81-1-0-0
98008|data|DCD def_17E7E+1 - 0x17E80; jumptable 00017E7E default case, cases 11-15,25,29-32|81-1-0-0
98012|data|DCD def_17E7E+1 - 0x17E80; jumptable 00017E7E default case, cases 11-15,25,29-32|81-1-0-0
98016|data|DCD def_17FAC+1 - 0x17E80; jumptable 00017E7E cases 10,18-24,26,27,33|207-255-255-255
98020|data|DCD loc_17EE8+1 - 0x17E80; jumptable 00017E7E case 34|105-0-0-0
98024|code|MOV             R0, R4; jumptable 00017E7E case 34|32-70
98026|code|BLX             XRefreshKeyboardMapping|254-247-216-237
98030|code|B               def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|174-231
98032|code|LDR             R1, [R4,#0x14]; jumptable 00017E7E case 17|97-105
98034|code|LDR             R3, [R7,#0x21C+tocode]|251-110
98036|code|UBFX.W          R2, R1, #0, #0xC|193-243-11-2
98040|code|EOR.W           R2, R2, R1,LSR#20|130-234-17-82
98044|code|LSLS            R2, R2, #2|146-0
98046|code|ADD             R3, R2|19-68
98048|code|LDR             R4, [R3,#0xC]|220-104
98050|code|CMP             R4, #0|0-44
98052|code|BEQ             def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|163-208
98054|code|LDR             R3, [R4]|35-104
98056|code|CMP             R1, R3|153-66
98058|code|BEQ.W           loc_18028|0-240-141-128
98062|code|LDR             R3, [R4,#0xC]|227-104
98064|code|CMP             R3, #0|0-43
98066|code|BEQ             def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|156-208
98068|code|LDR             R2, [R3]|26-104
98070|code|CMP             R1, R2|145-66
98072|code|BEQ             loc_17F28|6-208
98074|code|MOV             R4, R3|28-70
98076|code|LDR             R3, [R4,#0xC]|227-104
98078|code|CMP             R3, #0|0-43
98080|code|BEQ             def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|149-208
98082|code|LDR             R2, [R3]|26-104
98084|code|CMP             R1, R2|145-66
98086|code|BNE             loc_17F1A|248-209
98088|code|ADD.W           R2, R4, #0xC|4-241-12-2
98092|code|MOV             R4, R3|28-70
98094|code|LDR             R3, [R4,#0xC]|227-104
98096|code|STR             R3, [R2]|19-96
98098|code|LDR             R0, [R4,#8]; ptr|160-104
98100|code|BLX             free|254-247-166-235
98104|code|MOV             R0, R4; ptr|32-70
98106|code|BLX             free|254-247-164-235
98110|code|B               def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|134-231
98112|code|LDR.W           R8, [R4,#0x14]; jumptable 00017E7E case 16|212-248-20-128
98116|code|MOV             R0, R8; Window|64-70
98118|code|BL              sub_16FDC|255-247-73-248
98122|code|CMP             R0, #0|0-40
98124|code|BEQ.W           def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|63-244-127-175
98128|code|LDR             R1, [R4,#0x10]|33-105
98130|code|LDR             R2, [R7,#0x21C+var_1C0]|250-109
98132|code|UBFX.W          R3, R1, #0, #0xC|193-243-11-3
98136|code|EOR.W           R3, R3, R1,LSR#20|131-234-17-83
98140|code|ADD.W           R3, R2, R3,LSL#2|2-235-131-3
98144|code|B               loc_17F68|2-224
98146|code|LDR             R2, [R3]|26-104
98148|code|CMP             R1, R2|145-66
98150|code|BEQ             loc_18014|85-208
98152|code|LDR             R3, [R3,#0xC]|219-104
98154|code|CMP             R3, #0|0-43
98156|code|BNE             loc_17F62|249-209
98158|code|LDR             R3, =(stderr_ptr - 0x344A0)|214-75
98160|code|MOVS            R0, #0; domainname|0-32
98162|code|LDR             R1, [R7,#0x21C+msgid]; msgid|121-109
98164|code|LDR             R3, [R5,R3]; stderr|235-88
98166|code|MOVS            R2, #5; category|5-34
98168|code|LDR             R4, [R3]|28-104
98170|code|BLX             dcgettext|254-247-124-237
98174|code|MOVS            R1, #1|1-33
98176|code|MOV             R3, R8|67-70
98178|code|MOV             R2, R0|2-70
98180|code|MOV             R0, R4|32-70
98182|code|BLX             __fprintf_chk|254-247-56-236
98186|code|MOV             R0, R8; Window|64-70
98188|code|BL              sub_171C4|255-247-26-249
98192|code|MOVS            R1, #0|0-33
98194|code|MOV             R2, R0|2-70
98196|code|MOV             R0, R8|64-70
98198|code|BL              sub_17084|255-247-117-248
98202|code|B               def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|88-231
98204|code|LDR             R3, [R4,#0x18]; jumptable 00017E7E case 9|163-105
98206|code|CMP             R3, #7; switch 8 cases|7-43
98208|code|BHI.W           def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|63-246-85-175
98212|code|ADR             R2, jpt_17FAC|2-162
98214|code|LDR.W           R3, [R2,R3,LSL#2]|82-248-35-48
98218|code|ADD             R2, R3|26-68
98220|code|BX              R2; switch jump|16-71
98222|data|ALIGN 0x10|0-191
98224|data|DCD loc_17FF0+1 - 0x17FB0; jump table for switch statement|65-0-0-0
98228|data|DCD def_17FAC+1 - 0x17FB0; jumptable 00017E7E cases 10,18-24,26,27,33|159-254-255-255
98232|data|DCD loc_17FF0+1 - 0x17FB0; jumptable 00017FAC cases 0,2,3,6,7|65-0-0-0
98236|data|DCD loc_17FF0+1 - 0x17FB0; jumptable 00017FAC cases 0,2,3,6,7|65-0-0-0
98240|data|DCD def_17FAC+1 - 0x17FB0; jumptable 00017E7E cases 10,18-24,26,27,33|159-254-255-255
98244|data|DCD def_17FAC+1 - 0x17FB0; jumptable 00017E7E cases 10,18-24,26,27,33|159-254-255-255
98248|data|DCD loc_17FF0+1 - 0x17FB0; jumptable 00017FAC cases 0,2,3,6,7|65-0-0-0
98252|data|DCD loc_17FF0+1 - 0x17FB0; jumptable 00017FAC cases 0,2,3,6,7|65-0-0-0
98256|code|LDR             R3, =(stderr_ptr - 0x344A0); jumptable 00017E7E default case, cases 11-15,25,29-32|189-75
98258|code|MOVS            R2, #5; category|5-34
98260|code|LDR             R1, [R7,#0x21C+var_1AC]; msgid|57-111
98262|code|MOVS            R0, #0; domainname|0-32
98264|code|LDR             R3, [R5,R3]; stderr|235-88
98266|code|LDR.W           R8, [R3]|211-248-0-128
98270|code|BLX             dcgettext|254-247-74-237
98274|code|LDR             R3, [R4]|35-104
98276|code|MOVS            R1, #1|1-33
98278|code|MOV             R2, R0|2-70
98280|code|MOV             R0, R8|64-70
98282|code|BLX             __fprintf_chk|254-247-6-236
98286|code|B               def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|46-231
98288|code|LDR             R0, [R4,#0x10]; jumptable 00017FAC cases 0,2,3,6,7|32-105
98290|code|BL              sub_17894|255-247-79-252
98294|code|B               def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|42-231
98296|code|LDR             R1, =(aFailedToGetFir - 0x18000); "failed to get first focus\n"|180-73
98298|code|MOVS            R2, #5; category|5-34
98300|code|ADD             R1, PC; "failed to get first focus\n"|121-68
98302|code|BLX             dcgettext|254-247-58-237
98306|code|BL              fatal|255-247-95-248
98310|code|MOV             R0, R8; tocode|64-70
98312|code|MOV             R1, R6; fromcode|49-70
98314|code|BLX             iconv_open|254-247-118-238
98318|code|STR.W           R0, [R9]|201-248-0-0
98322|code|B               loc_17DDE|228-230
98324|code|MOV             R0, R8; Window|64-70
98326|code|LDR             R4, [R3,#4]|92-104
98328|code|BL              sub_171C4|255-247-212-248
98332|code|MOV             R1, R4|33-70
98334|code|MOV             R2, R0|2-70
98336|code|MOV             R0, R8|64-70
98338|code|BL              sub_17084|255-247-47-248
98342|code|B               def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|18-231
98344|code|LDR             R3, [R7,#0x21C+var_1CC]|59-109
98346|code|ADD             R2, R3|26-68
98348|code|B               loc_17F2E|127-231
98350|code|MOV             R1, R0|1-70
98352|code|LDR             R0, =(aXnexteventD - 0x18036); "XNextEvent: %d\n"|167-72
98354|code|ADD             R0, PC; "XNextEvent: %d\n"|120-68
98356|code|BL              fatal|255-247-70-248
98360|code|LDR             R3, =(stderr_ptr - 0x344A0)|163-75
98362|code|MOVS            R0, #0|0-32
98364|code|LDR             R1, [R7,#0x21C+var_1D8]|121-108
98366|code|B               loc_17F74|153-231
98368|code|LDR             R0, =(aSelect_0 - 0x18048); "select"|164-72
98370|code|MOV             R1, R8|65-70
98372|code|ADD             R0, PC; "select"|120-68
98374|code|BL              fatal_errno|254-247-253-255
98378|code|LDR             R3, =(stderr_ptr - 0x344A0)|159-75
98380|code|MOVS            R2, #5; category|5-34
98382|code|LDR             R1, [R7,#0x21C+var_1E0]; msgid|249-107
98384|code|LDR             R3, [R5,R3]; stderr|235-88
98386|code|LDR             R4, [R3]|28-104
98388|code|BLX             dcgettext|254-247-14-237
98392|code|MOV             R3, R8|67-70
98394|code|MOVS            R1, #1|1-33
98396|code|MOV             R2, R0|2-70
98398|code|MOV             R0, R4|32-70
98400|code|BLX             __fprintf_chk|254-247-202-235
98404|code|B               def_17FAC; jumptable 00017E7E cases 10,18-24,26,27,33|243-230
98406|code|LDR             R1, =(aXfreeWmNameFor - 0x1806E); "XFree(wm_name) for change"|156-73
98408|code|MOVS            R2, #5; category|5-34
98410|code|ADD             R1, PC; "XFree(wm_name) for change"|121-68
98412|code|BLX             dcgettext|254-247-2-237
98416|code|BL              fatal|255-247-40-248
98420|code|LDR             R0, =(aIgnorekeyrange - 0x1807C); "ignoreKeyRanges"|153-72
98422|code|MOVS            R1, #0|0-33
98424|code|ADD             R0, PC; "ignoreKeyRanges"|120-68
98426|code|BL              fatal_brlapi_errno|254-247-195-255
98430|code|MOVS            R1, #8; jumptable 00017D68 case 80|8-33
98432|code|LDRD.W          R2, R3, [R7,#0x21C+var_1D4]|215-233-18-35
98436|code|MOVS            R2, #0|0-34
98438|code|AND.W           R3, R3, #0x300|3-244-64-115
98442|code|CMP.W           R3, #0x100|179-245-128-127
98446|code|IT EQ|8-191
98448|code|CMPEQ           R2, #0|0-42
98450|code|BEQ             loc_180B2|14-208
98452|code|CMP.W           R3, #0x200|179-245-0-127
98456|code|IT EQ|8-191
98458|code|CMPEQ           R2, #0|0-42
98460|code|BEQ             loc_180AC|6-208
98462|code|ORRS            R3, R2|19-67
98464|code|BNE.W           loc_17D0E|127-244-53-174
98468|code|EORS            R4, R1|76-64
98470|code|B               loc_17D0E|50-230
98472|code|MOVS            R1, #4; jumptable 00017D68 case 79|4-33
98474|code|B               loc_18080|233-231
98476|code|BIC.W           R4, R4, R1|36-234-1-4
98480|code|B               loc_17D0E|45-230
98482|code|ORRS            R4, R1|12-67
98484|code|B               loc_17D0E|43-230
98486|code|MOVS            R1, #2; jumptable 00017D68 case 78|2-33
98488|code|B               loc_18080|226-231
98490|code|MOVS            R1, #1; jumptable 00017D68 case 77|1-33
98492|code|B               loc_18080|224-231
98494|code|LDR             R3, =(stderr_ptr - 0x344A0); jumptable 00017D68 default case|130-75
98496|code|MOVS            R2, #5; category|5-34
98498|code|LDR             R1, [R7,#0x21C+var_204]; msgid|185-105
98500|code|MOVS            R0, #0; domainname|0-32
98502|code|LDR             R3, [R5,R3]; stderr|235-88
98504|code|LDR.W           R8, [R3]|211-248-0-128
98508|code|BLX             dcgettext|254-247-210-236
98512|code|MOVS            R1, #1|1-33
98514|code|MOV             R3, R0|3-70
98516|code|MOV             R0, R8|64-70
98518|code|LDRD.W          R8, R9, [R10]|218-233-0-137
98522|code|STRD.W          R8, R9, [SP,#0x224+timeout]|205-233-0-137
98526|code|LDR             R2, [R7,#0x21C+var_208]|122-105
98528|code|BLX             __fprintf_chk|254-247-138-235
98532|code|B               loc_17D0E|19-230
98534|code|LDR             R3, =(stderr_ptr - 0x344A0)|120-75
98536|code|MOVS            R0, #0; domainname|0-32
98538|code|LDR             R1, [R7,#0x21C+var_1FC]; msgid|57-106
98540|code|MOVS            R2, #5; category|5-34
98542|code|MOV             R4, R0|4-70
98544|code|LDR             R3, [R5,R3]; stderr|235-88
98546|code|LDR.W           R9, [R3]|211-248-0-144
98550|code|BLX             dcgettext|254-247-190-236
98554|code|MOV             R1, R8|65-70
98556|code|MOV             R3, R0|3-70
98558|code|MOV             R0, R9|72-70
98560|code|LDRD.W          R8, R9, [R10]|218-233-0-137
98564|code|STRD.W          R8, R9, [SP,#0x224+timeout]|205-233-0-137
98568|code|LDR             R2, [R7,#0x21C+var_200]|250-105
98570|code|BLX             __fprintf_chk|254-247-118-235
98574|code|B               loc_17D0E|254-229
98576|code|LDR             R3, [R7,#0x21C+var_1D4]|187-108
98578|code|BIC.W           R11, R3, #0xE0000000|35-240-96-75
98582|code|LDR             R3, [R7,#0x21C+var_1E8]|123-107
98584|code|MOV             R1, R11; KeySym|89-70
98586|code|LDR             R0, [R3,#8]; Display *|152-104
98588|code|LDRB.W          R3, [R7,#0x21C+var_1D0]|151-248-76-48
98592|code|STR             R3, [R7,#0x21C+var_1DC]|59-100
98594|code|BLX             XKeysymToKeycode|254-247-74-235
98598|code|MOV             R9, R0|129-70
98600|code|CBZ             R0, loc_18188|112-179
98602|code|LDR             R3, [R7,#0x21C+var_1EC]|59-107
98604|code|STR.W           R10, [R7,#0x21C+var_1D4]|199-248-72-160
98608|code|MOV             R10, R5|170-70
98610|code|ADD.W           R12, R3, #0xC|3-241-12-12
98614|code|MOV             R5, R4|37-70
98616|code|MOV             R4, R12|100-70
98618|code|LDR             R3, [R7,#0x21C+var_1A0]|251-111
98620|code|MOV             R1, R9; KeyCode|73-70
98622|code|LDR.W           R8, [R4,#4]!|84-248-4-143
98626|code|STR             R3, [SP,#0x224+timeout]; KeySym *|0-147
98628|code|LDR             R3, [R7,#0x21C+var_20C]; unsigned int *|59-105
98630|code|MOV             R2, R8; unsigned int|66-70
98632|code|LDR             R0, [R6,#8]; Display *|176-104
98634|code|BLX             XkbLookupKeySym|254-247-192-236
98638|code|CBZ             R0, loc_18158|24-177
98640|code|LDR             R3, [R7,#0x21C+var_1A0]|251-111
98642|code|LDR             R3, [R3]|27-104
98644|code|CMP             R11, R3|155-69
98646|code|BEQ             loc_181B0|43-208
98648|code|LDR             R0, [R4,#4]; domainname|96-104
98650|code|CMP             R0, #0|0-40
98652|code|BNE             loc_1813A|237-209
98654|code|LDR             R3, =(stderr_ptr - 0x344A0)|90-75
98656|code|MOV             R4, R5|44-70
98658|code|MOV             R5, R10|85-70
98660|code|LDR             R1, [R7,#0x21C+var_1F4]; msgid|185-106
98662|code|MOVS            R2, #5; category|5-34
98664|code|LDR.W           R10, [R7,#0x21C+var_1D4]|215-248-72-160
98668|code|LDR             R3, [R5,R3]; stderr|235-88
98670|code|LDR.W           R8, [R3]|211-248-0-128
98674|code|BLX             dcgettext|254-247-128-236
98678|code|STR.W           R11, [SP,#0x224+timeout]|205-248-0-176
98682|code|MOV             R3, R9|75-70
98684|code|MOVS            R1, #1|1-33
98686|code|MOV             R2, R0|2-70
98688|code|MOV             R0, R8|64-70
98690|code|BLX             __fprintf_chk|254-247-58-235
98694|code|B               loc_17D0E|194-229
98696|code|LDR             R3, =(stderr_ptr - 0x344A0)|79-75
98698|code|MOVS            R2, #5; category|5-34
98700|code|LDR             R1, [R7,#0x21C+var_1F8]; msgid|121-106
98702|code|LDR             R3, [R5,R3]; stderr|235-88
98704|code|LDR.W           R9, [R3]|211-248-0-144
98708|code|BLX             dcgettext|254-247-110-236
98712|code|MOV             R1, R8|65-70
98714|code|MOV             R3, R11|91-70
98716|code|MOV             R2, R0|2-70
98718|code|MOV             R0, R9|72-70
98720|code|BLX             __fprintf_chk|254-247-42-235
98724|code|B               loc_17D0E|179-229
98726|code|ADDS            R6, R7, #4|62-29
98728|code|STR             R4, [R7,#0x21C+var_1DC]|60-100
98730|code|LDM.W           R6, {R6,R9,R11}|150-232-64-10
98734|code|B               loc_17C7C|101-229
98736|code|LDR             R3, [R7,#0x21C+var_1DC]|59-108
98738|code|MOV             R4, R5|44-70
98740|code|LDR             R0, [R6,#8]; Display *|176-104
98742|code|MOV             R5, R10|85-70
98744|code|ORRS            R4, R3|28-67
98746|code|LDR.W           R10, [R7,#0x21C+var_1D4]|215-248-72-160
98750|code|ORRS.W          R8, R4, R8|84-234-8-8
98754|code|BNE             loc_181DE|12-209
98756|code|MOV             R1, R9; unsigned int|73-70
98758|code|MOV             R3, R8; unsigned int|67-70
98760|code|MOVS            R2, #1; int|1-34
98762|code|MOV             R4, R8|68-70
98764|code|BLX             XTestFakeKeyEvent|254-247-108-236
98768|code|MOV             R1, R9; unsigned int|73-70
98770|code|LDR             R0, [R6,#8]; Display *|176-104
98772|code|MOV             R2, R8; int|66-70
98774|code|MOV             R3, R8; unsigned int|67-70
98776|code|BLX             XTestFakeKeyEvent|254-247-102-236
98780|code|B               loc_17D0E|151-229
98782|code|MOV             R2, R8; unsigned int|66-70
98784|code|MOV             R3, R8; unsigned int|67-70
98786|code|MOV.W           R1, #0x100; unsigned int|79-244-128-113
98790|code|BLX             XkbLockModifiers|254-247-112-235
98794|code|MOVS            R3, #0; unsigned int|0-35
98796|code|MOV             R4, R3|28-70
98798|code|MOV             R1, R9; unsigned int|73-70
98800|code|LDR             R0, [R6,#8]; Display *|176-104
98802|code|MOVS            R2, #1; int|1-34
98804|code|BLX             XTestFakeKeyEvent|254-247-88-236
98808|code|MOV             R2, R4; int|34-70
98810|code|MOV             R1, R9; unsigned int|73-70
98812|code|MOV             R3, R4; unsigned int|35-70
98814|code|LDR             R0, [R6,#8]; Display *|176-104
98816|code|BLX             XTestFakeKeyEvent|254-247-82-236
98820|code|MOV             R2, R8; unsigned int|66-70
98822|code|LDR             R0, [R6,#8]; Display *|176-104
98824|code|MOV.W           R1, #0x100; unsigned int|79-244-128-113
98828|code|MOV             R3, R4; unsigned int|35-70
98830|code|BLX             XkbLockModifiers|254-247-92-235
98834|code|B               loc_17D0E|124-229
98836|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x17962|62-203-1-0
98840|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
98844|data|DCD unk_37B3C - 0x1796A|210-1-2-0
98848|data|DCD dword_34854 - 0x17984|208-206-1-0
98852|data|DCD sub_170FC+1 - 0x17994|105-247-255-255
98856|data|DCD aIncompatibleXk - 0x179E0; "Incompatible XKB library\n"|128-159-0-0
98860|data|DCD dword_34854 - 0x17A2C|40-206-1-0
98864|data|DCD dword_34854 - 0x17A86|206-205-1-0
98868|data|DCD unk_21618 - 0x17AB6|98-155-0-0
98872|data|DCD dword_34854 - 0x17AD8|124-205-1-0
98876|data|DCD aNetWmName - 0x17ADE; "_NET_WM_NAME"|210-158-0-0
98880|data|DCD unk_37B3C - 0x17AE4|88-0-2-0
98884|data|DCD aUtf8String - 0x17AF4; "UTF8_STRING"|204-158-0-0
98888|data|DCD aUtf8 - 0x17AF6; "UTF-8"|214-158-0-0
98892|data|DCD dword_34854 - 0x17B20|52-205-1-0
98896|data|DCD dword_34854 - 0x17B36|30-205-1-0
98900|data|DCD aCannotGrabWind - 0x17B64; "cannot grab windows on screen %d\n"|128-158-0-0
98904|data|DCD aIncompatibleXk_0 - 0x17B76; "Incompatible XKB server support\n"|6-158-0-0
98908|data|DCD aCannotConnectT_0 - 0x17B86; "cannot connect to display %s\n"|158-157-0-0
98912|data|DCD unk_37B3C - 0x17B90|172-255-1-0
98916|data|DCD aStrangeOldErro - 0x17BA0; "strange old error handler\n"|164-157-0-0
98920|data|DCD dword_34854 - 0x17BCE|134-204-1-0
98924|data|DCD dword_34854 - 0x17BD4|128-204-1-0
98928|data|DCD dword_34854 - 0x17BE6|110-204-1-0
98932|data|DCD aUnhandledEvent - 0x17BEC; "unhandled event type: %d\n"|148-158-0-0
98936|data|DCD dword_34854 - 0x17BFA|90-204-1-0
98940|data|DCD aDidnTGrabWindo_0 - 0x17C04; "didn't grab window %#010lx\n"|88-159-0-0
98944|data|DCD aWindow010lxCha - 0x17C0C; "window %#010lx changed to NULL name\n"|76-158-0-0
98948|data|DCD unk_37B3C - 0x17C14|40-255-1-0
98952|data|DCD unk_37B3C - 0x17C1C|32-255-1-0
98956|data|DCD dword_34854 - 0x17C24|48-204-1-0
98960|data|DCD aDidnTGrabParen - 0x17C2C; "didn't grab parent of %#010lx\n"|16-159-0-0
98964|data|DCD dword_34854 - 0x17C34|32-204-1-0
98968|data|DCD dword_34854 - 0x17C3C|24-204-1-0
98972|data|DCD unk_21618 - 0x17C44|212-153-0-0
98976|data|DCD dword_34854 - 0x17C4C|8-204-1-0
98980|data|DCD aCouldnTFindMod - 0x17C54; "Couldn't find modifiers to apply to %d "...|144-158-0-0
98984|data|DCD aCouldnTTransla - 0x17C5C; "Couldn't translate keysym %08X to keyco"...|92-158-0-0
98988|data|DCD aUnexpectedBloc - 0x17C64; "unexpected block type"|192-158-0-0
98992|data|DCD aSLlx - 0x17C6C; "%s: %llx\n"|64-158-0-0
98996|data|DCD aUnexpectedCmd - 0x17C74; "unexpected cmd"|40-158-0-0
99000|data|DCD aSLlx - 0x17C7C; "%s: %llx\n"|48-158-0-0
99004|data|DCD aDisplay - 0x17D7C; "DISPLAY"|160-155-0-0
99008|data|DCD aSTranslit - 0x17D9E; "%s//TRANSLIT"|54-156-0-0
99012|data|DCD utf8Conv - 0x17DA0|140-202-1-0
99016|data|DCD stderr_ptr - 0x344A0|60-3-0-0
99020|data|DCD aFailedToGetFir - 0x18000; "failed to get first focus\n"|8-154-0-0
99024|data|DCD aXnexteventD - 0x18036; "XNextEvent: %d\n"|246-153-0-0
99028|data|DCD aSelect_0 - 0x18048; "select"|220-153-0-0
99032|data|DCD aXfreeWmNameFor - 0x1806E; "XFree(wm_name) for change"|206-153-0-0
99036|data|DCD aIgnorekeyrange - 0x1807C; "ignoreKeyRanges"|36-153-0-0
99040|code|LDR             R3, [R0]|3-104
99042|code|CBZ             R3, locret_182F4|59-177
99044|code|PUSH            {R4,LR}|16-181
99046|code|MOV             R4, R0|4-70
99048|code|MOV             R0, R3|24-70
99050|code|BLX             free|254-247-204-233
99054|code|MOVS            R3, #0|0-35
99056|code|STR             R3, [R4]|35-96
99058|code|POP             {R4,PC}|16-189
99060|code|BX              LR|112-71
99062|data|ALIGN 4|0-191
99064|code|PUSH            {R3-R5,LR}|56-181
99066|code|BL              makePath|2-240-27-251
99070|code|MOV             R4, R0|4-70
99072|code|CBZ             R0, locret_1830E|40-177
99074|code|BL              testProgramPath|2-240-1-252
99078|code|MOV             R5, R0|5-70
99080|code|MOV             R0, R4; ptr|32-70
99082|code|CBZ             R5, loc_18310|13-177
99084|code|POP             {R3-R5,PC}|56-189
99086|code|POP             {R3-R5,PC}|56-189
99088|code|BLX             free|254-247-184-233
99092|code|MOV             R0, R5|40-70
99094|code|POP             {R3-R5,PC}|56-189
99096|code|PUSH.W          {R4-R8,LR}|45-233-240-65
99100|code|MOVS            R0, #7|7-32
99102|code|LDR             R5, =(dword_38884 - 0x18326)|23-77
99104|code|LDR             R1, =(aStoppingProgra - 0x18328); "stopping program components"|23-73
99106|code|ADD             R5, PC; dword_38884|125-68
99108|code|ADD             R1, PC; "stopping program components"|121-68
99110|code|BL              logMessage|1-240-255-255
99114|code|LDR             R4, [R5]|44-104
99116|code|CBZ             R4, loc_1836A|236-177
99118|code|LDR.W           R8, =(aUnknown - 0x1833A); "unknown"|223-248-84-128
99122|code|MOV             R6, R5|46-70
99124|code|LDR             R7, =(aStoppingProgra_0 - 0x1833C); "stopping program component: %s"|20-79
99126|code|ADD             R8, PC; "unknown"|248-68
99128|code|ADD             R7, PC; "stopping program component: %s"|127-68
99130|code|LDR             R2, [R4,#4]|98-104
99132|code|MOVS            R0, #7|7-32
99134|code|LDR             R3, [R4]|35-104
99136|code|MOV             R1, R7|57-70
99138|code|CMP             R2, #0|0-42
99140|code|IT EQ|8-191
99142|code|MOVEQ           R2, R8|66-70
99144|code|STR             R3, [R5]|43-96
99146|code|BL              logMessage|1-240-237-255
99150|code|LDR             R3, [R4,#8]|163-104
99152|code|LDR             R0, [R4,#0xC]|224-104
99154|code|BLX             R3|152-71
99156|code|LDR             R3, [R4,#4]|99-104
99158|code|MOV             R0, R3; ptr|24-70
99160|code|CBZ             R3, loc_1835E|11-177
99162|code|BLX             free|254-247-148-233
99166|code|MOV             R0, R4; ptr|32-70
99168|code|BLX             free|254-247-144-233
99172|code|LDR             R4, [R6]|52-104
99174|code|CMP             R4, #0|0-44
99176|code|BNE             loc_1833A|231-209
99178|code|LDR             R1, =(aStoppedProgram - 0x18372); "stopped program components"|8-73
99180|code|MOVS            R0, #7|7-32
99182|code|ADD             R1, PC; "stopped program components"|121-68
99184|code|BL              logMessage|1-240-218-255
99188|code|POP.W           {R4-R8,LR}|189-232-240-65
99192|code|B.W             popLogPrefix|1-240-26-190
99196|data|DCD dword_38884 - 0x18326|94-5-2-0
99200|data|DCD aStoppingProgra - 0x18328; "stopping program components"|236-153-0-0
99204|data|DCD aUnknown - 0x1833A; "unknown"|174-149-0-0
99208|data|DCD aStoppingProgra_0 - 0x1833C; "stopping program component: %s"|16-154-0-0
99212|data|DCD aStoppedProgram - 0x18372; "stopped program components"|190-153-0-0
99216|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1839A)|114-74
99218|code|PUSH.W          {R4-R9,LR}|45-233-240-67
99222|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
99224|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|113-76
99226|code|SUB             SP, SP, #0x3C|143-176
99228|code|MOV             R5, R0|5-70
99230|code|MOV             R6, R1|14-70
99232|code|LDR             R4, [R2,R4]; __stack_chk_guard|20-89
99234|code|LDR             R3, [R4]|35-104
99236|code|STR             R3, [SP,#0x58+var_24]|13-147
99238|code|CBZ             R1, loc_183C0|89-177
99240|code|CBZ             R5, loc_183F4|37-179
99242|code|LDRB            R2, [R5]|42-120
99244|code|CBNZ            R2, loc_183C8|98-185
99246|code|LDR             R1, [SP,#0x58+var_24]|13-153
99248|code|MOV             R0, R2|16-70
99250|code|LDR             R3, [R4]|35-104
99252|code|CMP             R1, R3|153-66
99254|code|BNE.W           loc_18558|64-240-207-128
99258|code|ADD             SP, SP, #0x3C ; '<'|15-176
99260|code|POP.W           {R4-R9,PC}|189-232-240-131
99264|code|BL              getProcessIdentifier|0-240-68-251
99268|code|MOV             R6, R0|6-70
99270|code|B               loc_183A8|239-231
99272|code|MOVS            R1, #0x42 ; 'B'; oflag|66-33
99274|code|MOV             R0, R5; file|40-70
99276|code|MOV.W           R2, #0x1A4|79-244-210-114
99280|code|BLX             open|254-247-0-235
99284|code|ADDS            R1, R0, #1|65-28
99286|code|MOV             R7, R0|7-70
99288|code|BEQ             loc_18484|84-208
99290|code|MOVS            R1, #1|1-33
99292|code|BL              acquireFileLock|2-240-234-253
99296|code|MOV             R8, R0|128-70
99298|code|CBNZ            R0, loc_183F8|72-185
99300|code|BLX             __errno_location|254-247-184-236
99304|code|LDR             R3, [R0]|3-104
99306|code|CMP             R3, #0x26 ; '&'|38-43
99308|code|BEQ             loc_183F8|4-208
99310|code|MOV             R0, R7; fd|56-70
99312|code|BLX             close|254-247-100-234
99316|code|MOVS            R2, #0|0-34
99318|code|B               loc_183AE|218-231
99320|code|ADD.W           R9, SP, #0x58+buf|13-241-20-9
99324|code|MOVS            R2, #0x20 ; ' '; nbytes|32-34
99326|code|MOV             R0, R7; fd|56-70
99328|code|MOV             R1, R9; buf|73-70
99330|code|BLX             read|254-247-118-234
99334|code|ADDS            R2, R0, #1|66-28
99336|code|MOV             R3, R0|3-70
99338|code|BEQ.W           loc_18532|0-240-146-128
99342|code|CMP             R0, #0x20 ; ' '|32-40
99344|code|ADD             R2, SP, #0x58+var_20|14-170
99346|code|LDR             R1, =(aDC - 0x18420); "%d%c"|84-73
99348|code|MOV             R0, R9; s|72-70
99350|code|IT EQ|8-191
99352|code|MOVEQ           R3, #0x1F|31-35
99354|code|ADDS            R5, R2, R3|213-24
99356|code|ADD             R1, PC; "%d%c"|121-68
99358|code|ADD             R2, SP, #0x58+var_48|4-170
99360|code|ADD.W           R3, SP, #0x58+var_49|13-241-15-3
99364|code|MOV.W           LR, #0|79-240-0-14
99368|code|STRB.W          LR, [R5,#-0x24]|5-248-36-236
99372|code|BLX             sscanf|254-247-168-236
99376|code|CMP             R0, #1|1-40
99378|code|BEQ             loc_184F6|96-208
99380|code|CMP             R0, #2|2-40
99382|code|BEQ             loc_184EA|88-208
99384|code|MOVS            R1, #0; offset|0-33
99386|code|MOV             R0, R7; fd|56-70
99388|code|MOV             R2, R1; whence|10-70
99390|code|BLX             lseek|254-247-100-235
99394|code|ADDS            R0, #1|1-48
99396|code|BEQ             loc_1853C|122-208
99398|code|MOV             R0, R7; fd|56-70
99400|code|MOVS            R1, #0; length|0-33
99402|code|BLX             ftruncate|254-247-202-232
99406|code|ADDS            R0, #1|1-48
99408|code|BEQ             loc_184AE|45-208
99410|code|LDR             R5, =(aXnexteventD+0xC - 0x1845E); "%d\n"|69-77
99412|code|MOVS            R1, #0x20 ; ' '|32-33
99414|code|MOV             R3, R1|11-70
99416|code|MOVS            R2, #1|1-34
99418|code|ADD             R5, PC; "%d\n"|125-68
99420|code|STR             R6, [SP,#0x58+var_54]|1-150
99422|code|MOV             R0, R9|72-70
99424|code|STR             R5, [SP,#0x58+var_58]|0-149
99426|code|BLX             __snprintf_chk|254-247-228-235
99430|code|MOV             R1, R9; buf|73-70
99432|code|MOV             R2, R0; n|2-70
99434|code|MOV             R0, R7; fd|56-70
99436|code|BLX             write|254-247-18-236
99440|code|ADDS            R0, #1|1-48
99442|code|BEQ             loc_1854E|108-208
99444|code|CMP.W           R8, #0|184-241-0-15
99448|code|BNE             loc_18546|101-209
99450|code|MOV             R0, R7; fd|56-70
99452|code|BLX             close|254-247-30-234
99456|code|MOVS            R2, #1|1-34
99458|code|B               loc_183AE|148-231
99460|code|LDR             R1, =(aCannotOpenProc - 0x1848E); "cannot open process identifier file"|57-73
99462|code|MOVS            R2, #5; category|5-34
99464|code|MOVS            R0, #0; domainname|0-32
99466|code|ADD             R1, PC; "cannot open process identifier file"|121-68
99468|code|BLX             dcgettext|254-247-242-234
99472|code|MOV             R6, R0|6-70
99474|code|BLX             __errno_location|254-247-98-236
99478|code|LDR             R0, [R0]; errnum|0-104
99480|code|BLX             strerror|254-247-80-233
99484|code|LDR             R1, =(aSSS - 0x184A6); "%s: %s: %s"|52-73
99486|code|MOV             R2, R6|50-70
99488|code|MOV             R3, R5|43-70
99490|code|ADD             R1, PC; "%s: %s: %s"|121-68
99492|code|STR             R0, [SP,#0x58+var_58]|0-144
99494|code|MOVS            R0, #4|4-32
99496|code|BL              logMessage|1-240-62-255
99500|code|B               loc_183F4|162-231
99502|code|LDR             R0, =(aFtruncate_0 - 0x184B4); "ftruncate"|49-72
99504|code|ADD             R0, PC; "ftruncate"|120-68
99506|code|BL              logSystemError|1-240-187-255
99510|code|CMP.W           R8, #0|184-241-0-15
99514|code|BEQ             loc_183EE|152-208
99516|code|MOVS            R5, #3|3-37
99518|code|MOV             R0, R7|56-70
99520|code|BL              releaseFileLock|2-240-136-253
99524|code|MOV             R0, R7; fd|56-70
99526|code|BLX             close|254-247-250-233
99530|code|CMP             R5, #2|2-45
99532|code|BEQ             loc_1851C|38-208
99534|code|CMP             R5, #3|3-45
99536|code|BEQ             loc_183F4|144-208
99538|code|MOVS            R2, #1|1-34
99540|code|CMP             R5, #0|0-45
99542|code|BEQ.W           loc_183AE|63-244-106-175
99546|code|LDR             R1, =(aUnexpectedPidF - 0x184E4); "unexpected PID file state: %u"|39-73
99548|code|MOV             R2, R5|42-70
99550|code|MOVS            R0, #4|4-32
99552|code|ADD             R1, PC; "unexpected PID file state: %u"|121-68
99554|code|BL              logMessage|1-240-33-255
99558|code|MOVS            R2, #0|0-34
99560|code|B               loc_183AE|97-231
99562|code|LDRB.W          R3, [SP,#0x58+var_49]|157-248-15-48
99566|code|CMP             R3, #0xA|10-43
99568|code|IT NE|24-191
99570|code|CMPNE           R3, #0xD|13-43
99572|code|BNE             loc_18438|160-209
99574|code|LDR             R0, [SP,#0x58+var_48]|4-152
99576|code|CMP             R0, R6|176-66
99578|code|BEQ             loc_18528|21-208
99580|code|BL              testProcessIdentifier|0-240-168-250
99584|code|CMP             R0, #0|0-40
99586|code|BEQ             loc_18438|153-208
99588|code|LDR             R1, =(aInstanceAlread - 0x1850E); "instance already running: PID=%d"|29-73
99590|code|MOVS            R0, #3|3-32
99592|code|LDR             R2, [SP,#0x58+var_48]|4-154
99594|code|ADD             R1, PC; "instance already running: PID=%d"|121-68
99596|code|BL              logMessage|1-240-12-255
99600|code|CMP.W           R8, #0|184-241-0-15
99604|code|BNE             loc_1854A|25-209
99606|code|MOV             R0, R7; fd|56-70
99608|code|BLX             close|254-247-208-233
99612|code|BLX             __errno_location|254-247-28-236
99616|code|MOVS            R3, #0x11|17-35
99618|code|MOVS            R2, #0|0-34
99620|code|STR             R3, [R0]|3-96
99622|code|B               loc_183AE|66-231
99624|code|MOVS            R5, #0|0-37
99626|code|CMP.W           R8, #0|184-241-0-15
99630|code|BEQ             loc_1847A|164-208
99632|code|B               loc_184BE|197-231
99634|code|LDR             R0, =(aRead - 0x18538); "read"|19-72
99636|code|ADD             R0, PC; "read"|120-68
99638|code|BL              logSystemError|1-240-121-255
99642|code|B               loc_184B6|188-231
99644|code|LDR             R0, =(aLseek_0 - 0x18542); "lseek"|17-72
99646|code|ADD             R0, PC; "lseek"|120-68
99648|code|BL              logSystemError|1-240-116-255
99652|code|B               loc_184B6|183-231
99654|code|MOVS            R5, #0|0-37
99656|code|B               loc_184BE|185-231
99658|code|MOVS            R5, #2|2-37
99660|code|B               loc_184BE|183-231
99662|code|LDR             R0, =(aWrite - 0x18554); "write"|14-72
99664|code|ADD             R0, PC; "write"|120-68
99666|code|BL              logSystemError|1-240-107-255
99670|code|B               loc_184B6|174-231
99672|code|BLX             __stack_chk_fail|254-247-110-234
99676|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1839A|6-193-1-0
99680|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
99684|data|DCD aDC - 0x18420; "%d%c"|76-153-0-0
99688|data|DCD aXnexteventD+0xC - 0x1845E; "%d\n"|218-149-0-0
99692|data|DCD aCannotOpenProc - 0x1848E; "cannot open process identifier file"|38-153-0-0
99696|data|DCD aSSS - 0x184A6; "%s: %s: %s"|50-153-0-0
99700|data|DCD aFtruncate_0 - 0x184B4; "ftruncate"|236-152-0-0
99704|data|DCD aUnexpectedPidF - 0x184E4; "unexpected PID file state: %u"|0-153-0-0
99708|data|DCD aInstanceAlread - 0x1850E; "instance already running: PID=%d"|102-152-0-0
99712|data|DCD aRead - 0x18538; "read"|96-152-0-0
99716|data|DCD aLseek_0 - 0x18542; "lseek"|106-152-0-0
99720|data|DCD aWrite - 0x18554; "write"|156-161-0-0
99724|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x18596)|40-74
99726|code|PUSH.W          {R4-R8,LR}|45-233-240-65
99730|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
99732|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|39-76
99734|code|SUB             SP, SP, #0x110|196-176
99736|code|LDR             R1, =(aInvalidUnicode+0x18 - 0x185A2); "r"|39-73
99738|code|MOV             R7, R0|7-70
99740|code|LDR             R5, [R2,R4]; __stack_chk_guard|21-89
99742|code|ADD             R1, PC; "r" ; modes|121-68
99744|code|LDR             R3, [R5]|43-104
99746|code|STR             R3, [SP,#0x128+var_1C]|67-147
99748|code|BLX             fopen|254-247-156-233
99752|code|MOV             R6, R0|6-70
99754|code|CBZ             R0, loc_18602|80-179
99756|code|ADD             R0, SP, #0x128+s; s|3-168
99758|code|MOV.W           R1, #0x100; n|79-244-128-113
99762|code|MOV             R2, R6; stream|50-70
99764|code|BLX             fgets|254-247-246-234
99768|code|MOV             R4, R0|4-70
99770|code|CBZ             R0, loc_185EC|184-177
99772|code|ADD             R4, SP, #0x128+endptr|2-172
99774|code|MOVS            R2, #0xA; base|10-34
99776|code|MOV             R1, R4; endptr|33-70
99778|code|BLX             strtol|254-247-88-232
99782|code|LDR             R3, [R4]|35-104
99784|code|LDRB            R4, [R3]|28-120
99786|code|MOV             R7, R0|7-70
99788|code|CBZ             R4, loc_185E0|68-177
99790|code|BLX             __ctype_b_loc|254-247-168-234
99794|code|LDR             R3, [R0]|3-104
99796|code|LDRH.W          R4, [R3,R4,LSL#1]|51-248-20-64
99800|code|AND.W           R4, R4, #0x2000|4-244-0-84
99804|code|UXTH            R4, R4|164-178
99806|code|CBZ             R4, loc_185EC|44-177
99808|code|MOV             R0, R7|56-70
99810|code|BL              cancelProcess|0-240-61-250
99814|code|MOVS            R4, R0|4-28
99816|code|IT NE|24-191
99818|code|MOVNE           R4, #1|1-36
99820|code|MOV             R0, R6; stream|48-70
99822|code|BLX             fclose|254-247-68-235
99826|code|LDR             R2, [SP,#0x128+var_1C]|67-154
99828|code|MOV             R0, R4|32-70
99830|code|LDR             R3, [R5]|43-104
99832|code|CMP             R2, R3|154-66
99834|code|BNE             loc_1862C|23-209
99836|code|ADD             SP, SP, #0x110|68-176
99838|code|POP.W           {R4-R8,PC}|189-232-240-129
99842|code|LDR             R1, =(aPidFileOpenErr - 0x1860C); "pid file open error"|14-73
99844|code|MOVS            R2, #5; category|5-34
99846|code|MOV             R4, R6|52-70
99848|code|ADD             R1, PC; "pid file open error"|121-68
99850|code|BLX             dcgettext|254-247-52-234
99854|code|MOV             R8, R0|128-70
99856|code|BLX             __errno_location|254-247-162-235
99860|code|LDR             R0, [R0]; errnum|0-104
99862|code|BLX             strerror|254-247-146-232
99866|code|LDR             R1, =(aSSS - 0x18624); "%s: %s: %s"|9-73
99868|code|MOV             R2, R8|66-70
99870|code|MOV             R3, R7|59-70
99872|code|ADD             R1, PC; "%s: %s: %s"|121-68
99874|code|STR             R0, [SP,#0x128+var_128]|0-144
99876|code|MOVS            R0, #3|3-32
99878|code|BL              logMessage|1-240-127-254
99882|code|B               loc_185F2|226-231
99884|code|BLX             __stack_chk_fail|254-247-4-234
99888|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x18596|10-191-1-0
99892|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
99896|data|DCD aInvalidUnicode+0x18 - 0x185A2; "r"|190-181-0-0
99900|data|DCD aPidFileOpenErr - 0x1860C; "pid file open error"|248-151-0-0
99904|data|DCD aSSS - 0x18624; "%s: %s: %s"|180-151-0-0
99908|code|PUSH            {R3-R7,LR}|248-181
99910|code|MOV             R5, R0|5-70
99912|code|MOVS            R0, #0x10; size|16-32
99914|code|MOV             R7, R1|15-70
99916|code|MOV             R6, R2|22-70
99918|code|BLX             malloc|254-247-224-234
99922|code|MOV             R4, R0|4-70
99924|code|CBZ             R0, loc_1867C|144-177
99926|code|MOV             R0, R5|40-70
99928|code|BLX             __strdup|254-247-36-233
99932|code|LDR             R3, =(dword_38884 - 0x18666)|9-75
99934|code|MOV             R2, R5|42-70
99936|code|LDR             R1, =(aProgramExitEve - 0x1866C); "program exit event added: %s"|9-73
99938|code|ADD             R3, PC; dword_38884|123-68
99940|code|STR             R7, [R4,#8]|167-96
99942|code|STR             R6, [R4,#0xC]|230-96
99944|code|ADD             R1, PC; "program exit event added: %s"|121-68
99946|code|LDR             R5, [R3]|29-104
99948|code|STR             R4, [R3]|28-96
99950|code|STR             R5, [R4]|37-96
99952|code|STR             R0, [R4,#4]|96-96
99954|code|MOVS            R0, #7|7-32
99956|code|POP.W           {R3-R7,LR}|189-232-248-64
99960|code|B.W             logMessage|1-240-86-190
99964|code|POP.W           {R3-R7,LR}|189-232-248-64
99968|code|B.W             logMallocError|1-240-222-190
99972|data|DCD dword_38884 - 0x18666|30-2-2-0
99976|data|DCD aProgramExitEve - 0x1866C; "program exit event added: %s"|172-151-0-0
99980|code|MOV             R2, R1|10-70
99982|code|LDR             R1, =(loc_182E0+1 - 0x18694)|2-73
99984|code|ADD             R1, PC; loc_182E0|121-68
99986|code|B.W             onProgramExit|255-247-215-191
99990|data|ALIGN 4|0-191
99992|data|DCD loc_182E0+1 - 0x18694|77-252-255-255
99996|code|PUSH.W          {R4-R11,LR}|45-233-240-79
100000|code|SUB.W           SP, SP, #0x1000|173-245-128-93
100004|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x186B0)|95-77
100006|code|SUB             SP, SP, #0x14|133-176
100008|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|95-74
100010|code|MOV             R7, R1|15-70
100012|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
100014|code|LDR             R3, =(endProgram_ptr - 0x344A0)|95-75
100016|code|ADD.W           R1, SP, #0x1038+var_38|13-245-128-81
100020|code|LDR             R4, =(aBrltty - 0x186BE); "brltty"|94-76
100022|code|LDR             R6, [R5,R2]; __stack_chk_guard|174-88
100024|code|ADDS            R1, #0xC|12-49
100026|code|ADD             R4, PC; "brltty"|124-68
100028|code|LDR             R2, [R6]|50-104
100030|code|STR             R2, [R1]|10-96
100032|code|LDR             R0, [R5,R3]; endProgram|232-88
100034|code|BL              sub_215E8|8-240-145-255
100038|code|BL              initializeSystemObject|6-240-217-251
100042|code|LDR             R1, =(aWindow010lxCha+0x24 - 0x186D2); ""|90-73
100044|code|MOVS            R0, #6; category|6-32
100046|code|ADD             R1, PC; "" ; locale|121-68
100048|code|BLX             setlocale|254-247-80-234
100052|code|LDR             R1, =(aUsrShareLocale - 0x186DC); "/usr/share/locale"|88-73
100054|code|MOV             R0, R4; domainname|32-70
100056|code|ADD             R1, PC; "/usr/share/locale"|121-68
100058|code|BLX             bindtextdomain|254-247-46-234
100062|code|MOV             R0, R4; domainname|32-70
100064|code|BLX             textdomain|254-247-124-232
100068|code|BL              getProgramPath|0-240-94-249
100072|code|LDR             R3, =(programPath_ptr - 0x344A0)|84-75
100074|code|LDR             R4, [R5,R3]; programPath|236-88
100076|code|STR             R0, [R4]|32-96
100078|code|CMP             R0, #0|0-40
100080|code|BEQ             loc_18768|58-208
100082|code|LDR             R0, =(aProgramPath - 0x186FA); "program-path"|83-72
100084|code|MOV             R1, R4|33-70
100086|code|ADD             R0, PC; "program-path"|120-68
100088|code|BL              registerProgramMemory|255-247-200-255
100092|code|LDR             R0, [R4]|32-104
100094|code|BL              isExplicitPath|2-240-211-248
100098|code|MOV             R11, R0|131-70
100100|code|CMP             R0, #0|0-40
100102|code|BEQ             loc_18778|55-208
100104|code|LDR             R0, [R4]|32-104
100106|code|BL              isExplicitPath|2-240-205-248
100110|code|CBNZ            R0, loc_18738|152-185
100112|code|LDR             R0, [R4]|32-104
100114|code|BL              locatePathName|2-240-173-248
100118|code|LDR             R3, =(programName_ptr - 0x344A0)|75-75
100120|code|LDR             R3, [R5,R3]; programName|235-88
100122|code|STR             R0, [R3]|24-96
100124|code|BL              pushLogPrefix|1-240-34-252
100128|code|ADD.W           R3, SP, #0x1038+var_38|13-245-128-83
100132|code|ADDS            R3, #0xC|12-51
100134|code|LDR             R2, [R3]|26-104
100136|code|LDR             R3, [R6]|51-104
100138|code|CMP             R2, R3|154-66
100140|code|BNE             loc_18820|120-209
100142|code|ADD.W           SP, SP, #0x1000|13-245-128-93
100146|code|ADD             SP, SP, #0x14|5-176
100148|code|POP.W           {R4-R11,PC}|189-232-240-143
100152|code|LDR             R0, [R4]|32-104
100154|code|BL              isAbsolutePath|2-240-65-248
100158|code|CMP             R0, #0|0-40
100160|code|BEQ             loc_187F6|89-208
100162|code|LDR             R0, [R4]|32-104
100164|code|BL              isAbsolutePath|2-240-60-248
100168|code|CMP             R0, #0|0-40
100170|code|BNE             loc_18710|225-209
100172|code|BL              getWorkingDirectory|2-240-162-250
100176|code|MOV             R7, R0|7-70
100178|code|CMP             R0, #0|0-40
100180|code|BEQ             loc_18710|220-208
100182|code|LDR             R1, [R4]|33-104
100184|code|BL              makePath|2-240-236-248
100188|code|CBZ             R0, loc_18760|0-177
100190|code|STR             R0, [R4]|32-96
100192|code|MOV             R0, R7; ptr|56-70
100194|code|BLX             free|253-247-144-239
100198|code|B               loc_18710|211-231
100200|code|LDR             R3, [R7]|59-104
100202|code|MOV             R0, R3|24-70
100204|code|STR             R3, [R4]|35-96
100206|code|BL              isExplicitPath|2-240-155-248
100210|code|MOV             R11, R0|131-70
100212|code|CMP             R0, #0|0-40
100214|code|BNE             loc_18708|199-209
100216|code|LDR             R0, =(aPath - 0x18782); "PATH"|51-72
100218|code|LDR.W           R8, [R4]|212-248-0-128
100222|code|ADD             R0, PC; "PATH"|120-68
100224|code|BLX             getenv|254-247-68-235
100228|code|CBZ             R0, loc_187E4|112-179
100230|code|ADD             R7, SP, #0x1038+var_1030|2-175
100232|code|MOVS            R1, #0x3A ; ':'; c|58-33
100234|code|ADD.W           R9, SP, #0x1038+var_1028|13-241-16-9
100238|code|MOV             R2, R7|58-70
100240|code|BL              splitString|3-240-94-248
100244|code|STR             R0, [SP,#0x1038+ptr]|0-144
100246|code|CBZ             R0, loc_187E4|40-179
100248|code|LDR.W           R3, [R9,#-8]|89-248-8-60
100252|code|CMP             R3, #0|0-43
100254|code|BLE             loc_187DE|30-221
100256|code|LDR.W           R9, =(asc_21E38 - 0x187AA); "."|223-248-168-144
100260|code|LDR             R3, [SP,#0x1038+ptr]|0-155
100262|code|ADD             R9, PC; "."|249-68
100264|code|SUB.W           R10, R3, #4|163-241-4-10
100268|code|B               loc_187B8|4-224
100270|code|LDR             R3, [R7]|59-104
100272|code|ADD.W           R11, R11, #1|11-241-1-11
100276|code|CMP             R11, R3|155-69
100278|code|BGE             loc_187DE|18-218
100280|code|LDR.W           R0, [R10,#4]!|90-248-4-15
100284|code|MOV             R1, R8|65-70
100286|code|LDRB            R3, [R0]|3-120
100288|code|CMP             R3, #0|0-43
100290|code|IT EQ|8-191
100292|code|MOVEQ           R0, R9|72-70
100294|code|BL              sub_182F8|255-247-151-253
100298|code|CMP             R0, #0|0-40
100300|code|BEQ             loc_187AE|239-208
100302|code|STR             R0, [SP,#0x1038+var_1034]|1-144
100304|code|LDR             R0, [SP,#0x1038+ptr]; ptr|0-152
100306|code|BL              deallocateStrings|3-240-45-248
100310|code|LDR             R3, [SP,#0x1038+var_1034]|1-155
100312|code|MOV             R0, R3|24-70
100314|code|STR             R3, [R4]|35-96
100316|code|B               loc_1870A|149-231
100318|code|LDR             R0, [SP,#0x1038+ptr]; ptr|0-152
100320|code|BL              deallocateStrings|3-240-38-248
100324|code|LDR             R0, =(asc_21E38 - 0x187EC); "."|26-72
100326|code|LDR             R1, [R4]|33-104
100328|code|ADD             R0, PC; "."|120-68
100330|code|BL              sub_182F8|255-247-133-253
100334|code|MOV             R3, R0|3-70
100336|code|CMP             R0, #0|0-40
100338|code|BEQ             loc_18708|137-208
100340|code|B               loc_187D8|240-231
100342|code|LDR             R0, [R4]|32-104
100344|code|ADD             R1, SP, #0x1038+var_102C|3-169
100346|code|MOV.W           R2, #0x1000|79-244-128-82
100350|code|BLX             __realpath_chk|254-247-118-234
100354|code|CBZ             R0, loc_1880E|32-177
100356|code|BLX             __strdup|254-247-78-232
100360|code|CBZ             R0, loc_18818|48-177
100362|code|STR             R0, [R4]|32-96
100364|code|B               loc_18744|154-231
100366|code|LDR             R0, =(aRealpath - 0x18814); "realpath"|17-72
100368|code|ADD             R0, PC; "realpath"|120-68
100370|code|BL              logSystemError|1-240-11-254
100374|code|B               loc_18742|148-231
100376|code|BL              logMallocError|1-240-18-254
100380|code|LDR             R0, [R4]|32-104
100382|code|B               loc_18744|145-231
100384|code|BLX             __stack_chk_fail|254-247-10-233
100388|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x186B0|240-189-1-0
100392|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
100396|data|DCD endProgram_ptr - 0x344A0|72-3-0-0
100400|data|DCD aBrltty - 0x186BE; "brltty"|126-151-0-0
100404|data|DCD aWindow010lxCha+0x24 - 0x186D2; ""|170-147-0-0
100408|data|DCD aUsrShareLocale - 0x186DC; "/usr/share/locale"|104-151-0-0
100412|data|DCD programPath_ptr - 0x344A0|100-3-0-0
100416|data|DCD aProgramPath - 0x186FA; "program-path"|94-151-0-0
100420|data|DCD programName_ptr - 0x344A0|80-3-0-0
100424|data|DCD aPath - 0x18782; "PATH"|230-150-0-0
100428|data|DCD asc_21E38 - 0x187AA; "."|142-150-0-0
100432|data|DCD asc_21E38 - 0x187EC; "."|76-150-0-0
100436|data|DCD aRealpath - 0x18814; "realpath"|92-150-0-0
100440|code|PUSH.W          {R3-R11,LR}|45-233-248-79
100444|code|MOV             R4, R0|4-70
100446|code|LDR             R5, =(dword_38884 - 0x18866)|56-77
100448|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x18868)|56-75
100450|code|ADD             R5, PC; dword_38884|125-68
100452|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
100454|code|LDR             R2, [R5,#(dword_38888 - 0x38884)]|106-104
100456|code|CMP             R2, #0|0-42
100458|code|BEQ             loc_188FC|71-208
100460|code|LDR             R3, [R4]|35-104
100462|code|CMP             R3, #0|0-43
100464|code|BEQ             locret_188DE|53-208
100466|code|LDR             R5, =(dword_38884 - 0x1887E)|53-77
100468|code|LDR             R6, =(aSS - 0x18882); "%s: %s"|53-78
100470|code|LDR.W           R8, =(aCannotFixInsta - 0x18888); "cannot fix install path"|223-248-216-128
100474|code|ADD             R5, PC; dword_38884|125-68
100476|code|LDR             R7, =(aCannotFixInsta - 0x1888A); "cannot fix install path"|53-79
100478|code|ADD             R6, PC; "%s: %s"|126-68
100480|code|LDR.W           R9, =(aInstallPathNot - 0x1888C); "install path not absolute"|223-248-212-144
100484|code|ADD             R8, PC; "cannot fix install path"|248-68
100486|code|ADD             R7, PC; "cannot fix install path"|127-68
100488|code|ADD             R9, PC; "install path not absolute"|249-68
100490|code|B               loc_18892|2-224
100492|code|LDR.W           R3, [R4,#4]!|84-248-4-63
100496|code|CBZ             R3, locret_188DA|27-179
100498|code|LDR             R1, [R3]|25-104
100500|code|CMP             R1, #0|0-41
100502|code|BEQ             loc_1888C|249-208
100504|code|LDRB            R3, [R1]|11-120
100506|code|CMP             R3, #0|0-43
100508|code|BEQ             loc_1888C|246-208
100510|code|LDR             R0, [R5,#(dword_38888 - 0x38884)]|104-104
100512|code|BL              makePath|2-240-72-248
100516|code|MOV             R10, R0|130-70
100518|code|CBZ             R0, loc_188E2|224-177
100520|code|LDR             R0, [R4]|32-104
100522|code|MOV             R1, R10|81-70
100524|code|BL              changeStringSetting|2-240-76-255
100528|code|MOV             R11, R7|187-70
100530|code|CBNZ            R0, loc_188E6|192-185
100532|code|MOV             R0, R10; ptr|80-70
100534|code|BLX             free|253-247-230-238
100538|code|MOV             R1, R11; msgid|89-70
100540|code|MOVS            R2, #5; category|5-34
100542|code|MOVS            R0, #0; domainname|0-32
100544|code|BLX             dcgettext|254-247-216-232
100548|code|LDR             R3, [R4]|35-104
100550|code|MOV             R1, R6|49-70
100552|code|LDR             R3, [R3]|27-104
100554|code|MOV             R2, R0|2-70
100556|code|MOVS            R0, #4|4-32
100558|code|BL              logMessage|1-240-43-253
100562|code|LDR.W           R3, [R4,#4]!|84-248-4-63
100566|code|CMP             R3, #0|0-43
100568|code|BNE             loc_18892|219-209
100570|code|POP.W           {R3-R11,PC}|189-232-248-143
100574|code|POP.W           {R3-R11,PC}|189-232-248-143
100578|code|MOV             R11, R8|195-70
100580|code|B               loc_188BA|233-231
100582|code|LDR             R3, [R4]|35-104
100584|code|MOV             R11, R9|203-70
100586|code|LDR             R0, [R3]|24-104
100588|code|BL              isAbsolutePath|1-240-104-255
100592|code|CMP             R0, #0|0-40
100594|code|BEQ             loc_188B4|223-208
100596|code|MOV             R0, R10; ptr|80-70
100598|code|BLX             free|253-247-198-238
100602|code|B               loc_1888C|199-231
100604|code|LDR             R2, =(programPath_ptr - 0x344A0)|23-74
100606|code|LDR             R3, [R3,R2]; programPath|155-88
100608|code|LDR             R0, [R3]|24-104
100610|code|BL              getPathDirectory|1-240-101-255
100614|code|STR             R0, [R5,#(dword_38888 - 0x38884)]|104-96
100616|code|CBZ             R0, loc_18922|88-177
100618|code|LDR             R0, =(aProgramDirecto - 0x18912); "program-directory"|21-72
100620|code|ADDS            R1, R5, #4|41-29
100622|code|ADD             R0, PC; "program-directory"|120-68
100624|code|BL              registerProgramMemory|255-247-188-254
100628|code|LDR             R2, [R5,#(dword_38888 - 0x38884)]|106-104
100630|code|LDR             R1, =(aProgramDirecto_0 - 0x1891E); "program directory: %s"|19-73
100632|code|MOVS            R0, #7|7-32
100634|code|ADD             R1, PC; "program directory: %s"|121-68
100636|code|BL              logMessage|1-240-4-253
100640|code|B               loc_1886C|164-231
100642|code|LDR             R1, =(aCannotDetermin - 0x1892A); "cannot determine program directory"|17-73
100644|code|MOVS            R2, #5; category|5-34
100646|code|ADD             R1, PC; "cannot determine program directory"|121-68
100648|code|BLX             dcgettext|254-247-164-232
100652|code|MOV             R1, R0|1-70
100654|code|MOVS            R0, #4|4-32
100656|code|BL              logMessage|1-240-250-252
100660|code|LDR             R3, =(asc_21E38 - 0x1893A); "."|13-75
100662|code|ADD             R3, PC; "."|123-68
100664|code|STR             R3, [R5,#(dword_38888 - 0x38884)]|107-96
100666|code|MOV             R2, R3|26-70
100668|code|B               loc_18916|235-231
100670|data|ALIGN 0x10|0-191
100672|data|DCD dword_38884 - 0x18866|30-0-2-0
100676|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x18868|56-188-1-0
100680|data|DCD dword_38884 - 0x1887E|6-0-2-0
100684|data|DCD aSS - 0x18882; "%s: %s"|58-163-0-0
100688|data|DCD aCannotFixInsta - 0x18888; "cannot fix install path"|244-149-0-0
100692|data|DCD aCannotFixInsta - 0x1888A; "cannot fix install path"|242-149-0-0
100696|data|DCD aInstallPathNot - 0x1888C; "install path not absolute"|8-150-0-0
100700|data|DCD programPath_ptr - 0x344A0|100-3-0-0
100704|data|DCD aProgramDirecto - 0x18912; "program-directory"|158-149-0-0
100708|data|DCD aProgramDirecto_0 - 0x1891E; "program directory: %s"|202-149-0-0
100712|data|DCD aCannotDetermin - 0x1892A; "cannot determine program directory"|154-149-0-0
100716|data|DCD asc_21E38 - 0x1893A; "."|254-148-0-0
100720|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1897A)|10-75
100722|code|MOVS            R1, #0|0-33
100724|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|10-74
100726|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
100728|code|PUSH            {R4,LR}|16-181
100730|code|SUB             SP, SP, #0x10|132-176
100732|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
100734|code|STR             R0, [SP,#0x18+var_14]|1-144
100736|code|ADD             R0, SP, #0x18+var_14|1-168
100738|code|STR             R1, [SP,#0x18+var_10]|2-145
100740|code|LDR             R3, [R4]|35-104
100742|code|STR             R3, [SP,#0x18+var_C]|3-147
100744|code|BL              fixInstallPaths|255-247-102-255
100748|code|LDR             R2, [SP,#0x18+var_C]|3-154
100750|code|LDR             R3, [R4]|35-104
100752|code|CMP             R2, R3|154-66
100754|code|BNE             loc_18998|1-209
100756|code|ADD             SP, SP, #0x10|4-176
100758|code|POP             {R4,PC}|16-189
100760|code|BLX             __stack_chk_fail|254-247-78-232
100764|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1897A|38-187-1-0
100768|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
100772|code|PUSH            {R3-R7,LR}|248-181
100774|code|MOVS            R6, #0|0-38
100776|code|LDR             R7, =(aProcSelfExe - 0x189B0); "/proc/self/exe"|28-79
100778|code|MOVS            R4, #0x80|128-36
100780|code|ADD             R7, PC; "/proc/self/exe"|127-68
100782|code|B               loc_189C2|8-224
100784|code|MOV             R0, R7; path|56-70
100786|code|MOV             R6, R5|46-70
100788|code|BLX             readlink|253-247-24-239
100792|code|ADDS            R2, R0, #1|66-28
100794|code|MOV             R3, R0|3-70
100796|code|BEQ             loc_189E0|16-208
100798|code|CMP             R4, R0|132-66
100800|code|BHI             loc_18A04|32-216
100802|code|LSLS            R4, R4, #1|100-0
100804|code|MOV             R0, R6; ptr|48-70
100806|code|MOV             R1, R4; size|33-70
100808|code|BLX             realloc|253-247-242-239
100812|code|MOV             R2, R4; len|34-70
100814|code|MOV             R5, R0|5-70
100816|code|MOV             R1, R0; buf|1-70
100818|code|CMP             R0, #0|0-40
100820|code|BNE             loc_189B0|236-209
100822|code|BL              logMallocError|1-240-51-253
100826|code|CBNZ            R6, loc_189F6|102-185
100828|code|MOV             R0, R6|48-70
100830|code|POP             {R3-R7,PC}|248-189
100832|code|BLX             __errno_location|254-247-186-233
100836|code|LDR             R3, [R0]|3-104
100838|code|CMP             R3, #2|2-43
100840|code|BEQ             loc_189F8|6-208
100842|code|LDR             R0, =(aReadlink_0 - 0x189F2); "readlink"|13-72
100844|code|MOVS            R6, #0|0-38
100846|code|ADD             R0, PC; "readlink"|120-68
100848|code|BL              logSystemError|1-240-28-253
100852|code|B               loc_189FA|1-224
100854|code|MOV             R5, R6|53-70
100856|code|MOVS            R6, #0|0-38
100858|code|MOV             R0, R5; ptr|40-70
100860|code|BLX             free|253-247-66-238
100864|code|MOV             R0, R6|48-70
100866|code|POP             {R3-R7,PC}|248-189
100868|code|MOVS            R2, #0|0-34
100870|code|MOV             R0, R5|40-70
100872|code|STRB            R2, [R5,R3]|234-84
100874|code|BLX             __strdup|253-247-76-239
100878|code|MOV             R6, R0|6-70
100880|code|CMP             R0, #0|0-40
100882|code|BNE             loc_189FA|242-209
100884|code|BL              logMallocError|1-240-20-253
100888|code|B               loc_189FA|239-231
100890|data|ALIGN 4|0-191
100892|data|DCD aProcSelfExe - 0x189B0; "/proc/self/exe"|80-149-0-0
100896|data|DCD aReadlink_0 - 0x189F2; "readlink"|30-149-0-0
100900|code|LDR             R0, =(aServiceInstall - 0x18A2C); "service installation"|3-72
100902|code|PUSH            {R3,LR}|8-181
100904|code|ADD             R0, PC; "service installation"|120-68
100906|code|BL              logUnsupportedFeature|1-240-15-253
100910|code|MOVS            R0, #0|0-32
100912|code|POP             {R3,PC}|8-189
100914|data|ALIGN 4|0-191
100916|data|DCD aServiceInstall - 0x18A2C; "service installation"|240-148-0-0
100920|code|LDR             R0, =(aServiceRemoval - 0x18A40); "service removal"|3-72
100922|code|PUSH            {R3,LR}|8-181
100924|code|ADD             R0, PC; "service removal"|120-68
100926|code|BL              logUnsupportedFeature|1-240-5-253
100930|code|MOVS            R0, #0|0-32
100932|code|POP             {R3,PC}|8-189
100934|data|ALIGN 4|0-191
100936|data|DCD aServiceRemoval - 0x18A40; "service removal"|244-148-0-0
100940|code|B.W             j_getpid|253-247-212-189
100944|code|PUSH            {R3,LR}|8-181
100946|code|MOVS            R1, #0; sig|0-33
100948|code|BLX             kill|253-247-154-239
100952|code|ADDS            R0, #1|1-48
100954|code|IT NE|24-191
100956|code|MOVNE           R0, #1|1-32
100958|code|POP             {R3,PC}|8-189
100960|code|PUSH            {R3,LR}|8-181
100962|code|MOVS            R1, #0xF; sig|15-33
100964|code|BLX             kill|253-247-146-239
100968|code|ADDS            R0, #1|1-48
100970|code|IT NE|24-191
100972|code|MOVNE           R0, #1|1-32
100974|code|POP             {R3,PC}|8-189
100976|code|MOV             R3, R1|11-70
100978|code|LDR             R2, =(aConfigurationF - 0x18A7A); "configuration file directive"|3-74
100980|code|LDR             R1, =(off_34288 - 0x18A7C); "i"|3-73
100982|code|ADD             R2, PC; "configuration file directive"|122-68
100984|code|ADD             R1, PC; off_34288|121-68
100986|code|B.W             processDirectiveOperand|7-240-183-187
100990|data|ALIGN 0x10|0-191
100992|data|DCD aConfigurationF - 0x18A7A; "configuration file directive"|202-148-0-0
100996|data|DCD off_34288 - 0x18A7C; "i"|12-184-1-0
101000|code|LDR             R0, [R0]|0-104
101002|code|LDR             R1, [R1]|9-104
101004|code|ADDS            R0, #4|4-48
101006|code|ADDS            R1, #4|4-49
101008|code|B.W             compareKeywords|6-240-54-190
101012|code|PUSH            {LR}|0-181
101014|code|SUB             SP, SP, #0xC|131-176
101016|code|LDR             R3, =(aConfigurationD - 0x18AA4); "configuration directive"|5-75
101018|code|MOVS            R2, #1|1-34
101020|code|STR             R1, [SP]|0-145
101022|code|LDR             R1, =(sub_18C78+1 - 0x18AA6)|5-73
101024|code|ADD             R3, PC; "configuration directive"|123-68
101026|code|ADD             R1, PC; sub_18C78|121-68
101028|code|BL              processConditionOperands|7-240-246-251
101032|code|ADD             SP, SP, #0xC|3-176
101034|code|POP.W           {PC}|93-248-4-251
101038|data|ALIGN 0x10|0-191
101040|data|DCD aConfigurationD - 0x18AA4; "configuration directive"|24-149-0-0
101044|data|DCD sub_18C78+1 - 0x18AA6|211-1-0-0
101048|code|PUSH            {LR}|0-181
101050|code|SUB             SP, SP, #0xC|131-176
101052|code|LDR             R3, =(aConfigurationD - 0x18AC8); "configuration directive"|5-75
101054|code|MOVS            R2, #0|0-34
101056|code|STR             R1, [SP]|0-145
101058|code|LDR             R1, =(sub_18C78+1 - 0x18ACA)|5-73
101060|code|ADD             R3, PC; "configuration directive"|123-68
101062|code|ADD             R1, PC; sub_18C78|121-68
101064|code|BL              processConditionOperands|7-240-228-251
101068|code|ADD             SP, SP, #0xC|3-176
101070|code|POP.W           {PC}|93-248-4-251
101074|data|ALIGN 4|0-191
101076|data|DCD aConfigurationD - 0x18AC8; "configuration directive"|244-148-0-0
101080|data|DCD sub_18C78+1 - 0x18ACA|175-1-0-0
101084|code|PUSH.W          {R3-R9,LR}|45-233-248-67
101088|code|MOV             R6, R2|22-70
101090|code|MOV             R8, R0|128-70
101092|code|MOV             R7, R1|15-70
101094|code|MOVS            R5, #0|0-37
101096|code|CBNZ            R2, loc_18AF4|34-185
101098|code|B               loc_18B12|18-224
101100|code|BEQ             loc_18B18|20-208
101102|code|ADDS            R5, R4, #1|101-28
101104|code|CMP             R6, R5|174-66
101106|code|BLS             loc_18B12|14-217
101108|code|ADDS            R4, R5, R6|172-25
101110|code|MOV             R0, R8|64-70
101112|code|LSRS            R4, R4, #1|100-8
101114|code|LDR.W           R1, [R7,R4,LSL#2]|87-248-36-16
101118|code|ADD.W           R9, R7, R4,LSL#2|7-235-132-9
101122|code|ADDS            R1, #4|4-49
101124|code|BL              compareKeywords|6-240-252-253
101128|code|CMP             R0, #0|0-40
101130|code|BGE             loc_18AEC|239-218
101132|code|MOV             R6, R4|38-70
101134|code|CMP             R6, R5|174-66
101136|code|BHI             loc_18AF4|240-216
101138|code|MOVS            R0, #0|0-32
101140|code|POP.W           {R3-R9,PC}|189-232-248-131
101144|code|LDR.W           R0, [R9]|217-248-0-0
101148|code|POP.W           {R3-R9,PC}|189-232-248-131
101152|code|PUSH.W          {R4-R9,LR}|45-233-240-67
101156|code|SUBW            SP, SP, #0x80C|173-246-12-13
101160|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x18B34)|75-76
101162|code|MOV             R6, R1|14-70
101164|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|75-77
101166|code|ADD             R1, SP, #4|1-169
101168|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
101170|code|LDR             R3, =(aConfigurationD - 0x18B3E); "configuration directive"|75-75
101172|code|MOVS            R2, #0|0-34
101174|code|MOV             R7, R0|7-70
101176|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
101178|code|ADD             R3, PC; "configuration directive"|123-68
101180|code|LDR             R5, [R4]|37-104
101182|code|STR.W           R5, [SP,#0x804]|205-248-4-88
101186|code|BL              getDataString|7-240-103-249
101190|code|CBNZ            R0, loc_18B6C|136-185
101192|code|LDR             R2, [R6]|50-104
101194|code|MOVS            R5, #1|1-37
101196|code|LDRB.W          R3, [R2,#0x108]|146-248-8-49
101200|code|ORR.W           R3, R3, #2|67-240-2-3
101204|code|STRB.W          R3, [R2,#0x108]|130-248-8-49
101208|code|LDR.W           R2, [SP,#0x804]|221-248-4-40
101212|code|MOV             R0, R5|40-70
101214|code|LDR             R3, [R4]|35-104
101216|code|CMP             R2, R3|154-66
101218|code|BNE             loc_18C54|119-209
101220|code|ADDW            SP, SP, #0x80C|13-246-12-13
101224|code|POP.W           {R4-R9,PC}|189-232-240-131
101228|code|ADDW            R5, SP, #0x404|13-242-4-69
101232|code|LDR             R3, =(aConfigurationV - 0x18B7A); "configuration value"|60-75
101234|code|MOV             R0, R7|56-70
101236|code|MOVS            R2, #0|0-34
101238|code|ADD             R3, PC; "configuration value"|123-68
101240|code|MOV             R1, R5|41-70
101242|code|BL              getDataString|7-240-75-249
101246|code|CMP             R0, #0|0-40
101248|code|BEQ             loc_18B48|226-208
101250|code|LDRB            R1, [R5]|41-120
101252|code|ADD.W           R0, SP, #0x408|13-245-129-96
101256|code|MOVS            R2, #0|0-34
101258|code|BL              makeUtf8FromWchars|8-240-27-249
101262|code|MOV             R7, R0|7-70
101264|code|MOV             R5, R0|5-70
101266|code|CMP             R0, #0|0-40
101268|code|BEQ             loc_18B58|224-208
101270|code|ADD.W           R9, SP, #8|13-241-8-9
101274|code|LDR             R1, [R6,#8]|177-104
101276|code|LDR             R2, [R6,#0xC]|242-104
101278|code|MOV             R0, R9|72-70
101280|code|BL              sub_18ADC|255-247-156-255
101284|code|CMP             R0, #0|0-40
101286|code|BEQ             loc_18C26|62-208
101288|code|LDR             R5, [R0]|5-104
101290|code|LDM.W           R6, {R2,R8}|150-232-4-1
101294|code|RSB.W           R1, R5, R5,LSL#3|197-235-197-1
101298|code|ADD.W           R0, R8, R5,LSL#2|8-235-133-0
101302|code|LDR.W           R3, [R8,R5,LSL#2]|88-248-37-48
101306|code|LDR             R2, [R2]|18-104
101308|code|ADD.W           R2, R2, R1,LSL#2|2-235-129-2
101312|code|CBZ             R3, loc_18C16|75-179
101314|code|LDR             R3, [R2,#4]|83-104
101316|code|CBZ             R3, loc_18BE0|99-177
101318|code|LDRB            R3, [R2,#0xA]|147-122
101320|code|LSLS            R3, R3, #0x1E|155-7
101322|code|BPL             loc_18BE0|9-213
101324|code|MOV             R1, R7|57-70
101326|code|MOVS            R2, #0|0-34
101328|code|BL              extendStringSetting|2-240-208-253
101332|code|CBNZ            R0, loc_18C22|40-187
101334|code|MOVS            R5, #0|0-37
101336|code|MOV             R0, R7|56-70
101338|code|BLX             free|253-247-84-237
101342|code|B               loc_18B58|187-231
101344|code|LDR             R1, =(aConfigurationD_0 - 0x18BEA); "configuration directive specified more "...|33-73
101346|code|MOVS            R2, #5|5-34
101348|code|MOVS            R0, #0|0-32
101350|code|ADD             R1, PC; "configuration directive specified more "...|121-68
101352|code|BLX             dcgettext|253-247-68-239
101356|code|LDR             R1, =(aSLs_0 - 0x18BF4); "%s: %ls"|31-73
101358|code|MOV             R3, R9|75-70
101360|code|ADD             R1, PC; "%s: %ls"|121-68
101362|code|MOV             R2, R0|2-70
101364|code|MOVS            R0, #3|3-32
101366|code|BL              logMessage|1-240-151-251
101370|code|LDR             R2, [R6]|50-104
101372|code|LDRB.W          R3, [R2,#0x108]|146-248-8-49
101376|code|ORR.W           R3, R3, #2|67-240-2-3
101380|code|STRB.W          R3, [R2,#0x108]|130-248-8-49
101384|code|LDR.W           R0, [R8,R5,LSL#2]|88-248-37-0
101388|code|BLX             free|253-247-58-237
101392|code|MOVS            R3, #0|0-35
101394|code|STR.W           R3, [R8,R5,LSL#2]|72-248-37-48
101398|code|MOV             R0, R7|56-70
101400|code|BLX             __strdup|253-247-68-238
101404|code|STR.W           R0, [R8,R5,LSL#2]|72-248-37-0
101408|code|CBZ             R0, loc_18C4E|168-177
101410|code|MOVS            R5, #1|1-37
101412|code|B               loc_18BD8|216-231
101414|code|LDR             R1, =(unk_21FB4 - 0x18C2E)|18-73
101416|code|MOVS            R2, #5|5-34
101418|code|ADD             R1, PC; unk_21FB4|121-68
101420|code|BLX             dcgettext|253-247-34-239
101424|code|LDR             R1, =(aSLs_0 - 0x18C38); "%s: %ls"|16-73
101426|code|MOV             R3, R9|75-70
101428|code|ADD             R1, PC; "%s: %ls"|121-68
101430|code|MOV             R2, R0|2-70
101432|code|MOVS            R0, #3|3-32
101434|code|BL              logMessage|1-240-117-251
101438|code|LDR             R2, [R6]|50-104
101440|code|LDRB.W          R3, [R2,#0x108]|146-248-8-49
101444|code|ORR.W           R3, R3, #2|67-240-2-3
101448|code|STRB.W          R3, [R2,#0x108]|130-248-8-49
101452|code|B               loc_18C22|233-231
101454|code|BL              logMallocError|1-240-247-251
101458|code|B               loc_18BD6|192-231
101460|code|BLX             __stack_chk_fail|253-247-240-238
101464|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x18B34|108-185-1-0
101468|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
101472|data|DCD aConfigurationD - 0x18B3E; "configuration directive"|126-148-0-0
101476|data|DCD aConfigurationV - 0x18B7A; "configuration value"|234-147-0-0
101480|data|DCD aConfigurationD_0 - 0x18BEA; "configuration directive specified more "...|142-147-0-0
101484|data|DCD aSLs_0 - 0x18BF4; "%s: %ls"|184-147-0-0
101488|data|DCD unk_21FB4 - 0x18C2E|134-147-0-0
101492|data|DCD aSLs_0 - 0x18C38; "%s: %ls"|116-147-0-0
101496|code|PUSH            {R3-R7,LR}|248-181
101498|code|MOV             R5, R1|13-70
101500|code|MOV             R6, R2|22-70
101502|code|LDM             R1, {R1,R2}; n|6-201
101504|code|ADD             R7, SP, #0|0-175
101506|code|LSLS            R3, R2, #2|147-0
101508|code|ADDS            R3, #0xE|14-51
101510|code|BIC.W           R3, R3, #7|35-240-7-3
101514|code|SUB.W           SP, SP, R3|173-235-3-13
101518|code|MOV             R0, SP; s1|104-70
101520|code|BLX             wmemcpy|253-247-140-237
101524|code|LDR             R3, [R5,#4]|107-104
101526|code|MOV             R0, SP|104-70
101528|code|LDR             R1, [R6,#8]|177-104
101530|code|LDR             R2, [R6,#0xC]|242-104
101532|code|MOVS            R5, #0|0-37
101534|code|STR.W           R5, [SP,R3,LSL#2]|77-248-35-80
101538|code|BL              sub_18ADC|255-247-27-255
101542|code|CBZ             R0, loc_18CB6|48-177
101544|code|LDR             R2, [R0]|2-104
101546|code|LDR             R3, [R6,#4]|115-104
101548|code|LDR.W           R0, [R3,R2,LSL#2]|83-248-34-0
101552|code|SUBS            R0, R0, R5|64-27
101554|code|IT NE|24-191
101556|code|MOVNE           R0, #1|1-32
101558|code|MOV             SP, R7|189-70
101560|code|POP             {R3-R7,PC}|248-189
101562|data|ALIGN 4|0-191
101564|code|PUSH.W          {R4-R9,LR}|45-233-240-67
101568|code|MOV             R9, R2|145-70
101570|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x18CCE)|61-76
101572|code|SUB             SP, SP, #0xC|131-176
101574|code|LDR             R6, =(__stack_chk_guard_ptr - 0x344A0)|61-78
101576|code|MOV             R7, R1|15-70
101578|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
101580|code|LDRB            R5, [R1,#8]|13-122
101582|code|MOV             R8, R0|128-70
101584|code|LDR             R6, [R4,R6]; __stack_chk_guard|166-89
101586|code|ADDS            R4, R0, R5|68-25
101588|code|LDRB            R3, [R4,#8]|35-122
101590|code|LDR             R2, [R6]|50-104
101592|code|STR             R2, [SP,#0x28+var_24]|1-146
101594|code|CMP             R3, #0|0-43
101596|code|BNE             loc_18D48|52-209
101598|code|MOVS            R5, #1|1-37
101600|code|STRB            R5, [R4,#8]|37-114
101602|code|LDR             R3, [R1,#4]|75-104
101604|code|CBZ             R3, loc_18D0C|147-177
101606|code|LDR             R0, [R1,#0x14]|72-105
101608|code|CBZ             R0, loc_18D48|112-179
101610|code|LDRB            R3, [R1,#0xA]|139-122
101612|code|MOV             R1, R9|73-70
101614|code|LSLS            R3, R3, #0x1E|155-7
101616|code|BPL             loc_18D4C|44-213
101618|code|MOV             R2, R5|42-70
101620|code|BL              extendStringSetting|2-240-62-253
101624|code|ADDS            R0, #0|0-48
101626|code|IT NE|24-191
101628|code|MOVNE           R0, #1|1-32
101630|code|LDR             R2, [SP,#0x28+var_24]|1-154
101632|code|LDR             R3, [R6]|51-104
101634|code|CMP             R2, R3|154-66
101636|code|BNE             loc_18DB4|86-209
101638|code|ADD             SP, SP, #0xC|3-176
101640|code|POP.W           {R4-R9,PC}|189-232-240-131
101644|code|LDR             R4, [R1,#0x14]|76-105
101646|code|CBZ             R4, loc_18D48|220-177
101648|code|LDR             R1, =(aTableextension+0xC - 0x18D18); "on"|43-73
101650|code|MOV             R0, R9; s1|72-70
101652|code|ADD             R1, PC; "on" ; s2|121-68
101654|code|BLX             strcasecmp|253-247-162-236
101658|code|CBZ             R0, loc_18D5E|0-179
101660|code|LDR             R1, =(aOff - 0x18D24); "off"|41-73
101662|code|MOV             R0, R9; s1|72-70
101664|code|ADD             R1, PC; "off" ; s2|121-68
101666|code|BLX             strcasecmp|253-247-156-236
101670|code|CBZ             R0, loc_18D58|184-177
101672|code|LDRB            R3, [R7,#0xA]|187-122
101674|code|AND.W           R3, R3, #2|3-240-2-3
101678|code|AND.W           R0, R3, #0xFF; domainname|3-240-255-0
101682|code|CBZ             R3, loc_18D64|187-177
101684|code|MOV             R0, SP|104-70
101686|code|MOV             R1, R9|73-70
101688|code|BL              isInteger|2-240-36-254
101692|code|CBZ             R0, loc_18D8C|48-179
101694|code|LDR             R3, [SP,#0x28+var_28]|0-155
101696|code|CMP             R3, #0|0-43
101698|code|BLT             loc_18D8C|35-219
101700|code|LDR             R2, [R7,#0x14]|122-105
101702|code|STR             R3, [R2]|19-96
101704|code|MOVS            R0, #1|1-32
101706|code|B               loc_18CFE|216-231
101708|code|BL              changeStringSetting|2-240-252-252
101712|code|ADDS            R0, #0|0-48
101714|code|IT NE|24-191
101716|code|MOVNE           R0, #1|1-32
101718|code|B               loc_18CFE|210-231
101720|code|STR             R0, [R4]|32-96
101722|code|MOV             R0, R5|40-70
101724|code|B               loc_18CFE|207-231
101726|code|STR             R5, [R4]|37-96
101728|code|MOV             R0, R5|40-70
101730|code|B               loc_18CFE|204-231
101732|code|LDR             R1, =(aInvalidFlagSet - 0x18D6C); "invalid flag setting"|24-73
101734|code|MOVS            R2, #5; category|5-34
101736|code|ADD             R1, PC; "invalid flag setting"|121-68
101738|code|BLX             dcgettext|253-247-132-238
101742|code|LDR             R1, =(aSS - 0x18D76); "%s: %s"|23-73
101744|code|MOV             R3, R9|75-70
101746|code|ADD             R1, PC; "%s: %s"|121-68
101748|code|MOV             R2, R0|2-70
101750|code|MOVS            R0, #3|3-32
101752|code|BL              logMessage|1-240-214-250
101756|code|LDRB.W          R3, [R8,#0x108]|152-248-8-49
101760|code|MOV             R0, R5|40-70
101762|code|ORR.W           R3, R3, #2|67-240-2-3
101766|code|STRB.W          R3, [R8,#0x108]|136-248-8-49
101770|code|B               loc_18CFE|184-231
101772|code|LDR             R1, =(aInvalidCounter - 0x18D96); "invalid counter setting"|16-73
101774|code|MOVS            R2, #5; category|5-34
101776|code|MOVS            R0, #0; domainname|0-32
101778|code|ADD             R1, PC; "invalid counter setting"|121-68
101780|code|BLX             dcgettext|253-247-110-238
101784|code|LDR             R1, =(aSS - 0x18DA0); "%s: %s"|14-73
101786|code|MOV             R3, R9|75-70
101788|code|ADD             R1, PC; "%s: %s"|121-68
101790|code|MOV             R2, R0|2-70
101792|code|MOVS            R0, #3|3-32
101794|code|BL              logMessage|1-240-193-250
101798|code|LDRB.W          R3, [R8,#0x108]|152-248-8-49
101802|code|ORR.W           R3, R3, #2|67-240-2-3
101806|code|STRB.W          R3, [R8,#0x108]|136-248-8-49
101810|code|B               loc_18D48|201-231
101812|code|BLX             __stack_chk_fail|253-247-64-238
101816|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x18CCE|210-183-1-0
101820|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
101824|data|DCD aTableextension+0xC - 0x18D18; "on"|136-171-0-0
101828|data|DCD aOff - 0x18D24; "off"|176-146-0-0
101832|data|DCD aInvalidFlagSet - 0x18D6C; "invalid flag setting"|108-146-0-0
101836|data|DCD aSS - 0x18D76; "%s: %s"|70-158-0-0
101840|data|DCD aInvalidCounter - 0x18D96; "invalid counter setting"|90-146-0-0
101844|data|DCD aSS - 0x18DA0; "%s: %s"|28-158-0-0
101848|code|PUSH.W          {R3-R9,LR}|45-233-248-67
101852|code|LDR.W           LR, [R0,#4]|208-248-4-224
101856|code|CMP.W           LR, #0|190-241-0-15
101860|code|BEQ             locret_18E34|38-208
101862|code|CLZ.W           R5, R1|177-250-129-245
101866|code|LDR             R7, =(aWindow010lxCha+0x24 - 0x18DF6); ""|19-79
101868|code|LDR             R6, =(aOff - 0x18DF8); "off"|19-78
101870|code|MOVS            R4, #0|0-36
101872|code|MOV             R8, R0|128-70
101874|code|ADD             R7, PC; ""|127-68
101876|code|ADD             R6, PC; "off"|126-68
101878|code|LSRS            R5, R5, #5|109-9
101880|code|MOV             R9, R4|161-70
101882|code|B               loc_18E08|5-224
101884|code|BL              sub_18CBC|255-247-94-255
101888|code|LDR.W           LR, [R8,#4]|216-248-4-224
101892|code|CMP             LR, R9|206-69
101894|code|BLS             locret_18E34|21-217
101896|code|LDR.W           R3, [R8]|216-248-0-48
101900|code|MOV             R0, R8|64-70
101902|code|ADD.W           R9, R9, #1|9-241-1-9
101906|code|ADD             R3, R4|35-68
101908|code|ADDS            R4, #0x1C|28-52
101910|code|LDRB            R2, [R3,#0xA]|154-122
101912|code|MOV             R1, R3|25-70
101914|code|UBFX.W          R2, R2, #2, #1|194-243-128-2
101918|code|CMP             R2, R5|170-66
101920|code|BEQ             loc_18E04|240-208
101922|code|LDR             R2, [R3,#0xC]|218-104
101924|code|CMP             R2, #0|0-42
101926|code|BNE             loc_18DFC|233-209
101928|code|LDR             R3, [R3,#4]|91-104
101930|code|CMP             R3, #0|0-43
101932|code|ITE NE|20-191
101934|code|MOVNE           R2, R7|58-70
101936|code|MOVEQ           R2, R6|50-70
101938|code|B               loc_18DFC|227-231
101940|code|POP.W           {R3-R9,PC}|189-232-248-131
101944|data|DCD aWindow010lxCha+0x24 - 0x18DF6; ""|134-140-0-0
101948|data|DCD aOff - 0x18DF8; "off"|220-145-0-0
101952|code|PUSH            {R3-R7,LR}|248-181
101954|code|LDR             R7, [R0,#4]|71-104
101956|code|CBZ             R7, locret_18E7E|223-177
101958|code|MOVS            R4, #0|0-36
101960|code|MOV             R6, R0|6-70
101962|code|MOV             R5, R4|37-70
101964|code|B               loc_18E60|8-224
101966|code|MOV             R0, R3|24-70
101968|code|CBZ             R3, loc_18E58|19-177
101970|code|BL              changeStringSetting|2-240-121-252
101974|code|LDR             R7, [R6,#4]|119-104
101976|code|ADDS            R5, #1|1-53
101978|code|ADDS            R4, #0x1C|28-52
101980|code|CMP             R7, R5|175-66
101982|code|BLS             locret_18E7E|14-217
101984|code|LDR             R3, [R6]|51-104
101986|code|MOVS            R1, #0|0-33
101988|code|ADD             R3, R4|35-68
101990|code|LDR             R2, [R3,#4]|90-104
101992|code|LDR             R3, [R3,#0x14]|91-105
101994|code|CMP             R2, #0|0-42
101996|code|BNE             loc_18E4E|239-209
101998|code|CMP             R3, #0|0-43
102000|code|BEQ             loc_18E58|242-208
102002|code|STR             R2, [R3]|26-96
102004|code|ADDS            R5, #1|1-53
102006|code|LDR             R7, [R6,#4]|119-104
102008|code|ADDS            R4, #0x1C|28-52
102010|code|CMP             R7, R5|175-66
102012|code|BHI             loc_18E60|240-216
102014|code|POP             {R3-R7,PC}|248-189
102016|code|B.W             resetOptions|255-247-222-191
102020|code|PUSH.W          {R4-R11,LR}|45-233-240-79
102024|code|SUBW            SP, SP, #0x9AC|173-246-172-29
102028|code|LDR.W           R9, =(_GLOBAL_OFFSET_TABLE_ - 0x18E9E)|223-248-244-155
102032|code|ADD             R7, SP, #0x18|6-175
102034|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x344A0)|223-248-244-59
102038|code|ADD.W           R10, R7, #0x80|7-241-128-10
102042|code|ADD             R9, PC; _GLOBAL_OFFSET_TABLE_|249-68
102044|code|STR             R0, [R7,#0x994+var_958]|248-99
102046|code|STR             R1, [R7,#0x994+var_944]|57-101
102048|code|MOV             R4, R0|4-70
102050|code|STR             R2, [R7,#0x994+var_940]|122-101
102052|code|MOVS            R1, #0; c|0-33
102054|code|LDR.W           R3, [R9,R3]; __stack_chk_guard|89-248-3-48
102058|code|MOV.W           R2, #0x10C; n|79-244-134-114
102062|code|MOV             R0, R10; s|80-70
102064|code|STR             R3, [R7,#0x994+var_980]|123-97
102066|code|LDR             R3, [R3]|27-104
102068|code|STR.W           R3, [R7,#0x994+var_8]|199-248-140-57
102072|code|BLX             memset|253-247-188-236
102076|code|LDR             R3, [R4]|35-104
102078|code|MOV             R2, R4|34-70
102080|code|LDR.W           R0, =(aOptions - 0x18ECE); "options"|223-248-200-11
102084|code|LDR             R4, [R4,#4]|100-104
102086|code|LDR.W           R1, =(j_resetOptions+1 - 0x18ED0)|223-248-200-27
102090|code|ADD             R0, PC; "options"|120-68
102092|code|ADD             R1, PC; j_resetOptions|121-68
102094|code|STM.W           R10, {R3,R4}|138-232-24-0
102098|code|BL              onProgramExit|255-247-183-251
102102|code|ADD.W           R3, R7, #0x87|7-241-135-3
102106|code|ADDW            R1, R7, #0x187|7-242-135-17
102110|code|MOVS            R2, #0|0-34
102112|code|STRB.W          R2, [R3,#1]!|3-248-1-47
102116|code|CMP             R3, R1|139-66
102118|code|BNE             loc_18EE0|251-209
102120|code|LDR             R3, [R7,#0x994+var_944]|59-109
102122|code|STR.W           SP, [R7,#0x994+var_974]|199-248-32-208
102126|code|LDR             R0, [R3]|24-104
102128|code|LDR             R3, [R7,#0x994+var_940]|123-109
102130|code|LDR             R1, [R3]|25-104
102132|code|BL              beginProgram|255-247-210-251
102136|code|LDR             R2, [R7,#0x994+var_958]|250-107
102138|code|LDR.W           R3, [R10,#4]|218-248-4-48
102142|code|LDR             R2, [R2,#0x18]|146-105
102144|code|STR             R2, [R7,#0x994+var_978]|250-97
102146|code|ADDS            R2, R3, #1|90-28
102148|code|LSLS            R2, R2, #1|82-0
102150|code|ADDS            R1, R2, #7|209-29
102152|code|BIC.W           R1, R1, #7|33-240-7-1
102156|code|LSLS            R2, R2, #4|18-1
102158|code|SUBS            R2, #8|8-58
102160|code|SUB.W           SP, SP, R1|173-235-1-13
102164|code|ADD             R1, SP, #0x9AC+s|6-169
102166|code|SUB.W           SP, SP, R2|173-235-2-13
102170|code|ADD             R2, SP, #0x9AC+s|6-170
102172|code|STR             R1, [R7,#0x994+shortopts]|57-99
102174|code|STR             R2, [R7,#0x994+longopts]|186-98
102176|code|CMP             R3, #0|0-43
102178|code|BEQ.W           loc_19A7E|0-240-172-133
102182|code|LDR.W           R3, =(aNo - 0x18F34); "no-"|223-248-108-59
102186|code|MOVS            R5, #0|0-37
102188|code|MOV             R12, R5|172-70
102190|code|MOV             R4, R2|20-70
102192|code|ADD             R3, PC; "no-"|123-68
102194|code|STR             R3, [R7,#0x994+s1]|187-100
102196|code|LDR.W           R3, =(aSS_0 - 0x18F42); "%s%s"|223-248-96-59
102200|code|MOV             R8, R5|168-70
102202|code|STR.W           R9, [R7,#0x994+var_950]|199-248-68-144
102206|code|ADD             R3, PC; "%s%s"|123-68
102208|code|STR             R3, [R7,#0x994+msgid]|59-100
102210|code|LDR.W           R3, [R10]|218-248-0-48
102214|code|ADD.W           R9, R3, R5|3-235-5-9
102218|code|LDR             R6, [R3,R5]|94-89
102220|code|CBZ             R6, loc_18F70|134-177
102222|code|LDR.W           R2, [R9,#4]|217-248-4-32
102226|code|ADD.W           R11, R4, #0x10|4-241-16-11
102230|code|STR             R6, [R4]|38-96
102232|code|CMP             R2, #0|0-42
102234|code|STR.W           R12, [R4,#8]|196-248-8-192
102238|code|ITE NE|20-191
102240|code|MOVNE           R2, #1|1-34
102242|code|MOVEQ           R2, #0|0-34
102244|code|STR             R2, [R4,#4]|98-96
102246|code|LDRB.W          R2, [R9,#8]|153-248-8-32
102250|code|STR             R2, [R4,#0xC]|226-96
102252|code|BEQ             loc_18FF2|65-208
102254|code|MOV             R4, R11|92-70
102256|code|LDR.W           R3, [R10,#4]|218-248-4-48
102260|code|ADD.W           R8, R8, #1|8-241-1-8
102264|code|ADDS            R5, #0x1C|28-53
102266|code|CMP             R8, R3|152-69
102268|code|BCC             loc_18F42|225-211
102270|code|LDR.W           R9, [R7,#0x994+var_950]|215-248-68-144
102274|code|MOVS            R1, #0; c|0-33
102276|code|MOVS            R2, #0x10; n|16-34
102278|code|MOV             R0, R4; s|32-70
102280|code|STR             R3, [R7,#0x994+stream]|251-100
102282|code|BLX             memset|253-247-84-236
102286|code|LDR             R3, [R7,#0x994+stream]|251-108
102288|code|ADD.W           R2, R7, #0x188|7-245-196-114
102292|code|ADD.W           R0, R7, #0x588|7-245-177-96
102296|code|MOVS            R1, #0|0-33
102298|code|STR.W           R1, [R2,#4]!|66-248-4-31
102302|code|CMP             R2, R0|130-66
102304|code|BNE             loc_18F9A|251-209
102306|code|LDR             R0, [R7,#0x994+shortopts]|56-107
102308|code|MOVS            R1, #0x2B ; '+'|43-33
102310|code|MOV             R2, R0|2-70
102312|code|STRB            R1, [R0]|1-112
102314|code|ADDS            R2, #1|1-50
102316|code|CMP             R3, #0|0-43
102318|code|BEQ             loc_19046|74-208
102320|code|MOVS            R1, #0|0-33
102322|code|ADD.W           R5, R7, #0x18C|7-245-198-117
102326|code|MOV             R0, R1|8-70
102328|code|MOV             R12, R1|140-70
102330|code|MOVS            R6, #0x3A ; ':'|58-38
102332|code|B               loc_18FD6|11-224
102334|code|STRB            R6, [R2,#1]|86-112
102336|code|ADDS            R2, #2|2-50
102338|code|LDR             R3, [R3,#0x14]|91-105
102340|code|CBZ             R3, loc_18FCA|11-177
102342|code|STR.W           R12, [R3]|195-248-0-192
102346|code|LDR.W           R3, [R10,#4]|218-248-4-48
102350|code|ADDS            R0, #1|1-48
102352|code|ADDS            R1, #0x1C|28-49
102354|code|CMP             R0, R3|152-66
102356|code|BCS             loc_19046|55-210
102358|code|LDR.W           R3, [R10]|218-248-0-48
102362|code|ADD             R3, R1|11-68
102364|code|LDRB.W          LR, [R3,#8]|147-248-8-224
102368|code|STRB.W          LR, [R2]|130-248-0-224
102372|code|LDR             R4, [R3,#4]|92-104
102374|code|STR.W           R3, [R5,LR,LSL#2]|69-248-46-48
102378|code|CMP             R4, #0|0-44
102380|code|BNE             loc_18FBE|231-209
102382|code|ADDS            R2, #1|1-50
102384|code|B               loc_18FC2|231-231
102386|code|LDR.W           R2, [R9,#0x14]|217-248-20-32
102390|code|CMP             R2, #0|0-42
102392|code|BEQ             loc_18F6E|185-208
102394|code|LDR             R0, [R7,#0x994+s1]; s1|184-108
102396|code|MOV             R1, R6; s2|49-70
102398|code|MOVS            R2, #3; n|3-34
102400|code|STR.W           R12, [R7,#0x994+stream]|199-248-76-192
102404|code|BLX             strncasecmp|253-247-92-237
102408|code|LDR.W           R12, [R7,#0x994+stream]|215-248-76-192
102412|code|STR.W           R12, [R7,#0x994+var_95C]|199-248-56-192
102416|code|CMP             R0, #0|0-40
102418|code|BNE.W           loc_19434|64-240-15-130
102422|code|ADDS            R0, R6, #3|240-28
102424|code|BLX             __strdup|253-247-68-236
102428|code|LDR.W           R12, [R7,#0x994+var_95C]|215-248-56-192
102432|code|STR             R0, [R7,#0x994+stream]|248-100
102434|code|CMP             R0, #0|0-40
102436|code|BEQ.W           loc_199BA|0-240-201-132
102440|code|LDR             R3, [R7,#0x994+stream]|251-108
102442|code|ADDS            R4, #0x20 ; ' '|32-52
102444|code|STR.W           R12, [R4,#-0xC]|68-248-12-204
102448|code|STR.W           R3, [R4,#-0x10]|68-248-16-60
102452|code|ADD.W           R3, R7, #0x70 ; 'p'|7-241-112-3
102456|code|STR.W           R3, [R4,#-8]|68-248-8-60
102460|code|LDRB.W          R3, [R9,#8]|153-248-8-48
102464|code|STR.W           R3, [R4,#-4]|68-248-4-60
102468|code|B               loc_18F70|148-231
102470|code|LDR             R3, [R7,#0x994+var_944]|59-109
102472|code|LDR             R1, [R3]|25-104
102474|code|MOVS            R3, #0|0-35
102476|code|STRB            R3, [R2]|19-112
102478|code|CMP             R1, #1|1-41
102480|code|BLE             loc_1905C|4-221
102482|code|LDR.W           R2, =0x30C|223-248-72-42
102486|code|LDR.W           R2, [R9,R2]|89-248-2-32
102490|code|STR             R3, [R2]|19-96
102492|code|LDR.W           R3, =0x31C|223-248-64-58
102496|code|MOVS            R1, #0|0-33
102498|code|STR             R1, [R7,#0x994+var_95C]|185-99
102500|code|MOV             R11, R1|139-70
102502|code|MOV             R5, R1|13-70
102504|code|MOVS            R2, #1|1-34
102506|code|LDR.W           R6, [R9,R3]|89-248-3-96
102510|code|MOV             R4, R2|20-70
102512|code|LDR             R3, [R7,#0x994+var_940]|123-109
102514|code|LDR             R1, [R3]; argv|25-104
102516|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
102520|code|STR             R3, [R7,#0x994+stream]|251-100
102522|code|LDR.W           R3, =(aUnknownOption - 0x19084); "unknown option"|223-248-40-58
102526|code|STR             R2, [R6]|50-96
102528|code|ADD             R3, PC; "unknown option"|123-68
102530|code|LDR             R2, [R7,#0x994+var_944]|58-109
102532|code|STR             R3, [R7,#0x994+s1]|187-100
102534|code|LDR.W           R3, =(aSCC - 0x19092); "%s: %c%c"|223-248-32-58
102538|code|LDR             R0, [R2]; argc|16-104
102540|code|MOV             R8, R2|144-70
102542|code|ADD             R3, PC; "%s: %c%c"|123-68
102544|code|STR             R3, [R7,#0x994+var_950]|123-100
102546|code|LDR.W           R3, =(aMissingOperand - 0x1909A); "missing operand"|223-248-24-58
102550|code|ADD             R3, PC; "missing operand"|123-68
102552|code|STR             R3, [R7,#0x994+msgid]|59-100
102554|code|LDR.W           R3, =(aSCC - 0x190A2); "%s: %c%c"|223-248-20-58
102558|code|ADD             R3, PC; "%s: %c%c"|123-68
102560|code|STR             R3, [R7,#0x994+var_960]|123-99
102562|code|CMP             R4, R0|132-66
102564|code|BEQ             loc_190C6|15-208
102566|code|LDR.W           R3, [R1,R4,LSL#2]|81-248-36-48
102570|code|CMP             R5, #0|0-45
102572|code|BEQ.W           loc_19368|0-240-92-129
102576|code|LDRB            R2, [R5]|42-120
102578|code|CMP             R2, #0|0-42
102580|code|BNE.W           loc_192E2|64-240-21-129
102584|code|ADDS            R4, #1|1-52
102586|code|STR             R4, [R6]|52-96
102588|code|LDR.W           R0, [R8]|216-248-0-0
102592|code|MOV             R5, R2|21-70
102594|code|CMP             R4, R0|132-66
102596|code|BNE             loc_190A6|239-209
102598|code|MOV             R3, R0|3-70
102600|code|ADD.W           R1, R1, R3,LSL#2|1-235-131-1
102604|code|SUBS            R0, R0, R3|192-26
102606|code|LDR             R3, [R7,#0x994+var_940]|123-109
102608|code|STR             R1, [R3]|25-96
102610|code|LDR             R3, [R7,#0x994+var_944]|59-109
102612|code|STR             R0, [R3]|24-96
102614|code|CMP.W           R11, #0|187-241-0-15
102618|code|BNE.W           loc_19482|64-240-210-129
102622|code|LDR             R3, [R7,#0x994+longopts]|187-106
102624|code|LDR             R4, [R7,#0x994+longopts]|188-106
102626|code|LDR             R0, [R3]; ptr|24-104
102628|code|CBZ             R0, loc_190F6|56-177
102630|code|LDR             R3, [R4,#8]|163-104
102632|code|CBZ             R3, loc_190EE|11-177
102634|code|BLX             free|253-247-204-234
102638|code|LDR.W           R0, [R4,#0x10]!|84-248-16-15
102642|code|CMP             R0, #0|0-40
102644|code|BNE             loc_190E6|247-209
102646|code|LDR             R3, [R7,#0x994+var_958]|251-107
102648|code|LDR.W           SP, [R7,#0x994+var_974]|215-248-32-208
102652|code|LDR             R3, [R3,#0x10]|27-105
102654|code|CBZ             R3, loc_19108|27-177
102656|code|LDR             R3, [R3]|27-104
102658|code|ADDS            R3, #0|0-51
102660|code|IT NE|24-191
102662|code|MOVNE           R3, #1|1-35
102664|code|STR             R3, [R7,#0x994+s1]|187-100
102666|code|LDR             R3, [R7,#0x994+var_958]|251-107
102668|code|LDR             R3, [R3,#8]|155-104
102670|code|CBZ             R3, loc_19118|27-177
102672|code|LDR             R3, [R3]|27-104
102674|code|CMP             R3, #0|0-43
102676|code|BNE.W           loc_19840|64-240-148-131
102680|code|LDR             R3, [R7,#0x994+var_958]|251-107
102682|code|LDR             R3, [R3,#0xC]|219-104
102684|code|CBZ             R3, loc_19126|27-177
102686|code|LDR             R3, [R3]|27-104
102688|code|CMP             R3, #0|0-43
102690|code|BNE.W           loc_198CE|64-240-212-131
102694|code|MOV             R0, R10|80-70
102696|code|MOVS            R1, #0|0-33
102698|code|BL              sub_18DD8|255-247-85-254
102702|code|LDR             R5, [R7,#0x994+var_958]|253-107
102704|code|LDR             R0, [R5,#0x10]|40-105
102706|code|CMP             R0, #0|0-40
102708|code|BEQ.W           loc_192AC|0-240-186-128
102712|code|LDR             R3, [R0]|3-104
102714|code|CMP             R3, #0|0-43
102716|code|BEQ.W           loc_192AC|0-240-182-128
102720|code|LDR             R3, [R7,#0x994+s1]|187-108
102722|code|EOR.W           R4, R3, #1|131-240-1-4
102726|code|BL              fixInstallPath|255-247-19-252
102730|code|LDR             R3, [R5,#0x10]|43-105
102732|code|LDR.W           R1, =(aInvalidUnicode+0x18 - 0x19158); "r"|223-248-100-25
102736|code|MOV             R2, R4|34-70
102738|code|LDR             R3, [R3]|27-104
102740|code|ADD             R1, PC; "r"|121-68
102742|code|MOV             R0, R3|24-70
102744|code|STR             R3, [R7,#0x994+var_944]|59-101
102746|code|BL              openDataFile|7-240-199-249
102750|code|STR             R0, [R7,#0x994+stream]|248-100
102752|code|CMP             R0, #0|0-40
102754|code|BEQ.W           loc_199CC|0-240-51-132
102758|code|LDR.W           R1, [R10,#4]|218-248-4-16
102762|code|ADD.W           R4, R7, #0x70 ; 'p'|7-241-112-4
102766|code|STR.W           SP, [R7,#0x994+var_950]|199-248-68-208
102770|code|MOVS            R5, #0|0-37
102772|code|STR.W           R10, [R4]|196-248-0-160
102776|code|LSLS            R3, R1, #2|139-0
102778|code|STR             R5, [R4,#0xC]|229-96
102780|code|ADDS            R3, #0xA|10-51
102782|code|BIC.W           R3, R3, #7|35-240-7-3
102786|code|SUB.W           SP, SP, R3|173-235-3-13
102790|code|ADD             R2, SP, #0x9AC+s|6-170
102792|code|SUB.W           SP, SP, R3|173-235-3-13
102796|code|ADD             R0, SP, #0x9AC+s|6-168
102798|code|STR             R2, [R4,#4]|98-96
102800|code|STR             R0, [R4,#8]|160-96
102802|code|CMP             R1, #0|0-41
102804|code|BEQ             loc_19214|62-208
102806|code|ADD.W           R3, R7, #0x58 ; 'X'|7-241-88-3
102810|code|STR             R3, [R7,#0x994+var_940]|123-101
102812|code|ADD.W           R3, R7, #0x5C ; '\'|7-241-92-3
102816|code|MOV             R6, R5|46-70
102818|code|STR.W           R10, [R7,#0x994+s1]|199-248-72-160
102822|code|MOV             R2, R3|26-70
102824|code|MOV             R3, R10|83-70
102826|code|MOV             R9, R2|145-70
102828|code|LDR             R3, [R3]|27-104
102830|code|ADDS            R2, R3, R5|90-25
102832|code|LDRB            R2, [R2,#0xA]|146-122
102834|code|LSLS            R1, R2, #0x1D|81-7
102836|code|BPL             loc_19200|36-213
102838|code|LDR.W           R11, [R3,R5]|83-248-5-176
102842|code|CMP.W           R11, #0|187-241-0-15
102846|code|BEQ             loc_19200|31-208
102848|code|MOV             R0, R11|88-70
102850|code|BL              getUtf8Length|7-240-147-253
102854|code|MOV             R8, R0|128-70
102856|code|ADDS            R0, #2|2-48
102858|code|LSLS            R0, R0, #2; size|128-0
102860|code|BLX             malloc|253-247-32-237
102864|code|MOV             R10, R0|130-70
102866|code|CMP             R0, #0|0-40
102868|code|BEQ.W           loc_19A1C|0-240-34-132
102872|code|LDR             R1, [R7,#0x994+var_940]|121-109
102874|code|MOV             R3, R0|3-70
102876|code|ADD.W           R2, R8, #1|8-241-1-2
102880|code|STR.W           R6, [R3],#4|67-248-4-107
102884|code|STR.W           R3, [R9]|201-248-0-48
102888|code|MOV             R0, R1|8-70
102890|code|STR.W           R11, [R1]|193-248-0-176
102894|code|MOV             R1, R9|73-70
102896|code|BL              convertUtf8ToWchars|7-240-170-253
102900|code|LDR             R2, [R4,#0xC]|226-104
102902|code|LDR             R1, [R4,#8]|161-104
102904|code|ADDS            R0, R2, #1|80-28
102906|code|STR             R0, [R4,#0xC]|224-96
102908|code|STR.W           R10, [R1,R2,LSL#2]|65-248-34-160
102912|code|LDR             R3, [R4]|35-104
102914|code|ADDS            R6, #1|1-54
102916|code|ADDS            R5, #0x1C|28-53
102918|code|LDR             R2, [R3,#4]|90-104
102920|code|CMP             R6, R2|150-66
102922|code|BCC             loc_191AC|207-211
102924|code|LDR.W           R10, [R7,#0x994+s1]|215-248-72-160
102928|code|LDR             R0, [R4,#8]; base|160-104
102930|code|LDR             R1, [R4,#0xC]; nmemb|225-104
102932|code|LDR.W           R3, =(loc_18A88+1 - 0x1921E)|223-248-160-56
102936|code|MOVS            R2, #4; size|4-34
102938|code|ADD             R3, PC; loc_18A88 ; compar|123-68
102940|code|BLX             qsort|253-247-88-234
102944|code|LDR.W           R1, [R10,#4]|218-248-4-16
102948|code|MOVS            R3, #0|0-35
102950|code|MOV             R0, R3|24-70
102952|code|CBZ             R1, loc_19236|41-177
102954|code|LDR             R2, [R4,#4]|98-104
102956|code|STR.W           R0, [R2,R3,LSL#2]|66-248-35-0
102960|code|ADDS            R3, #1|1-51
102962|code|CMP             R3, R1|139-66
102964|code|BNE             loc_1922A|249-209
102966|code|LDR.W           R3, =(sub_18A70+1 - 0x19244)|223-248-132-56
102970|code|MOVS            R0, #0|0-32
102972|code|STR             R4, [SP,#0x9AC+var_9AC]|0-148
102974|code|MOVS            R5, #0|0-37
102976|code|ADD             R3, PC; sub_18A70|123-68
102978|code|LDR             R1, [R7,#0x994+stream]|249-108
102980|code|LDR             R2, [R7,#0x994+var_944]|58-109
102982|code|MOV             R11, R5|171-70
102984|code|BL              processDataStream|7-240-90-249
102988|code|LDR.W           R3, [R10,#4]|218-248-4-48
102992|code|MOV             R8, R0|128-70
102994|code|CBZ             R3, loc_19282|179-177
102996|code|LDR             R3, [R4,#4]|99-104
102998|code|LDR             R6, [R3,R5]|94-89
103000|code|CBZ             R6, loc_19274|102-177
103002|code|RSB.W           R3, R5, R5,LSL#3|197-235-197-3
103006|code|MOV             R0, R10|80-70
103008|code|MOV             R2, R6|50-70
103010|code|MOV             R1, R3|25-70
103012|code|LDR.W           R3, [R10]|218-248-0-48
103016|code|ADD             R1, R3|25-68
103018|code|BL              sub_18CBC|255-247-39-253
103022|code|MOV             R0, R6; ptr|48-70
103024|code|BLX             free|253-247-8-234
103028|code|LDR.W           R3, [R10,#4]|218-248-4-48
103032|code|ADD.W           R11, R11, #1|11-241-1-11
103036|code|ADDS            R5, #4|4-53
103038|code|CMP             R11, R3|155-69
103040|code|BCC             loc_19254|232-211
103042|code|CMP.W           R8, #0|184-241-0-15
103046|code|BEQ.W           loc_199E8|0-240-175-131
103050|code|LDR             R3, [R4,#0xC]|227-104
103052|code|CBZ             R3, loc_192A2|75-177
103054|code|LDR             R2, [R4,#8]|162-104
103056|code|SUBS            R3, #1|1-59
103058|code|STR             R3, [R4,#0xC]|227-96
103060|code|LDR.W           R0, [R2,R3,LSL#2]; ptr|82-248-35-0
103064|code|BLX             free|253-247-244-233
103068|code|LDR             R3, [R4,#0xC]|227-104
103070|code|CMP             R3, #0|0-43
103072|code|BNE             loc_1928E|245-209
103074|code|LDR             R0, [R7,#0x994+stream]; stream|248-108
103076|code|BLX             fclose|253-247-232-236
103080|code|LDR.W           SP, [R7,#0x994+var_950]|215-248-68-208
103084|code|MOV             R0, R10|80-70
103086|code|MOVS            R1, #1|1-33
103088|code|BL              sub_18DD8|255-247-146-253
103092|code|LDRB.W          R3, [R10,#0x108]|154-248-8-49
103096|code|LSLS            R2, R3, #0x1F|218-7
103098|code|IT MI|72-191
103100|code|MOVMI           R0, #1|1-32
103102|code|BMI             loc_192CA|4-212
103104|code|TST.W           R3, #4|19-240-4-15
103108|code|ITE NE|20-191
103110|code|MOVNE           R0, #2|2-32
103112|code|MOVEQ           R0, #0|0-32
103114|code|LDR             R3, [R7,#0x994+var_980]|123-105
103116|code|LDR.W           R2, [R7,#0x994+var_8]|215-248-140-41
103120|code|LDR             R3, [R3]|27-104
103122|code|CMP             R2, R3|154-66
103124|code|BNE.W           loc_19B72|64-240-77-132
103128|code|ADDW            R7, R7, #0x994|7-246-148-23
103132|code|MOV             SP, R7|189-70
103134|code|POP.W           {R4-R11,PC}|189-232-240-143
103138|code|ADD.W           R3, R7, #0x18C|7-245-198-115
103142|code|LDR.W           R1, [R3,R2,LSL#2]|83-248-34-16
103146|code|CBZ             R1, loc_192F4|25-177
103148|code|LDR             R3, [R1,#4]|75-104
103150|code|CMP             R3, #0|0-43
103152|code|BEQ.W           loc_19428|0-240-154-128
103156|code|LDR.W           R1, =0x340|223-248-200-23
103160|code|MOVS            R3, #0x3F ; '?'|63-35
103162|code|LDR.W           R1, [R9,R1]|89-248-1-16
103166|code|STR             R2, [R1]|10-96
103168|code|CMP             R3, #0x3F ; '?'|63-43
103170|code|ADD.W           R5, R5, #1|5-241-1-5
103174|code|MOV.W           R4, #0x2B ; '+'|79-240-43-4
103178|code|BEQ             loc_19392|66-208
103180|code|BGT             loc_19350|32-220
103182|code|CMP             R3, #0|0-43
103184|code|BEQ             loc_193D8|98-208
103186|code|CMP             R3, #0x3A ; ':'|58-43
103188|code|BNE             loc_193AA|73-209
103190|code|LDR             R1, [R7,#0x994+msgid]; msgid|57-108
103192|code|MOVS            R2, #5; category|5-34
103194|code|MOVS            R0, #0; domainname|0-32
103196|code|BLX             dcgettext|253-247-170-235
103200|code|LDR.W           LR, =0x340|223-248-156-231
103204|code|LDR             R1, [R7,#0x994+var_960]|121-107
103206|code|MOV             R3, R4|35-70
103208|code|MOV             R2, R0|2-70
103210|code|MOVS            R0, #3|3-32
103212|code|LDR.W           R4, [R9,LR]|89-248-14-64
103216|code|LDR             R4, [R4]|36-104
103218|code|STR             R4, [SP,#-0x24+longind]|0-148
103220|code|BL              logMessage|0-240-248-255
103224|code|LDRB.W          R3, [R10,#0x108]|154-248-8-49
103228|code|LDR.W           R0, [R8]|216-248-0-0
103232|code|ORR.W           R3, R3, #4|67-240-4-3
103236|code|STRB.W          R3, [R10,#0x108]|138-248-8-49
103240|code|LDR             R3, [R7,#0x994+var_940]|123-109
103242|code|LDR             R4, [R6]|52-104
103244|code|LDR             R1, [R3]|25-104
103246|code|B               loc_190A2|168-230
103248|code|CMP             R3, #0x48 ; 'H'|72-43
103250|code|BEQ             loc_193FA|82-208
103252|code|CMP             R3, #0x68 ; 'h'|104-43
103254|code|BNE             loc_193AA|40-209
103256|code|LDR             R3, [R7,#0x994+var_940]|123-109
103258|code|MOV.W           R11, #1|79-240-1-11
103262|code|LDR.W           R0, [R8]|216-248-0-0
103266|code|LDR             R4, [R6]|52-104
103268|code|LDR             R1, [R3]|25-104
103270|code|B               loc_190A2|156-230
103272|code|LDR             R2, [R7,#0x994+stream]|250-108
103274|code|CMP             R2, R4|162-66
103276|code|BEQ             loc_19374|2-208
103278|code|LDRB            R2, [R3]|26-120
103280|code|CMP             R2, #0x2B ; '+'|43-42
103282|code|BEQ             loc_19474|127-208
103284|code|LDR             R2, [R7,#0x994+shortopts]; shortopts|58-107
103286|code|MOVS            R3, #0|0-35
103288|code|STR             R3, [SP,#-0x24+longind]; longind|0-147
103290|code|LDR             R3, [R7,#0x994+longopts]; longopts|187-106
103292|code|BLX             getopt_long|253-247-184-235
103296|code|ADDS            R2, R0, #1|66-28
103298|code|MOV             R3, R0|3-70
103300|code|BEQ.W           loc_19B64|0-240-238-131
103304|code|CMP             R3, #0x3F ; '?'|63-43
103306|code|STR             R4, [R7,#0x994+stream]|252-100
103308|code|MOV.W           R4, #0x2D ; '-'|79-240-45-4
103312|code|BNE             loc_1930C|188-209
103314|code|LDR             R1, [R7,#0x994+s1]; msgid|185-108
103316|code|MOVS            R2, #5; category|5-34
103318|code|MOVS            R0, #0; domainname|0-32
103320|code|BLX             dcgettext|253-247-108-235
103324|code|LDR.W           LR, =0x340|223-248-32-231
103328|code|MOV             R3, R4|35-70
103330|code|LDR             R1, [R7,#0x994+var_950]|121-108
103332|code|MOV             R2, R0|2-70
103334|code|MOVS            R0, #3|3-32
103336|code|B               loc_1932C|192-231
103338|code|ADD.W           R2, R7, #0x18C|7-245-198-114
103342|code|LDR.W           R2, [R2,R3,LSL#2]|82-248-35-32
103346|code|LDR             R1, [R2,#4]|81-104
103348|code|CMP             R1, #0|0-41
103350|code|BEQ.W           loc_19828|0-240-55-130
103354|code|LDR.W           R1, =0x330|223-248-8-23
103358|code|LDR.W           R1, [R9,R1]|89-248-1-16
103362|code|LDR             R4, [R1]|12-104
103364|code|LDRB            R1, [R4]|33-120
103366|code|CBNZ            R1, loc_19400|217-185
103368|code|ADD             R3, R10|83-68
103370|code|LDR.W           R0, [R8]|216-248-0-0
103374|code|LDR             R4, [R6]|52-104
103376|code|STRB            R1, [R3,#8]|25-114
103378|code|LDR             R3, [R7,#0x994+var_940]|123-109
103380|code|LDR             R1, [R3]|25-104
103382|code|B               loc_190A2|100-230
103384|code|LDR             R2, [R7,#0x994+var_940]|122-109
103386|code|LDR             R0, [R7,#0x994+var_924]|56-111
103388|code|LDR             R1, [R2]|17-104
103390|code|ADD.W           R2, R7, #0x18C|7-245-198-114
103394|code|LDR.W           R2, [R2,R0,LSL#2]|82-248-32-32
103398|code|LDR             R2, [R2,#0x14]|82-105
103400|code|STR             R3, [R2]|19-96
103402|code|MOVS            R2, #1|1-34
103404|code|LDR             R3, [R7,#0x994+var_924]|59-111
103406|code|LDR.W           R0, [R8]|216-248-0-0
103410|code|ADD             R3, R10|83-68
103412|code|LDR             R4, [R6]|52-104
103414|code|STRB            R2, [R3,#8]|26-114
103416|code|B               loc_190A2|83-230
103418|code|MOVS            R3, #1|1-35
103420|code|STR             R3, [R7,#0x994+var_95C]|187-99
103422|code|B               loc_19358|171-231
103424|code|LDR             R0, [R2,#0x14]|80-105
103426|code|CBZ             R0, loc_19416|64-177
103428|code|LDRB            R2, [R2,#0xA]|146-122
103430|code|MOV             R1, R4|33-70
103432|code|STR             R3, [R7,#0x994+var_968]|251-98
103434|code|LSLS            R4, R2, #0x1E|148-7
103436|code|BPL             loc_1946C|46-213
103438|code|MOVS            R2, #0|0-34
103440|code|BL              extendStringSetting|2-240-176-249
103444|code|LDR             R3, [R7,#0x994+var_968]|251-106
103446|code|ADD             R3, R10|83-68
103448|code|MOVS            R2, #1|1-34
103450|code|LDR.W           R0, [R8]|216-248-0-0
103454|code|STRB            R2, [R3,#8]|26-114
103456|code|LDR             R3, [R7,#0x994+var_940]|123-109
103458|code|LDR             R4, [R6]|52-104
103460|code|LDR             R1, [R3]|25-104
103462|code|B               loc_190A2|60-230
103464|code|LDR             R1, [R1,#0x14]|73-105
103466|code|CMP             R1, #0|0-41
103468|code|BEQ.W           loc_192F4|63-244-98-175
103472|code|STR             R2, [R7,#0x994+var_924]|58-103
103474|code|B               loc_19300|101-231
103476|code|MOV             R0, R6; s|48-70
103478|code|BLX             strlen|253-247-244-235
103482|code|ADDS            R1, R0, #4|1-29
103484|code|STR             R1, [R7,#0x994+var_960]|121-99
103486|code|MOV             R0, R1; size|8-70
103488|code|BLX             malloc|253-247-230-235
103492|code|LDR.W           R12, [R7,#0x994+var_95C]|215-248-56-192
103496|code|STR             R0, [R7,#0x994+stream]|248-100
103498|code|CMP             R0, #0|0-40
103500|code|BEQ.W           loc_199BA|0-240-181-130
103504|code|LDR             R3, [R7,#0x994+msgid]|59-108
103506|code|MOVS            R2, #1|1-34
103508|code|STR             R3, [SP,#-0x24+longind]|0-147
103510|code|LDR             R3, [R7,#0x994+s1]|187-108
103512|code|LDR             R1, [R7,#0x994+var_960]|121-107
103514|code|STR             R6, [SP,#-0x24+arg_8]|2-150
103516|code|STR             R3, [SP,#-0x24+arg_4]|1-147
103518|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
103522|code|BLX             __snprintf_chk|253-247-228-235
103526|code|LDR.W           R12, [R7,#0x994+var_95C]|215-248-56-192
103530|code|B               loc_19028|221-229
103532|code|BL              changeStringSetting|2-240-108-249
103536|code|LDR             R3, [R7,#0x994+var_968]|251-106
103538|code|B               loc_19416|208-231
103540|code|ADDS            R3, #1|1-51
103542|code|ITT NE|28-191
103544|code|STRNE           R4, [R7,#0x994+stream]|252-100
103546|code|MOVNE           R5, R3|29-70
103548|code|BNE.W           loc_190A2|127-244-17-174
103552|code|B               loc_19374|120-231
103554|code|LDR.W           R3, =0x36C|223-248-68-54
103558|code|STR.W           SP, [R7,#0x994+var_990]|199-248-4-208
103562|code|SUB             SP, SP, #0x50 ; 'P'|148-176
103564|code|LDR.W           R4, [R10,#4]|218-248-4-64
103568|code|ADD             R6, SP, #0x2C+var_14|6-174
103570|code|LDR.W           R3, [R9,R3]|89-248-3-48
103574|code|LDR             R3, [R3]|27-104
103576|code|STR             R3, [R7,#0x994+stream]|251-100
103578|code|CMP             R4, #0|0-44
103580|code|BEQ.W           loc_19B2E|0-240-71-131
103584|code|RSB.W           R4, R4, R4,LSL#3|196-235-196-4
103588|code|LDR.W           R5, [R10]|218-248-0-80
103592|code|MOVS            R3, #0|0-35
103594|code|ADD.W           R4, R5, R4,LSL#2|5-235-132-4
103598|code|MOV             R8, R3|152-70
103600|code|MOV             R11, R3|155-70
103602|code|LDR             R0, [R5]; s|40-104
103604|code|CMP             R0, #0|0-40
103606|code|BEQ.W           loc_19824|0-240-181-129
103610|code|BLX             strlen|253-247-178-235
103614|code|LDR             R3, [R5,#4]|107-104
103616|code|CBZ             R3, loc_194C4|3-177
103618|code|ADDS            R0, #1|1-48
103620|code|CMP             R8, R0|128-69
103622|code|IT CC|56-191
103624|code|MOVCC           R8, R0|128-70
103626|code|MOV             R0, R3; s|24-70
103628|code|CBZ             R0, loc_194D8|32-177
103630|code|BLX             strlen|253-247-168-235
103634|code|CMP             R11, R0|131-69
103636|code|IT CC|56-191
103638|code|MOVCC           R11, R0|131-70
103640|code|ADDS            R5, #0x1C|28-53
103642|code|CMP             R5, R4|165-66
103644|code|BNE             loc_194B2|233-209
103646|code|STR.W           R8, [R7,#0x994+var_970]|199-248-36-128
103650|code|STR.W           R11, [R7,#0x994+var_968]|199-248-44-176
103654|code|LDR.W           R1, =(aUsage - 0x194F2); "Usage"|223-248-228-21
103658|code|MOVS            R2, #5; category|5-34
103660|code|MOVS            R0, #0; domainname|0-32
103662|code|ADD             R1, PC; "Usage"|121-68
103664|code|BLX             dcgettext|253-247-192-234
103668|code|LDR             R4, [R7,#0x994+stream]|252-108
103670|code|MOV             R1, R4; stream|33-70
103672|code|BLX             fputs|253-247-130-236
103676|code|LDR.W           R3, =0x350|223-248-208-53
103680|code|LDR.W           R2, =(aS - 0x19510); ": %s"|223-248-208-37
103684|code|MOV             R0, R4|32-70
103686|code|MOVS            R1, #1|1-33
103688|code|LDR.W           R3, [R9,R3]|89-248-3-48
103692|code|ADD             R2, PC; ": %s"|122-68
103694|code|LDR             R3, [R3]|27-104
103696|code|BLX             __fprintf_chk|253-247-114-233
103700|code|LDR.W           R3, [R10,#4]|218-248-4-48
103704|code|CMP             R3, #0|0-43
103706|code|BNE.W           loc_19A4C|64-240-151-130
103710|code|LDR             R3, [R7,#0x994+var_978]|251-105
103712|code|CBZ             R3, loc_1952A|27-177
103714|code|LDRB            R3, [R3]|27-120
103716|code|CMP             R3, #0|0-43
103718|code|BNE.W           loc_19A0C|64-240-113-130
103722|code|MOVS            R0, #0xA; c|10-32
103724|code|LDR             R1, [R7,#0x994+stream]; stream|249-108
103726|code|BLX             fputc|253-247-88-235
103730|code|LDR.W           R3, [R10,#4]|218-248-4-48
103734|code|CMP             R3, #0|0-43
103736|code|BEQ.W           loc_19700|0-240-226-128
103740|code|LDR.W           R3, =(aCannotConnectT+0x1C - 0x1954C); "%s\n"|223-248-152-53
103744|code|MOV.W           R11, #0x20 ; ' '|79-240-32-11
103748|code|LDR.W           R2, =(aWindow010lxCha+0x24 - 0x19556); ""|223-248-148-37
103752|code|ADD             R3, PC; "%s\n"|123-68
103754|code|STR             R3, [R7,#0x994+s1]|187-100
103756|code|MOVS            R3, #0|0-35
103758|code|STR             R3, [R7,#0x994+var_944]|59-101
103760|code|STR             R3, [R7,#0x994+msgid]|59-100
103762|code|ADD             R2, PC; ""|122-68
103764|code|LDR.W           R3, =(aWindow010lxCha+0x24 - 0x1955E); ""|223-248-136-53
103768|code|STR             R2, [R7,#0x994+s]|58-96
103770|code|ADD             R3, PC; ""|123-68
103772|code|STR.W           R10, [R7,#0x994+var_950]|199-248-68-160
103776|code|STR             R3, [R7,#0x994+var_98C]|187-96
103778|code|LDR             R3, [R7,#0x994+var_950]|123-108
103780|code|LDR             R2, [R7,#0x994+var_944]|58-109
103782|code|LDR             R3, [R3]|27-104
103784|code|ADD.W           R9, R3, R2|3-235-2-9
103788|code|LDR             R3, [R7,#0x994+var_95C]|187-107
103790|code|CBNZ            R3, loc_1957A|35-185
103792|code|LDRB.W          R3, [R9,#0xA]|153-248-10-48
103796|code|LSLS            R2, R3, #0x1F|218-7
103798|code|BMI.W           loc_196E6|0-241-182-128
103802|code|MOVS            R3, #0x2D ; '-'|45-35
103804|code|STRB            R3, [R6]|51-112
103806|code|LDRB.W          R3, [R9,#8]|153-248-8-48
103810|code|STRB.W          R11, [R6,#2]|134-248-2-176
103814|code|LDR             R2, [R7,#0x994+var_968]|250-106
103816|code|STRB            R3, [R6,#1]|115-112
103818|code|LDR.W           R5, [R9,#4]|217-248-4-80
103822|code|ADD.W           R8, R2, #3|2-241-3-8
103826|code|CMP             R5, #0|0-45
103828|code|BEQ.W           loc_197F2|0-240-45-129
103832|code|MOV             R0, R5; s|40-70
103834|code|BLX             strlen|253-247-66-235
103838|code|MOVS            R3, #0x4D ; 'M'|77-35
103840|code|MOV             R1, R5|41-70
103842|code|MOV             R4, R0|4-70
103844|code|MOV             R2, R0|2-70
103846|code|ADDS            R0, R6, #3|240-28
103848|code|BLX             __memcpy_chk|253-247-46-232
103852|code|ADDS            R3, R4, #3|227-28
103854|code|CMP             R8, R3|152-69
103856|code|ADD.W           R2, R4, #4|4-241-4-2
103860|code|BLS.W           loc_197FE|64-242-35-129
103864|code|ADD             R3, R6|51-68
103866|code|ADD.W           R2, R6, R8|6-235-8-2
103870|code|STRB.W          R11, [R3],#1|3-248-1-187
103874|code|CMP             R3, R2|147-66
103876|code|BNE             loc_195BE|251-209
103878|code|LDR             R3, [R7,#0x994+var_968]|251-106
103880|code|ADDS            R2, R3, #4|26-29
103882|code|STRB.W          R11, [R6,R8]|6-248-8-176
103886|code|LDR             R3, [R7,#0x994+var_970]|123-106
103888|code|LDR.W           R0, [R9]; s|217-248-0-0
103892|code|ADDS            R5, R3, #2|157-28
103894|code|ADD             R5, R2|21-68
103896|code|CBZ             R0, loc_19612|216-177
103898|code|STR             R2, [R7,#0x994+var_940]|122-101
103900|code|BLX             strlen|253-247-32-235
103904|code|LDR             R2, [R7,#0x994+var_940]|122-109
103906|code|ADD.W           R4, R8, #3|8-241-3-4
103910|code|ADD             R8, R6|176-68
103912|code|MOVS            R3, #0x2D ; '-'|45-35
103914|code|STRB            R3, [R6,R2]|179-84
103916|code|STRB.W          R3, [R8,#2]|136-248-2-48
103920|code|LDR.W           R1, [R9]; src|217-248-0-16
103924|code|MOV             R10, R0|130-70
103926|code|ADDS            R0, R6, R4; dest|48-25
103928|code|MOV             R2, R10; n|82-70
103930|code|BLX             memcpy|253-247-254-234
103934|code|LDR.W           R2, [R9,#4]|217-248-4-32
103938|code|ADD.W           R3, R10, R4|10-235-4-3
103942|code|CMP             R2, #0|0-42
103944|code|BEQ.W           loc_199AE|0-240-209-129
103948|code|MOVS            R2, #0x3D ; '='|61-34
103950|code|STRB            R2, [R6,R3]|242-84
103952|code|ADDS            R2, R3, #1|90-28
103954|code|CMP             R5, R2|149-66
103956|code|BLS.W           loc_199B6|64-242-207-129
103960|code|ADDS            R3, R6, R2|179-24
103962|code|ADDS            R2, R6, R5|114-25
103964|code|STRB.W          R11, [R3],#1|3-248-1-187
103968|code|CMP             R3, R2|147-66
103970|code|BNE             loc_1961C|251-209
103972|code|ADD.W           R10, R5, #1|5-241-1-10
103976|code|STRB.W          R11, [R6,R5]|6-248-5-176
103980|code|RSB.W           R3, R5, #0x4D ; 'M'|197-241-77-3
103984|code|STR             R3, [R7,#0x994+shortopts]|59-99
103986|code|STRB.W          R11, [R6,R10]|6-248-10-176
103990|code|ADD.W           R8, R5, #2|5-241-2-8
103994|code|LDR.W           R1, [R9,#0x10]; msgid|217-248-16-16
103998|code|LDRB.W          R3, [R9,#0xA]|153-248-10-48
104002|code|UBFX.W          R3, R3, #4, #1|195-243-0-19
104006|code|STR             R3, [R7,#0x994+var_940]|123-101
104008|code|CMP             R1, #0|0-41
104010|code|BEQ.W           loc_19760|0-240-137-128
104014|code|MOVS            R0, #0; domainname|0-32
104016|code|MOVS            R2, #5; category|5-34
104018|code|BLX             dcgettext|253-247-16-234
104022|code|LDR.W           R3, [R9,#0x18]|217-248-24-48
104026|code|ADDS            R3, #0|0-51
104028|code|IT NE|24-191
104030|code|MOVNE           R3, #1|1-35
104032|code|MOV             R4, R0|4-70
104034|code|CMP             R3, #0|0-43
104036|code|BNE.W           loc_19772|64-240-133-128
104040|code|MOV             R0, R4; s|32-70
104042|code|MOV             R9, R4|161-70
104044|code|BLX             strlen|253-247-216-234
104048|code|MOV             R3, R6|51-70
104050|code|LDR             R6, [R7,#0x994+shortopts]|62-107
104052|code|MOV             R12, R10|212-70
104054|code|MOV             R10, R8|194-70
104056|code|MOV             R8, R3|152-70
104058|code|MOV             R5, R0|5-70
104060|code|CMP             R6, R5|174-66
104062|code|BCS             loc_196E2|48-210
104064|code|CMP             R6, #0|0-46
104066|code|BEQ.W           loc_19820|0-240-205-128
104070|code|LDRB.W          R2, [R9,R6]|25-248-6-32
104074|code|ADD.W           R3, R9, R6|9-235-6-3
104078|code|MOV             R4, R6|52-70
104080|code|CMP             R2, #0x20 ; ' '|32-42
104082|code|BNE             loc_1969E|4-209
104084|code|B               loc_1973E|83-224
104086|code|LDRB.W          R2, [R3,#-1]!|19-248-1-45
104090|code|CMP             R2, #0x20 ; ' '|32-42
104092|code|BEQ             loc_1973E|79-208
104094|code|SUBS            R4, #1|1-60
104096|code|BNE             loc_19696|249-209
104098|code|CMP             R5, R4|165-66
104100|code|BLS             loc_196C2|13-217
104102|code|LDRB.W          R2, [R9,R4]|25-248-4-32
104106|code|ADD.W           R3, R9, R4|9-235-4-3
104110|code|CMP             R2, #0x20 ; ' '|32-42
104112|code|BEQ             loc_196BC|4-208
104114|code|B               loc_196C2|6-224
104116|code|LDRB.W          R2, [R3,#1]!|19-248-1-47
104120|code|CMP             R2, #0x20 ; ' '|32-42
104122|code|BNE             loc_196C2|2-209
104124|code|ADDS            R4, #1|1-52
104126|code|CMP             R5, R4|165-66
104128|code|BHI             loc_196B4|248-216
104130|code|SUBS            R5, R5, R4|45-27
104132|code|CBZ             R5, loc_196E4|117-177
104134|code|ADD             R9, R4|161-68
104136|code|CMP.W           R10, #0|186-241-0-15
104140|code|BEQ             loc_1967C|214-208
104142|code|ADD.W           R3, R8, #0xFFFFFFFF|8-241-255-51
104146|code|ADD.W           R2, R8, R12|8-235-12-2
104150|code|STRB.W          R11, [R3,#1]!|3-248-1-191
104154|code|CMP             R3, R2|147-66
104156|code|BNE             loc_196D6|251-209
104158|code|CMP             R6, R5|174-66
104160|code|BCC             loc_19680|206-211
104162|code|CBNZ            R5, loc_19712|181-185
104164|code|MOV             R6, R8|70-70
104166|code|LDR             R3, [R7,#0x994+var_950]|123-108
104168|code|LDR             R2, [R7,#0x994+msgid]|58-108
104170|code|LDR             R1, [R7,#0x994+var_944]|57-109
104172|code|LDR             R3, [R3,#4]|91-104
104174|code|ADDS            R2, #1|1-50
104176|code|ADDS            R1, #0x1C|28-49
104178|code|STR             R2, [R7,#0x994+msgid]|58-100
104180|code|CMP             R2, R3|154-66
104182|code|STR             R1, [R7,#0x994+var_944]|57-101
104184|code|BCC.W           loc_19562|255-244-51-175
104188|code|LDR.W           R10, [R7,#0x994+var_950]|215-248-68-160
104192|code|LDRB.W          R3, [R10,#0x108]|154-248-8-49
104196|code|LDR.W           SP, [R7,#0x994+var_990]|215-248-4-208
104200|code|ORR.W           R3, R3, #1|67-240-1-3
104204|code|STRB.W          R3, [R10,#0x108]|138-248-8-49
104208|code|B               loc_190DE|229-228
104210|code|MOV             R4, R5|44-70
104212|code|ADD.W           R3, R8, R10|8-235-10-3
104216|code|MOV             R1, R9; src|73-70
104218|code|MOV             R2, R4; n|34-70
104220|code|STR.W           R12, [R7,#0x994+var_940]|199-248-84-192
104224|code|MOV             R0, R3; dest|24-70
104226|code|BLX             memcpy|253-247-106-234
104230|code|MOVS            R2, #0|0-34
104232|code|MOVS            R1, #1|1-33
104234|code|MOV             R3, R0|3-70
104236|code|LDR             R0, [R7,#0x994+stream]|248-108
104238|code|STRB            R2, [R3,R4]|26-85
104240|code|MOV             R3, R8|67-70
104242|code|LDR             R2, [R7,#0x994+s1]|186-108
104244|code|BLX             __fprintf_chk|253-247-96-232
104248|code|LDR.W           R12, [R7,#0x994+var_940]|215-248-84-192
104252|code|B               loc_196A2|177-231
104254|code|SUBS            R2, R4, #1|98-30
104256|code|ADD.W           R3, R9, R2|9-235-2-3
104260|code|LDRB.W          R1, [R9,R2]|25-248-2-16
104264|code|CMP             R1, #0x20 ; ' '|32-41
104266|code|BNE             loc_19714|227-209
104268|code|MOV             R4, R2|20-70
104270|code|CMP             R4, #0|0-44
104272|code|BEQ             loc_196A2|167-208
104274|code|LDRB.W          R2, [R3,#-1]!|19-248-1-45
104278|code|SUBS            R1, R4, #1|97-30
104280|code|CMP             R2, #0x20 ; ' '|32-42
104282|code|BNE             loc_19714|219-209
104284|code|MOV             R4, R1|12-70
104286|code|B               loc_1974E|246-231
104288|code|LDR.W           R3, [R9,#0x18]|217-248-24-48
104292|code|LDR             R4, [R7,#0x994+var_98C]|188-104
104294|code|ADDS            R3, #0|0-51
104296|code|IT NE|24-191
104298|code|MOVNE           R3, #1|1-35
104300|code|CMP             R3, #0|0-43
104302|code|BEQ.W           loc_19668|63-244-123-175
104306|code|ADDW            R3, R7, #0x98C|7-246-140-19
104310|code|STR             R3, [R7,#0x994+var_978]|251-97
104312|code|ADDW            R3, R7, #0x58C|7-242-140-83
104316|code|MOV.W           R12, #0|79-240-0-12
104320|code|STR             R6, [R7,#0x994+var_984]|62-97
104322|code|MOV             R6, R4|38-70
104324|code|MOV             R5, R3|29-70
104326|code|MOV             R4, R9|76-70
104328|code|MOV             R9, R12|225-70
104330|code|ADD.W           R2, R7, #0x60 ; '`'|7-241-96-2
104334|code|STR.W           SP, [R7,#0x994+var_988]|199-248-12-208
104338|code|STR             R2, [R7,#0x994+var_960]|122-99
104340|code|LDR             R3, [R7,#0x994+var_940]|123-109
104342|code|CMP             R3, #0|0-43
104344|code|BNE             loc_19802|51-209
104346|code|LDR             R3, [R4,#0x18]|163-105
104348|code|LDR.W           R3, [R3,R9,LSL#2]|83-248-41-48
104352|code|CMP             R3, #0|0-43
104354|code|BEQ.W           loc_19B1E|0-240-188-129
104358|code|LDR             R2, [R7,#0x994+var_960]|122-107
104360|code|STR.W           R3, [R2,R9,LSL#2]|66-248-41-48
104364|code|ADD.W           R9, R9, #1|9-241-1-9
104368|code|CMP.W           R9, #4|185-241-4-15
104372|code|BNE             loc_19794|238-209
104374|code|MOV             R4, R6|52-70
104376|code|LDR             R6, [R7,#0x994+var_984]|62-105
104378|code|LDR             R3, [R7,#0x994+var_978]|251-105
104380|code|MOV             R0, R5|40-70
104382|code|SUBS            R3, R3, R5|91-27
104384|code|STR             R3, [R7,#0x994+var_97C]|187-97
104386|code|STR             R4, [SP,#0x2C+var_2C]|0-148
104388|code|MOVS            R2, #1|1-34
104390|code|LDR             R5, [R7,#0x994+var_960]|125-107
104392|code|MOV             R4, R0|4-70
104394|code|LDR             R1, [R7,#0x994+var_97C]|185-105
104396|code|LDR             R3, [R5]|43-104
104398|code|STR             R3, [SP,#0x2C+var_28]|1-147
104400|code|STR             R5, [R7,#0x994+var_960]|125-99
104402|code|LDR             R3, [R5,#4]|107-104
104404|code|MOV             R5, R3|29-70
104406|code|STR             R5, [SP,#0x2C+var_24]|2-149
104408|code|LDR             R5, [R7,#0x994+var_960]|125-107
104410|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
104414|code|LDR             R5, [R5,#8]|173-104
104416|code|STR             R5, [SP,#0x2C+var_20]|3-149
104418|code|LDR             R5, [R7,#0x994+var_960]|125-107
104420|code|LDR             R5, [R5,#0xC]|237-104
104422|code|STR             R5, [SP,#0x2C+var_1C]|4-149
104424|code|BLX             __snprintf_chk|253-247-32-234
104428|code|LDR.W           SP, [R7,#0x994+var_988]|215-248-12-208
104432|code|B               loc_19668|58-231
104434|code|MOVS            R3, #3|3-35
104436|code|CMP             R8, R3|152-69
104438|code|MOV.W           R2, #4|79-240-4-2
104442|code|BHI.W           loc_195B8|63-246-221-174
104446|code|MOV             R8, R3|152-70
104448|code|B               loc_195CA|227-230
104450|code|LDR             R3, [R7,#0x994+var_978]|251-105
104452|code|MOV             R0, R9|72-70
104454|code|MOV             R1, R5|41-70
104456|code|SUBS            R3, R3, R5|91-27
104458|code|STR             R3, [R7,#0x994+var_97C]|187-97
104460|code|MOV             R2, R3|26-70
104462|code|LDR             R3, [R4,#0x18]|163-105
104464|code|BLX             R3|152-71
104466|code|CMP             R0, #0|0-40
104468|code|BEQ.W           loc_19AFC|0-240-114-129
104472|code|ADDS            R0, #1|1-48
104474|code|MOV             R3, R5|43-70
104476|code|ADD             R5, R0|5-68
104478|code|B               loc_197A0|191-231
104480|code|MOV             R4, R6|52-70
104482|code|B               loc_196A2|62-231
104484|code|LDR             R0, [R5,#4]|104-104
104486|code|B               loc_194CC|81-230
104488|code|LDR             R1, [R2,#0x14]|81-105
104490|code|CMP             R1, #0|0-41
104492|code|BEQ.W           loc_19416|63-244-243-173
104496|code|LDRB            R2, [R2,#0xA]|146-122
104498|code|LSLS            R0, R2, #0x1E|144-7
104500|code|ITET MI|74-191
104502|code|LDRMI           R2, [R1]|10-104
104504|code|MOVPL           R2, #1|1-34
104506|code|ADDMI           R2, #1|1-50
104508|code|STR             R2, [R1]|10-96
104510|code|B               loc_19416|234-229
104512|code|LDR             R3, [R7,#0x994+var_958]|251-107
104514|code|LDR             R4, [R3,#0x14]|92-105
104516|code|MOV             R0, R4|32-70
104518|code|BL              getBootParameters|0-240-153-249
104522|code|MOV             R8, R0|128-70
104524|code|CMP             R0, #0|0-40
104526|code|BEQ.W           loc_19B34|0-240-113-129
104530|code|ADD.W           R4, R7, #0x70 ; 'p'|7-241-112-4
104534|code|MOVS            R1, #0x2C ; ','; c|44-33
104536|code|MOVS            R3, #0|0-35
104538|code|MOV             R2, R4|34-70
104540|code|STR             R3, [R4]|35-96
104542|code|BL              splitString|1-240-247-255
104546|code|LDR.W           R3, [R10,#4]|218-248-4-48
104550|code|MOV             R9, R0|129-70
104552|code|CMP             R3, #0|0-43
104554|code|BEQ.W           loc_19B76|0-240-132-129
104558|code|MOVS            R5, #0|0-37
104560|code|MOV.W           R11, #0x2C ; ','|79-240-44-11
104564|code|MOV             R6, R5|46-70
104566|code|LDR.W           R1, [R10]|218-248-0-16
104570|code|ADD             R1, R5|41-68
104572|code|LDRB            R3, [R1,#9]|75-122
104574|code|CBZ             R3, loc_198AC|171-177
104576|code|LDR             R2, [R4]|34-104
104578|code|CMP             R3, R2|147-66
104580|code|BGT             loc_198AC|18-220
104582|code|ADD.W           R3, R3, #0x40000000|3-241-128-67
104586|code|SUBS            R3, #1|1-59
104588|code|LDR.W           R2, [R9,R3,LSL#2]|89-248-35-32
104592|code|LDRB            R3, [R2]|19-120
104594|code|CBZ             R3, loc_198AC|91-177
104596|code|MOV             R0, R2|16-70
104598|code|CMP             R3, #0x2B ; '+'|43-43
104600|code|IT EQ|8-191
104602|code|STRBEQ.W        R11, [R0]|128-248-0-176
104606|code|LDRB.W          R3, [R0,#1]!|16-248-1-63
104610|code|CMP             R3, #0|0-43
104612|code|BNE             loc_19896|247-209
104614|code|MOV             R0, R10|80-70
104616|code|BL              sub_18CBC|255-247-8-250
104620|code|LDR.W           R3, [R10,#4]|218-248-4-48
104624|code|ADDS            R6, #1|1-54
104626|code|ADDS            R5, #0x1C|28-53
104628|code|CMP             R6, R3|158-66
104630|code|BCC             loc_19876|222-211
104632|code|MOV             R0, R9; ptr|72-70
104634|code|BL              deallocateStrings|1-240-185-255
104638|code|CMP.W           R8, #0|184-241-0-15
104642|code|BEQ.W           loc_19118|63-244-41-172
104646|code|MOV             R0, R8; ptr|64-70
104648|code|BLX             free|252-247-220-238
104652|code|B               loc_19118|36-228
104654|code|LDR             R2, [R7,#0x994+var_958]|250-107
104656|code|LDR.W           R3, [R10,#4]|218-248-4-48
104660|code|LDR             R2, [R2,#0x14]|82-105
104662|code|STR             R2, [R7,#0x994+var_940]|122-101
104664|code|CMP             R3, #0|0-43
104666|code|BEQ.W           loc_19126|63-244-36-172
104670|code|LDR             R3, =(aSS_1 - 0x198EC); "%s_%s"|129-75
104672|code|MOVS            R4, #0|0-36
104674|code|MOV             R5, R4|37-70
104676|code|MOV.W           R9, #0x5F ; '_'|79-240-95-9
104680|code|ADD             R3, PC; "%s_%s"|123-68
104682|code|STR             R3, [R7,#0x994+var_950]|123-100
104684|code|LDR.W           R11, [R7,#0x994+var_940]|215-248-84-176
104688|code|LDR.W           R6, [R10]|218-248-0-96
104692|code|MOV             R0, R11; s|88-70
104694|code|BLX             strlen|253-247-148-233
104698|code|ADDS            R3, R6, R4|51-25
104700|code|STR             R3, [R7,#0x994+var_944]|59-101
104702|code|LDRB            R2, [R3,#0xA]|154-122
104704|code|LSLS            R3, R2, #0x1C|19-7
104706|code|MOV             R8, R0|128-70
104708|code|BPL             loc_19988|64-213
104710|code|LDR             R6, [R6,R4]|54-89
104712|code|CMP             R6, #0|0-46
104714|code|BEQ             loc_19988|61-208
104716|code|MOV             R0, R6; s|48-70
104718|code|STR.W           SP, [R7,#0x994+stream]|199-248-76-208
104722|code|BLX             strlen|253-247-134-233
104726|code|ADD.W           R1, R8, #2|8-241-2-1
104730|code|MOVS            R2, #1|1-34
104732|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
104736|code|ADD             R1, R0|1-68
104738|code|ADDS            R0, R1, #7|200-29
104740|code|BIC.W           R0, R0, #7|32-240-7-0
104744|code|SUB.W           SP, SP, R0|173-235-0-13
104748|code|LDR             R0, [R7,#0x994+var_950]|120-108
104750|code|ADD.W           R8, SP, #0x2C+var_14|13-241-24-8
104754|code|STR.W           R11, [SP,#0x2C+var_28]|205-248-4-176
104758|code|STR             R0, [SP,#0x2C+var_2C]|0-144
104760|code|MOV             R0, R8|64-70
104762|code|STR             R6, [SP,#0x2C+var_24]|2-150
104764|code|MOV             R11, R8|195-70
104766|code|BLX             __snprintf_chk|253-247-118-233
104770|code|LDRB.W          R6, [SP,#0x2C+var_14]|157-248-24-96
104774|code|CBZ             R6, loc_19978|190-177
104776|code|CMP             R6, #0x2D ; '-'|45-46
104778|code|IT EQ|8-191
104780|code|STRBEQ.W        R9, [R11]|139-248-0-144
104784|code|BEQ             loc_19970|14-208
104786|code|BLX             __ctype_b_loc|253-247-230-232
104790|code|SXTH            R6, R6|54-178
104792|code|LDR             R3, [R0]|3-104
104794|code|LDRH.W          R3, [R3,R6,LSL#1]|51-248-22-48
104798|code|LSLS            R0, R3, #0x16|152-5
104800|code|BPL             loc_19970|6-213
104802|code|BLX             __ctype_toupper_loc|252-247-228-239
104806|code|LDR             R3, [R0]|3-104
104808|code|LDR.W           R3, [R3,R6,LSL#2]|83-248-38-48
104812|code|STRB.W          R3, [R11]|139-248-0-48
104816|code|LDRB.W          R6, [R11,#1]!|27-248-1-111
104820|code|CMP             R6, #0|0-46
104822|code|BNE             loc_19948|231-209
104824|code|MOV             R0, R8; name|64-70
104826|code|BLX             getenv|253-247-72-234
104830|code|CBZ             R0, loc_19984|8-177
104832|code|LDRB            R3, [R0]|3-120
104834|code|CBNZ            R3, loc_19998|75-185
104836|code|LDR.W           SP, [R7,#0x994+stream]|215-248-76-208
104840|code|LDR.W           R3, [R10,#4]|218-248-4-48
104844|code|ADDS            R5, #1|1-53
104846|code|ADDS            R4, #0x1C|28-52
104848|code|CMP             R5, R3|157-66
104850|code|BCC             loc_198EC|171-211
104852|code|B.W             loc_19126|255-247-199-187
104856|code|MOV             R2, R0|2-70
104858|code|LDR             R1, [R7,#0x994+var_944]|57-109
104860|code|MOV             R0, R10|80-70
104862|code|BL              sub_18CBC|255-247-141-249
104866|code|CMP             R0, #0|0-40
104868|code|BNE             loc_19984|238-209
104870|code|LDR.W           SP, [R7,#0x994+stream]|215-248-76-208
104874|code|B.W             loc_19126|255-247-188-187
104878|code|MOV             R2, R3|26-70
104880|code|CMP             R5, R2|149-66
104882|code|BHI.W           loc_19618|63-246-49-174
104886|code|MOV             R5, R2|21-70
104888|code|B               loc_19624|52-230
104890|code|STR.W           R12, [R7,#0x994+stream]|199-248-76-192
104894|code|MOV             R4, R11|92-70
104896|code|BL              logMallocError|0-240-62-253
104900|code|LDR.W           R12, [R7,#0x994+stream]|215-248-76-192
104904|code|B.W             loc_18F70|255-247-210-186
104908|code|CBZ             R4, loc_199DA|44-177
104910|code|BLX             __errno_location|253-247-196-233
104914|code|LDR             R3, [R0]|3-104
104916|code|CMP             R3, #2|2-43
104918|code|BEQ.W           loc_192AC|63-244-105-172
104922|code|LDRB.W          R3, [R10,#0x108]|154-248-8-49
104926|code|ORR.W           R3, R3, #2|67-240-2-3
104930|code|STRB.W          R3, [R10,#0x108]|138-248-8-49
104934|code|B               loc_192AC|97-228
104936|code|LDR             R1, =(aFileSProcessin - 0x199F2); "file '%s' processing error."|63-73
104938|code|MOVS            R2, #5; category|5-34
104940|code|MOV             R0, R8; domainname|64-70
104942|code|ADD             R1, PC; "file '%s' processing error."|121-68
104944|code|BLX             dcgettext|253-247-64-232
104948|code|LDR             R2, [R7,#0x994+var_944]|58-109
104950|code|MOV             R1, R0|1-70
104952|code|MOVS            R0, #3|3-32
104954|code|BL              logMessage|0-240-149-252
104958|code|LDRB.W          R3, [R10,#0x108]|154-248-8-49
104962|code|ORR.W           R3, R3, #2|67-240-2-3
104966|code|STRB.W          R3, [R10,#0x108]|138-248-8-49
104970|code|B               loc_1928A|62-228
104972|code|LDR             R2, =(aDeviceDirector+0x20 - 0x19A18); " %s"|55-74
104974|code|MOVS            R1, #1|1-33
104976|code|LDR             R3, [R7,#0x994+var_978]|251-105
104978|code|LDR             R0, [R7,#0x994+stream]|248-108
104980|code|ADD             R2, PC; " %s"|122-68
104982|code|BLX             __fprintf_chk|252-247-240-238
104986|code|B               loc_1952A|134-229
104988|code|LDR.W           R10, [R7,#0x994+s1]|215-248-72-160
104992|code|BL              logMallocError|0-240-14-253
104996|code|LDR             R3, [R4,#0xC]|227-104
104998|code|CMP             R3, #0|0-43
105000|code|BEQ.W           loc_192A2|63-244-59-172
105004|code|LDR             R2, [R4,#8]|162-104
105006|code|SUBS            R3, #1|1-59
105008|code|STR             R3, [R4,#0xC]|227-96
105010|code|LDR.W           R0, [R2,R3,LSL#2]; ptr|82-248-35-0
105014|code|BLX             free|252-247-38-238
105018|code|LDR             R3, [R4,#0xC]|227-104
105020|code|CMP             R3, #0|0-43
105022|code|BNE             loc_19A2C|245-209
105024|code|LDR             R0, [R7,#0x994+stream]; stream|248-108
105026|code|BLX             fclose|253-247-26-233
105030|code|LDR.W           SP, [R7,#0x994+var_950]|215-248-68-208
105034|code|B               loc_192AC|47-228
105036|code|LDR             R4, [R7,#0x994+stream]|252-108
105038|code|MOVS            R1, #1; size|1-33
105040|code|LDR             R0, =(asc_22050 - 0x19A5A); " ["|39-72
105042|code|MOVS            R2, #2; n|2-34
105044|code|MOV             R3, R4; s|35-70
105046|code|ADD             R0, PC; " ["|120-68
105048|code|BLX             fwrite|253-247-200-232
105052|code|LDR             R1, =(aUnknownOption+8 - 0x19A66); "option"|37-73
105054|code|MOVS            R2, #5; category|5-34
105056|code|MOVS            R0, #0; domainname|0-32
105058|code|ADD             R1, PC; "option" ; msgid|121-68
105060|code|BLX             dcgettext|253-247-6-232
105064|code|MOV             R1, R4; stream|33-70
105066|code|BLX             fputs|253-247-202-233
105070|code|LDR             R0, =(asc_22054 - 0x19A7A); " ...]"|34-72
105072|code|MOVS            R1, #1; size|1-33
105074|code|MOVS            R2, #5; n|5-34
105076|code|MOV             R3, R4; s|35-70
105078|code|ADD             R0, PC; " ...]"|120-68
105080|code|BLX             fwrite|253-247-184-232
105084|code|B               loc_1951E|79-229
105086|code|LDR             R4, [R7,#0x994+longopts]|188-106
105088|code|B.W             loc_18F82|255-247-127-186
105092|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x18E9E|2-182-1-0
105096|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
105100|data|DCD aOptions - 0x18ECE; "options"|58-145-0-0
105104|data|DCD j_resetOptions+1 - 0x18ED0|177-255-255-255
105108|data|DCD aNo - 0x18F34; "no-"|220-144-0-0
105112|data|DCD aSS_0 - 0x18F42; "%s%s"|210-144-0-0
105116|data|DCD 0x30C|12-3-0-0
105120|data|DCD 0x31C|28-3-0-0
105124|data|DCD aUnknownOption - 0x19084; "unknown option"|152-143-0-0
105128|data|DCD aSCC - 0x19092; "%s: %c%c"|154-143-0-0
105132|data|DCD aMissingOperand - 0x1909A; "missing operand"|158-143-0-0
105136|data|DCD aSCC - 0x190A2; "%s: %c%c"|138-143-0-0
105140|data|DCD aInvalidUnicode+0x18 - 0x19158; "r"|8-170-0-0
105144|data|DCD loc_18A88+1 - 0x1921E|107-248-255-255
105148|data|DCD sub_18A70+1 - 0x19244|45-248-255-255
105152|data|DCD 0x340|64-3-0-0
105156|data|DCD 0x330|48-3-0-0
105160|data|DCD 0x36C|108-3-0-0
105164|data|DCD aUsage - 0x194F2; "Usage"|86-139-0-0
105168|data|DCD 0x350|80-3-0-0
105172|data|DCD aS - 0x19510; ": %s"|72-160-0-0
105176|data|DCD aCannotConnectT+0x1C - 0x1954C; "%s\n"|184-129-0-0
105180|data|DCD aWindow010lxCha+0x24 - 0x19556; ""|38-133-0-0
105184|data|DCD aWindow010lxCha+0x24 - 0x1955E; ""|30-133-0-0
105188|data|DCD aSS_1 - 0x198EC; "%s_%s"|112-135-0-0
105192|data|DCD aFileSProcessin - 0x199F2; "file '%s' processing error."|114-134-0-0
105196|data|DCD aDeviceDirector+0x20 - 0x19A18; " %s"|20-141-0-0
105200|data|DCD asc_22050 - 0x19A5A; " ["|246-133-0-0
105204|data|DCD aUnknownOption+8 - 0x19A66; "option"|190-133-0-0
105208|data|DCD asc_22054 - 0x19A7A; " ...]"|218-133-0-0
105212|code|MOV             R4, R6|52-70
105214|code|LDR             R6, [R7,#0x994+var_984]|62-105
105216|code|MOV             R0, R5|40-70
105218|code|MOV             R12, R9|204-70
105220|code|LDR             R3, [R7,#0x994+var_960]|123-107
105222|code|LDR             R5, [R7,#0x994+shortopts]|61-107
105224|code|LDR             R2, [R7,#0x994+s]|58-104
105226|code|ADD.W           R12, R3, R12,LSL#2|3-235-140-12
105230|code|ADD.W           R3, R7, #0x70 ; 'p'|7-241-112-3
105234|code|STR.W           R2, [R12],#4|76-248-4-43
105238|code|CMP             R12, R3|156-69
105240|code|BNE             loc_19B12|251-209
105242|code|STR             R5, [R7,#0x994+shortopts]|61-99
105244|code|B               loc_197C2|81-230
105246|code|LDR             R3, [R7,#0x994+var_978]|251-105
105248|code|MOV             R4, R6|52-70
105250|code|MOV             R0, R5|40-70
105252|code|MOV             R12, R9|204-70
105254|code|SUBS            R3, R3, R5|91-27
105256|code|LDR             R6, [R7,#0x994+var_984]|62-105
105258|code|STR             R3, [R7,#0x994+var_97C]|187-97
105260|code|B               loc_19B04|234-231
105262|code|STR             R4, [R7,#0x994+var_968]|252-98
105264|code|STR             R4, [R7,#0x994+var_970]|124-98
105266|code|B               loc_194E6|216-228
105268|code|MOV             R0, R4; name|32-70
105270|code|BLX             getenv|253-247-106-233
105274|code|CMP             R0, #0|0-40
105276|code|BEQ.W           loc_19118|63-244-236-170
105280|code|ADD.W           R4, R7, #0x70 ; 'p'|7-241-112-4
105284|code|MOVS            R1, #0x2C ; ','; c|44-33
105286|code|STR.W           R8, [R4]|196-248-0-128
105290|code|MOV             R2, R4|34-70
105292|code|BL              splitString|1-240-128-254
105296|code|LDR.W           R3, [R10,#4]|218-248-4-48
105300|code|MOV             R9, R0|129-70
105302|code|CMP             R3, #0|0-43
105304|code|BNE.W           loc_1986E|127-244-137-174
105308|code|BL              deallocateStrings|1-240-104-254
105312|code|B.W             loc_19118|255-247-218-186
105316|code|LDR             R2, [R7,#0x994+var_944]|58-109
105318|code|LDR             R3, [R6]|51-104
105320|code|LDR             R0, [R2]|16-104
105322|code|LDR             R2, [R7,#0x994+var_940]|122-109
105324|code|LDR             R1, [R2]|17-104
105326|code|B.W             loc_190C8|255-247-171-186
105330|code|BLX             __stack_chk_fail|252-247-98-239
105334|code|BL              deallocateStrings|1-240-91-254
105338|code|B               loc_198C6|164-230
105340|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x19B84)|49-75
105342|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|50-74
105344|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
105346|code|PUSH.W          {R4-R11,LR}|45-233-240-79
105350|code|SUB.W           SP, SP, #0x1000|173-245-128-93
105354|code|LDR.W           R9, [R3,R2]; __stack_chk_guard|83-248-2-144
105358|code|SUB             SP, SP, #0xC|131-176
105360|code|ADD.W           R2, SP, #0x1030+var_30|13-245-128-82
105364|code|MOV             R6, R0|6-70
105366|code|ADDS            R2, #4|4-50
105368|code|LDR.W           R3, [R9]|217-248-0-48
105372|code|STR             R3, [R2]|19-96
105374|code|BLX             strlen|253-247-64-232
105378|code|MOV             R4, R0|4-70
105380|code|MOVS            R0, #1; nmemb|1-32
105382|code|MOV             R1, R0; size|1-70
105384|code|BLX             calloc|252-247-216-239
105388|code|MOV             R7, R0|7-70
105390|code|CMP             R0, #0|0-40
105392|code|BEQ             loc_19C32|63-208
105394|code|LDR             R0, =(aProcCmdline - 0x19BBA); "/proc/cmdline"|38-72
105396|code|LDR             R1, =(aInvalidUnicode+0x18 - 0x19BBC); "r"|38-73
105398|code|ADD             R0, PC; "/proc/cmdline"|120-68
105400|code|ADD             R1, PC; "r" ; modes|121-68
105402|code|BLX             fopen|252-247-146-238
105406|code|MOV             R8, R0|128-70
105408|code|CBZ             R0, loc_19C00|240-177
105410|code|ADD             R0, SP, #0x1030+s; s|1-168
105412|code|MOV.W           R1, #0x1000; n|79-244-128-81
105416|code|MOV             R2, R8; stream|66-70
105418|code|BLX             fgets|252-247-236-239
105422|code|CBZ             R0, loc_19BFA|160-177
105424|code|LDR             R5, =(asc_22170 - 0x19BDA); " \n"|32-77
105426|code|ADD.W           R10, R4, #1|4-241-1-10
105430|code|ADD             R5, PC; " \n"|125-68
105432|code|B               loc_19BEE|9-224
105434|code|MOV             R1, R6; s2|49-70
105436|code|MOV             R2, R4; n|34-70
105438|code|BLX             strncmp|252-247-126-237
105442|code|CBNZ            R0, loc_19BEC|24-185
105444|code|LDRB.W          R3, [R11,R4]|27-248-4-48
105448|code|CMP             R3, #0x3D ; '='|61-43
105450|code|BEQ             loc_19C1C|23-208
105452|code|MOVS            R0, #0; s|0-32
105454|code|MOV             R1, R5; delim|41-70
105456|code|BLX             strtok|252-247-200-237
105460|code|MOV             R11, R0|131-70
105462|code|CMP             R0, #0|0-40
105464|code|BNE             loc_19BDA|239-209
105466|code|MOV             R0, R8; stream|64-70
105468|code|BLX             fclose|253-247-60-232
105472|code|ADD.W           R3, SP, #0x1030+var_30|13-245-128-83
105476|code|MOV             R0, R7|56-70
105478|code|ADDS            R3, #4|4-51
105480|code|LDR             R2, [R3]|26-104
105482|code|LDR.W           R3, [R9]|217-248-0-48
105486|code|CMP             R2, R3|154-66
105488|code|BNE             loc_19C3E|21-209
105490|code|ADD.W           SP, SP, #0x1000|13-245-128-93
105494|code|ADD             SP, SP, #0xC|3-176
105496|code|POP.W           {R4-R11,PC}|189-232-240-143
105500|code|ADD.W           R0, R11, R10|11-235-10-0
105504|code|BLX             __strdup|252-247-64-238
105508|code|MOV             R3, R0|3-70
105510|code|CBZ             R0, loc_19C38|56-177
105512|code|MOV             R0, R7; ptr|56-70
105514|code|MOV             R7, R3|31-70
105516|code|BLX             free|252-247-42-237
105520|code|B               loc_19BEC|220-231
105522|code|BL              logMallocError|0-240-5-252
105526|code|B               loc_19C00|227-231
105528|code|BL              logMallocError|0-240-2-252
105532|code|B               loc_19BEC|214-231
105534|code|BLX             __stack_chk_fail|252-247-252-238
105538|data|ALIGN 4|0-191
105540|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x19B84|28-169-1-0
105544|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
105548|data|DCD aProcCmdline - 0x19BBA; "/proc/cmdline"|166-133-0-0
105552|data|DCD aInvalidUnicode+0x18 - 0x19BBC; "r"|164-159-0-0
105556|data|DCD asc_22170 - 0x19BDA; " \n"|150-133-0-0
105560|code|PUSH            {R4,R5,LR}|48-181
105562|code|SUB             SP, SP, #0xC|131-176
105564|code|LDR             R5, [R3]|29-104
105566|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
105570|code|STR             R2, [SP,#0x18+var_18]|0-146
105572|code|MOVS            R2, #1|1-34
105574|code|MOV             R4, R1|12-70
105576|code|STR             R5, [SP,#0x18+var_14]|1-149
105578|code|BLX             __vsnprintf_chk|252-247-116-237
105582|code|CMP             R0, #0|0-40
105584|code|IT LT|184-191
105586|code|MOVLT           R0, #0|0-32
105588|code|BLT             loc_19C7C|2-219
105590|code|CMP             R0, R4|160-66
105592|code|IT CS|40-191
105594|code|MOVCS           R0, R4|32-70
105596|code|ADD             SP, SP, #0xC|3-176
105598|code|POP             {R4,R5,PC}|48-189
105600|code|LDM             R2, {R2,R3}|12-202
105602|code|B               sub_19C58|233-231
105604|code|PUSH.W          {R4-R11,LR}|45-233-240-79
105608|code|MOVS            R3, #0|0-35
105610|code|LDR             R5, [R2,#8]|149-104
105612|code|MOV             R6, R2|22-70
105614|code|LDR             R7, [R2,#0xC]|215-104
105616|code|SUB             SP, SP, #0xC|131-176
105618|code|STRB            R3, [R0]|3-112
105620|code|MOV             R10, R0|130-70
105622|code|LDR             R2, [R2]|18-104
105624|code|ADD.W           R11, R0, R1|0-235-1-11
105628|code|ADD             R7, R5|47-68
105630|code|MOV             R4, R0|4-70
105632|code|CBZ             R2, loc_19CC8|146-177
105634|code|LDR             R3, [R6,#4]|115-104
105636|code|BL              sub_19C58|255-247-216-255
105640|code|LDR             R2, =(asc_22180 - 0x19CAE); ": "|31-74
105642|code|ADD             R2, PC; ": " ; format|122-68
105644|code|ADD             R0, R10|80-68
105646|code|CMP             R0, R11|88-69
105648|code|IT CS|40-191
105650|code|MOVCS           R0, R11; s|88-70
105652|code|RSB.W           R1, R0, R11; maxlen|192-235-11-1
105656|code|MOV             R4, R0|4-70
105658|code|BLX             snprintf|252-247-238-237
105662|code|ADD             R0, R4|32-68
105664|code|CMP             R0, R11|88-69
105666|code|IT CS|40-191
105668|code|MOVCS           R0, R11|88-70
105670|code|MOV             R4, R0|4-70
105672|code|CMP             R5, R7|189-66
105674|code|BCS             loc_19D1E|40-210
105676|code|LDR.W           R9, =(aS_1+4 - 0x19CD8); " "|223-248-92-144
105680|code|LDR.W           R8, =(a22x - 0x19CDA); "%2.2X"|223-248-92-128
105684|code|ADD             R9, PC; " "|249-68
105686|code|ADD             R8, PC; "%2.2X"|248-68
105688|code|LDR             R3, [R6,#8]|179-104
105690|code|RSB.W           R1, R4, R11; maxlen|196-235-11-1
105694|code|MOV             R0, R4; s|32-70
105696|code|MOV             R2, R9; format|74-70
105698|code|CMP             R3, R5|171-66
105700|code|BEQ             loc_19CF4|6-208
105702|code|BLX             snprintf|252-247-216-237
105706|code|ADD             R0, R4|32-68
105708|code|CMP             R0, R11|88-69
105710|code|IT CS|40-191
105712|code|MOVCS           R0, R11|88-70
105714|code|MOV             R4, R0|4-70
105716|code|STR.W           R8, [SP,#0x30+var_30]|205-248-0-128
105720|code|RSB.W           R1, R4, R11|196-235-11-1
105724|code|LDRB.W          LR, [R5],#1|21-248-1-235
105728|code|MOV             R0, R4|32-70
105730|code|MOVS            R2, #1|1-34
105732|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
105736|code|STR.W           LR, [SP,#0x30+var_2C]|205-248-4-224
105740|code|BLX             __snprintf_chk|252-247-142-239
105744|code|ADD             R0, R4|32-68
105746|code|CMP             R0, R11|88-69
105748|code|IT CS|40-191
105750|code|MOVCS           R0, R11|88-70
105752|code|CMP             R5, R7|189-66
105754|code|MOV             R4, R0|4-70
105756|code|BNE             loc_19CD8|220-209
105758|code|RSB.W           R0, R10, R4|202-235-4-0
105762|code|ADD             SP, SP, #0xC|3-176
105764|code|POP.W           {R4-R11,PC}|189-232-240-143
105768|data|DCD asc_22180 - 0x19CAE; ": "|210-132-0-0
105772|data|DCD aS_1+4 - 0x19CD8; " "|236-132-0-0
105776|data|DCD a22x - 0x19CDA; "%2.2X"|170-132-0-0
105780|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x19D3E)|51-75
105782|code|PUSH.W          {R4-R11,LR}|45-233-240-79
105786|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
105788|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|50-76
105790|code|SUB             SP, SP, #0x14|133-176
105792|code|MOV             R8, R2|144-70
105794|code|ADD             R2, SP, #0x38+var_28|4-170
105796|code|MOV             R6, R0|6-70
105798|code|MOV             R10, R1|138-70
105800|code|LDR             R7, [R3,R4]; __stack_chk_guard|31-89
105802|code|ADDS            R5, R6, R1|117-24
105804|code|MOV.W           R11, #0|79-240-0-11
105808|code|LDR.W           R0, [R8]|216-248-0-0
105812|code|STR.W           R11, [R2,#-8]!|66-248-8-189
105816|code|MOV             R1, R2|17-70
105818|code|LDR             R3, [R7]|59-104
105820|code|STR             R3, [SP,#0x38+var_2C]|3-147
105822|code|BL              getAddressName|0-240-177-252
105826|code|STRB.W          R11, [R6]|134-248-0-176
105830|code|MOV             R1, R10|81-70
105832|code|LDR.W           R2, [R8,#4]|216-248-4-32
105836|code|LDR.W           R3, [R8,#8]|216-248-8-48
105840|code|MOV             R9, R0|129-70
105842|code|MOV             R0, R6|48-70
105844|code|BL              sub_19C58|255-247-112-255
105848|code|LDR             R2, =(asc_22180 - 0x19D7E); ": "|36-74
105850|code|ADD             R2, PC; ": " ; format|122-68
105852|code|ADD             R0, R6|48-68
105854|code|CMP             R0, R5|168-66
105856|code|IT CS|40-191
105858|code|MOVCS           R0, R5; s|40-70
105860|code|SUBS            R1, R5, R0; maxlen|41-26
105862|code|MOV             R4, R0|4-70
105864|code|BLX             snprintf|252-247-134-237
105868|code|ADD             R0, R4|32-68
105870|code|CMP             R0, R5|168-66
105872|code|IT CS|40-191
105874|code|MOVCS           R0, R5; s|40-70
105876|code|MOV             R4, R0|4-70
105878|code|CMP.W           R9, #0|185-241-0-15
105882|code|BEQ             loc_19DA2|2-208
105884|code|LDRB.W          R3, [R9]|153-248-0-48
105888|code|CBNZ            R3, loc_19DDA|219-185
105890|code|LDR.W           LR, =(aP - 0x19DB0); "%p"|223-248-108-224
105894|code|MOV             R0, R4|32-70
105896|code|LDR.W           R3, [R8]|216-248-0-48
105900|code|ADD             LR, PC; "%p"|254-68
105902|code|STR             R3, [SP,#0x38+var_34]|1-147
105904|code|SUBS            R1, R5, R4|41-27
105906|code|MOVS            R2, #1|1-34
105908|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
105912|code|STR.W           LR, [SP,#0x38+var_38]|205-248-0-224
105916|code|BLX             __snprintf_chk|252-247-54-239
105920|code|ADD             R0, R4|32-68
105922|code|CMP             R0, R5|168-66
105924|code|IT CS|40-191
105926|code|MOVCS           R0, R5|40-70
105928|code|MOV             R4, R0|4-70
105930|code|LDR             R2, [SP,#0x38+var_2C]|3-154
105932|code|SUBS            R0, R4, R6|160-27
105934|code|LDR             R3, [R7]|59-104
105936|code|CMP             R2, R3|154-66
105938|code|BNE             loc_19E00|21-209
105940|code|ADD             SP, SP, #0x14|5-176
105942|code|POP.W           {R4-R11,PC}|189-232-240-143
105946|code|LDR             R2, =(aCheckingSDevic+0x14 - 0x19DE4); "%s"|14-74
105948|code|MOV             R3, R9|75-70
105950|code|SUBS            R1, R5, R0; maxlen|41-26
105952|code|ADD             R2, PC; "%s" ; format|122-68
105954|code|BLX             snprintf|252-247-90-237
105958|code|LDR             R3, [SP,#0x38+var_30]|2-155
105960|code|ADD             R0, R4|32-68
105962|code|CMP             R0, R5|168-66
105964|code|IT CS|40-191
105966|code|MOVCS           R0, R5|40-70
105968|code|MOV             R4, R0|4-70
105970|code|CMP             R3, #0|0-43
105972|code|BEQ             loc_19DCA|233-208
105974|code|LDR.W           LR, =(aX - 0x19E00); "+%X"|223-248-32-224
105978|code|STR             R3, [SP,#0x38+var_34]|1-147
105980|code|ADD             LR, PC; "+%X"|254-68
105982|code|B               loc_19DB0|215-231
105984|code|BLX             __stack_chk_fail|252-247-26-238
105988|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x19D3E|98-167-1-0
105992|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
105996|data|DCD asc_22180 - 0x19D7E; ": "|2-132-0-0
106000|data|DCD aP - 0x19DB0; "%p"|224-131-0-0
106004|data|DCD aCheckingSDevic+0x14 - 0x19DE4; "%s"|148-137-0-0
106008|data|DCD aX - 0x19E00; "+%X"|140-131-0-0
106012|code|CMP             R0, #0x10|16-40
106014|code|BHI             loc_19E30|7-216
106016|code|LDR             R3, =(off_340D0 - 0x19E2A); "ingio"|6-75
106018|code|ADD.W           R0, R0, R0,LSL#1|0-235-64-0
106022|code|ADD             R3, PC; off_340D0|123-68
106024|code|LDR.W           R0, [R3,R0,LSL#2]|83-248-32-0
106028|code|CBZ             R0, loc_19E36|24-177
106030|code|BX              LR|112-71
106032|code|LDR             R0, =(aWindow010lxCha+0x24 - 0x19E36); ""|3-72
106034|code|ADD             R0, PC; ""|120-68
106036|code|BX              LR|112-71
106038|code|LDR             R0, =(aWindow010lxCha+0x24 - 0x19E3C); ""|3-72
106040|code|ADD             R0, PC; ""|120-68
106042|code|B               locret_19E2E|248-231
106044|data|DCD off_340D0 - 0x19E2A; "ingio"|166-162-1-0
106048|data|DCD aWindow010lxCha+0x24 - 0x19E36; ""|70-124-0-0
106052|data|DCD aWindow010lxCha+0x24 - 0x19E3C; ""|64-124-0-0
106056|code|CMP             R0, #0x10|16-40
106058|code|BHI             loc_19E5E|8-216
106060|code|LDR             R3, =(off_340D0 - 0x19E56); "ingio"|7-75
106062|code|ADD.W           R0, R0, R0,LSL#1|0-235-64-0
106066|code|ADD             R3, PC; off_340D0|123-68
106068|code|ADD.W           R0, R3, R0,LSL#2|3-235-128-0
106072|code|LDR             R0, [R0,#4]|64-104
106074|code|CBZ             R0, loc_19E64|24-177
106076|code|BX              LR|112-71
106078|code|LDR             R0, =(aWindow010lxCha+0x24 - 0x19E64); ""|4-72
106080|code|ADD             R0, PC; ""|120-68
106082|code|BX              LR|112-71
106084|code|LDR             R0, =(aWindow010lxCha+0x24 - 0x19E6A); ""|3-72
106086|code|ADD             R0, PC; ""|120-68
106088|code|B               locret_19E5C|248-231
106090|data|ALIGN 4|0-191
106092|data|DCD off_340D0 - 0x19E56; "ingio"|122-162-1-0
106096|data|DCD aWindow010lxCha+0x24 - 0x19E64; ""|24-124-0-0
106100|data|DCD aWindow010lxCha+0x24 - 0x19E6A; ""|18-124-0-0
106104|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x19E8A)|12-75
106106|code|MOVW            R0, #0xAAAB|74-246-171-32
106110|code|LDR             R1, =(off_340D0 - 0x19E8C); "ingio"|12-73
106112|code|MOVT.W          R0, #0xAAAA|202-246-170-32
106116|code|LDR             R2, =(logCategoryFlags_ptr - 0x344A0)|11-74
106118|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
106120|code|ADD             R1, PC; off_340D0|121-68
106122|code|PUSH            {R4-R6}|112-180
106124|code|ADD.W           R4, R1, #0xCC|1-241-204-4
106128|code|LDR             R5, [R3,R2]; logCategoryFlags|157-88
106130|code|MOVS            R6, #0|0-38
106132|code|MOV             R2, R1|10-70
106134|code|SUBS            R3, R2, R1|83-26
106136|code|ADDS            R2, #0xC|12-50
106138|code|CMP             R2, R4|162-66
106140|code|MOV.W           R3, R3,ASR#2|79-234-163-3
106144|code|MUL.W           R3, R0, R3|0-251-3-243
106148|code|STRB            R6, [R5,R3]|238-84
106150|code|BCC             loc_19E96|246-211
106152|code|POP             {R4-R6}|112-188
106154|code|BX              LR|112-71
106156|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x19E8A|22-166-1-0
106160|data|DCD off_340D0 - 0x19E8C; "ingio"|68-162-1-0
106164|data|DCD logCategoryFlags_ptr - 0x344A0|248-2-0-0
106168|code|PUSH.W          {R3-R11,LR}|45-233-248-79
106172|code|MOV             R9, R0|129-70
106174|code|LDRB            R3, [R0]|3-120
106176|code|MOVW            R8, #0xAAAB|74-246-171-40
106180|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0x19ED2)|32-79
106182|code|MOVT.W          R8, #0xAAAA|202-246-170-40
106186|code|CMP             R3, #0x2D ; '-'|45-43
106188|code|LDR             R3, =(logCategoryName_all_ptr - 0x344A0)|31-75
106190|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
106192|code|ITTE EQ|6-191
106194|code|ADDEQ.W         R9, R0, #1|0-241-1-9
106198|code|MOVEQ           R6, #0|0-38
106200|code|MOVNE           R6, #1|1-38
106202|code|MOV             R0, R9; s1|72-70
106204|code|LDR             R1, [R7,R3]; "all" ; s2|249-88
106206|code|BLX             strcasecmp|252-247-190-235
106210|code|LDR.W           R10, =(off_340D0 - 0x19EF0); "ingio"|223-248-108-160
106214|code|LDR             R4, =(off_340D0 - 0x19EF2); "ingio"|27-76
106216|code|LDR.W           R11, =(off_340D0 - 0x19EF8); "ingio"|223-248-108-176
106220|code|ADD             R10, PC; off_340D0|250-68
106222|code|ADD             R4, PC; off_340D0|124-68
106224|code|ADD.W           R10, R10, #0xCC|10-241-204-10
106228|code|ADD             R11, PC; off_340D0|251-68
106230|code|CLZ.W           R5, R0|176-250-128-245
106234|code|LSRS            R5, R5, #5|109-9
106236|code|MOV             R0, R9; s1|72-70
106238|code|RSB.W           R3, R11, R4|203-235-4-3
106242|code|LDR             R2, =(logCategoryFlags_ptr - 0x344A0)|22-74
106244|code|CBNZ            R5, loc_19F32|173-185
106246|code|LDR             R3, [R4]; "ingio"|35-104
106248|code|MOV             R1, R3; s2|25-70
106250|code|CBZ             R3, loc_19F3C|187-177
106252|code|BLX             strcasecmp|252-247-166-235
106256|code|CBNZ            R0, loc_19F3C|160-185
106258|code|LDR             R1, =(off_340D0 - 0x19F22); "ingio"|19-73
106260|code|MOV             R3, #0xAAAAAAAB|74-246-171-35-202-246-170-35
106268|code|LDR             R2, =(logCategoryFlags_ptr - 0x344A0)|15-74
106270|code|ADD             R1, PC; off_340D0|121-68
106272|code|MOVS            R0, #1|1-32
106274|code|SUBS            R4, R4, R1|100-26
106276|code|LDR             R2, [R7,R2]; logCategoryFlags|186-88
106278|code|ASRS            R4, R4, #2|164-16
106280|code|MUL.W           R4, R3, R4|3-251-4-244
106284|code|STRB            R6, [R2,R4]|22-85
106286|code|POP.W           {R3-R11,PC}|189-232-248-143
106290|code|ASRS            R3, R3, #2|155-16
106292|code|LDR             R2, [R7,R2]; logCategoryFlags|186-88
106294|code|MUL.W           R3, R8, R3|8-251-3-243
106298|code|STRB            R6, [R2,R3]|214-84
106300|code|ADDS            R4, #0xC|12-52
106302|code|CMP             R4, R10|84-69
106304|code|BCC             loc_19EFC|220-211
106306|code|MOV             R0, R5|40-70
106308|code|POP.W           {R3-R11,PC}|189-232-248-143
106312|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x19ED2|206-165-1-0
106316|data|DCD logCategoryName_all_ptr - 0x344A0|36-3-0-0
106320|data|DCD off_340D0 - 0x19EF0; "ingio"|224-161-1-0
106324|data|DCD off_340D0 - 0x19EF2; "ingio"|222-161-1-0
106328|data|DCD off_340D0 - 0x19EF8; "ingio"|216-161-1-0
106332|data|DCD logCategoryFlags_ptr - 0x344A0|248-2-0-0
106336|data|DCD off_340D0 - 0x19F22; "ingio"|174-161-1-0
106340|code|PUSH            {R3-R5,LR}|56-181
106342|code|MOV             R5, R0|5-70
106344|code|MOVS            R0, #8; size|8-32
106346|code|BLX             malloc|252-247-82-238
106350|code|MOV             R4, R0|4-70
106352|code|CBZ             R0, locret_19F94|128-177
106354|code|MOVS            R3, #0|0-35
106356|code|STR             R3, [R0]|3-96
106358|code|STR             R3, [R0,#4]|67-96
106360|code|CBZ             R5, loc_19F96|109-177
106362|code|MOV             R0, R5|40-70
106364|code|BLX             __strdup|252-247-146-236
106368|code|MOV             R5, R0|5-70
106370|code|STR             R0, [R4,#4]|96-96
106372|code|CBZ             R0, loc_19F9C|80-177
106374|code|LDR             R3, =(dword_3888C - 0x19F8E)|8-75
106376|code|MOVS            R0, #1|1-32
106378|code|ADD             R3, PC; dword_3888C|123-68
106380|code|LDR             R2, [R3]|26-104
106382|code|STR             R4, [R3]|28-96
106384|code|STR             R2, [R4]|34-96
106386|code|POP             {R3-R5,PC}|56-189
106388|code|POP             {R3-R5,PC}|56-189
106390|code|LDR             R5, =(aWindow010lxCha+0x24 - 0x19F9C); ""|5-77
106392|code|ADD             R5, PC; ""|125-68
106394|code|B               loc_19F7A|238-231
106396|code|MOV             R0, R4; ptr|32-70
106398|code|BLX             free|252-247-114-235
106402|code|MOV             R0, R5|40-70
106404|code|POP             {R3-R5,PC}|56-189
106406|data|ALIGN 4|0-191
106408|data|DCD dword_3888C - 0x19F8E|254-232-1-0
106412|data|DCD aWindow010lxCha+0x24 - 0x19F9C; ""|224-122-0-0
106416|code|LDR             R3, =(dword_3888C - 0x19FB8)|9-75
106418|code|PUSH            {R4,LR}|16-181
106420|code|ADD             R3, PC; dword_3888C|123-68
106422|code|LDR             R4, [R3]|28-104
106424|code|CBZ             R4, loc_19FD2|92-177
106426|code|LDR             R2, [R4]|34-104
106428|code|MOVS            R1, #0|0-33
106430|code|LDR             R0, [R4,#4]; ptr|96-104
106432|code|STR             R1, [R4]|33-96
106434|code|STR             R2, [R3]|26-96
106436|code|BLX             free|252-247-94-235
106440|code|MOV             R0, R4; ptr|32-70
106442|code|BLX             free|252-247-92-235
106446|code|MOVS            R0, #1|1-32
106448|code|POP             {R4,PC}|16-189
106450|code|MOV             R0, R4|32-70
106452|code|POP             {R4,PC}|16-189
106454|data|ALIGN 4|0-191
106456|data|DCD dword_3888C - 0x19FB8|212-232-1-0
106460|code|PUSH            {R4,LR}|16-181
106462|code|LDR             R4, =(dword_3888C - 0x19FE4)|4-76
106464|code|ADD             R4, PC; dword_3888C|124-68
106466|code|LDR             R0, [R4,#(dword_38890 - 0x3888C)]; stream|96-104
106468|code|CBZ             R0, locret_19FEE|24-177
106470|code|BLX             fclose|252-247-72-238
106474|code|MOVS            R3, #0|0-35
106476|code|STR             R3, [R4,#(dword_38890 - 0x3888C)]|99-96
106478|code|POP             {R4,PC}|16-189
106480|data|DCD dword_3888C - 0x19FE4|168-232-1-0
106484|code|PUSH            {R4,LR}|16-181
106486|code|MOV             R4, R0|4-70
106488|code|BL              closeLogFile|255-247-240-255
106492|code|LDR             R1, =(aW - 0x1A004); "w"|4-73
106494|code|MOV             R0, R4; filename|32-70
106496|code|ADD             R1, PC; "w"|121-68
106498|code|BLX             fopen|252-247-110-236
106502|code|LDR             R3, =(dword_3888C - 0x1A00C)|3-75
106504|code|ADD             R3, PC; dword_3888C|123-68
106506|code|STR             R0, [R3,#(dword_38890 - 0x3888C)]|88-96
106508|code|POP             {R4,PC}|16-189
106510|data|ALIGN 0x10|0-191
106512|data|DCD aW - 0x1A004; "w"|144-129-0-0
106516|data|DCD dword_3888C - 0x1A00C|128-232-1-0
106520|code|PUSH            {R4,LR}|16-181
106522|code|LDR             R4, =(dword_3888C - 0x1A020)|6-76
106524|code|ADD             R4, PC; dword_3888C|124-68
106526|code|LDR             R3, [R4,#(dword_38894 - 0x3888C)]|163-104
106528|code|CBNZ            R3, locret_1A032|59-185
106530|code|LDR             R0, =(aBrltty - 0x1A02C); "brltty"|5-72
106532|code|MOVS            R1, #1; option|1-33
106534|code|MOVS            R2, #0x18; facility|24-34
106536|code|ADD             R0, PC; "brltty"|120-68
106538|code|BLX             openlog|252-247-228-238
106542|code|MOVS            R3, #1|1-35
106544|code|STR             R3, [R4,#(dword_38894 - 0x3888C)]|163-96
106546|code|POP             {R4,PC}|16-189
106548|data|DCD dword_3888C - 0x1A020|108-232-1-0
106552|data|DCD aBrltty - 0x1A02C; "brltty"|16-126-0-0
106556|code|PUSH            {R4,LR}|16-181
106558|code|LDR             R4, =(dword_3888C - 0x1A044)|4-76
106560|code|ADD             R4, PC; dword_3888C|124-68
106562|code|LDR             R3, [R4,#(dword_38894 - 0x3888C)]|163-104
106564|code|CBZ             R3, locret_1A04E|27-177
106566|code|BLX             closelog|252-247-2-236
106570|code|MOVS            R3, #0|0-35
106572|code|STR             R3, [R4,#(dword_38894 - 0x3888C)]|163-96
106574|code|POP             {R4,PC}|16-189
106576|data|DCD dword_3888C - 0x1A044|72-232-1-0
106580|code|PUSH.W          {R4-R11,LR}|45-233-240-79
106584|code|SUB.W           SP, SP, #0x1060|173-245-131-93
106588|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1A068)|145-76
106590|code|SUB             SP, SP, #0x14|133-176
106592|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|145-75
106594|code|MOV             R10, R2|146-70
106596|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
106598|code|STR             R1, [SP,#0x1098+var_1088]|4-145
106600|code|ADD.W           R2, SP, #0x1098+var_38|13-245-131-82
106604|code|MOV             R5, R0|5-70
106606|code|LDR             R3, [R4,R3]; __stack_chk_guard|227-88
106608|code|ADDS            R2, #0xC|12-50
106610|code|STR             R3, [SP,#0x1098+var_108C]|3-147
106612|code|LDR             R3, [R3]|27-104
106614|code|STR             R3, [R2]|19-96
106616|code|ANDS.W          R2, R0, #0x80|16-240-128-2
106620|code|BEQ             loc_1A142|97-208
106622|code|LDR             R3, =(logCategoryFlags_ptr - 0x344A0)|139-75
106624|code|AND.W           R5, R0, #0x7F|0-240-127-5
106628|code|LDR             R3, [R4,R3]; logCategoryFlags|227-88
106630|code|LDRB            R3, [R3,R5]|91-93
106632|code|CMP             R3, #0|0-43
106634|code|BEQ             loc_1A126|76-208
106636|code|LDR             R1, =(categoryLogLevel_ptr - 0x344A0)|136-73
106638|code|ADD.W           R7, R5, R5,LSL#1|5-235-69-7
106642|code|LDR             R2, =(systemLogLevel_ptr - 0x344A0)|136-74
106644|code|LDR             R3, =(stderrLogLevel_ptr - 0x344A0)|136-75
106646|code|LDR             R0, [R4,R1]; categoryLogLevel|96-88
106648|code|LDR             R1, [R4,R2]; systemLogLevel|161-88
106650|code|LDR             R2, [R4,R3]; stderrLogLevel|226-88
106652|code|LDR             R3, =(off_340D0 - 0x1A0A6); "ingio"|135-75
106654|code|LDRB            R6, [R1]|14-120
106656|code|LDRB            R5, [R0]|5-120
106658|code|ADD             R3, PC; off_340D0|123-68
106660|code|ADD.W           R3, R3, R7,LSL#2|3-235-135-3
106664|code|LDRB            R7, [R2]|23-120
106666|code|CMP             R5, R6|181-66
106668|code|LDR             R3, [R3,#8]|155-104
106670|code|ITE GT|204-191
106672|code|MOVGT           R6, #0|0-38
106674|code|MOVLE           R6, #1|1-38
106676|code|CMP             R5, R7|189-66
106678|code|STR             R3, [SP,#0x1098+var_1080]|6-147
106680|code|ITE GT|204-191
106682|code|MOVGT           R7, #0|0-39
106684|code|MOVLE           R7, #1|1-39
106686|code|ORRS.W          R3, R7, R6|87-234-6-3
106690|code|BEQ             loc_1A126|48-208
106692|code|BLX             __errno_location|252-247-72-238
106696|code|ADD.W           R9, SP, #0x1098+var_1028|13-241-112-9
106700|code|SUB.W           R8, R9, #4|169-241-4-8
106704|code|MOVS            R2, #0|0-34
106706|code|STRB.W          R2, [R9,#-4]|9-248-4-44
106710|code|LDR             R3, [R0]|3-104
106712|code|MOV             R11, R0|131-70
106714|code|MOV             R0, R8|64-70
106716|code|STR             R3, [SP,#0x1098+var_1084]|5-147
106718|code|LDR             R3, [SP,#0x1098+var_1080]|6-155
106720|code|CBZ             R3, loc_1A10A|155-177
106722|code|LDR.W           LR, =(aS_0 - 0x1A0F2); "%s: "|223-248-220-225
106726|code|MOV.W           R1, #0x1000|79-244-128-81
106730|code|STR             R3, [SP,#0x1098+var_1094]|1-147
106732|code|MOV             R0, R8|64-70
106734|code|ADD             LR, PC; "%s: "|254-68
106736|code|MOV             R3, R1|11-70
106738|code|MOVS            R2, #1|1-34
106740|code|STR.W           LR, [SP,#0x1098+var_1098]|205-248-0-224
106744|code|BLX             __snprintf_chk|252-247-152-237
106748|code|ADD.W           R3, SP, #0x1098+var_38|13-245-131-83
106752|code|ADDS            R3, #0xC|12-51
106754|code|ADD             R0, R8|64-68
106756|code|CMP             R0, R3|152-66
106758|code|IT CS|40-191
106760|code|MOVCS           R0, R3|24-70
106762|code|ADDW            R1, R9, #0xFFC|9-246-252-113
106766|code|MOV             R2, R10|82-70
106768|code|SUBS            R1, R1, R0|9-26
106770|code|LDR             R3, [SP,#0x1098+var_1088]|4-155
106772|code|BLX             R3|152-71
106774|code|CMP             R6, #0|0-46
106776|code|BNE             loc_1A182|51-209
106778|code|CMP             R7, #0|0-47
106780|code|BNE.W           loc_1A23E|64-240-143-128
106784|code|LDR             R3, [SP,#0x1098+var_1084]|5-155
106786|code|STR.W           R3, [R11]|203-248-0-48
106790|code|ADD.W           R3, SP, #0x1098+var_38|13-245-131-83
106794|code|ADDS            R3, #0xC|12-51
106796|code|LDR             R2, [R3]|26-104
106798|code|LDR             R3, [SP,#0x1098+var_108C]|3-155
106800|code|LDR             R3, [R3]|27-104
106802|code|CMP             R2, R3|154-66
106804|code|BNE.W           loc_1A29E|64-240-179-128
106808|code|ADD.W           SP, SP, #0x1060|13-245-131-93
106812|code|ADD             SP, SP, #0x14|5-176
106814|code|POP.W           {R4-R11,PC}|189-232-240-143
106818|code|LDR             R1, =(systemLogLevel_ptr - 0x344A0)|92-73
106820|code|LDR             R3, =(stderrLogLevel_ptr - 0x344A0)|92-75
106822|code|LDR             R1, [R4,R1]; systemLogLevel|97-88
106824|code|LDR             R3, [R4,R3]; stderrLogLevel|227-88
106826|code|LDRB            R6, [R1]|14-120
106828|code|LDRB            R7, [R3]|31-120
106830|code|CMP             R0, R6|176-66
106832|code|ITE GT|204-191
106834|code|MOVGT           R6, #0|0-38
106836|code|MOVLE           R6, #1|1-38
106838|code|CMP             R0, R7|184-66
106840|code|ITE GT|204-191
106842|code|MOVGT           R7, #0|0-39
106844|code|MOVLE           R7, #1|1-39
106846|code|ORRS.W          R3, R7, R6|87-234-6-3
106850|code|BEQ             loc_1A126|224-208
106852|code|STR             R2, [SP,#0x1098+var_1084]|5-146
106854|code|BLX             __errno_location|252-247-248-237
106858|code|ADD.W           R9, SP, #0x1098+var_1028|13-241-112-9
106862|code|LDR             R2, [SP,#0x1098+var_1084]|5-154
106864|code|SUB.W           R8, R9, #4|169-241-4-8
106868|code|STRB.W          R2, [R9,#-4]|9-248-4-44
106872|code|LDR             R3, [R0]|3-104
106874|code|MOV             R11, R0|131-70
106876|code|MOV             R0, R8|64-70
106878|code|STR             R3, [SP,#0x1098+var_1084]|5-147
106880|code|B               loc_1A10A|195-231
106882|code|LDR.W           R10, =(dword_3888C - 0x1A18A)|223-248-64-161
106886|code|ADD             R10, PC; dword_3888C|250-68
106888|code|LDR.W           R0, [R10,#(dword_38890 - 0x3888C)]; stream|218-248-4-0
106892|code|CMP             R0, #0|0-40
106894|code|BEQ             loc_1A21E|70-208
106896|code|ADD             R2, SP, #0x1098+var_106C|11-170
106898|code|ADD.W           R9, SP, #0x1098+var_1074|13-241-36-9
106902|code|ADD             R3, SP, #0x1098+var_1068|12-171
106904|code|STR             R3, [SP,#0x1098+var_1088]|4-147
106906|code|MOV             R6, R2|22-70
106908|code|BLX             flockfile|252-247-26-237
106912|code|MOV             R0, R9|72-70
106914|code|BL              getCurrentTime|1-240-181-254
106918|code|LDR             R3, [SP,#0x1098+var_1088]|4-155
106920|code|LDR             R2, =(aYMDHMS - 0x1A1B8); "%Y-%m-%d@%H:%M:%S"|71-74
106922|code|MOV             R0, R6|48-70
106924|code|MOVS            R1, #0x20 ; ' '|32-33
106926|code|STR             R6, [SP,#0x1098+var_1088]|4-150
106928|code|LDR.W           R3, [R3,#-0xC]|83-248-12-60
106932|code|ADD             R2, PC; "%Y-%m-%d@%H:%M:%S"|122-68
106934|code|BL              formatSeconds|1-240-55-255
106938|code|LDR.W           R2, [R9,#4]|217-248-4-32
106942|code|MOVW            R1, #0xDE83|77-246-131-97
106946|code|LDR.W           R6, [R10,#(dword_38890 - 0x3888C)]|218-248-4-96
106950|code|MOVT.W          R1, #0x431B|196-242-27-49
106954|code|MOV.W           LR, R2,ASR#31|79-234-226-126
106958|code|MOV             R3, R0|3-70
106960|code|LDR             R0, [SP,#0x1098+var_1088]|4-152
106962|code|STR             R0, [SP,#0x1098+var_1098]|0-144
106964|code|SMULL.W         R0, R1, R2, R1|130-251-1-1
106968|code|LDR             R2, =(aS03u - 0x1A1DE); "%.*s.%03u "|60-74
106970|code|ADD             R2, PC; "%.*s.%03u "|122-68
106972|code|STRD.W          R0, R1, [SP,#0x1098+var_1080]|205-233-6-1
106976|code|MOV             R0, R6|48-70
106978|code|LDR             R6, [SP,#0x1098+var_107C]|7-158
106980|code|MOVS            R1, #1|1-33
106982|code|RSB.W           LR, LR, R6,ASR#18|206-235-166-78
106986|code|STR.W           LR, [SP,#0x1098+var_1094]|205-248-4-224
106990|code|BLX             __fprintf_chk|252-247-4-235
106994|code|LDR             R0, [SP,#0x1098+var_1088]|4-152
106996|code|MOVS            R1, #0x40 ; '@'|64-33
106998|code|BL              formatThreadName|3-240-121-255
107002|code|CMP             R0, #0|0-40
107004|code|BNE             loc_1A28C|70-209
107006|code|LDR             R6, =(dword_3888C - 0x1A206)|52-78
107008|code|MOV             R0, R8; s|64-70
107010|code|ADD             R6, PC; dword_3888C|126-68
107012|code|LDR             R1, [R6,#(dword_38890 - 0x3888C)]; stream|113-104
107014|code|BLX             fputs|252-247-252-237
107018|code|LDR             R1, [R6,#(dword_38890 - 0x3888C)]; stream|113-104
107020|code|MOVS            R0, #0xA; c|10-32
107022|code|BLX             fputc|252-247-232-236
107026|code|LDR             R0, [R6,#(dword_38890 - 0x3888C)]; stream|112-104
107028|code|BL              flushStream|0-240-234-254
107032|code|LDR             R0, [R6,#(dword_38890 - 0x3888C)]; stream|112-104
107034|code|BLX             funlockfile|252-247-224-237
107038|code|LDR             R3, =(dword_3888C - 0x1A224)|45-75
107040|code|ADD             R3, PC; dword_3888C|123-68
107042|code|LDR             R3, [R3,#(dword_38894 - 0x3888C)]|155-104
107044|code|CMP             R3, #0|0-43
107046|code|BEQ.W           loc_1A11A|63-244-120-175
107050|code|LDR             R2, =(aCheckingSDevic+0x14 - 0x1A236); "%s"|43-74
107052|code|MOV             R0, R5|40-70
107054|code|MOVS            R1, #1|1-33
107056|code|MOV             R3, R8|67-70
107058|code|ADD             R2, PC; "%s"|122-68
107060|code|BLX             __syslog_chk|252-247-244-235
107064|code|CMP             R7, #0|0-47
107066|code|BEQ.W           loc_1A120|63-244-113-175
107070|code|LDR             R3, =(stderr_ptr - 0x344A0)|39-75
107072|code|LDR             R3, [R4,R3]; stderr|227-88
107074|code|LDR             R4, [R3]|28-104
107076|code|MOV             R0, R4; stream|32-70
107078|code|BLX             flockfile|252-247-198-236
107082|code|LDR             R3, =(dword_3888C - 0x1A250)|37-75
107084|code|ADD             R3, PC; dword_3888C|123-68
107086|code|LDR             R3, [R3]|27-104
107088|code|CBZ             R3, loc_1A258|19-177
107090|code|LDR             R0, [R3,#4]; s|88-104
107092|code|LDRB            R3, [R0]|3-120
107094|code|CBNZ            R3, loc_1A276|115-185
107096|code|MOV             R1, R4; stream|33-70
107098|code|MOV             R0, R8; s|64-70
107100|code|BLX             fputs|252-247-208-237
107104|code|MOV             R1, R4; stream|33-70
107106|code|MOVS            R0, #0xA; c|10-32
107108|code|BLX             fputc|252-247-188-236
107112|code|MOV             R0, R4; stream|32-70
107114|code|BL              flushStream|0-240-191-254
107118|code|MOV             R0, R4; stream|32-70
107120|code|BLX             funlockfile|252-247-180-237
107124|code|B               loc_1A120|84-231
107126|code|MOV             R1, R4; stream|33-70
107128|code|BLX             fputs|252-247-194-237
107132|code|LDR             R0, =(asc_22180 - 0x1A288); ": "|25-72
107134|code|MOVS            R1, #1; size|1-33
107136|code|MOVS            R2, #2; n|2-34
107138|code|MOV             R3, R4; s|35-70
107140|code|ADD             R0, PC; ": " ; ptr|120-68
107142|code|BLX             fwrite|252-247-178-236
107146|code|B               loc_1A258|229-231
107148|code|LDR             R2, =(aS_1 - 0x1A29A); "[%s] "|22-74
107150|code|MOVS            R1, #1|1-33
107152|code|LDR.W           R0, [R10,#(dword_38890 - 0x3888C)]|218-248-4-0
107156|code|LDR             R3, [SP,#0x1098+var_1088]|4-155
107158|code|ADD             R2, PC; "[%s] "|122-68
107160|code|BLX             __fprintf_chk|252-247-174-234
107164|code|B               loc_1A1FE|175-231
107166|code|BLX             __stack_chk_fail|252-247-204-235
107170|data|ALIGN 4|0-191
107172|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1A068|56-164-1-0
107176|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
107180|data|DCD logCategoryFlags_ptr - 0x344A0|248-2-0-0
107184|data|DCD categoryLogLevel_ptr - 0x344A0|4-3-0-0
107188|data|DCD systemLogLevel_ptr - 0x344A0|76-3-0-0
107192|data|DCD stderrLogLevel_ptr - 0x344A0|8-3-0-0
107196|data|DCD off_340D0 - 0x1A0A6; "ingio"|42-160-1-0
107200|data|DCD aS_0 - 0x1A0F2; "%s: "|166-128-0-0
107204|data|DCD dword_3888C - 0x1A18A|2-231-1-0
107208|data|DCD aYMDHMS - 0x1A1B8; "%Y-%m-%d@%H:%M:%S"|232-127-0-0
107212|data|DCD aS03u - 0x1A1DE; "%.*s.%03u "|214-127-0-0
107216|data|DCD dword_3888C - 0x1A206|134-230-1-0
107220|data|DCD dword_3888C - 0x1A224|104-230-1-0
107224|data|DCD aCheckingSDevic+0x14 - 0x1A236; "%s"|66-133-0-0
107228|data|DCD stderr_ptr - 0x344A0|60-3-0-0
107232|data|DCD dword_3888C - 0x1A250|60-230-1-0
107236|data|DCD asc_22180 - 0x1A288; ": "|248-126-0-0
107240|data|DCD aS_1 - 0x1A29A; "[%s] "|38-127-0-0
107244|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1A2F4)|11-75
107246|code|PUSH            {R4,LR}|16-181
107248|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
107250|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|11-76
107252|code|SUB             SP, SP, #0x10|132-176
107254|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
107256|code|STR             R1, [SP,#0x18+var_14]|1-145
107258|code|LDR             R1, =(sub_19C80+1 - 0x1A304)|10-73
107260|code|LDR             R3, [R4]|35-104
107262|code|STR             R2, [SP,#0x18+var_10]|2-146
107264|code|ADD             R1, PC; sub_19C80|121-68
107266|code|ADD             R2, SP, #0x18+var_14|1-170
107268|code|STR             R3, [SP,#0x18+var_C]|3-147
107270|code|BL              logData|255-247-165-254
107274|code|LDR             R2, [SP,#0x18+var_C]|3-154
107276|code|LDR             R3, [R4]|35-104
107278|code|CMP             R2, R3|154-66
107280|code|BNE             loc_1A316|1-209
107282|code|ADD             SP, SP, #0x10|4-176
107284|code|POP             {R4,PC}|16-189
107286|code|BLX             __stack_chk_fail|252-247-144-235
107290|data|ALIGN 4|0-191
107292|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1A2F4|172-161-1-0
107296|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
107300|data|DCD sub_19C80+1 - 0x1A304|125-249-255-255
107304|code|PUSH            {R1-R3}|14-180
107306|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1A332)|13-75
107308|code|PUSH            {R4,R5,LR}|48-181
107310|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
107312|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|12-77
107314|code|SUB             SP, SP, #8|130-176
107316|code|ADD             R4, SP, #0x20+varg_r1|5-172
107318|code|ADD             R2, SP, #0x20+var_18|2-170
107320|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
107322|code|LDR.W           R1, [R4],#4|84-248-4-27
107326|code|LDR             R3, [R5]|43-104
107328|code|STR.W           R4, [R2,#-8]!|66-248-8-77
107332|code|STR             R3, [SP,#0x20+var_1C]|1-147
107334|code|BL              vlogMessage|255-247-209-255
107338|code|LDR             R2, [SP,#0x20+var_1C]|1-154
107340|code|LDR             R3, [R5]|43-104
107342|code|CMP             R2, R3|154-66
107344|code|BNE             loc_1A35C|4-209
107346|code|ADD             SP, SP, #8|2-176
107348|code|POP.W           {R4,R5,LR}|189-232-48-64
107352|code|ADD             SP, SP, #0xC|3-176
107354|code|BX              LR|112-71
107356|code|BLX             __stack_chk_fail|252-247-108-235
107360|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1A332|110-161-1-0
107364|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
107368|code|PUSH            {R3}|8-180
107370|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1A372)|16-75
107372|code|PUSH            {R4-R6,LR}|112-181
107374|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
107376|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|15-77
107378|code|SUB             SP, SP, #0x1C|135-176
107380|code|ADD             R4, SP, #0x30+varg_r3|11-172
107382|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
107384|code|LDR.W           R6, [R4],#4|84-248-4-107
107388|code|STR             R1, [SP,#0x30+var_2C]|1-145
107390|code|LDR             R3, [R5]|43-104
107392|code|LDR             R1, =(sub_19C84+1 - 0x1A38A)|12-73
107394|code|STR             R2, [SP,#0x30+var_24]|3-146
107396|code|ADD             R2, SP, #0x30+var_2C|1-170
107398|code|ADD             R1, PC; sub_19C84|121-68
107400|code|STR             R3, [SP,#0x30+var_1C]|5-147
107402|code|STR             R4, [SP,#0x30+var_30]|0-148
107404|code|STR             R6, [SP,#0x30+var_20]|4-150
107406|code|STR.W           SP, [SP,#0x30+var_28]|205-248-8-208
107410|code|BL              logData|255-247-95-254
107414|code|LDR             R2, [SP,#0x30+var_1C]|5-154
107416|code|LDR             R3, [R5]|43-104
107418|code|CMP             R2, R3|154-66
107420|code|BNE             loc_1A3A8|4-209
107422|code|ADD             SP, SP, #0x1C|7-176
107424|code|POP.W           {R4-R6,LR}|189-232-112-64
107428|code|ADD             SP, SP, #4|1-176
107430|code|BX              LR|112-71
107432|code|BLX             __stack_chk_fail|252-247-70-235
107436|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1A372|46-161-1-0
107440|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
107444|data|DCD sub_19C84+1 - 0x1A38A|251-248-255-255
107448|code|PUSH            {R2,R3}|12-180
107450|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1A3C2)|16-75
107452|code|PUSH            {R4-R6,LR}|112-181
107454|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
107456|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|15-77
107458|code|SUB             SP, SP, #0x18|134-176
107460|code|ADD             R4, SP, #0x30+varg_r2|10-172
107462|code|ADD             R2, SP, #0x30+var_28|2-170
107464|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
107466|code|LDR.W           R6, [R4],#4|84-248-4-107
107470|code|STR             R1, [SP,#0x30+var_28]|2-145
107472|code|LDR             R3, [R5]|43-104
107474|code|LDR             R1, =(sub_19D34+1 - 0x1A3DA)|12-73
107476|code|STR             R4, [SP,#0x30+var_2C]|1-148
107478|code|ADD             R1, PC; sub_19D34|121-68
107480|code|STR             R3, [SP,#0x30+var_1C]|5-147
107482|code|STR             R6, [SP,#0x30+var_24]|3-150
107484|code|ADD             R3, SP, #0x30+var_2C|1-171
107486|code|STR             R3, [SP,#0x30+var_20]|4-147
107488|code|BL              logData|255-247-56-254
107492|code|LDR             R2, [SP,#0x30+var_1C]|5-154
107494|code|LDR             R3, [R5]|43-104
107496|code|CMP             R2, R3|154-66
107498|code|BNE             loc_1A3F6|4-209
107500|code|ADD             SP, SP, #0x18|6-176
107502|code|POP.W           {R4-R6,LR}|189-232-112-64
107506|code|ADD             SP, SP, #8|2-176
107508|code|BX              LR|112-71
107510|code|BLX             __stack_chk_fail|252-247-32-235
107514|data|ALIGN 4|0-191
107516|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1A3C2|222-160-1-0
107520|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
107524|data|DCD sub_19D34+1 - 0x1A3DA|91-249-255-255
107528|code|PUSH            {R4,R5,LR}|48-181
107530|code|SUB             SP, SP, #0xC|131-176
107532|code|MOV             R5, R1|13-70
107534|code|MOV             R4, R0|4-70
107536|code|BLX             strerror|252-247-148-233
107540|code|LDR             R1, =(aSErrorDS - 0x1A41E); "%s error %d: %s."|4-73
107542|code|MOV             R2, R5|42-70
107544|code|MOV             R3, R4|35-70
107546|code|ADD             R1, PC; "%s error %d: %s."|121-68
107548|code|STR             R0, [SP,#0x18+var_18]|0-144
107550|code|MOVS            R0, #3|3-32
107552|code|BL              logMessage|255-247-130-255
107556|code|ADD             SP, SP, #0xC|3-176
107558|code|POP             {R4,R5,PC}|48-189
107560|data|DCD aSErrorDS - 0x1A41E; "%s error %d: %s."|170-125-0-0
107564|code|PUSH            {R4,LR}|16-181
107566|code|MOV             R4, R0|4-70
107568|code|BLX             __errno_location|252-247-146-236
107572|code|MOV             R1, R4|33-70
107574|code|POP.W           {R4,LR}|189-232-16-64
107578|code|LDR             R0, [R0]|0-104
107580|code|B.W             logActionError|255-247-228-191
107584|code|LDR             R0, =(aMalloc_0 - 0x1A446); "malloc"|1-72
107586|code|ADD             R0, PC; "malloc"|120-68
107588|code|B.W             logSystemError|255-247-242-191
107592|data|DCD aMalloc_0 - 0x1A446; "malloc"|150-125-0-0
107596|code|LDR             R1, =(aFeatureNotSupp - 0x1A456); "feature not supported: %s"|2-73
107598|code|MOV             R2, R0|2-70
107600|code|MOVS            R0, #4|4-32
107602|code|ADD             R1, PC; "feature not supported: %s"|121-68
107604|code|B.W             logMessage|255-247-104-191
107608|data|DCD aFeatureNotSupp - 0x1A456; "feature not supported: %s"|142-125-0-0
107612|code|PUSH            {R4,LR}|16-181
107614|code|MOV             R4, R0|4-70
107616|code|BLX             __errno_location|252-247-122-236
107620|code|MOVS            R3, #0x26 ; '&'|38-35
107622|code|STR             R3, [R0]|3-96
107624|code|MOV             R0, R4|32-70
107626|code|POP.W           {R4,LR}|189-232-16-64
107630|code|B.W             logSystemError|255-247-221-191
107634|data|ALIGN 4|0-191
107636|code|LDR             R1, =(aPossibleCauseS - 0x1A47E); "possible cause: %s"|2-73
107638|code|MOV             R2, R0|2-70
107640|code|MOVS            R0, #4|4-32
107642|code|ADD             R1, PC; "possible cause: %s"|121-68
107644|code|B.W             logMessage|255-247-84-191
107648|data|DCD aPossibleCauseS - 0x1A47E; "possible cause: %s"|130-125-0-0
107652|code|LDR             R3, =(dword_38898 - 0x1A48C)|21-75
107654|code|PUSH            {R4-R6}|112-180
107656|code|ADD             R3, PC; dword_38898|123-68
107658|code|LDR             R4, [R3]|28-104
107660|code|SUBS            R4, #1|1-60
107662|code|BMI             loc_1A4D8|35-212
107664|code|LDR             R6, [R3,#(dword_3889C - 0x38898)]|94-104
107666|code|ASRS            R3, R4, #1|99-16
107668|code|LDR.W           R2, [R6,R3,LSL#2]|86-248-35-32
107672|code|LDR             R2, [R2]|18-104
107674|code|CMP             R2, R1|138-66
107676|code|IT NE|24-191
107678|code|MOVNE           R5, #0|0-37
107680|code|BNE             loc_1A4B0|6-209
107682|code|B               loc_1A4CE|20-224
107684|code|ASRS            R3, R3, #1|91-16
107686|code|LDR.W           R2, [R6,R3,LSL#2]|86-248-35-32
107690|code|LDR             R2, [R2]|18-104
107692|code|CMP             R2, R1|138-66
107694|code|BEQ             loc_1A4CE|14-208
107696|code|CMP             R1, R2|145-66
107698|code|ITE CC|52-191
107700|code|ADDCC.W         R4, R3, #0xFFFFFFFF|3-241-255-52
107704|code|ADDCS           R5, R3, #1|93-28
107706|code|ADDS            R3, R5, R4|43-25
107708|code|CMP             R5, R4|165-66
107710|code|ADD.W           R3, R3, R3,LSR#31|3-235-211-115
107714|code|BLE             loc_1A4A4|239-221
107716|code|MOVS            R3, #0|0-35
107718|code|STR             R5, [R0]|5-96
107720|code|MOV             R0, R3|24-70
107722|code|POP             {R4-R6}|112-188
107724|code|BX              LR|112-71
107726|code|STR             R3, [R0]|3-96
107728|code|MOVS            R3, #1|1-35
107730|code|MOV             R0, R3|24-70
107732|code|POP             {R4-R6}|112-188
107734|code|BX              LR|112-71
107736|code|MOVS            R5, #0|0-37
107738|code|B               loc_1A4C4|243-231
107740|data|DCD dword_38898 - 0x1A48C|12-228-1-0
107744|code|PUSH            {R3,LR}|8-181
107746|code|LDR             R3, =(dword_38898 - 0x1A4E8)|6-75
107748|code|ADD             R3, PC; dword_38898|123-68
107750|code|LDR             R0, [R3,#(dword_3889C - 0x38898)]; ptr|88-104
107752|code|CBZ             R0, loc_1A4EE|8-177
107754|code|BLX             free|252-247-204-232
107758|code|LDR             R3, =(dword_38898 - 0x1A4F6)|4-75
107760|code|MOVS            R2, #0|0-34
107762|code|ADD             R3, PC; dword_38898|123-68
107764|code|STR             R2, [R3,#(dword_3889C - 0x38898)]|90-96
107766|code|STR             R2, [R3]|26-96
107768|code|STR             R2, [R3,#(dword_388A0 - 0x38898)]|154-96
107770|code|POP             {R3,PC}|8-189
107772|data|DCD dword_38898 - 0x1A4E8|176-227-1-0
107776|data|DCD dword_38898 - 0x1A4F6|162-227-1-0
107780|code|PUSH            {R1-R3}|14-180
107782|code|MOV.W           R1, #0x1000|79-244-128-81
107786|code|PUSH.W          {R4-R11,LR}|45-233-240-79
107790|code|SUB.W           SP, SP, #0x1000|173-245-128-93
107794|code|SUB             SP, SP, #0x18|134-176
107796|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x1A522)|73-78
107798|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|74-75
107800|code|ADD.W           R5, SP, #0x1018+var_s8|13-245-129-85
107804|code|ADDS            R5, #0x1C|28-53
107806|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
107808|code|ADD.W           R4, SP, #0x1018+var_18|13-245-128-84
107812|code|ADD             R7, SP, #0x14|5-175
107814|code|LDR.W           R9, [R6,R3]; __stack_chk_guard|86-248-3-144
107818|code|ADDS            R4, #0x14|20-52
107820|code|LDR.W           R2, [R5],#4|85-248-4-43
107824|code|MOV             R3, R1|11-70
107826|code|MOV             R8, R0|128-70
107828|code|MOV             R0, R7|56-70
107830|code|ADD             R6, SP, #0x1018+var_1008|4-174
107832|code|STR             R2, [SP,#0x1018+var_1018]|0-146
107834|code|MOVS            R2, #1|1-34
107836|code|STR             R5, [SP,#0x1018+var_1014]|1-149
107838|code|LDR.W           LR, [R9]|217-248-0-224
107842|code|STR             R5, [SP,#0x1018+var_1008]|4-149
107844|code|STR.W           LR, [R4]|196-248-0-224
107848|code|BLX             __vsnprintf_chk|252-247-4-233
107852|code|MOV             R0, R7; s|56-70
107854|code|BLX             strlen|252-247-104-235
107858|code|MOV             R5, R0|5-70
107860|code|ADDS            R0, #5; size|5-48
107862|code|BLX             malloc|252-247-92-235
107866|code|MOV             R4, R0|4-70
107868|code|CMP             R0, #0|0-40
107870|code|BEQ             loc_1A5E4|65-208
107872|code|ADDS            R2, R5, #1; n|106-28
107874|code|MOV             R1, R7; src|57-70
107876|code|STR.W           R8, [R0],#4; dest|64-248-4-139
107880|code|BLX             memcpy|252-247-70-235
107884|code|MOV             R0, R6|48-70
107886|code|MOV             R1, R8|65-70
107888|code|BL              sub_1A484|255-247-136-255
107892|code|MOV             R5, R0|5-70
107894|code|CBNZ            R0, loc_1A5CC|72-187
107896|code|LDR             R7, =(dword_38898 - 0x1A582)|50-79
107898|code|LDR.W           R8, [R6]|214-248-0-128
107902|code|ADD             R7, PC; dword_38898|127-68
107904|code|LDR             R6, [R7,#0x1004+var_1004]|62-104
107906|code|LDR             R3, [R7,#(dword_388A0 - 0x38898)]|187-104
107908|code|CMP             R6, R3|158-66
107910|code|BEQ             loc_1A5EC|49-208
107912|code|LDR             R5, [R7,#(dword_3889C - 0x38898)]|125-104
107914|code|ADDS            R7, R6, #1|119-28
107916|code|ADD.W           R0, R8, #1|8-241-1-0
107920|code|LDR             R3, =(dword_38898 - 0x1A59C)|45-75
107922|code|RSB.W           R2, R8, R6|200-235-6-2
107926|code|LSLS            R0, R0, #2|128-0
107928|code|ADD             R3, PC; dword_38898|123-68
107930|code|SUBS            R6, R0, #4|6-31
107932|code|LSLS            R2, R2, #2; n|146-0
107934|code|ADD             R0, R5; dest|40-68
107936|code|ADDS            R1, R5, R6; src|169-25
107938|code|STR             R7, [R3]|31-96
107940|code|BLX             memmove|252-247-200-233
107944|code|STR             R4, [R5,R6]|172-81
107946|code|MOVS            R5, #1|1-37
107948|code|ADD.W           R3, SP, #0x1018+var_18|13-245-128-83
107952|code|MOV             R0, R5|40-70
107954|code|ADDS            R3, #0x14|20-51
107956|code|LDR             R2, [R3]|26-104
107958|code|LDR.W           R3, [R9]|217-248-0-48
107962|code|CMP             R2, R3|154-66
107964|code|BNE             loc_1A636|59-209
107966|code|ADD.W           SP, SP, #0x1000|13-245-128-93
107970|code|ADD             SP, SP, #0x18|6-176
107972|code|POP.W           {R4-R11,LR}|189-232-240-79
107976|code|ADD             SP, SP, #0xC|3-176
107978|code|BX              LR|112-71
107980|code|LDR             R3, =(dword_38898 - 0x1A5D4)|31-75
107982|code|LDR             R2, [R6]|50-104
107984|code|ADD             R3, PC; dword_38898|123-68
107986|code|LDR             R5, [R3,#(dword_3889C - 0x38898)]|93-104
107988|code|LDR.W           R0, [R5,R2,LSL#2]; ptr|85-248-34-0
107992|code|BLX             free|252-247-84-232
107996|code|LDR             R3, [R6]|51-104
107998|code|STR.W           R4, [R5,R3,LSL#2]|69-248-35-64
108002|code|B               loc_1A5AA|226-231
108004|code|BL              logMallocError|255-247-44-255
108008|code|MOV             R5, R4|37-70
108010|code|B               loc_1A5AC|223-231
108012|code|LDR.W           R11, [R7,#(dword_3889C - 0x38898)]|215-248-4-176
108016|code|ADD.W           R10, R6, #1|6-241-1-10
108020|code|MOV.W           R1, R10,LSL#2; size|79-234-138-1
108024|code|MOV             R0, R11; ptr|88-70
108026|code|BLX             realloc|252-247-218-233
108030|code|MOV             R3, R0|3-70
108032|code|CBZ             R0, loc_1A630|176-177
108034|code|CMP.W           R11, #0|187-241-0-15
108038|code|BEQ             loc_1A618|7-208
108040|code|MOV             R7, R10|87-70
108042|code|LDR             R2, =(dword_38898 - 0x1A612)|17-74
108044|code|MOV             R5, R3|29-70
108046|code|ADD             R2, PC; dword_38898|122-68
108048|code|STR             R3, [R2,#(dword_3889C - 0x38898)]|83-96
108050|code|STR.W           R10, [R2,#(dword_388A0 - 0x38898)]|194-248-8-160
108054|code|B               loc_1A58C|185-231
108056|code|STR             R0, [SP,#0x1018+var_100C]|3-144
108058|code|MOV             R2, R11|90-70
108060|code|LDR             R0, =(aAddressTable - 0x1A624); "address-table"|13-72
108062|code|LDR             R1, =(sub_1A4E0+1 - 0x1A626)|14-73
108064|code|ADD             R0, PC; "address-table"|120-68
108066|code|ADD             R1, PC; sub_1A4E0|121-68
108068|code|BL              onProgramExit|254-247-14-248
108072|code|LDR             R6, [R7,#0x1004+var_1004]|62-104
108074|code|LDR             R3, [SP,#0x1018+var_100C]|3-155
108076|code|ADDS            R7, R6, #1|119-28
108078|code|B               loc_1A60A|236-231
108080|code|BL              logMallocError|255-247-6-255
108084|code|B               loc_1A5AC|186-231
108086|code|BLX             __stack_chk_fail|252-247-0-234
108090|data|ALIGN 4|0-191
108092|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1A522|126-159-1-0
108096|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
108100|data|DCD dword_38898 - 0x1A582|22-227-1-0
108104|data|DCD dword_38898 - 0x1A59C|252-226-1-0
108108|data|DCD dword_38898 - 0x1A5D4|196-226-1-0
108112|data|DCD dword_38898 - 0x1A612|134-226-1-0
108116|data|DCD aAddressTable - 0x1A624; "address-table"|148-126-0-0
108120|data|DCD sub_1A4E0+1 - 0x1A626|187-254-255-255
108124|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1A666)|22-75
108126|code|MOV             R1, R0|1-70
108128|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|22-74
108130|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
108132|code|PUSH.W          {R4-R9,LR}|45-233-240-67
108136|code|SUB             SP, SP, #0xC|131-176
108138|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
108140|code|MOV             R0, SP|104-70
108142|code|LDR             R3, [R4]|35-104
108144|code|STR             R3, [SP,#0x28+var_24]|1-147
108146|code|BL              sub_1A484|255-247-7-255
108150|code|CBZ             R0, loc_1A6A4|168-177
108152|code|LDR             R7, =(dword_38898 - 0x1A680)|17-79
108154|code|LDR             R5, [SP,#0x28+var_28]|0-157
108156|code|ADD             R7, PC; dword_38898|127-68
108158|code|LDR.W           R8, [R7,#(dword_3889C - 0x38898)]|215-248-4-128
108162|code|LSLS            R6, R5, #2|174-0
108164|code|ADD.W           R9, R8, R6|8-235-6-9
108168|code|LDR.W           R0, [R8,R5,LSL#2]; ptr|88-248-37-0
108172|code|BLX             free|251-247-250-239
108176|code|LDR             R3, [R7]|59-104
108178|code|ADDS            R1, R6, #4|49-29
108180|code|MOV             R0, R9; dest|72-70
108182|code|SUBS            R3, #1|1-59
108184|code|ADD             R1, R8; src|65-68
108186|code|SUBS            R2, R3, R5|90-27
108188|code|STR             R3, [R7]|59-96
108190|code|LSLS            R2, R2, #2; n|146-0
108192|code|BLX             memmove|252-247-74-233
108196|code|LDR             R2, [SP,#0x28+var_24]|1-154
108198|code|LDR             R3, [R4]|35-104
108200|code|CMP             R2, R3|154-66
108202|code|BNE             loc_1A6B2|2-209
108204|code|ADD             SP, SP, #0xC|3-176
108206|code|POP.W           {R4-R9,PC}|189-232-240-131
108210|code|BLX             __stack_chk_fail|252-247-194-233
108214|data|ALIGN 4|0-191
108216|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1A666|58-158-1-0
108220|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
108224|data|DCD dword_38898 - 0x1A680|24-226-1-0
108228|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1A6CC)|18-75
108230|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|19-74
108232|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
108234|code|PUSH            {R4-R6,LR}|112-181
108236|code|SUB             SP, SP, #8|130-176
108238|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
108240|code|MOV             R6, R0|6-70
108242|code|MOV             R5, R1|13-70
108244|code|MOV             R0, SP|104-70
108246|code|MOV             R1, R6|49-70
108248|code|LDR             R3, [R4]|35-104
108250|code|STR             R3, [SP,#0x18+var_14]|1-147
108252|code|BL              sub_1A484|255-247-210-254
108256|code|CBZ             R0, loc_1A702|120-177
108258|code|CBZ             R5, loc_1A6E8|13-177
108260|code|MOVS            R3, #0|0-35
108262|code|STR             R3, [R5]|43-96
108264|code|LDR             R3, =(dword_38898 - 0x1A6F0)|11-75
108266|code|LDR             R2, [SP,#0x18+var_18]|0-154
108268|code|ADD             R3, PC; dword_38898|123-68
108270|code|LDR             R3, [R3,#(dword_3889C - 0x38898)]|91-104
108272|code|LDR.W           R0, [R3,R2,LSL#2]|83-248-34-0
108276|code|ADDS            R0, #4|4-48
108278|code|LDR             R2, [SP,#0x18+var_14]|1-154
108280|code|LDR             R3, [R4]|35-104
108282|code|CMP             R2, R3|154-66
108284|code|BNE             loc_1A70C|6-209
108286|code|ADD             SP, SP, #8|2-176
108288|code|POP             {R4-R6,PC}|112-189
108290|code|MOV             R0, R6|48-70
108292|code|MOV             R1, R5|41-70
108294|code|BL              getSharedSymbolName|3-240-115-255
108298|code|B               loc_1A6F6|244-231
108300|code|BLX             __stack_chk_fail|252-247-148-233
108304|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1A6CC|212-157-1-0
108308|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
108312|data|DCD dword_38898 - 0x1A6F0|168-225-1-0
108316|code|LDR             R3, [R0]|3-104
108318|code|CBZ             R3, locret_1A730|59-177
108320|code|PUSH            {R4,LR}|16-181
108322|code|MOV             R4, R0|4-70
108324|code|MOV             R0, R3|24-70
108326|code|BLX             fclose|252-247-168-234
108330|code|MOVS            R3, #0|0-35
108332|code|STR             R3, [R4]|35-96
108334|code|POP             {R4,PC}|16-189
108336|code|BX              LR|112-71
108338|data|ALIGN 4|0-191
108340|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1A73C)|28-75
108342|code|PUSH            {R4-R7,LR}|240-181
108344|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
108346|code|MOV             R6, R0|6-70
108348|code|LDR             R0, =(__stack_chk_guard_ptr - 0x344A0)|27-72
108350|code|MOV             R5, R1|13-70
108352|code|MOV             R1, R3|25-70
108354|code|SUB             SP, SP, #0x1C|135-176
108356|code|MOVS            R3, #0|0-35
108358|code|LDR             R7, [R1,R0]; __stack_chk_guard|15-88
108360|code|ADD             R4, SP, #0x30+var_18|6-172
108362|code|STR             R3, [SP,#0x30+var_2C]|1-147
108364|code|STR             R3, [SP,#0x30+var_28]|2-147
108366|code|LDR             R1, [R7]|57-104
108368|code|STR             R3, [SP,#0x30+var_24]|3-147
108370|code|STR             R3, [SP,#0x30+var_20]|4-147
108372|code|STR             R1, [SP,#0x30+var_1C]|5-145
108374|code|STRH.W          R2, [R4,#-0x14]!|36-248-20-45
108378|code|B               loc_1A766|4-224
108380|code|BLX             __errno_location|252-247-252-234
108384|code|LDR             R3, [R0]|3-104
108386|code|CMP             R3, #4|4-43
108388|code|BNE             loc_1A784|14-209
108390|code|MOV             R0, R6; fd|48-70
108392|code|MOV             R1, R5; cmd|41-70
108394|code|MOV             R2, R4|34-70
108396|code|BLX             fcntl|252-247-124-232
108400|code|ADDS            R0, #1|1-48
108402|code|BEQ             loc_1A75C|243-208
108404|code|MOVS            R3, #1|1-35
108406|code|LDR             R2, [SP,#0x30+var_1C]|5-154
108408|code|MOV             R0, R3|24-70
108410|code|LDR             R3, [R7]|59-104
108412|code|CMP             R2, R3|154-66
108414|code|BNE             loc_1A7A4|17-209
108416|code|ADD             SP, SP, #0x1C|7-176
108418|code|POP             {R4-R7,PC}|240-189
108420|code|CMP             R3, #0xD|13-43
108422|code|ITTT EQ|2-191
108424|code|MOVEQ           R2, #0xB|11-34
108426|code|MOVEQ           R3, #0|0-35
108428|code|STREQ           R2, [R0]|2-96
108430|code|BEQ             loc_1A776|242-208
108432|code|CMP             R3, #0xB|11-43
108434|code|IT EQ|8-191
108436|code|MOVEQ           R3, #0|0-35
108438|code|BEQ             loc_1A776|238-208
108440|code|LDR             R0, =(aFcntlStructFlo - 0x1A79E); "fcntl[struct flock *]"|5-72
108442|code|ADD             R0, PC; "fcntl[struct flock *]"|120-68
108444|code|BL              logSystemError|255-247-70-254
108448|code|MOVS            R3, #0|0-35
108450|code|B               loc_1A776|232-231
108452|code|BLX             __stack_chk_fail|252-247-72-233
108456|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1A73C|100-157-1-0
108460|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
108464|data|DCD aFcntlStructFlo - 0x1A79E; "fcntl[struct flock *]"|46-125-0-0
108468|code|SUB.W           R0, R0, #0x2F ; '/'|160-241-47-0
108472|code|CLZ.W           R0, R0|176-250-128-240
108476|code|LSRS            R0, R0, #5|64-9
108478|code|BX              LR|112-71
108480|code|PUSH            {R3,LR}|8-181
108482|code|LDRB            R0, [R0]|0-120
108484|code|BL              isPathDelimiter|255-247-246-255
108488|code|ADDS            R0, #0|0-48
108490|code|IT NE|24-191
108492|code|MOVNE           R0, #1|1-32
108494|code|POP             {R3,PC}|8-189
108496|code|PUSH.W          {R4-R8,LR}|45-233-240-65
108500|code|MOV             R8, R0|128-70
108502|code|BLX             strlen|252-247-36-234
108506|code|MOV             R7, R0|7-70
108508|code|ADD.W           R6, R8, R0|8-235-0-6
108512|code|MOV             R5, R0|5-70
108514|code|CBNZ            R0, loc_1A7E8|8-185
108516|code|B               loc_1A810|20-224
108518|code|CBZ             R4, loc_1A830|28-179
108520|code|LDRB.W          R0, [R6,#-1]!|22-248-1-13
108524|code|SUBS            R4, R5, #1|108-30
108526|code|BL              isPathDelimiter|255-247-225-255
108530|code|MOV             R5, R4|37-70
108532|code|CMP             R0, #0|0-40
108534|code|BNE             loc_1A7E6|246-209
108536|code|ADD.W           R6, R8, R4|8-235-4-6
108540|code|B               loc_1A80A|5-224
108542|code|LDRB.W          R0, [R6,#-1]!|22-248-1-13
108546|code|SUBS            R4, #1|1-60
108548|code|BL              isPathDelimiter|255-247-214-255
108552|code|CBNZ            R0, loc_1A84E|8-187
108554|code|MOV             R5, R4|37-70
108556|code|CMP             R4, #0|0-44
108558|code|BNE             loc_1A7FE|246-209
108560|code|MOVS            R0, #2; size|2-32
108562|code|LDR.W           R8, =(asc_21E38 - 0x1A820); "."|223-248-88-128
108566|code|BLX             malloc|252-247-252-233
108570|code|MOVS            R7, #1|1-39
108572|code|ADD             R8, PC; "."|248-68
108574|code|MOV             R4, R0|4-70
108576|code|CBNZ            R0, loc_1A83C|96-185
108578|code|BL              logMallocError|255-247-13-254
108582|code|MOV             R0, R4|32-70
108584|code|POP.W           {R4-R8,PC}|189-232-240-129
108588|code|MOV             R5, R4|37-70
108590|code|MOV             R7, R5|47-70
108592|code|ADDS            R0, R7, #1; size|120-28
108594|code|BLX             malloc|252-247-238-233
108598|code|MOV             R4, R0|4-70
108600|code|CMP             R0, #0|0-40
108602|code|BEQ             loc_1A822|242-208
108604|code|MOV             R1, R8; src|65-70
108606|code|MOV             R2, R7; n|58-70
108608|code|BLX             memcpy|252-247-218-233
108612|code|MOVS            R3, #0|0-35
108614|code|MOV             R0, R4|32-70
108616|code|STRB            R3, [R4,R7]|227-85
108618|code|POP.W           {R4-R8,PC}|189-232-240-129
108622|code|ADD.W           R6, R8, R5|8-235-5-6
108626|code|MOV             R4, R5|44-70
108628|code|LDRB.W          R0, [R6,#-1]!|22-248-1-13
108632|code|SUBS            R7, R4, #1|103-30
108634|code|BL              isPathDelimiter|255-247-171-255
108638|code|CMP             R0, #0|0-40
108640|code|BEQ             loc_1A82C|228-208
108642|code|MOV             R4, R7|60-70
108644|code|CMP             R7, #0|0-47
108646|code|BNE             loc_1A854|245-209
108648|code|MOV             R7, R5|47-70
108650|code|B               loc_1A830|225-231
108652|data|DCD asc_21E38 - 0x1A820; "."|24-118-0-0
108656|code|PUSH            {R4-R6,LR}|112-181
108658|code|MOV             R6, R0|6-70
108660|code|BLX             strlen|252-247-212-233
108664|code|ADDS            R4, R6, R0|52-24
108666|code|CMP             R6, R4|166-66
108668|code|BNE             loc_1A886|3-209
108670|code|B               loc_1A894|9-224
108672|code|CMP             R6, R5|174-66
108674|code|MOV             R4, R5|44-70
108676|code|BEQ             loc_1A894|6-208
108678|code|LDRB.W          R0, [R4,#-1]|20-248-1-12
108682|code|SUBS            R5, R4, #1|101-30
108684|code|BL              isPathDelimiter|255-247-146-255
108688|code|CMP             R0, #0|0-40
108690|code|BEQ             loc_1A880|245-208
108692|code|MOV             R0, R4|32-70
108694|code|POP             {R4-R6,PC}|112-189
108696|code|PUSH            {R3,LR}|8-181
108698|code|BL              locatePathName|255-247-233-255
108702|code|MOVS            R1, #0x2E ; '.'; c|46-33
108704|code|POP.W           {R3,LR}|189-232-8-64
108708|code|B.W             j_strrchr|252-247-146-186
108712|code|PUSH            {R4,LR}|16-181
108714|code|MOV             R4, R0|4-70
108716|code|BL              locatePathName|255-247-224-255
108720|code|SUBS            R0, R4, R0|32-26
108722|code|IT NE|24-191
108724|code|MOVNE           R0, #1|1-32
108726|code|POP             {R4,PC}|16-189
108728|code|PUSH.W          {R3-R11,LR}|45-233-248-79
108732|code|LSLS            R3, R1, #1|75-0
108734|code|MOV             R2, SP|106-70
108736|code|ADD.W           R5, R0, R1,LSL#2|0-235-129-5
108740|code|ADD.W           R9, R3, #0xFFFFFFFF|3-241-255-57
108744|code|SUB.W           R3, R2, R3,LSL#2|162-235-131-3
108748|code|CMP             R0, R5|168-66
108750|code|ADD             R7, SP, #0|0-175
108752|code|MOV             SP, R3|157-70
108754|code|MOV             R8, R0|128-70
108756|code|MOV             R10, SP|234-70
108758|code|BEQ             loc_1A92A|40-208
108760|code|LDR.W           R11, =(asc_224E4 - 0x1A8E2); "/"|223-248-84-176
108764|code|MOV             R6, R9|78-70
108766|code|ADD             R11, PC; "/"|251-68
108768|code|LDR.W           R4, [R5,#-4]!|85-248-4-77
108772|code|CBZ             R4, loc_1A914|180-177
108774|code|LDRB            R3, [R4]|35-120
108776|code|CBZ             R3, loc_1A914|163-177
108778|code|CMP             R6, R9|78-69
108780|code|MOV             R0, R4; s|32-70
108782|code|BEQ             loc_1A906|10-208
108784|code|BLX             strlen|252-247-150-233
108788|code|ADD             R0, R4|32-68
108790|code|LDRB.W          R0, [R0,#-1]|16-248-1-12
108794|code|BL              isPathDelimiter|255-247-91-255
108798|code|CBNZ            R0, loc_1A906|16-185
108800|code|SUBS            R6, #1|1-62
108802|code|STR.W           R11, [R10,R6,LSL#2]|74-248-38-176
108806|code|SUBS            R6, #1|1-62
108808|code|MOV             R0, R4|32-70
108810|code|STR.W           R4, [R10,R6,LSL#2]|74-248-38-64
108814|code|BL              isAbsolutePath|255-247-87-255
108818|code|CBNZ            R0, loc_1A918|8-185
108820|code|CMP             R8, R5|168-69
108822|code|BNE             loc_1A8E0|227-209
108824|code|RSB.W           R1, R6, R9|198-235-9-1
108828|code|ADD.W           R0, R10, R6,LSL#2|10-235-134-0
108832|code|BL              joinStrings|0-240-210-254
108836|code|MOV             SP, R7|189-70
108838|code|POP.W           {R3-R11,PC}|189-232-248-143
108842|code|MOV             R6, R9|78-70
108844|code|MOVS            R1, #0|0-33
108846|code|B               loc_1A91C|245-231
108848|data|DCD asc_224E4 - 0x1A8E2; "/"|2-124-0-0
108852|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1A93C)|10-75
108854|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|11-74
108856|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
108858|code|PUSH            {R4,LR}|16-181
108860|code|SUB             SP, SP, #0x10|132-176
108862|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
108864|code|STR             R0, [SP,#0x18+var_14]|1-144
108866|code|ADD             R0, SP, #0x18+var_14|1-168
108868|code|STR             R1, [SP,#0x18+var_10]|2-145
108870|code|MOVS            R1, #2|2-33
108872|code|LDR             R3, [R4]|35-104
108874|code|STR             R3, [SP,#0x18+var_C]|3-147
108876|code|BL              joinPath|255-247-180-255
108880|code|LDR             R2, [SP,#0x18+var_C]|3-154
108882|code|LDR             R3, [R4]|35-104
108884|code|CMP             R2, R3|154-66
108886|code|BNE             loc_1A95C|1-209
108888|code|ADD             SP, SP, #0x10|4-176
108890|code|POP             {R4,PC}|16-189
108892|code|BLX             __stack_chk_fail|252-247-108-232
108896|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1A93C|100-155-1-0
108900|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
108904|code|PUSH            {R4-R6,LR}|112-181
108906|code|MOV             R6, R0|6-70
108908|code|MOV             R5, R1|13-70
108910|code|CBNZ            R3, loc_1A998|155-185
108912|code|LDR             R1, =(aBrltty_0 - 0x1A978); ".brltty"|14-73
108914|code|MOV             R0, R2|16-70
108916|code|ADD             R1, PC; ".brltty"|121-68
108918|code|BL              makePath|255-247-221-255
108922|code|MOV             R4, R0|4-70
108924|code|CBZ             R0, locret_1A9A8|160-177
108926|code|LDR             R1, =(aOverrideDirect - 0x1A988); "Override Directory: %s"|12-73
108928|code|MOVS            R0, #6|6-32
108930|code|MOV             R2, R4|34-70
108932|code|ADD             R1, PC; "Override Directory: %s"|121-68
108934|code|BL              logMessage|255-247-207-252
108938|code|LDR             R3, [R5]|43-104
108940|code|MOVS            R0, #1|1-32
108942|code|ADDS            R1, R3, R0|25-24
108944|code|STR             R1, [R5]|41-96
108946|code|STR.W           R4, [R6,R3,LSL#2]|70-248-35-64
108950|code|POP             {R4-R6,PC}|112-189
108952|code|LDR             R1, =(aBrltty - 0x1A9A0); "brltty"|6-73
108954|code|MOV             R0, R2|16-70
108956|code|ADD             R1, PC; "brltty"|121-68
108958|code|BL              makePath|255-247-201-255
108962|code|MOV             R4, R0|4-70
108964|code|CMP             R0, #0|0-40
108966|code|BNE             loc_1A97E|234-209
108968|code|POP             {R4-R6,PC}|112-189
108970|data|ALIGN 4|0-191
108972|data|DCD aBrltty_0 - 0x1A978; ".brltty"|112-123-0-0
108976|data|DCD aOverrideDirect - 0x1A988; "Override Directory: %s"|104-123-0-0
108980|data|DCD aBrltty - 0x1A9A0; "brltty"|156-116-0-0
108984|code|PUSH            {R4,LR}|16-181
108986|code|MOV             R4, R1|12-70
108988|code|BL              locatePathExtension|255-247-108-255
108992|code|CBZ             R0, locret_1A9D0|48-177
108994|code|MOV             R1, R4; s2|33-70
108996|code|BLX             strcmp|252-247-182-233
109000|code|CLZ.W           R0, R0|176-250-128-240
109004|code|LSRS            R0, R0, #5|64-9
109006|code|POP             {R4,PC}|16-189
109008|code|POP             {R4,PC}|16-189
109010|data|ALIGN 4|0-191
109012|code|PUSH.W          {R4-R8,LR}|45-233-240-65
109016|code|MOV             R7, R1|15-70
109018|code|MOV             R6, R0|6-70
109020|code|BL              locatePathExtension|255-247-92-255
109024|code|MOV             R4, R0|4-70
109026|code|CBZ             R0, loc_1AA16|192-177
109028|code|SUBS            R5, R0, R6|133-27
109030|code|MOV             R0, R7; s|56-70
109032|code|BLX             strlen|252-247-26-233
109036|code|MOV             R8, R0|128-70
109038|code|ADDS            R0, R5, #1|104-28
109040|code|ADD             R0, R8; size|64-68
109042|code|BLX             malloc|252-247-14-233
109046|code|MOV             R4, R0|4-70
109048|code|CBZ             R0, loc_1AA28|176-177
109050|code|MOV             R1, R6|49-70
109052|code|MOV             R2, R5|42-70
109054|code|BLX             mempcpy|252-247-100-233
109058|code|MOV             R2, R8|66-70
109060|code|MOV             R1, R7|57-70
109062|code|BLX             mempcpy|252-247-96-233
109066|code|MOVS            R2, #0|0-34
109068|code|MOV             R3, R0|3-70
109070|code|MOV             R0, R4|32-70
109072|code|STRB            R2, [R3]|26-112
109074|code|POP.W           {R4-R8,PC}|189-232-240-129
109078|code|LDR             R1, =(aPathHasNoExten - 0x1AA20); "path has no extension: %s"|7-73
109080|code|MOV             R2, R6|50-70
109082|code|MOVS            R0, #4|4-32
109084|code|ADD             R1, PC; "path has no extension: %s"|121-68
109086|code|BL              logMessage|255-247-131-252
109090|code|MOV             R0, R4|32-70
109092|code|POP.W           {R4-R8,PC}|189-232-240-129
109096|code|BL              logMallocError|255-247-10-253
109100|code|MOV             R0, R4|32-70
109102|code|POP.W           {R4-R8,PC}|189-232-240-129
109106|data|ALIGN 4|0-191
109108|data|DCD aPathHasNoExten - 0x1AA20; "path has no extension: %s"|232-122-0-0
109112|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1AA40)|13-75
109114|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|14-74
109116|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
109118|code|PUSH            {R4,R5,LR}|48-181
109120|code|SUB             SP, SP, #0x14|133-176
109122|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
109124|code|MOV             R5, R1|13-70
109126|code|STR             R0, [SP,#0x20+var_1C]|1-144
109128|code|LDR             R3, [R4]|35-104
109130|code|STR             R3, [SP,#0x20+var_14]|3-147
109132|code|BL              hasFileExtension|255-247-180-255
109136|code|MOVS            R1, #1|1-33
109138|code|CBNZ            R0, loc_1AA58|8-185
109140|code|MOVS            R1, #2|2-33
109142|code|STR             R5, [SP,#0x20+var_18]|2-149
109144|code|ADD             R0, SP, #0x20+var_1C|1-168
109146|code|BL              joinStrings|0-240-53-254
109150|code|LDR             R2, [SP,#0x20+var_14]|3-154
109152|code|LDR             R3, [R4]|35-104
109154|code|CMP             R2, R3|154-66
109156|code|BNE             loc_1AA6A|1-209
109158|code|ADD             SP, SP, #0x14|5-176
109160|code|POP             {R4,R5,PC}|48-189
109162|code|BLX             __stack_chk_fail|251-247-230-239
109166|data|ALIGN 0x10|0-191
109168|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1AA40|96-154-1-0
109172|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
109176|code|PUSH            {R3-R5,LR}|56-181
109178|code|MOV             R5, R0|5-70
109180|code|MOV             R0, R1|8-70
109182|code|MOV             R1, R2|17-70
109184|code|BL              ensureFileExtension|255-247-218-255
109188|code|MOV             R4, R0|4-70
109190|code|CBZ             R0, loc_1AA9C|72-177
109192|code|MOV             R0, R5|40-70
109194|code|MOV             R1, R4|33-70
109196|code|BL              makePath|255-247-82-255
109200|code|MOV             R5, R0|5-70
109202|code|MOV             R0, R4; ptr|32-70
109204|code|BLX             free|251-247-246-237
109208|code|MOV             R0, R5|40-70
109210|code|POP             {R3-R5,PC}|56-189
109212|code|MOV             R5, R0|5-70
109214|code|B               loc_1AA98|251-231
109216|code|PUSH            {R3,LR}|8-181
109218|code|MOVS            R1, #0; type|0-33
109220|code|BLX             access|251-247-218-239
109224|code|ADDS            R0, #1|1-48
109226|code|IT NE|24-191
109228|code|MOVNE           R0, #1|1-32
109230|code|POP             {R3,PC}|8-189
109232|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1AABA)|19-75
109234|code|MOV             R1, R0; filename|1-70
109236|code|PUSH            {R4,LR}|16-181
109238|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
109240|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|18-76
109242|code|SUB             SP, SP, #0x60|152-176
109244|code|MOVS            R0, #3; ver|3-32
109246|code|MOV             R2, SP; stat_buf|106-70
109248|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
109250|code|LDR             R3, [R4]|35-104
109252|code|STR             R3, [SP,#0x68+var_C]|23-147
109254|code|BLX             __xstat|252-247-6-233
109258|code|ADDS            R0, #1|1-48
109260|code|IT EQ|8-191
109262|code|MOVEQ           R3, #0|0-35
109264|code|BEQ             loc_1AAEC|12-208
109266|code|LDR             R3, [SP,#0x68+var_58]|4-155
109268|code|AND.W           R3, R3, #0xF000|3-244-112-67
109272|code|CMP.W           R3, #0x8000|179-245-0-79
109276|code|IT EQ|8-191
109278|code|MOVEQ           R3, #1|1-35
109280|code|BEQ             loc_1AAEC|4-208
109282|code|BLX             __errno_location|252-247-58-233
109286|code|MOVS            R3, #0|0-35
109288|code|MOVS            R2, #0x11|17-34
109290|code|STR             R2, [R0]|2-96
109292|code|LDR             R2, [SP,#0x68+var_C]|23-154
109294|code|MOV             R0, R3|24-70
109296|code|LDR             R3, [R4]|35-104
109298|code|CMP             R2, R3|154-66
109300|code|BNE             loc_1AAFA|1-209
109302|code|ADD             SP, SP, #0x60 ; '`'|24-176
109304|code|POP             {R4,PC}|16-189
109306|code|BLX             __stack_chk_fail|251-247-158-239
109310|data|ALIGN 0x10|0-191
109312|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1AABA|230-153-1-0
109316|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
109320|code|PUSH            {R4,LR}|16-181
109322|code|MOV             R4, R0|4-70
109324|code|BL              testFilePath|255-247-208-255
109328|code|CBZ             R0, locret_1AB20|48-177
109330|code|MOV             R0, R4; name|32-70
109332|code|MOVS            R1, #1; type|1-33
109334|code|BLX             access|251-247-162-239
109338|code|ADDS            R0, #1|1-48
109340|code|IT NE|24-191
109342|code|MOVNE           R0, #1|1-32
109344|code|POP             {R4,PC}|16-189
109346|data|ALIGN 4|0-191
109348|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1AB2E)|19-75
109350|code|MOV             R1, R0; filename|1-70
109352|code|PUSH            {R4,LR}|16-181
109354|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
109356|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|18-76
109358|code|SUB             SP, SP, #0x60|152-176
109360|code|MOVS            R0, #3; ver|3-32
109362|code|MOV             R2, SP; stat_buf|106-70
109364|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
109366|code|LDR             R3, [R4]|35-104
109368|code|STR             R3, [SP,#0x68+var_C]|23-147
109370|code|BLX             __xstat|252-247-204-232
109374|code|ADDS            R0, #1|1-48
109376|code|IT EQ|8-191
109378|code|MOVEQ           R3, #0|0-35
109380|code|BEQ             loc_1AB60|12-208
109382|code|LDR             R3, [SP,#0x68+var_58]|4-155
109384|code|AND.W           R3, R3, #0xF000|3-244-112-67
109388|code|CMP.W           R3, #0x4000|179-245-128-79
109392|code|IT EQ|8-191
109394|code|MOVEQ           R3, #1|1-35
109396|code|BEQ             loc_1AB60|4-208
109398|code|BLX             __errno_location|252-247-0-233
109402|code|MOVS            R3, #0|0-35
109404|code|MOVS            R2, #0x11|17-34
109406|code|STR             R2, [R0]|2-96
109408|code|LDR             R2, [SP,#0x68+var_C]|23-154
109410|code|MOV             R0, R3|24-70
109412|code|LDR             R3, [R4]|35-104
109414|code|CMP             R2, R3|154-66
109416|code|BNE             loc_1AB6E|1-209
109418|code|ADD             SP, SP, #0x60 ; '`'|24-176
109420|code|POP             {R4,PC}|16-189
109422|code|BLX             __stack_chk_fail|251-247-100-239
109426|data|ALIGN 4|0-191
109428|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1AB2E|114-153-1-0
109432|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
109436|code|PUSH            {R4,R5,LR}|48-181
109438|code|MOVW            R1, #0x1ED; mode|64-242-237-17
109442|code|SUB             SP, SP, #0xC|131-176
109444|code|MOV             R4, R0|4-70
109446|code|BLX             mkdir|251-247-124-239
109450|code|ADDS            R0, #1|1-48
109452|code|IT NE|24-191
109454|code|MOVNE           R0, #1|1-32
109456|code|BEQ             loc_1AB96|1-208
109458|code|ADD             SP, SP, #0xC|3-176
109460|code|POP             {R4,R5,PC}|48-189
109462|code|LDR             R1, =(aCannotCreateDi - 0x1ABA0); "cannot create directory"|11-73
109464|code|MOVS            R2, #5; category|5-34
109466|code|MOVS            R0, #0; domainname|0-32
109468|code|ADD             R1, PC; "cannot create directory"|121-68
109470|code|BLX             dcgettext|251-247-106-239
109474|code|MOV             R5, R0|5-70
109476|code|BLX             __errno_location|252-247-216-232
109480|code|LDR             R0, [R0]; errnum|0-104
109482|code|BLX             strerror|251-247-200-237
109486|code|LDR             R1, =(aSSS - 0x1ABB8); "%s: %s: %s"|6-73
109488|code|MOV             R2, R5|42-70
109490|code|MOV             R3, R4|35-70
109492|code|ADD             R1, PC; "%s: %s: %s"|121-68
109494|code|STR             R0, [SP,#0x18+var_18]|0-144
109496|code|MOVS            R0, #4|4-32
109498|code|BL              logMessage|255-247-181-251
109502|code|MOVS            R0, #0|0-32
109504|code|ADD             SP, SP, #0xC|3-176
109506|code|POP             {R4,R5,PC}|48-189
109508|data|DCD aCannotCreateDi - 0x1ABA0; "cannot create directory"|132-121-0-0
109512|data|DCD aSSS - 0x1ABB8; "%s: %s: %s"|32-114-0-0
109516|code|PUSH            {R3-R7,LR}|248-181
109518|code|MOV             R5, R0|5-70
109520|code|BL              testDirectoryPath|255-247-168-255
109524|code|MOV             R4, R0|4-70
109526|code|CBNZ            R0, loc_1AC32|96-187
109528|code|BLX             __errno_location|252-247-190-232
109532|code|LDR             R0, [R0]; errnum|0-104
109534|code|CMP             R0, #0x11|17-40
109536|code|BEQ             loc_1AC38|42-208
109538|code|CMP             R0, #2|2-40
109540|code|BEQ             loc_1ABFC|10-208
109542|code|BLX             strerror|251-247-170-237
109546|code|LDR             R1, =(aCannotAccessDi - 0x1ABF2); "cannot access directory: %s: %s"|23-73
109548|code|MOV             R2, R5|42-70
109550|code|ADD             R1, PC; "cannot access directory: %s: %s"|121-68
109552|code|MOV             R3, R0|3-70
109554|code|MOVS            R0, #3|3-32
109556|code|BL              logMessage|255-247-152-251
109560|code|MOV             R0, R4|32-70
109562|code|POP             {R3-R7,PC}|248-189
109564|code|MOV             R0, R5|40-70
109566|code|BL              getPathDirectory|255-247-231-253
109570|code|MOV             R6, R0|6-70
109572|code|CMP             R0, #0|0-40
109574|code|BEQ             loc_1ABF8|247-208
109576|code|BL              ensureDirectory|255-247-224-255
109580|code|MOV             R7, R0|7-70
109582|code|MOV             R0, R6; ptr|48-70
109584|code|BLX             free|251-247-56-237
109588|code|CMP             R7, #0|0-47
109590|code|BEQ             loc_1ABF8|239-208
109592|code|MOV             R0, R5|40-70
109594|code|BL              createDirectory|255-247-175-255
109598|code|CMP             R0, #0|0-40
109600|code|BEQ             loc_1ABF8|234-208
109602|code|LDR             R1, =(aDirectoryCreat - 0x1AC2E); "directory created: %s"|10-73
109604|code|MOV             R2, R5|42-70
109606|code|MOVS            R0, #5|5-32
109608|code|MOVS            R4, #1|1-36
109610|code|ADD             R1, PC; "directory created: %s"|121-68
109612|code|BL              logMessage|255-247-124-251
109616|code|B               loc_1ABF8|226-231
109618|code|MOVS            R4, #1|1-36
109620|code|MOV             R0, R4|32-70
109622|code|POP             {R3-R7,PC}|248-189
109624|code|LDR             R1, =(aNotADirectoryS - 0x1AC42); "not a directory: %s"|5-73
109626|code|MOV             R2, R5|42-70
109628|code|MOVS            R0, #3|3-32
109630|code|ADD             R1, PC; "not a directory: %s"|121-68
109632|code|BL              logMessage|255-247-114-251
109636|code|B               loc_1ABF8|216-231
109638|data|ALIGN 4|0-191
109640|data|DCD aCannotAccessDi - 0x1ABF2; "cannot access directory: %s: %s"|94-121-0-0
109644|data|DCD aDirectoryCreat - 0x1AC2E; "directory created: %s"|66-121-0-0
109648|data|DCD aNotADirectoryS - 0x1AC42; "not a directory: %s"|250-120-0-0
109652|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1AC5C)|7-75
109654|code|LDR             R2, =(writableDirectory_ptr - 0x344A0)|8-74
109656|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
109658|code|PUSH            {R4,LR}|16-181
109660|code|LDR             R4, [R3,R2]; writableDirectory|156-88
109662|code|LDR             R0, [R4]|32-104
109664|code|CBZ             R0, loc_1AC70|48-177
109666|code|LDRB            R3, [R0]|3-120
109668|code|CBZ             R3, loc_1AC70|35-177
109670|code|BL              ensureDirectory|255-247-177-255
109674|code|CBZ             R0, loc_1AC70|8-177
109676|code|LDR             R0, [R4]|32-104
109678|code|POP             {R4,PC}|16-189
109680|code|MOVS            R0, #0|0-32
109682|code|POP             {R4,PC}|16-189
109684|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1AC5C|68-152-1-0
109688|data|DCD writableDirectory_ptr - 0x344A0|116-3-0-0
109692|code|PUSH            {R4,LR}|16-181
109694|code|MOV             R4, R0|4-70
109696|code|BL              getWritableDirectory|255-247-232-255
109700|code|CBZ             R0, locret_1AC90|32-177
109702|code|MOV             R1, R4|33-70
109704|code|POP.W           {R4,LR}|189-232-16-64
109708|code|B.W             makePath|255-247-82-190
109712|code|POP             {R4,PC}|16-189
109714|data|ALIGN 4|0-191
109716|code|PUSH            {R3-R7,LR}|248-181
109718|code|MOVS            R6, #0|0-38
109720|code|MOVS            R4, #0x80|128-36
109722|code|B               loc_1ACB0|9-224
109724|code|BLX             getcwd|251-247-230-239
109728|code|MOV             R6, R5|46-70
109730|code|CBNZ            R0, loc_1ACF6|64-187
109732|code|BLX             __errno_location|252-247-88-232
109736|code|LDR             R3, [R0]|3-104
109738|code|MOV             R7, R0|7-70
109740|code|CMP             R3, #0x22 ; '"'|34-43
109742|code|BNE             loc_1ACFA|36-209
109744|code|LSLS            R4, R4, #1|100-0
109746|code|MOV             R0, R6; ptr|48-70
109748|code|MOV             R1, R4; size|33-70
109750|code|BLX             realloc|251-247-124-238
109754|code|MOV             R1, R4; size|33-70
109756|code|MOV             R5, R0|5-70
109758|code|CMP             R0, #0|0-40
109760|code|BNE             loc_1AC9C|236-209
109762|code|MOV             R5, R6|53-70
109764|code|BL              logMallocError|255-247-188-251
109768|code|CBNZ            R6, loc_1AD0A|254-185
109770|code|BLX             __errno_location|252-247-70-232
109774|code|MOV             R7, R0|7-70
109776|code|LDR             R1, =(aCannotGetWorki - 0x1ACDA); "cannot get working directory"|16-73
109778|code|MOVS            R2, #5; category|5-34
109780|code|MOVS            R0, #0; domainname|0-32
109782|code|ADD             R1, PC; "cannot get working directory"|121-68
109784|code|BLX             dcgettext|251-247-204-238
109788|code|MOV             R4, R0|4-70
109790|code|LDR             R0, [R7]; errnum|56-104
109792|code|BLX             strerror|251-247-44-237
109796|code|LDR             R1, =(aSS - 0x1ACEC); "%s: %s"|12-73
109798|code|MOV             R2, R4|34-70
109800|code|ADD             R1, PC; "%s: %s"|121-68
109802|code|MOV             R3, R0|3-70
109804|code|MOVS            R0, #4|4-32
109806|code|BL              logMessage|255-247-27-251
109810|code|MOVS            R0, #0|0-32
109812|code|POP             {R3-R7,PC}|248-189
109814|code|MOV             R0, R5|40-70
109816|code|POP             {R3-R7,PC}|248-189
109818|code|LDR             R0, =(aGetcwd_0 - 0x1AD00); "getcwd"|8-72
109820|code|ADD             R0, PC; "getcwd"|120-68
109822|code|BL              logSystemError|255-247-149-251
109826|code|MOV             R0, R5; ptr|40-70
109828|code|BLX             free|251-247-190-236
109832|code|B               loc_1ACD0|226-231
109834|code|BLX             __errno_location|252-247-38-232
109838|code|MOV             R7, R0|7-70
109840|code|B               loc_1AD02|247-231
109842|data|ALIGN 4|0-191
109844|data|DCD aCannotGetWorki - 0x1ACDA; "cannot get working directory"|182-120-0-0
109848|data|DCD aSS - 0x1ACEC; "%s: %s"|208-126-0-0
109852|data|DCD aGetcwd_0 - 0x1AD00; "getcwd"|136-120-0-0
109856|code|PUSH            {R4,R5,LR}|48-181
109858|code|SUB             SP, SP, #0xC|131-176
109860|code|MOV             R4, R0|4-70
109862|code|BLX             chdir|251-247-62-236
109866|code|ADDS            R0, #1|1-48
109868|code|IT NE|24-191
109870|code|MOVNE           R0, #1|1-32
109872|code|BEQ             loc_1AD36|1-208
109874|code|ADD             SP, SP, #0xC|3-176
109876|code|POP             {R4,R5,PC}|48-189
109878|code|LDR             R1, =(aCannotSetWorki - 0x1AD40); "cannot set working directory"|11-73
109880|code|MOVS            R2, #5; category|5-34
109882|code|MOVS            R0, #0; domainname|0-32
109884|code|ADD             R1, PC; "cannot set working directory"|121-68
109886|code|BLX             dcgettext|251-247-154-238
109890|code|MOV             R5, R0|5-70
109892|code|BLX             __errno_location|252-247-8-232
109896|code|LDR             R0, [R0]; errnum|0-104
109898|code|BLX             strerror|251-247-248-236
109902|code|LDR             R1, =(aSSS - 0x1AD58); "%s: %s: %s"|6-73
109904|code|MOV             R2, R5|42-70
109906|code|MOV             R3, R4|35-70
109908|code|ADD             R1, PC; "%s: %s: %s"|121-68
109910|code|STR             R0, [SP,#0x18+var_18]|0-144
109912|code|MOVS            R0, #4|4-32
109914|code|BL              logMessage|255-247-229-250
109918|code|MOVS            R0, #0|0-32
109920|code|ADD             SP, SP, #0xC|3-176
109922|code|POP             {R4,R5,PC}|48-189
109924|data|DCD aCannotSetWorki - 0x1AD40; "cannot set working directory"|112-120-0-0
109928|data|DCD aSSS - 0x1AD58; "%s: %s: %s"|128-112-0-0
109932|code|LDR             R0, =(aHome - 0x1AD74); "HOME"|12-72
109934|code|PUSH            {LR}|0-181
109936|code|ADD             R0, PC; "HOME"|120-68
109938|code|SUB             SP, SP, #0xC|131-176
109940|code|BLX             getenv|252-247-74-232
109944|code|MOV             R3, R0|3-70
109946|code|CBZ             R0, loc_1AD8C|56-177
109948|code|LDRB            R3, [R0]|3-120
109950|code|CBZ             R3, loc_1AD8C|43-177
109952|code|BLX             __strdup|251-247-144-237
109956|code|CBZ             R0, loc_1AD94|48-177
109958|code|ADD             SP, SP, #0xC|3-176
109960|code|POP.W           {PC}|93-248-4-251
109964|code|MOV             R0, R3|24-70
109966|code|ADD             SP, SP, #0xC|3-176
109968|code|POP.W           {PC}|93-248-4-251
109972|code|STR             R0, [SP,#0x10+var_C]|1-144
109974|code|BL              logMallocError|255-247-83-251
109978|code|LDR             R0, [SP,#0x10+var_C]|1-152
109980|code|B               loc_1AD86|243-231
109982|data|ALIGN 0x10|0-191
109984|data|DCD aHome - 0x1AD74; "HOME"|92-120-0-0
109988|code|LDR             R1, =(_GLOBAL_OFFSET_TABLE_ - 0x1ADAC)|111-73
109990|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|112-74
109992|code|ADD             R1, PC; _GLOBAL_OFFSET_TABLE_|121-68
109994|code|LDR             R3, =(dword_388A4 - 0x1ADB4)|112-75
109996|code|PUSH.W          {R4-R10,LR}|45-233-240-71
110000|code|ADD             R3, PC; dword_388A4|123-68
110002|code|LDR             R4, [R1,R2]; __stack_chk_guard|140-88
110004|code|SUB             SP, SP, #0x10|132-176
110006|code|LDR             R0, [R3]|24-104
110008|code|LDR             R3, [R4]|35-104
110010|code|STR             R3, [SP,#0x30+var_24]|3-147
110012|code|CBZ             R0, loc_1ADCE|56-177
110014|code|LDR             R2, [SP,#0x30+var_24]|3-154
110016|code|LDR             R3, [R4]|35-104
110018|code|CMP             R2, R3|154-66
110020|code|BNE.W           loc_1AF40|64-240-188-128
110024|code|ADD             SP, SP, #0x10|4-176
110026|code|POP.W           {R4-R10,PC}|189-232-240-135
110030|code|LDR             R0, =(aXdgConfigDirs - 0x1ADD4); "XDG_CONFIG_DIRS"|104-72
110032|code|ADD             R0, PC; "XDG_CONFIG_DIRS"|120-68
110034|code|BLX             getenv|252-247-28-232
110038|code|CMP             R0, #0|0-40
110040|code|BEQ             loc_1AEB0|106-208
110042|code|LDRB            R3, [R0]|3-120
110044|code|CMP             R3, #0|0-43
110046|code|BEQ             loc_1AE90|87-208
110048|code|MOVS            R1, #0x3A ; ':'; c|58-33
110050|code|ADD             R2, SP, #0x30+var_2C|1-170
110052|code|BL              splitString|0-240-52-253
110056|code|MOV             R8, R0|128-70
110058|code|CMP             R0, #0|0-40
110060|code|BEQ             loc_1AE78|68-208
110062|code|LDR             R6, [SP,#0x30+var_2C]|1-158
110064|code|ADDS            R0, R6, #3|240-28
110066|code|ADDS            R6, #2|2-54
110068|code|LSLS            R0, R0, #2; size|128-0
110070|code|BLX             malloc|251-247-12-239
110074|code|MOV             R9, R0|129-70
110076|code|CMP             R0, #0|0-40
110078|code|BEQ             loc_1AEF8|123-208
110080|code|LDR             R0, =(aXdgConfigHome - 0x1AE0A); "XDG_CONFIG_HOME"|92-72
110082|code|MOVS            R3, #0|0-35
110084|code|STR             R3, [SP,#0x30+var_28]|2-147
110086|code|ADD             R0, PC; "XDG_CONFIG_HOME"|120-68
110088|code|BLX             getenv|252-247-0-232
110092|code|CBZ             R0, loc_1AE14|16-177
110094|code|LDRB            R3, [R0]|3-120
110096|code|CMP             R3, #0|0-43
110098|code|BNE             loc_1AE96|64-209
110100|code|BL              getHomeDirectory|255-247-170-255
110104|code|MOV             R5, R0|5-70
110106|code|CBZ             R0, loc_1AE26|32-177
110108|code|LDRB            R3, [R0]|3-120
110110|code|CMP             R3, #0|0-43
110112|code|BNE             loc_1AECA|83-209
110114|code|BLX             free|251-247-48-236
110118|code|LDR             R3, [SP,#0x30+var_28]|2-155
110120|code|CMP             R3, #0|0-43
110122|code|BEQ             loc_1AEB6|68-208
110124|code|LDR.W           R2, [R8]|216-248-0-32
110128|code|CMP             R2, #0|0-42
110130|code|BEQ             loc_1AEFE|100-208
110132|code|ADD             R7, SP, #0x30+var_28|2-175
110134|code|MOV             R5, R8|69-70
110136|code|B               loc_1AE44|4-224
110138|code|SUBS            R6, #1|1-62
110140|code|LDR.W           R2, [R5,#4]!|85-248-4-47
110144|code|CMP             R2, #0|0-42
110146|code|BEQ             loc_1AEFE|92-208
110148|code|LDRB            R3, [R2]|19-120
110150|code|CMP             R3, #0|0-43
110152|code|BEQ             loc_1AE3A|247-208
110154|code|MOV             R0, R9|72-70
110156|code|MOV             R1, R7|57-70
110158|code|MOVS            R3, #1|1-35
110160|code|BL              sub_1A968|255-247-138-253
110164|code|CMP             R0, #0|0-40
110166|code|BNE             loc_1AE3C|241-209
110168|code|LDR             R3, [R5]|43-104
110170|code|CMP             R3, #0|0-43
110172|code|BEQ             loc_1AEFE|79-208
110174|code|LDR             R3, [SP,#0x30+var_28]|2-155
110176|code|MOVS            R2, #0|0-34
110178|code|CMP             R6, R3|158-66
110180|code|STR.W           R2, [R9,R3,LSL#2]|73-248-35-32
110184|code|BNE             loc_1AEA8|30-209
110186|code|LDR             R3, =(dword_388A4 - 0x1AE70)|67-75
110188|code|ADD             R3, PC; dword_388A4|123-68
110190|code|STR.W           R9, [R3]|195-248-0-144
110194|code|MOV             R0, R8; ptr|64-70
110196|code|BL              deallocateStrings|0-240-220-252
110200|code|LDR             R5, =(dword_388A4 - 0x1AE7E)|64-77
110202|code|ADD             R5, PC; dword_388A4|125-68
110204|code|LDR             R0, [R5]|40-104
110206|code|CMP             R0, #0|0-40
110208|code|BNE             loc_1ADBE|157-209
110210|code|LDR             R1, =(aNoOverrideDire - 0x1AE8A); "no override directories"|63-73
110212|code|MOVS            R0, #4|4-32
110214|code|ADD             R1, PC; "no override directories"|121-68
110216|code|BL              logMessage|255-247-78-250
110220|code|LDR             R0, [R5]|40-104
110222|code|B               loc_1ADBE|150-231
110224|code|LDR             R0, =(aEtcXdg - 0x1AE96); "/etc/xdg"|60-72
110226|code|ADD             R0, PC; "/etc/xdg"|120-68
110228|code|B               loc_1ADE0|164-231
110230|code|MOV             R2, R0|2-70
110232|code|ADD             R1, SP, #0x30+var_28|2-169
110234|code|MOV             R0, R9|72-70
110236|code|MOVS            R3, #1|1-35
110238|code|BL              sub_1A968|255-247-99-253
110242|code|CMP             R0, #0|0-40
110244|code|BEQ             loc_1AE5E|219-208
110246|code|B               loc_1AE26|190-231
110248|code|MOV             R0, R9; ptr|72-70
110250|code|BL              deallocateStrings|0-240-193-252
110254|code|B               loc_1AE72|224-231
110256|code|LDR             R0, =(aEtcXdg - 0x1AEB6); "/etc/xdg"|53-72
110258|code|ADD             R0, PC; "/etc/xdg"|120-68
110260|code|B               loc_1ADE0|148-231
110262|code|MOVS            R0, #1; nmemb|1-32
110264|code|MOV             R1, R0; size|1-70
110266|code|BLX             calloc|251-247-80-238
110270|code|CBZ             R0, loc_1AF2C|168-179
110272|code|MOVS            R3, #1|1-35
110274|code|STR.W           R0, [R9]|201-248-0-0
110278|code|STR             R3, [SP,#0x30+var_28]|2-147
110280|code|B               loc_1AE2C|176-231
110282|code|LDR             R1, =(aConfig - 0x1AED0); ".config"|48-73
110284|code|ADD             R1, PC; ".config"|121-68
110286|code|BL              makePath|255-247-49-253
110290|code|MOV             R7, R0|7-70
110292|code|MOV             R0, R5; ptr|40-70
110294|code|BLX             free|251-247-214-235
110298|code|CMP             R7, #0|0-47
110300|code|BEQ             loc_1AE26|163-208
110302|code|MOV             R0, R9|72-70
110304|code|ADD             R1, SP, #0x30+var_28|2-169
110306|code|MOV             R2, R7|58-70
110308|code|MOVS            R3, #1|1-35
110310|code|BL              sub_1A968|255-247-63-253
110314|code|MOV             R5, R0|5-70
110316|code|MOV             R0, R7; ptr|56-70
110318|code|BLX             free|251-247-202-235
110322|code|CMP             R5, #0|0-45
110324|code|BEQ             loc_1AE5E|179-208
110326|code|B               loc_1AE26|150-231
110328|code|BL              logMallocError|255-247-162-250
110332|code|B               loc_1AE72|185-231
110334|code|BL              getHomeDirectory|255-247-53-255
110338|code|MOV             R5, R0|5-70
110340|code|CBZ             R0, loc_1AF44|240-177
110342|code|LDRB            R7, [R0]|7-120
110344|code|CBNZ            R7, loc_1AF32|159-185
110346|code|BL              getWorkingDirectory|255-247-195-254
110350|code|MOV             R10, R0|130-70
110352|code|CBZ             R0, loc_1AF24|64-177
110354|code|MOV             R3, R7|59-70
110356|code|MOV             R0, R9|72-70
110358|code|ADD             R1, SP, #0x30+var_28|2-169
110360|code|MOV             R2, R10|82-70
110362|code|BL              sub_1A968|255-247-37-253
110366|code|MOV             R0, R10; ptr|80-70
110368|code|BLX             free|251-247-176-235
110372|code|MOV             R0, R5; ptr|40-70
110374|code|BLX             free|251-247-174-235
110378|code|B               loc_1AE5E|152-231
110380|code|BL              logMallocError|255-247-136-250
110384|code|B               loc_1AE5E|149-231
110386|code|MOV             R0, R9|72-70
110388|code|ADD             R1, SP, #0x30+var_28|2-169
110390|code|MOV             R2, R5|42-70
110392|code|MOVS            R3, #0|0-35
110394|code|BL              sub_1A968|255-247-21-253
110398|code|B               loc_1AF24|241-231
110400|code|BLX             __stack_chk_fail|251-247-122-237
110404|code|BL              getWorkingDirectory|255-247-166-254
110408|code|MOV             R7, R0|7-70
110410|code|CMP             R0, #0|0-40
110412|code|BEQ             loc_1AE5E|135-208
110414|code|MOV             R3, R5|43-70
110416|code|MOV             R0, R9|72-70
110418|code|ADD             R1, SP, #0x30+var_28|2-169
110420|code|MOV             R2, R7|58-70
110422|code|BL              sub_1A968|255-247-7-253
110426|code|MOV             R0, R7; ptr|56-70
110428|code|BLX             free|251-247-146-235
110432|code|B               loc_1AE5E|125-231
110434|data|ALIGN 4|0-191
110436|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1ADAC|244-150-1-0
110440|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
110444|data|DCD dword_388A4 - 0x1ADB4|240-218-1-0
110448|data|DCD aXdgConfigDirs - 0x1ADD4; "XDG_CONFIG_DIRS"|16-120-0-0
110452|data|DCD aXdgConfigHome - 0x1AE0A; "XDG_CONFIG_HOME"|234-119-0-0
110456|data|DCD dword_388A4 - 0x1AE70|52-218-1-0
110460|data|DCD dword_388A4 - 0x1AE7E|38-218-1-0
110464|data|DCD aNoOverrideDire - 0x1AE8A; "no override directories"|130-119-0-0
110468|data|DCD aEtcXdg - 0x1AE96; "/etc/xdg"|66-119-0-0
110472|data|DCD aEtcXdg - 0x1AEB6; "/etc/xdg"|34-119-0-0
110476|data|DCD aConfig - 0x1AED0; ".config"|52-119-0-0
110480|code|PUSH            {R3,LR}|8-181
110482|code|BL              getAllOverrideDirectories|255-247-7-255
110486|code|CBZ             R0, loc_1AFA2|32-177
110488|code|LDR             R0, [R0]|0-104
110490|code|CBZ             R0, loc_1AFA2|16-177
110492|code|LDRB            R3, [R0]|3-120
110494|code|CBZ             R3, loc_1AFA2|3-177
110496|code|POP             {R3,PC}|8-189
110498|code|LDR             R1, =(aNoPrimaryOverr - 0x1AFAA); "no primary override directory"|3-73
110500|code|MOVS            R0, #4|4-32
110502|code|ADD             R1, PC; "no primary override directory"|121-68
110504|code|BL              logMessage|255-247-190-249
110508|code|MOVS            R0, #0|0-32
110510|code|POP             {R3,PC}|8-189
110512|data|DCD aNoPrimaryOverr - 0x1AFAA; "no primary override directory"|122-118-0-0
110516|code|MOVS            R2, R1|10-28
110518|code|MOV.W           R1, #7; cmd|79-240-7-1
110522|code|IT NE|24-191
110524|code|MOVNE           R2, #1|1-34
110526|code|B.W             sub_1A734|255-247-185-187
110530|data|ALIGN 4|0-191
110532|code|MOVS            R2, R1|10-28
110534|code|MOV.W           R1, #6; cmd|79-240-6-1
110538|code|IT NE|24-191
110540|code|MOVNE           R2, #1|1-34
110542|code|B.W             sub_1A734|255-247-177-187
110546|data|ALIGN 4|0-191
110548|code|MOVS            R1, #6; cmd|6-33
110550|code|MOVS            R2, #2|2-34
110552|code|B.W             sub_1A734|255-247-172-187
110556|code|MOV             R2, R1|10-70
110558|code|LDR             R1, =(loc_1A71C+1 - 0x1AFE4)|2-73
110560|code|ADD             R1, PC; loc_1A71C|121-68
110562|code|B.W             onProgramExit|253-247-47-187
110566|data|ALIGN 4|0-191
110568|data|DCD loc_1A71C+1 - 0x1AFE4|57-247-255-255
110572|code|B.W             j_fflush|251-247-206-190
110576|code|PUSH            {R4-R6,LR}|112-181
110578|code|MOV             R6, R2|22-70
110580|code|MOV             R5, R0|5-70
110582|code|BLX             fopen|251-247-116-236
110586|code|MOV             R4, R0|4-70
110588|code|CBZ             R0, loc_1B014|80-177
110590|code|BLX             fileno|251-247-252-236
110594|code|LDR             R1, =(aFileOpenedSFdD - 0x1B00A); "file opened: %s fd=%d"|16-73
110596|code|MOV             R2, R5|42-70
110598|code|ADD             R1, PC; "file opened: %s fd=%d"|121-68
110600|code|MOV             R3, R0|3-70
110602|code|MOVS            R0, #7|7-32
110604|code|BL              logMessage|255-247-140-249
110608|code|MOV             R0, R4|32-70
110610|code|POP             {R4-R6,PC}|112-189
110612|code|CBNZ            R6, loc_1B034|118-185
110614|code|BLX             __errno_location|251-247-160-238
110618|code|LDR             R0, [R0]; errnum|0-104
110620|code|MOVS            R6, #3|3-38
110622|code|BLX             strerror|251-247-142-235
110626|code|LDR             R1, =(aCannotOpenFile - 0x1B02A); "cannot open file: %s: %s"|9-73
110628|code|MOV             R2, R5|42-70
110630|code|ADD             R1, PC; "cannot open file: %s: %s"|121-68
110632|code|MOV             R3, R0|3-70
110634|code|MOV             R0, R6|48-70
110636|code|BL              logMessage|255-247-124-249
110640|code|MOV             R0, R4|32-70
110642|code|POP             {R4-R6,PC}|112-189
110644|code|BLX             __errno_location|251-247-144-238
110648|code|LDR             R0, [R0]|0-104
110650|code|CMP             R0, #2|2-40
110652|code|IT EQ|8-191
110654|code|MOVEQ           R6, #7|7-38
110656|code|BNE             loc_1B01C|236-209
110658|code|B               loc_1B01E|236-231
110660|data|DCD aFileOpenedSFdD - 0x1B00A; "file opened: %s fd=%d"|58-118-0-0
110664|data|DCD aCannotOpenFile - 0x1B02A; "cannot open file: %s: %s"|50-118-0-0
110668|code|PUSH.W          {R3-R9,LR}|45-233-248-67
110672|code|MOV             R6, R1|14-70
110674|code|MOV             R7, R2|23-70
110676|code|MOV             R8, R0|128-70
110678|code|BLX             ferror|251-247-148-237
110682|code|CBZ             R0, loc_1B066|32-177
110684|code|MOV.W           R9, #0|79-240-0-9
110688|code|MOV             R0, R9|72-70
110690|code|POP.W           {R3-R9,PC}|189-232-248-131
110694|code|MOV             R0, R8; stream|64-70
110696|code|BLX             feof|251-247-134-235
110700|code|MOV             R9, R0|129-70
110702|code|CMP             R0, #0|0-40
110704|code|BNE             loc_1B05C|244-209
110706|code|LDR             R1, [R7]; n|57-104
110708|code|CMP             R1, #0|0-41
110710|code|BEQ             loc_1B0EA|56-208
110712|code|LDR             R0, [R6]; s|48-104
110714|code|MOV             R2, R8; stream|66-70
110716|code|BLX             fgets|251-247-146-237
110720|code|MOV             R5, R0|5-70
110722|code|CMP             R0, #0|0-40
110724|code|BEQ             loc_1B120|76-208
110726|code|BLX             strlen|251-247-204-237
110730|code|SUBS            R3, R0, #1|67-30
110732|code|MOV             R4, R0|4-70
110734|code|LDRB            R2, [R5,R3]|234-92
110736|code|CMP             R2, #0xA|10-42
110738|code|BEQ             loc_1B102|54-208
110740|code|LDR             R2, [R6]|50-104
110742|code|B               loc_1B0B4|13-224
110744|code|ADDS            R0, R2, R4; s|16-25
110746|code|MOV             R2, R8; stream|66-70
110748|code|BLX             fgets|251-247-130-237
110752|code|CBZ             R0, loc_1B0DC|224-177
110754|code|BLX             strlen|251-247-190-237
110758|code|LDR             R5, [R6]|53-104
110760|code|MOV             R2, R5|42-70
110762|code|ADD             R4, R0|4-68
110764|code|SUBS            R3, R4, #1|99-30
110766|code|LDRB            R1, [R5,R3]|233-92
110768|code|CMP             R1, #0xA|10-41
110770|code|BEQ             loc_1B102|38-208
110772|code|LDR             R3, [R7]|59-104
110774|code|SUBS            R1, R3, R4; n|25-27
110776|code|CMP             R1, #1|1-41
110778|code|BNE             loc_1B098|237-209
110780|code|LSLS            R5, R3, #1|93-0
110782|code|MOV             R0, R2; ptr|16-70
110784|code|MOV             R1, R5; size|41-70
110786|code|BLX             realloc|251-247-118-236
110790|code|SUBS            R1, R5, R4; n|41-27
110792|code|MOV             R2, R0|2-70
110794|code|CBZ             R0, loc_1B0FC|184-177
110796|code|STR             R0, [R6]|48-96
110798|code|ADDS            R0, R2, R4; s|16-25
110800|code|STR             R5, [R7]|61-96
110802|code|MOV             R2, R8; stream|66-70
110804|code|BLX             fgets|251-247-102-237
110808|code|CMP             R0, #0|0-40
110810|code|BNE             loc_1B0A2|226-209
110812|code|MOV             R0, R8; stream|64-70
110814|code|BLX             ferror|251-247-80-237
110818|code|CBNZ            R0, loc_1B12A|16-187
110820|code|MOV.W           R9, #1|79-240-1-9
110824|code|B               loc_1B060|186-231
110826|code|MOVS            R4, #0x80|128-36
110828|code|STR             R4, [R7]|60-96
110830|code|MOV             R0, R4; size|32-70
110832|code|BLX             malloc|251-247-142-237
110836|code|MOV             R1, R4|33-70
110838|code|STR             R0, [R6]|48-96
110840|code|CMP             R0, #0|0-40
110842|code|BNE             loc_1B07A|190-209
110844|code|BL              logMallocError|255-247-160-249
110848|code|B               loc_1B060|174-231
110850|code|MOV             R2, R5|42-70
110852|code|CBZ             R3, loc_1B112|43-177
110854|code|SUBS            R4, #2|2-60
110856|code|ADDS            R2, R5, R4|42-25
110858|code|LDRB            R1, [R5,R4]|41-93
110860|code|CMP             R1, #0xD|13-41
110862|code|IT NE|24-191
110864|code|ADDNE           R2, R5, R3|234-24
110866|code|MOV.W           R9, #1|79-240-1-9
110870|code|MOVS            R3, #0|0-35
110872|code|MOV             R0, R9|72-70
110874|code|STRB            R3, [R2]|19-112
110876|code|POP.W           {R3-R9,PC}|189-232-248-131
110880|code|MOV             R0, R8; stream|64-70
110882|code|BLX             ferror|251-247-46-237
110886|code|CMP             R0, #0|0-40
110888|code|BEQ             loc_1B05C|152-208
110890|code|LDR             R0, =(aRead - 0x1B130); "read"|2-72
110892|code|ADD             R0, PC; "read"|120-68
110894|code|BL              logSystemError|255-247-125-249
110898|code|B               loc_1B060|149-231
110900|data|DCD aRead - 0x1B130; "read"|104-108-0-0
110904|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1B142)|34-75
110906|code|PUSH.W          {R4-R11,LR}|45-233-240-79
110910|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
110912|code|LDR             R6, =(__stack_chk_guard_ptr - 0x344A0)|33-78
110914|code|SUB             SP, SP, #0x1C|135-176
110916|code|LDR.W           R10, =(unk_224C8 - 0x1B164)|223-248-132-160
110920|code|MOV.W           LR, #0|79-240-0-14
110924|code|MOV             R5, R0|5-70
110926|code|MOV             R9, R1|137-70
110928|code|LDR             R3, [R3,R6]; __stack_chk_guard|155-89
110930|code|MOV             R8, R2|144-70
110932|code|MOV             R4, LR|116-70
110934|code|ADD             R7, SP, #0xC|3-175
110936|code|ADD             R6, SP, #0x1C+var_C|4-174
110938|code|STR.W           LR, [SP,#0x1C+s1]|205-248-12-224
110942|code|STR             R3, [SP,#0x1C+var_18]|1-147
110944|code|ADD             R10, PC; unk_224C8|250-68
110946|code|LDR             R3, [R3]|27-104
110948|code|STR.W           LR, [SP,#0x1C+var_C]|205-248-16-224
110952|code|STR             R3, [SP,#0x1C+var_8]|5-147
110954|code|B               loc_1B18C|15-224
110956|code|LDR.W           R11, [SP,#0x1C+s1]|221-248-12-176
110960|code|CBNZ            R4, loc_1B182|60-185
110962|code|MOV             R0, R11; s1|88-70
110964|code|MOV             R1, R10; s2|81-70
110966|code|MOVS            R2, #3; n|3-34
110968|code|BLX             strncmp|251-247-176-234
110972|code|CBNZ            R0, loc_1B182|8-185
110974|code|ADD.W           R11, R11, #3|11-241-3-11
110978|code|MOV             R0, R11|88-70
110980|code|MOV             R1, R8|65-70
110982|code|BLX             R9|200-71
110984|code|ADDS            R4, #1|1-52
110986|code|CBZ             R0, loc_1B19A|48-177
110988|code|MOV             R0, R5|40-70
110990|code|MOV             R1, R7|57-70
110992|code|MOV             R2, R6|50-70
110994|code|BL              readLine|255-247-91-255
110998|code|CMP             R0, #0|0-40
111000|code|BNE             loc_1B16C|232-209
111002|code|LDR             R0, [SP,#0x1C+s1]; ptr|3-152
111004|code|CBZ             R0, loc_1B1A2|8-177
111006|code|BLX             free|251-247-114-234
111010|code|MOV             R0, R5; stream|40-70
111012|code|BLX             ferror|251-247-236-236
111016|code|LDR             R3, [SP,#0x1C+var_18]|1-155
111018|code|LDR             R2, [SP,#0x1C+var_8]|5-154
111020|code|LDR             R3, [R3]|27-104
111022|code|CMP             R2, R3|154-66
111024|code|CLZ.W           R0, R0|176-250-128-240
111028|code|MOV.W           R0, R0,LSR#5|79-234-80-16
111032|code|BNE             loc_1B1C0|2-209
111034|code|ADD             SP, SP, #0x1C|7-176
111036|code|POP.W           {R4-R11,PC}|189-232-240-143
111040|code|BLX             __stack_chk_fail|251-247-58-236
111044|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1B142|94-147-1-0
111048|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
111052|data|DCD unk_224C8 - 0x1B164|100-115-0-0
111056|code|PUSH.W          {R4-R9,LR}|45-233-240-67
111060|code|SUB             SP, SP, #0xC|131-176
111062|code|MOV             R7, R3|31-70
111064|code|MOV             R9, R0|129-70
111066|code|MOVS            R3, #0|0-35
111068|code|ADD.W           R8, R0, R1|0-235-1-8
111072|code|STRB            R3, [R0]|3-112
111074|code|MOV             R4, R0|4-70
111076|code|LDR             R6, [SP,#0x28+arg_0]|10-158
111078|code|LDR             R5, [SP,#0x28+arg_4]|11-157
111080|code|CBZ             R2, loc_1B1FE|74-177
111082|code|MOV             R3, R2|19-70
111084|code|LDR             R2, =(aCheckingSDevic+0x14 - 0x1B1F2); "%s"|31-74
111086|code|ADD             R2, PC; "%s" ; format|122-68
111088|code|BLX             snprintf|251-247-82-235
111092|code|ADD             R0, R9|72-68
111094|code|CMP             R0, R8|64-69
111096|code|IT CS|40-191
111098|code|MOVCS           R0, R8|64-70
111100|code|MOV             R4, R0|4-70
111102|code|CBZ             R7, loc_1B228|159-177
111104|code|LDR             R7, [R7]|63-104
111106|code|MOV             R0, R4|32-70
111108|code|LDR.W           LR, =(aD - 0x1B216); "[%d]"|223-248-104-224
111112|code|RSB.W           R1, R4, R8|196-235-8-1
111116|code|MOVS            R2, #1|1-34
111118|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
111122|code|ADD             LR, PC; "[%d]"|254-68
111124|code|STR             R7, [SP,#0x28+var_24]|1-151
111126|code|STR.W           LR, [SP,#0x28+var_28]|205-248-0-224
111130|code|BLX             __snprintf_chk|251-247-8-237
111134|code|ADD             R0, R4|32-68
111136|code|CMP             R0, R8|64-69
111138|code|IT CS|40-191
111140|code|MOVCS           R0, R8|64-70
111142|code|MOV             R4, R0|4-70
111144|code|CMP             R4, R9|76-69
111146|code|BEQ             loc_1B244|11-208
111148|code|LDR             R2, =(asc_22180 - 0x1B238); ": "|17-74
111150|code|MOV             R0, R4; s|32-70
111152|code|RSB.W           R1, R4, R8; maxlen|196-235-8-1
111156|code|ADD             R2, PC; ": " ; format|122-68
111158|code|BLX             snprintf|251-247-48-235
111162|code|ADD             R0, R4|32-68
111164|code|CMP             R0, R8|64-69
111166|code|IT CS|40-191
111168|code|MOVCS           R0, R8|64-70
111170|code|MOV             R4, R0|4-70
111172|code|STR             R6, [SP,#0x28+var_28]|0-150
111174|code|MOV             R0, R4|32-70
111176|code|STR             R5, [SP,#0x28+var_24]|1-149
111178|code|RSB.W           R1, R4, R8|196-235-8-1
111182|code|MOVS            R2, #1|1-34
111184|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
111188|code|BLX             __vsnprintf_chk|251-247-126-234
111192|code|ADD             R0, R4|32-68
111194|code|CMP             R0, R8|64-69
111196|code|ITE LS|148-191
111198|code|RSBLS.W         R0, R9, R0|201-235-0-0
111202|code|RSBHI.W         R0, R9, R8|201-235-8-0
111206|code|ADD             SP, SP, #0xC|3-176
111208|code|POP.W           {R4-R9,PC}|189-232-240-131
111212|data|DCD aCheckingSDevic+0x14 - 0x1B1F2; "%s"|134-117-0-0
111216|data|DCD aD - 0x1B216; "[%d]"|98-116-0-0
111220|data|DCD asc_22180 - 0x1B238; ": "|72-111-0-0
111224|code|B.W             j_read|251-247-56-187
111228|code|B.W             j_write|251-247-8-189
111232|code|LDR             R0, =(aVarLibBrltty - 0x1B286); "/var/lib/brltty"|1-72
111234|code|ADD             R0, PC; "/var/lib/brltty"|120-68
111236|code|BX              LR|112-71
111238|data|ALIGN 4|0-191
111240|data|DCD aVarLibBrltty - 0x1B286; "/var/lib/brltty"|250-115-0-0
111244|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1B294)|16-75
111246|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|17-74
111248|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
111250|code|PUSH            {R4-R6,LR}|112-181
111252|code|SUB             SP, SP, #0x10|132-176
111254|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
111256|code|MOV             R5, R0|5-70
111258|code|ADD             R0, SP, #0x20+pipedes; pipedes|1-168
111260|code|MOV             R6, R1|14-70
111262|code|LDR             R3, [R4]|35-104
111264|code|STR             R3, [SP,#0x20+var_14]|3-147
111266|code|BLX             pipe|251-247-248-237
111270|code|ADDS            R0, #1|1-48
111272|code|BEQ             loc_1B2C0|10-208
111274|code|LDR             R1, [SP,#0x20+pipedes+4]|2-153
111276|code|MOVS            R0, #1|1-32
111278|code|LDR             R2, [SP,#0x20+pipedes]|1-154
111280|code|STR             R1, [R5]|41-96
111282|code|STR             R2, [R6]|50-96
111284|code|LDR             R2, [SP,#0x20+var_14]|3-154
111286|code|LDR             R3, [R4]|35-104
111288|code|CMP             R2, R3|154-66
111290|code|BNE             loc_1B2CC|7-209
111292|code|ADD             SP, SP, #0x10|4-176
111294|code|POP             {R4-R6,PC}|112-189
111296|code|LDR             R0, =(aPipe_0 - 0x1B2C6); "pipe"|5-72
111298|code|ADD             R0, PC; "pipe"|120-68
111300|code|BL              logSystemError|255-247-178-248
111304|code|MOVS            R0, #0|0-32
111306|code|B               loc_1B2B4|243-231
111308|code|BLX             __stack_chk_fail|251-247-180-235
111312|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1B294|12-146-1-0
111316|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
111320|data|DCD aPipe_0 - 0x1B2C6; "pipe"|202-115-0-0
111324|code|MOVS            R3, #0; flags|0-35
111326|code|B.W             j_recv|251-247-187-186
111330|data|ALIGN 4|0-191
111332|code|MOVS            R3, #0; flags|0-35
111334|code|B.W             j_send|251-247-61-189
111338|data|ALIGN 4|0-191
111340|code|PUSH            {R4,LR}|16-181
111342|code|LDR             R4, =(dword_388AC - 0x1B2F4)|17-76
111344|code|ADD             R4, PC; dword_388AC|124-68
111346|code|LDR             R0, [R4]|32-104
111348|code|CBZ             R0, loc_1B2F8|0-177
111350|code|POP             {R4,PC}|16-189
111352|code|LDR             R0, =(aDevConsole - 0x1B300); "/dev/console"|15-72
111354|code|LDR             R1, =(aWb - 0x1B302); "wb"|16-73
111356|code|ADD             R0, PC; "/dev/console"|120-68
111358|code|ADD             R1, PC; "wb"|121-68
111360|code|BLX             fopen|251-247-238-234
111364|code|STR             R0, [R4]|32-96
111366|code|CBZ             R0, loc_1B326|112-177
111368|code|BLX             fileno|251-247-118-235
111372|code|LDR             R1, =(aConsoleOpenedF - 0x1B312); "console opened: fd=%d"|12-73
111374|code|ADD             R1, PC; "console opened: fd=%d"|121-68
111376|code|MOV             R2, R0|2-70
111378|code|MOVS            R0, #7|7-32
111380|code|BL              logMessage|255-247-8-248
111384|code|LDR             R0, =(aConsoleStream - 0x1B320); "console-stream"|10-72
111386|code|MOV             R1, R4|33-70
111388|code|ADD             R0, PC; "console-stream"|120-68
111390|code|BL              registerProgramStream|255-247-93-254
111394|code|LDR             R0, [R4]|32-104
111396|code|POP             {R4,PC}|16-189
111398|code|LDR             R0, =(aConsoleOpen - 0x1B32C); "console open"|8-72
111400|code|ADD             R0, PC; "console open"|120-68
111402|code|BL              logSystemError|255-247-127-248
111406|code|LDR             R0, [R4]|32-104
111408|code|B               locret_1B2F6|225-231
111410|data|ALIGN 4|0-191
111412|data|DCD dword_388AC - 0x1B2F4|184-213-1-0
111416|data|DCD aDevConsole - 0x1B300; "/dev/console"|156-115-0-0
111420|data|DCD aWb - 0x1B302; "wb"|170-115-0-0
111424|data|DCD aConsoleOpenedF - 0x1B312; "console opened: fd=%d"|158-115-0-0
111428|data|DCD aConsoleStream - 0x1B320; "console-stream"|168-115-0-0
111432|data|DCD aConsoleOpen - 0x1B32C; "console open"|172-115-0-0
111436|code|PUSH            {R3-R7,LR}|248-181
111438|code|MOV             R7, R0|7-70
111440|code|MOV             R4, R1|12-70
111442|code|BL              getConsole|255-247-203-255
111446|code|MOV             R6, R0|6-70
111448|code|CBZ             R0, loc_1B39C|0-179
111450|code|CBNZ            R4, loc_1B36A|52-185
111452|code|B               loc_1B3A0|32-224
111454|code|MOV             R0, R6; stream|48-70
111456|code|BLX             ferror|251-247-14-236
111460|code|CBNZ            R0, loc_1B394|176-185
111462|code|SUBS            R4, R4, R5|100-27
111464|code|BEQ             loc_1B3A0|26-208
111466|code|MOV             R0, R7; ptr|56-70
111468|code|MOVS            R1, #1; size|1-33
111470|code|MOV             R2, R4; n|34-70
111472|code|MOV             R3, R6; s|51-70
111474|code|BLX             fwrite|251-247-60-236
111478|code|MOV             R5, R0|5-70
111480|code|MOV             R0, R6; stream|48-70
111482|code|BLX             ferror|251-247-2-236
111486|code|ADD             R7, R5|47-68
111488|code|CMP             R0, #0|0-40
111490|code|BNE             loc_1B35E|236-209
111492|code|MOV             R0, R6; stream|48-70
111494|code|BLX             fflush|251-247-4-237
111498|code|MOV             R0, R6; stream|48-70
111500|code|BLX             ferror|251-247-248-235
111504|code|CMP             R0, #0|0-40
111506|code|BEQ             loc_1B366|232-208
111508|code|LDR             R0, =(unk_226E8 - 0x1B39A)|3-72
111510|code|ADD             R0, PC; unk_226E8|120-68
111512|code|BL              logSystemError|255-247-72-248
111516|code|MOVS            R0, #0|0-32
111518|code|POP             {R3-R7,PC}|248-189
111520|code|MOVS            R0, #1|1-32
111522|code|POP             {R3-R7,PC}|248-189
111524|data|DCD unk_226E8 - 0x1B39A|78-115-0-0
111528|code|LDR             R0, =(unk_34834 - 0x1B3B0)|2-72
111530|code|MOVS            R1, #1|1-33
111532|code|ADD             R0, PC; unk_34834|120-68
111534|code|B.W             writeConsole|255-247-205-191
111538|data|ALIGN 4|0-191
111540|data|DCD unk_34834 - 0x1B3B0|132-148-1-0
111544|code|LDR             R3, =(dword_388AC - 0x1B3BE)|55-75
111546|code|ADD             R3, PC; dword_388AC|123-68
111548|code|LDR             R0, [R3,#(dword_388B0 - 0x388AC)]|88-104
111550|code|CBZ             R0, loc_1B3C2|0-177
111552|code|BX              LR|112-71
111554|code|PUSH.W          {R4-R11,LR}|45-233-240-79
111558|code|SUB             SP, SP, #0x1C|135-176
111560|code|LDR             R0, =(aDtdevroot - 0x1B3D6); "DTDEVROOT"|52-72
111562|code|ADD             R7, SP, #0x40+var_30|4-175
111564|code|LDR             R4, =(off_341BC - 0x1B3DA); "DTDEVROOT"|52-76
111566|code|LDR.W           R8, =(aSS_0 - 0x1B3E0); "%s%s"|223-248-212-128
111570|code|ADD             R0, PC; "DTDEVROOT"|120-68
111572|code|LDR             R6, =(aDev - 0x1B3E4); "/dev"|52-78
111574|code|ADD             R4, PC; off_341BC|124-68
111576|code|LDR.W           R9, =(aDeviceDirector - 0x1B3E6); "device directory error: %s (%s): %s"|223-248-208-144
111580|code|ADD             R8, PC; "%s%s"|248-68
111582|code|LDR             R3, =(dword_388AC - 0x1B3E8)|52-75
111584|code|ADD             R6, PC; "/dev"|126-68
111586|code|ADD             R9, PC; "device directory error: %s (%s): %s"|249-68
111588|code|ADD             R3, PC; dword_388AC|123-68
111590|code|STR             R3, [R7,#4]|123-96
111592|code|B               loc_1B3F0|2-224
111594|code|LDR.W           R0, [R4,#4]!; name|84-248-4-15
111598|code|CBZ             R0, loc_1B45A|160-179
111600|code|BLX             getenv|251-247-12-237
111604|code|MOV             R10, R0|130-70
111606|code|CMP             R0, #0|0-40
111608|code|BEQ             loc_1B3EA|247-208
111610|code|LDRB            R3, [R0]|3-120
111612|code|CMP             R3, #0|0-43
111614|code|BEQ             loc_1B3EA|244-208
111616|code|BLX             strlen|251-247-14-236
111620|code|MOV             R11, SP|235-70
111622|code|MOVS            R2, #1|1-34
111624|code|ADD.W           R3, R0, #0xC|0-241-12-3
111628|code|ADDS            R1, R0, #5|65-29
111630|code|BIC.W           R3, R3, #7|35-240-7-3
111634|code|SUB.W           SP, SP, R3|173-235-3-13
111638|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
111642|code|ADD             R5, SP, #0x40+var_30|4-173
111644|code|STMEA.W         SP, {R8,R10}|141-232-0-5
111648|code|MOV             R0, R5|40-70
111650|code|STR             R6, [SP,#0x40+var_38]|2-150
111652|code|BLX             __snprintf_chk|251-247-2-236
111656|code|MOV             R0, R5; filename|40-70
111658|code|BL              testDirectoryPath|255-247-123-251
111662|code|CBNZ            R0, loc_1B47E|48-187
111664|code|BLX             __errno_location|251-247-146-236
111668|code|LDR             R0, [R0]; errnum|0-104
111670|code|CMP             R0, #2|2-40
111672|code|BEQ             loc_1B450|10-208
111674|code|LDR.W           R10, [R4]; "DTDEVROOT"|212-248-0-160
111678|code|BLX             strerror|251-247-126-233
111682|code|MOV             R2, R5|42-70
111684|code|MOV             R1, R9|73-70
111686|code|MOV             R3, R10|83-70
111688|code|STR             R0, [SP,#0x40+var_40]|0-144
111690|code|MOVS            R0, #3|3-32
111692|code|BL              logMessage|254-247-108-255
111696|code|MOV             SP, R11|221-70
111698|code|LDR.W           R0, [R4,#4]!; "UTDEVROOT"|84-248-4-15
111702|code|CMP             R0, #0|0-40
111704|code|BNE             loc_1B3F0|202-209
111706|code|LDR             R3, =(aDev - 0x1B462); "/dev"|22-75
111708|code|LDR             R1, =(dword_388AC - 0x1B464)|22-73
111710|code|ADD             R3, PC; "/dev"|123-68
111712|code|ADD             R1, PC; dword_388AC|121-68
111714|code|MOV             R2, R3|26-70
111716|code|STR             R3, [R1,#(dword_388B0 - 0x388AC)]|75-96
111718|code|LDR             R1, =(aDeviceDirector_0 - 0x1B46E); "device directory: %s"|21-73
111720|code|MOVS            R0, #7|7-32
111722|code|ADD             R1, PC; "device directory: %s"|121-68
111724|code|BL              logMessage|254-247-92-255
111728|code|LDR             R3, =(dword_388AC - 0x1B478)|19-75
111730|code|ADDS            R7, #0xC|12-55
111732|code|ADD             R3, PC; dword_388AC|123-68
111734|code|LDR             R0, [R3,#(dword_388B0 - 0x388AC)]|88-104
111736|code|MOV             SP, R7|189-70
111738|code|POP.W           {R4-R11,PC}|189-232-240-143
111742|code|MOV             R0, R5|40-70
111744|code|BLX             __strdup|251-247-16-234
111748|code|LDR             R3, [R7,#4]|123-104
111750|code|STR             R0, [R3,#4]|88-96
111752|code|CBNZ            R0, loc_1B492|24-185
111754|code|BL              logMallocError|254-247-217-255
111758|code|MOV             SP, R11|221-70
111760|code|B               loc_1B452|223-231
111762|code|MOV             R2, R0|2-70
111764|code|MOV             SP, R11|221-70
111766|code|B               loc_1B466|230-231
111768|data|DCD dword_388AC - 0x1B3BE|238-212-1-0
111772|data|DCD aDtdevroot - 0x1B3D6; "DTDEVROOT"|34-115-0-0
111776|data|DCD off_341BC - 0x1B3DA; "DTDEVROOT"|226-141-1-0
111780|data|DCD aSS_0 - 0x1B3E0; "%s%s"|52-108-0-0
111784|data|DCD aDev - 0x1B3E4; "/dev"|32-115-0-0
111788|data|DCD aDeviceDirector - 0x1B3E6; "device directory error: %s (%s): %s"|38-115-0-0
111792|data|DCD dword_388AC - 0x1B3E8|196-212-1-0
111796|data|DCD aDev - 0x1B462; "/dev"|162-114-0-0
111800|data|DCD dword_388AC - 0x1B464|72-212-1-0
111804|data|DCD aDeviceDirector_0 - 0x1B46E; "device directory: %s"|194-114-0-0
111808|data|DCD dword_388AC - 0x1B478|52-212-1-0
111812|code|PUSH            {R4,LR}|16-181
111814|code|MOV             R4, R0|4-70
111816|code|BL              getDeviceDirectory|255-247-118-255
111820|code|MOV             R1, R4|33-70
111822|code|POP.W           {R4,LR}|189-232-16-64
111826|code|B.W             makePath|255-247-47-186
111830|data|ALIGN 4|0-191
111832|code|PUSH.W          {R4-R11,LR}|45-233-240-79
111836|code|MOV             R7, R0|7-70
111838|code|LDR.W           R3, [R7],#4|87-248-4-59
111842|code|SUB             SP, SP, #0x14|133-176
111844|code|MOV             R8, R1|136-70
111846|code|STR             R3, [SP,#0x38+var_2C]|3-147
111848|code|CMP             R3, #0|0-43
111850|code|BEQ             loc_1B584|75-208
111852|code|LDR.W           R9, =(aCheckingSDevic - 0x1B4FA); "checking %s device: %s"|223-248-164-144
111856|code|MOVS            R6, #0|0-38
111858|code|LDR.W           R10, =(aSDeviceAccessE - 0x1B4FE); "%s device access error: %s: %s"|223-248-164-160
111862|code|ADD             R9, PC; "checking %s device: %s"|249-68
111864|code|LDR             R5, [SP,#0x38+var_2C]|3-157
111866|code|ADD             R10, PC; "%s device access error: %s: %s"|250-68
111868|code|B               loc_1B54A|37-224
111870|code|MOVS            R0, #7|7-32
111872|code|BL              logMessage|254-247-18-255
111876|code|MOV             R0, R4|32-70
111878|code|BL              testPath|255-247-203-250
111882|code|CMP             R0, #0|0-40
111884|code|BNE             loc_1B57A|53-209
111886|code|BLX             __errno_location|251-247-36-236
111890|code|MOV             R11, R0|131-70
111892|code|LDR             R0, [R0]; errnum|0-104
111894|code|BLX             strerror|251-247-18-233
111898|code|MOV             R1, R10|81-70
111900|code|MOV             R2, R8|66-70
111902|code|MOV             R3, R4|35-70
111904|code|STR             R0, [SP,#0x38+var_38]|0-144
111906|code|MOVS            R0, #7|7-32
111908|code|BL              logMessage|254-247-0-255
111912|code|LDR.W           R3, [R11]|219-248-0-48
111916|code|MOV             R0, R4; ptr|32-70
111918|code|SUBS            R3, #2|2-59
111920|code|IT NE|24-191
111922|code|MOVNE           R3, #1|1-35
111924|code|CMP             R6, #0|0-46
111926|code|IT NE|24-191
111928|code|MOVNE           R3, #0|0-35
111930|code|CMP             R3, #0|0-43
111932|code|IT NE|24-191
111934|code|MOVNE           R6, R5|46-70
111936|code|BLX             free|251-247-160-232
111940|code|LDR.W           R5, [R7],#4|87-248-4-91
111944|code|CBZ             R5, loc_1B55C|69-177
111946|code|MOV             R0, R5|40-70
111948|code|BL              getDevicePath|255-247-186-255
111952|code|MOV             R1, R9|73-70
111954|code|MOV             R2, R8|66-70
111956|code|MOV             R4, R0|4-70
111958|code|MOV             R3, R0|3-70
111960|code|CMP             R0, #0|0-40
111962|code|BNE             loc_1B4FE|208-209
111964|code|LDR             R3, [SP,#0x38+var_2C]|3-155
111966|code|CMP             R6, #0|0-46
111968|code|IT EQ|8-191
111970|code|MOVEQ           R6, R3|30-70
111972|code|LDR             R1, =(aSDeviceS - 0x1B570); "%s device: %s"|13-73
111974|code|MOV             R2, R8|66-70
111976|code|MOVS            R0, #6|6-32
111978|code|MOV             R3, R6|51-70
111980|code|ADD             R1, PC; "%s device: %s"|121-68
111982|code|BL              logMessage|254-247-219-254
111986|code|MOV             R0, R6|48-70
111988|code|ADD             SP, SP, #0x14|5-176
111990|code|POP.W           {R4-R11,PC}|189-232-240-143
111994|code|MOV             R0, R4; ptr|32-70
111996|code|MOV             R6, R5|46-70
111998|code|BLX             free|251-247-130-232
112002|code|B               loc_1B564|239-231
112004|code|MOV             R2, R1|10-70
112006|code|LDR             R1, =(aSDeviceNamesNo - 0x1B590); "%s device names not defined"|6-73
112008|code|MOVS            R0, #3|3-32
112010|code|MOV             R6, R3|30-70
112012|code|ADD             R1, PC; "%s device names not defined"|121-68
112014|code|BL              logMessage|254-247-203-254
112018|code|B               loc_1B572|238-231
112020|data|DCD aCheckingSDevic - 0x1B4FA; "checking %s device: %s"|106-114-0-0
112024|data|DCD aSDeviceAccessE - 0x1B4FE; "%s device access error: %s: %s"|126-114-0-0
112028|data|DCD aSDeviceS - 0x1B570; "%s device: %s"|44-114-0-0
112032|data|DCD aSDeviceNamesNo - 0x1B590; "%s device names not defined"|184-113-0-0
112036|code|PUSH            {R3-R7,LR}|248-181
112038|code|MOV             R7, R0|7-70
112040|code|LDR             R5, [R0]|5-104
112042|code|MOV             R6, R1|14-70
112044|code|MOVS            R1, #0x3A ; ':'; c|58-33
112046|code|MOV             R0, R5; s|40-70
112048|code|BLX             strchr|251-247-92-236
112052|code|CBZ             R0, locret_1B5D4|112-177
112054|code|SUBS            R4, R0, R5|68-27
112056|code|CBZ             R6, loc_1B5D6|110-177
112058|code|CBZ             R4, loc_1B5D2|84-177
112060|code|MOV             R1, R6; s2|49-70
112062|code|MOV             R0, R5; s1|40-70
112064|code|MOV             R2, R4; n|34-70
112066|code|BLX             strncasecmp|251-247-126-234
112070|code|CBNZ            R0, loc_1B5D2|32-185
112072|code|ADDS            R4, #1|1-52
112074|code|MOVS            R0, #1|1-32
112076|code|ADD             R5, R4|37-68
112078|code|STR             R5, [R7]|61-96
112080|code|POP             {R3-R7,PC}|248-189
112082|code|MOVS            R0, #0|0-32
112084|code|POP             {R3-R7,PC}|248-189
112086|code|MOVS            R0, #1|1-32
112088|code|POP             {R3-R7,PC}|248-189
112090|data|ALIGN 4|0-191
112092|code|PUSH            {LR}|0-181
112094|code|SUB             SP, SP, #0xC|131-176
112096|code|ADD             R3, SP, #0x10+var_8|2-171
112098|code|MOVS            R1, #0|0-33
112100|code|STR.W           R0, [R3,#-4]!|67-248-4-13
112104|code|MOV             R0, R3|24-70
112106|code|BL              isQualifiedDevice|255-247-219-255
112110|code|CLZ.W           R0, R0|176-250-128-240
112114|code|LSRS            R0, R0, #5|64-9
112116|code|ADD             SP, SP, #0xC|3-176
112118|code|POP.W           {PC}|93-248-4-251
112122|data|ALIGN 4|0-191
112124|code|PUSH.W          {R4-R10,LR}|45-233-240-71
112128|code|SUB             SP, SP, #0x10|132-176
112130|code|LDR.W           R10, [R0]|208-248-0-160
112134|code|ADD             R7, SP, #0x10|4-175
112136|code|MOV             R6, R0|6-70
112138|code|MOV             R9, R1|137-70
112140|code|MOV             R0, R10; s|80-70
112142|code|BLX             strlen|251-247-8-235
112146|code|MOV             R4, R0|4-70
112148|code|MOV             R0, R9; s|72-70
112150|code|BLX             strlen|251-247-4-235
112154|code|LDR             R1, =(asc_22698 - 0x1B624); "+="|40-73
112156|code|MOV.W           LR, #0|79-240-0-14
112160|code|ADD             R1, PC; "+="|121-68
112162|code|ADDS            R2, R4, R0|34-24
112164|code|MOV             R0, R9; s|72-70
112166|code|ADD.W           R3, R2, #9|2-241-9-3
112170|code|ADDS            R4, R2, #2|148-28
112172|code|BIC.W           R3, R3, #7|35-240-7-3
112176|code|SUB.W           SP, SP, R3|173-235-3-13
112180|code|ADD             R5, SP, #0x10+var_s0|4-173
112182|code|STRB.W          LR, [SP,#0x10+var_s0]|141-248-16-224
112186|code|BLX             strpbrk|251-247-138-233
112190|code|ADD.W           R8, R5, R4|5-235-4-8
112194|code|CBZ             R0, loc_1B64E|32-177
112196|code|LDRB            R3, [R0]|3-120
112198|code|CMP             R3, #0x3D ; '='|61-43
112200|code|IT EQ|8-191
112202|code|MOVEQ           R4, R5|44-70
112204|code|BEQ             loc_1B674|18-208
112206|code|LDR             R3, =(aSC - 0x1B65C); "%s%c"|28-75
112208|code|MOV             R1, R4|33-70
112210|code|MOVS            R2, #0x3D ; '='|61-34
112212|code|STR.W           R10, [SP,#0x10+var_C]|205-248-4-160
112216|code|ADD             R3, PC; "%s%c"|123-68
112218|code|STR             R2, [SP,#0x10+var_8]|2-146
112220|code|STR             R3, [SP,#0x10+var_10]|0-147
112222|code|MOV             R0, R5|40-70
112224|code|MOVS            R2, #1|1-34
112226|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
112230|code|BLX             __snprintf_chk|251-247-226-234
112234|code|ADD             R0, R5|40-68
112236|code|CMP             R0, R8|64-69
112238|code|IT CS|40-191
112240|code|MOVCS           R0, R8|64-70
112242|code|MOV             R4, R0|4-70
112244|code|LDR             R2, =(aCheckingSDevic+0x14 - 0x1B682); "%s"|19-74
112246|code|RSB.W           R1, R4, R8; maxlen|196-235-8-1
112250|code|MOV             R3, R9|75-70
112252|code|MOV             R0, R4; s|32-70
112254|code|ADD             R2, PC; "%s" ; format|122-68
112256|code|BLX             snprintf|251-247-10-233
112260|code|ADD             R0, R4|32-68
112262|code|CMP             R8, R0|128-69
112264|code|IT CS|40-191
112266|code|MOVCS           R8, R0|128-70
112268|code|CMP             R4, R8|68-69
112270|code|ITTT CC|62-191
112272|code|ADDCC.W         R3, R4, #0xFFFFFFFF|4-241-255-51
112276|code|ADDCC.W         R4, R8, #0xFFFFFFFF|8-241-255-52
112280|code|MOVCC           R2, #0x2C ; ','|44-34
112282|code|BCS             loc_1B6AA|6-210
112284|code|LDRB.W          R1, [R3,#1]!|19-248-1-31
112288|code|CMP             R1, #0x2B ; '+'|43-41
112290|code|IT EQ|8-191
112292|code|STRBEQ          R2, [R3]|26-112
112294|code|CMP             R3, R4|163-66
112296|code|BNE             loc_1B69C|248-209
112298|code|MOV             R0, R6|48-70
112300|code|MOV             R2, R5|42-70
112302|code|MOVS            R1, #0|0-33
112304|code|BL              getParameters|0-240-242-250
112308|code|MOV             SP, R7|189-70
112310|code|POP.W           {R4-R10,PC}|189-232-240-135
112314|data|ALIGN 4|0-191
112316|data|DCD asc_22698 - 0x1B624; "+="|116-112-0-0
112320|data|DCD aSC - 0x1B65C; "%s%c"|80-113-0-0
112324|data|DCD aCheckingSDevic+0x14 - 0x1B682; "%s"|246-112-0-0
112328|code|PUSH.W          {R3-R11,LR}|45-233-248-79
112332|code|MOV.W           R10, R1,LSL#2|79-234-129-10
112336|code|ADD.W           R3, R10, #0xA|10-241-10-3
112340|code|CMP             R1, #0|0-41
112342|code|BIC.W           R3, R3, #7|35-240-7-3
112346|code|ADD             R7, SP, #0|0-175
112348|code|MOV             R8, R1|136-70
112350|code|SUB.W           SP, SP, R3|173-235-3-13
112354|code|BLE             loc_1B738|41-221
112356|code|SUB.W           R6, SP, #4|173-241-4-6
112360|code|ADD             R10, R0|130-68
112362|code|MOV             R9, R0|129-70
112364|code|MOV             R4, R0|4-70
112366|code|MOVS            R5, #0|0-37
112368|code|MOV             R11, R6|179-70
112370|code|LDR.W           R0, [R4],#4; s|84-248-4-11
112374|code|BLX             strlen|251-247-148-234
112378|code|CMP             R4, R10|84-69
112380|code|STR.W           R0, [R11,#4]!|75-248-4-15
112384|code|ADD             R5, R0|5-68
112386|code|BNE             loc_1B6F2|246-209
112388|code|ADDS            R0, R5, #1; size|104-28
112390|code|BLX             malloc|251-247-132-234
112394|code|MOV             R10, R0|130-70
112396|code|CBZ             R0, loc_1B730|128-177
112398|code|SUB.W           R9, R9, #4|169-241-4-9
112402|code|MOV             R4, R0|4-70
112404|code|MOVS            R5, #0|0-37
112406|code|LDR.W           R2, [R6,#4]!; n|86-248-4-47
112410|code|MOV             R0, R4; dest|32-70
112412|code|ADDS            R5, #1|1-53
112414|code|LDR.W           R1, [R9,#4]!; src|89-248-4-31
112418|code|ADD             R4, R2|20-68
112420|code|BLX             memcpy|251-247-104-234
112424|code|CMP             R5, R8|69-69
112426|code|BNE             loc_1B716|244-209
112428|code|MOVS            R3, #0|0-35
112430|code|STRB            R3, [R4]|35-112
112432|code|MOV             R0, R10|80-70
112434|code|MOV             SP, R7|189-70
112436|code|POP.W           {R3-R11,PC}|189-232-248-143
112440|code|MOVS            R0, #1; size|1-32
112442|code|BLX             malloc|251-247-106-234
112446|code|MOV             R10, R0|130-70
112448|code|MOV             R4, R0|4-70
112450|code|CMP             R0, #0|0-40
112452|code|BNE             loc_1B72C|242-209
112454|code|B               loc_1B730|243-231
112456|code|PUSH            {R3-R5,LR}|56-181
112458|code|MOV             R5, R0|5-70
112460|code|CBZ             R1, loc_1B766|89-177
112462|code|MOV             R0, R1|8-70
112464|code|BLX             __strdup|251-247-168-232
112468|code|MOV             R4, R0|4-70
112470|code|CBZ             R0, loc_1B76A|64-177
112472|code|LDR             R0, [R5]; ptr|40-104
112474|code|CBZ             R0, loc_1B760|8-177
112476|code|BLX             free|250-247-146-239
112480|code|MOVS            R0, #1|1-32
112482|code|STR             R4, [R5]|44-96
112484|code|POP             {R3-R5,PC}|56-189
112486|code|MOV             R4, R1|12-70
112488|code|B               loc_1B758|246-231
112490|code|BL              logMallocError|254-247-105-254
112494|code|MOV             R0, R4|32-70
112496|code|POP             {R3-R5,PC}|56-189
112498|data|ALIGN 4|0-191
112500|code|CMP             R1, #0|0-41
112502|code|BEQ             loc_1B822|84-208
112504|code|PUSH.W          {R4-R10,LR}|45-233-240-71
112508|code|SUB             SP, SP, #0x10|132-176
112510|code|LDRB            R4, [R1]|12-120
112512|code|ADD             R7, SP, #0x30+var_20|4-175
112514|code|CBZ             R4, loc_1B7EC|156-179
112516|code|LDR.W           R10, [R0]|208-248-0-160
112520|code|MOV             R5, R0|5-70
112522|code|MOV             R6, R1|14-70
112524|code|MOV             R9, R2|145-70
112526|code|CMP.W           R10, #0|186-241-0-15
112530|code|BEQ             loc_1B816|64-208
112532|code|MOV             R0, R10; s|80-70
112534|code|MOV             R8, SP|232-70
112536|code|BLX             strlen|251-247-66-234
112540|code|MOV             R4, R0|4-70
112542|code|MOV             R0, R6; s|48-70
112544|code|BLX             strlen|251-247-62-234
112548|code|ADD             R0, R4|32-68
112550|code|ADD.W           R2, R0, #9|0-241-9-2
112554|code|ADDS            R1, R0, #2|129-28
112556|code|BIC.W           R2, R2, #7|34-240-7-2
112560|code|SUB.W           SP, SP, R2|173-235-2-13
112564|code|ADD             R4, SP, #0x30+var_20|4-172
112566|code|CMP.W           R9, #0|185-241-0-15
112570|code|BEQ             loc_1B7F4|27-208
112572|code|LDR             R2, =(aSCS - 0x1B7CA); "%s%c%s"|26-74
112574|code|MOV             R0, R4|32-70
112576|code|STR             R6, [SP,#0x30+var_2C]|1-150
112578|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
112582|code|ADD             R2, PC; "%s%c%s"|122-68
112584|code|MOVS            R6, #0x2C ; ','|44-38
112586|code|STR             R2, [SP,#0x30+var_30]|0-146
112588|code|MOVS            R2, #1|1-34
112590|code|STR.W           R10, [SP,#0x30+var_24]|205-248-12-160
112594|code|STR             R6, [SP,#0x30+var_28]|2-150
112596|code|BLX             __snprintf_chk|251-247-42-234
112600|code|MOV             R0, R5|40-70
112602|code|MOV             R1, R4|33-70
112604|code|BL              changeStringSetting|255-247-180-255
112608|code|CBZ             R0, loc_1B7E4|0-177
112610|code|MOVS            R0, #1|1-32
112612|code|MOV             SP, R8|197-70
112614|code|MOV             SP, R7|189-70
112616|code|POP.W           {R4-R10,PC}|189-232-240-135
112620|code|MOVS            R0, #1|1-32
112622|code|MOV             SP, R7|189-70
112624|code|POP.W           {R4-R10,PC}|189-232-240-135
112628|code|LDR             R2, =(aSCS - 0x1B804); "%s%c%s"|13-74
112630|code|MOV.W           LR, #0x2C ; ','|79-240-44-14
112634|code|STR.W           R10, [SP,#arg_4]|205-248-4-160
112638|code|MOV             R0, R4|32-70
112640|code|ADD             R2, PC; "%s%c%s"|122-68
112642|code|STR             R6, [SP,#arg_C]|3-150
112644|code|STR             R2, [SP,#arg_0]|0-146
112646|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
112650|code|MOVS            R2, #1|1-34
112652|code|STR.W           LR, [SP,#arg_8]|205-248-8-224
112656|code|BLX             __snprintf_chk|251-247-12-234
112660|code|B               loc_1B7D8|224-231
112662|code|BL              changeStringSetting|255-247-151-255
112666|code|ADDS            R0, #0|0-48
112668|code|IT NE|24-191
112670|code|MOVNE           R0, #1|1-32
112672|code|B               loc_1B7E6|225-231
112674|code|MOVS            R0, #1|1-32
112676|code|BX              LR|112-71
112678|data|ALIGN 4|0-191
112680|data|DCD aSCS - 0x1B7CA; "%s%c%s"|250-111-0-0
112684|data|DCD aSCS - 0x1B804; "%s%c%s"|192-111-0-0
112688|code|PUSH            {R3-R5,LR}|56-181
112690|code|MOV             R5, R0|5-70
112692|code|LDR             R0, [R0]; ptr|0-104
112694|code|MOV             R4, R5|44-70
112696|code|CBZ             R0, loc_1B846|40-177
112698|code|BLX             free|250-247-36-239
112702|code|LDR.W           R0, [R4,#4]!|84-248-4-15
112706|code|CMP             R0, #0|0-40
112708|code|BNE             loc_1B83A|249-209
112710|code|MOV             R0, R5; ptr|40-70
112712|code|POP.W           {R3-R5,LR}|189-232-56-64
112716|code|B.W             j_free|250-247-24-191
112720|code|PUSH.W          {R4-R11,LR}|45-233-240-79
112724|code|SUB             SP, SP, #0xC|131-176
112726|code|MOV             R7, R1|15-70
112728|code|MOV             R9, R0|129-70
112730|code|STR             R2, [SP,#0x30+var_30]|0-146
112732|code|CMP             R0, #0|0-40
112734|code|BEQ             loc_1B920|95-208
112736|code|LDRB.W          R8, [R9]; ""|153-248-0-128
112740|code|MOVS            R6, #0|0-38
112742|code|CMP.W           R8, #0|184-241-0-15
112746|code|BEQ             loc_1B8E4|59-208
112748|code|MOV             R10, R9|202-70
112750|code|MOV             R1, R7; c|57-70
112752|code|MOV             R0, R10; s|80-70
112754|code|MOVS            R5, #0|0-37
112756|code|BLX             strchr|251-247-250-234
112760|code|MOV             R4, R0|4-70
112762|code|RSB.W           R11, R10, R0|202-235-0-11
112766|code|CBZ             R0, loc_1B8BA|224-177
112768|code|ADD.W           R0, R11, #1; size|11-241-1-0
112772|code|CBZ             R6, loc_1B8A2|110-177
112774|code|BLX             malloc|251-247-196-233
112778|code|MOV             R1, R10; src|81-70
112780|code|MOV             R2, R11; n|90-70
112782|code|STR.W           R0, [R6,R5,LSL#2]|70-248-37-0
112786|code|CBZ             R0, loc_1B8FC|152-179
112788|code|STR             R0, [SP,#0x30+var_2C]|1-144
112790|code|BLX             memcpy|251-247-176-233
112794|code|LDR             R3, [SP,#0x30+var_2C]|1-155
112796|code|MOVS            R2, #0|0-34
112798|code|STRB.W          R2, [R3,R11]|3-248-11-32
112802|code|ADD.W           R10, R4, #1|4-241-1-10
112806|code|MOV             R1, R7; c|57-70
112808|code|ADDS            R5, #1|1-53
112810|code|MOV             R0, R10; s|80-70
112812|code|BLX             strchr|251-247-222-234
112816|code|MOV             R4, R0|4-70
112818|code|RSB.W           R11, R10, R0|202-235-0-11
112822|code|CMP             R0, #0|0-40
112824|code|BNE             loc_1B880|226-209
112826|code|MOV             R0, R10; s|80-70
112828|code|BLX             strlen|251-247-176-233
112832|code|MOV             R11, R0|131-70
112834|code|CMP             R6, #0|0-46
112836|code|BEQ             loc_1B93A|57-208
112838|code|ADDS            R0, #1; size|1-48
112840|code|BLX             malloc|251-247-162-233
112844|code|MOV             R7, R0|7-70
112846|code|STR.W           R0, [R6,R5,LSL#2]|70-248-37-0
112850|code|CBZ             R0, loc_1B8FC|152-177
112852|code|MOV             R1, R10; src|81-70
112854|code|MOV             R2, R11; n|90-70
112856|code|BLX             memcpy|251-247-142-233
112860|code|ADDS            R5, #1|1-53
112862|code|STRB.W          R4, [R7,R11]|7-248-11-64
112866|code|B               loc_1B92A|34-224
112868|code|CBNZ            R6, loc_1B928|6-187
112870|code|MOV             R0, R8|64-70
112872|code|ADDS            R0, #1|1-48
112874|code|LSLS            R0, R0, #2; size|128-0
112876|code|BLX             malloc|251-247-144-233
112880|code|MOV             R6, R0|6-70
112882|code|CMP             R0, #0|0-40
112884|code|BNE             loc_1B866|183-209
112886|code|BL              logMallocError|254-247-163-253
112890|code|B               loc_1B906|4-224
112892|code|BL              logMallocError|254-247-160-253
112896|code|MOV             R0, R6; ptr|48-70
112898|code|BL              deallocateStrings|255-247-149-255
112902|code|LDR             R3, [SP,#0x30+var_30]|0-155
112904|code|CBZ             R3, loc_1B916|43-177
112906|code|MOVS            R6, #0|0-38
112908|code|STR             R6, [R3]|30-96
112910|code|MOV             R0, R6|48-70
112912|code|ADD             SP, SP, #0xC|3-176
112914|code|POP.W           {R4-R11,PC}|189-232-240-143
112918|code|LDR             R6, [SP,#0x30+var_30]|0-158
112920|code|MOV             R0, R6|48-70
112922|code|ADD             SP, SP, #0xC|3-176
112924|code|POP.W           {R4-R11,PC}|189-232-240-143
112928|code|LDR.W           R9, =(aWindow010lxCha+0x24 - 0x1B928); ""|223-248-28-144
112932|code|ADD             R9, PC; ""|249-68
112934|code|B               loc_1B860|155-231
112936|code|MOV             R5, R8|69-70
112938|code|MOVS            R3, #0|0-35
112940|code|STR.W           R3, [R6,R5,LSL#2]|70-248-37-48
112944|code|LDR             R3, [SP,#0x30+var_30]|0-155
112946|code|CMP             R3, #0|0-43
112948|code|BEQ             loc_1B90E|235-208
112950|code|STR             R5, [R3]|29-96
112952|code|B               loc_1B90E|233-231
112954|code|ADDS            R0, R5, #1|104-28
112956|code|B               loc_1B8E8|212-231
112958|data|ALIGN 0x10|0-191
112960|data|DCD aWindow010lxCha+0x24 - 0x1B928; ""|84-97-0-0
112964|code|PUSH            {R4-R6,LR}|112-181
112966|code|MOV             R6, R1|14-70
112968|code|MOV             R4, R0|4-70
112970|code|LSLS            R1, R2, #1|81-0
112972|code|MOV             R0, R6|48-70
112974|code|MOV             R5, R2|21-70
112976|code|BL              sub_212E8|5-240-202-252
112980|code|MOV             R1, R6|49-70
112982|code|ADD             R0, R4|32-68
112984|code|MUL.W           R0, R5, R0|5-251-0-240
112988|code|BL              sub_212E8|5-240-196-252
112992|code|POP             {R4-R6,PC}|112-189
112994|data|ALIGN 4|0-191
112996|code|PUSH            {R3-R5,LR}|56-181
112998|code|MOV             R5, R0|5-70
113000|code|MOV             R0, R1; s|8-70
113002|code|MOV             R4, R1|12-70
113004|code|BLX             strlen|251-247-88-233
113008|code|MOV             R1, R4; s2|33-70
113010|code|MOV             R2, R0; n|2-70
113012|code|MOV             R0, R5; s1|40-70
113014|code|BLX             strncasecmp|251-247-164-232
113018|code|CLZ.W           R0, R0|176-250-128-240
113022|code|LSRS            R0, R0, #5|64-9
113024|code|POP             {R3-R5,PC}|56-189
113026|data|ALIGN 4|0-191
113028|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1B98C)|16-75
113030|code|PUSH            {R4,R5,LR}|48-181
113032|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
113034|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|16-76
113036|code|SUB             SP, SP, #0xC|131-176
113038|code|LDRB            R2, [R1]|10-120
113040|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
113042|code|LDR             R3, [R4]|35-104
113044|code|STR             R3, [SP,#0x18+var_14]|1-147
113046|code|CBNZ            R2, loc_1B9A6|50-185
113048|code|MOV             R0, R2|16-70
113050|code|LDR             R2, [SP,#0x18+var_14]|1-154
113052|code|LDR             R3, [R4]|35-104
113054|code|CMP             R2, R3|154-66
113056|code|BNE             loc_1B9C2|15-209
113058|code|ADD             SP, SP, #0xC|3-176
113060|code|POP             {R4,R5,PC}|48-189
113062|code|MOV             R5, R0|5-70
113064|code|MOVS            R2, #0; base|0-34
113066|code|MOV             R0, R1; nptr|8-70
113068|code|MOV             R1, SP; endptr|105-70
113070|code|BLX             strtol|250-247-98-238
113074|code|LDR             R3, [SP,#0x18+var_18]|0-155
113076|code|LDRB            R3, [R3]|27-120
113078|code|CBZ             R3, loc_1B9BC|11-177
113080|code|MOVS            R0, #0|0-32
113082|code|B               loc_1B99A|238-231
113084|code|STR             R0, [R5]|40-96
113086|code|MOVS            R0, #1|1-32
113088|code|B               loc_1B99A|235-231
113090|code|BLX             __stack_chk_fail|251-247-58-232
113094|data|ALIGN 4|0-191
113096|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1B98C|20-139-1-0
113100|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
113104|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1B9D8)|16-75
113106|code|PUSH            {R4,R5,LR}|48-181
113108|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
113110|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|16-76
113112|code|SUB             SP, SP, #0xC|131-176
113114|code|LDRB            R2, [R1]|10-120
113116|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
113118|code|LDR             R3, [R4]|35-104
113120|code|STR             R3, [SP,#0x18+var_14]|1-147
113122|code|CBNZ            R2, loc_1B9F2|50-185
113124|code|MOV             R0, R2|16-70
113126|code|LDR             R2, [SP,#0x18+var_14]|1-154
113128|code|LDR             R3, [R4]|35-104
113130|code|CMP             R2, R3|154-66
113132|code|BNE             loc_1BA0E|15-209
113134|code|ADD             SP, SP, #0xC|3-176
113136|code|POP             {R4,R5,PC}|48-189
113138|code|MOV             R5, R0|5-70
113140|code|MOVS            R2, #0; base|0-34
113142|code|MOV             R0, R1; nptr|8-70
113144|code|MOV             R1, SP; endptr|105-70
113146|code|BLX             strtoul|250-247-10-239
113150|code|LDR             R3, [SP,#0x18+var_18]|0-155
113152|code|LDRB            R3, [R3]|27-120
113154|code|CBZ             R3, loc_1BA08|11-177
113156|code|MOVS            R0, #0|0-32
113158|code|B               loc_1B9E6|238-231
113160|code|STR             R0, [R5]|40-96
113162|code|MOVS            R0, #1|1-32
113164|code|B               loc_1B9E6|235-231
113166|code|BLX             __stack_chk_fail|251-247-20-232
113170|data|ALIGN 4|0-191
113172|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1B9D8|200-138-1-0
113176|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
113180|code|PUSH.W          {R4-R10,LR}|45-233-240-71
113184|code|SUB             SP, SP, #8|130-176
113186|code|LDR.W           R8, =(_GLOBAL_OFFSET_TABLE_ - 0x1BA30)|223-248-136-128
113190|code|MOV             R9, R0|129-70
113192|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|33-75
113194|code|MOV             R0, R1; s|8-70
113196|code|ADD             R8, PC; _GLOBAL_OFFSET_TABLE_|248-68
113198|code|MOV             R5, R1|13-70
113200|code|LDR.W           R10, [R8,R3]; __stack_chk_guard|88-248-3-160
113204|code|LDR.W           R3, [R10]|218-248-0-48
113208|code|STR             R3, [SP,#0x28+var_24]|1-147
113210|code|BLX             strlen|251-247-242-232
113214|code|LDR             R3, =(logLevelCount_ptr - 0x344A0)|29-75
113216|code|LDR.W           R3, [R8,R3]; logLevelCount_ptr ...|88-248-3-48
113220|code|LDR             R6, [R3]; "\b"|30-104
113222|code|CBZ             R6, loc_1BA9C|78-179
113224|code|LDR             R3, =(logLevelNames_ptr - 0x344A0)|27-75
113226|code|MOV             R7, R0|7-70
113228|code|MOVS            R4, #0|0-36
113230|code|LDR.W           R8, [R8,R3]; logLevelNames|88-248-3-128
113234|code|B               loc_1BA5A|2-224
113236|code|ADDS            R4, #1|1-52
113238|code|CMP             R4, R6|180-66
113240|code|BEQ             loc_1BA80|18-208
113242|code|MOV             R0, R5; s1|40-70
113244|code|LDR.W           R1, [R8,R4,LSL#2]; s2|88-248-36-16
113248|code|MOV             R2, R7; n|58-70
113250|code|BLX             strncasecmp|251-247-46-232
113254|code|CMP             R0, #0|0-40
113256|code|BNE             loc_1BA54|244-209
113258|code|MOVS            R0, #1|1-32
113260|code|STR.W           R4, [R9]|201-248-0-64
113264|code|LDR             R2, [SP,#0x28+var_24]|1-154
113266|code|LDR.W           R3, [R10]|218-248-0-48
113270|code|CMP             R2, R3|154-66
113272|code|BNE             loc_1BAA6|21-209
113274|code|ADD             SP, SP, #8|2-176
113276|code|POP.W           {R4-R10,PC}|189-232-240-135
113280|code|MOV             R1, R5|41-70
113282|code|MOV             R0, SP|104-70
113284|code|BL              isUnsignedInteger|255-247-164-255
113288|code|CBZ             R0, loc_1BA98|48-177
113290|code|LDR             R3, [SP,#0x28+var_28]|0-155
113292|code|CMP             R3, R4|163-66
113294|code|ITT CC|60-191
113296|code|STRCC.W         R3, [R9]|201-248-0-48
113300|code|MOVCC           R0, #1|1-32
113302|code|BCC             loc_1BA70|235-211
113304|code|MOVS            R0, #0|0-32
113306|code|B               loc_1BA70|233-231
113308|code|MOV             R1, R5|41-70
113310|code|MOV             R0, SP|104-70
113312|code|BL              isUnsignedInteger|255-247-150-255
113316|code|B               loc_1BA98|248-231
113318|code|BLX             __stack_chk_fail|250-247-200-239
113322|data|ALIGN 4|0-191
113324|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1BA30|112-138-1-0
113328|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
113332|data|DCD logLevelCount_ptr - 0x344A0|252-2-0-0
113336|data|DCD logLevelNames_ptr - 0x344A0|52-3-0-0
113340|code|PUSH.W          {R4-R9,LR}|45-233-240-67
113344|code|SUB             SP, SP, #0xC|131-176
113346|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1BACA)|22-76
113348|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|22-77
113350|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
113352|code|LDRB            R6, [R1]|14-120
113354|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
113356|code|LDR             R5, [R4]|37-104
113358|code|STR             R5, [SP,#0x28+var_24]|1-149
113360|code|CBNZ            R6, loc_1BAE2|62-185
113362|code|MOVS            R0, #1|1-32
113364|code|LDR             R2, [SP,#0x28+var_24]|1-154
113366|code|LDR             R3, [R4]|35-104
113368|code|CMP             R2, R3|154-66
113370|code|BNE             loc_1BB16|28-209
113372|code|ADD             SP, SP, #0xC|3-176
113374|code|POP.W           {R4-R9,PC}|189-232-240-131
113378|code|MOV             R8, R0|128-70
113380|code|MOV             R0, SP|104-70
113382|code|MOV             R7, R2|23-70
113384|code|MOV             R9, R3|153-70
113386|code|BL              isInteger|255-247-75-255
113390|code|CBZ             R0, loc_1BB0A|96-177
113392|code|LDR             R3, [SP,#0x28+var_28]|0-155
113394|code|CBZ             R7, loc_1BAFC|31-177
113396|code|LDR             R2, [R7]|58-104
113398|code|LDR             R3, [SP,#0x28+var_28]|0-155
113400|code|CMP             R2, R3|154-66
113402|code|BGT             loc_1BB0A|6-220
113404|code|CMP.W           R9, #0|185-241-0-15
113408|code|BEQ             loc_1BB0E|5-208
113410|code|LDR.W           R2, [R9]|217-248-0-32
113414|code|CMP             R2, R3|154-66
113416|code|BGE             loc_1BB0E|1-218
113418|code|MOVS            R0, #0|0-32
113420|code|B               loc_1BAD4|226-231
113422|code|STR.W           R3, [R8]|200-248-0-48
113426|code|MOVS            R0, #1|1-32
113428|code|B               loc_1BAD4|222-231
113430|code|BLX             __stack_chk_fail|250-247-144-239
113434|data|ALIGN 4|0-191
113436|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1BACA|214-137-1-0
113440|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
113444|code|PUSH.W          {R4-R8,LR}|45-233-240-65
113448|code|MOV             R8, R0|128-70
113450|code|MOV             R0, R1; s|8-70
113452|code|MOV             R7, R1|15-70
113454|code|MOV             R5, R2|21-70
113456|code|BLX             strlen|251-247-118-232
113460|code|MOVS            R4, #0|0-36
113462|code|STR.W           R4, [R8]|200-248-0-64
113466|code|MOV             R6, R0|6-70
113468|code|CBZ             R0, loc_1BB62|136-177
113470|code|LDR             R1, [R5]|41-104
113472|code|CBNZ            R1, loc_1BB4C|33-185
113474|code|B               loc_1BB68|17-224
113476|code|LDR.W           R1, [R5,#4]!; s2|85-248-4-31
113480|code|ADDS            R4, #1|1-52
113482|code|CBZ             R1, loc_1BB68|105-177
113484|code|MOV             R0, R7; s1|56-70
113486|code|MOV             R2, R6; n|50-70
113488|code|BLX             strncasecmp|250-247-182-239
113492|code|CMP             R0, #0|0-40
113494|code|BNE             loc_1BB44|245-209
113496|code|STR.W           R4, [R8]|200-248-0-64
113500|code|MOVS            R0, #1|1-32
113502|code|POP.W           {R4-R8,PC}|189-232-240-129
113506|code|MOVS            R0, #1|1-32
113508|code|POP.W           {R4-R8,PC}|189-232-240-129
113512|code|MOV             R0, R1|8-70
113514|code|POP.W           {R4-R8,PC}|189-232-240-129
113518|data|ALIGN 0x10|0-191
113520|code|PUSH            {R4-R6,LR}|112-181
113522|code|SUB             SP, SP, #0x10|132-176
113524|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1BB7E)|10-76
113526|code|MOVS            R6, #0|0-38
113528|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|10-77
113530|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
113532|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
113534|code|STR             R3, [SP,#0x20+var_20]|0-147
113536|code|STR             R2, [SP,#0x20+var_1C]|1-146
113538|code|MOV             R2, SP|106-70
113540|code|LDR             R3, [R4]|35-104
113542|code|STR             R6, [SP,#0x20+var_18]|2-150
113544|code|STR             R3, [SP,#0x20+var_14]|3-147
113546|code|BL              validateChoice|255-247-203-255
113550|code|LDR             R2, [SP,#0x20+var_14]|3-154
113552|code|LDR             R3, [R4]|35-104
113554|code|CMP             R2, R3|154-66
113556|code|BNE             loc_1BB9A|1-209
113558|code|ADD             SP, SP, #0x10|4-176
113560|code|POP             {R4-R6,PC}|112-189
113562|code|BLX             __stack_chk_fail|250-247-78-239
113566|data|ALIGN 0x10|0-191
113568|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1BB7E|34-137-1-0
113572|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
113576|code|LDR             R2, =(aTableextension+0xC - 0x1BBB0); "on"|2-74
113578|code|LDR             R3, =(aOff - 0x1BBB2); "off"|3-75
113580|code|ADD             R2, PC; "on"|122-68
113582|code|ADD             R3, PC; "off"|123-68
113584|code|B.W             validateFlag|255-247-222-191
113588|data|DCD aTableextension+0xC - 0x1BBB0; "on"|240-124-0-0
113592|data|DCD aOff - 0x1BBB2; "off"|34-100-0-0
113596|code|LDR             R2, =(aYes - 0x1BBC4); "yes"|2-74
113598|code|LDR             R3, =(aNo_0 - 0x1BBC6); "no"|3-75
113600|code|ADD             R2, PC; "yes"|122-68
113602|code|ADD             R3, PC; "no"|123-68
113604|code|B.W             validateFlag|255-247-212-191
113608|data|DCD aYes - 0x1BBC4; "yes"|8-108-0-0
113612|data|DCD aNo_0 - 0x1BBC6; "no"|10-108-0-0
113616|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1BBD8)|17-75
113618|code|PUSH            {R4,R5,LR}|48-181
113620|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
113622|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|17-76
113624|code|SUB             SP, SP, #0xC|131-176
113626|code|LDRB            R2, [R1]|10-120
113628|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
113630|code|LDR             R3, [R4]|35-104
113632|code|STR             R3, [SP,#0x18+var_14]|1-147
113634|code|CBNZ            R2, loc_1BBF2|50-185
113636|code|MOV             R0, R2|16-70
113638|code|LDR             R1, [SP,#0x18+var_14]|1-153
113640|code|LDR             R3, [R4]|35-104
113642|code|CMP             R1, R3|153-66
113644|code|BNE             loc_1BC12|17-209
113646|code|ADD             SP, SP, #0xC|3-176
113648|code|POP             {R4,R5,PC}|48-189
113650|code|MOV             R5, R0|5-70
113652|code|MOV             R0, R1; nptr|8-70
113654|code|MOV             R1, SP; endptr|105-70
113656|code|BLX             strtod|250-247-230-238
113660|code|LDR             R3, [SP,#0x18+var_18]|0-155
113662|code|MOVS            R0, #0|0-32
113664|code|LDRB            R3, [R3]|27-120
113666|code|CMP             R3, #0|0-43
113668|code|BNE             loc_1BBE6|239-209
113670|code|VCVT.F32.F64    S0, D0|183-238-192-11
113674|code|MOVS            R0, #1|1-32
113676|code|VSTR            S0, [R5]|133-237-0-10
113680|code|B               loc_1BBE6|233-231
113682|code|BLX             __stack_chk_fail|250-247-18-239
113686|data|ALIGN 4|0-191
113688|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1BBD8|200-136-1-0
113692|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
113696|code|PUSH.W          {R4-R9,LR}|45-233-240-67
113700|code|SUB             SP, SP, #0xC|131-176
113702|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1BC2E)|26-76
113704|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|26-77
113706|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
113708|code|LDRB            R6, [R1]|14-120
113710|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
113712|code|LDR             R5, [R4]|37-104
113714|code|STR             R5, [SP,#0x28+var_24]|1-149
113716|code|CBNZ            R6, loc_1BC46|62-185
113718|code|MOVS            R0, #1|1-32
113720|code|LDR             R2, [SP,#0x28+var_24]|1-154
113722|code|LDR             R3, [R4]|35-104
113724|code|CMP             R2, R3|154-66
113726|code|BNE             loc_1BC8C|37-209
113728|code|ADD             SP, SP, #0xC|3-176
113730|code|POP.W           {R4-R9,PC}|189-232-240-131
113734|code|MOV             R8, R0|128-70
113736|code|MOV             R0, SP|104-70
113738|code|MOV             R7, R2|23-70
113740|code|MOV             R9, R3|153-70
113742|code|BL              isFloat|255-247-191-255
113746|code|CBZ             R0, loc_1BC80|168-177
113748|code|VLDR            S15, [SP,#0x28+var_28]|221-237-0-122
113752|code|CBZ             R7, loc_1BC6C|71-177
113754|code|VLDR            S14, [R7]|151-237-0-122
113758|code|VLDR            S15, [SP,#0x28+var_28]|221-237-0-122
113762|code|VCMPE.F32       S14, S15|180-238-231-122
113766|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
113770|code|BGT             loc_1BC80|9-220
113772|code|CMP.W           R9, #0|185-241-0-15
113776|code|BEQ             loc_1BC84|8-208
113778|code|VLDR            S14, [R9]|153-237-0-122
113782|code|VCMPE.F32       S14, S15|180-238-231-122
113786|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
113790|code|BPL             loc_1BC84|1-213
113792|code|MOVS            R0, #0|0-32
113794|code|B               loc_1BC38|217-231
113796|code|VSTR            S15, [R8]|200-237-0-122
113800|code|MOVS            R0, #1|1-32
113802|code|B               loc_1BC38|213-231
113804|code|BLX             __stack_chk_fail|250-247-212-238
113808|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1BC2E|114-136-1-0
113812|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
113816|code|PUSH.W          {R4-R11,LR}|45-233-240-79
113820|code|SUB             SP, SP, #0x1C|135-176
113822|code|MOV             R4, R2|20-70
113824|code|MOV             R6, R0|6-70
113826|code|STR             R1, [SP,#0x40+s]|3-145
113828|code|CMP             R0, #0|0-40
113830|code|BEQ.W           loc_1BE32|0-240-196-128
113834|code|LDR             R7, [R6]|55-104
113836|code|CMP             R7, #0|0-47
113838|code|BEQ.W           loc_1BE38|0-240-195-128
113842|code|MOV             R3, R6|51-70
113844|code|MOVS            R7, #0|0-39
113846|code|LDR.W           R5, [R3,#4]!; "%s%c%s"|83-248-4-95
113850|code|ADDS            R7, #1|1-55
113852|code|CMP             R5, #0|0-45
113854|code|BNE             loc_1BCB6|250-209
113856|code|ADDS            R0, R7, #1|120-28
113858|code|LSLS            R0, R0, #2; size|128-0
113860|code|BLX             malloc|250-247-164-239
113864|code|STR             R0, [SP,#0x40+ptr]|4-144
113866|code|CMP             R0, #0|0-40
113868|code|BEQ.W           loc_1BE46|0-240-187-128
113872|code|SUB.W           R8, R0, #4|160-241-4-8
113876|code|B               loc_1BCDC|2-224
113878|code|ADDS            R5, #1|1-53
113880|code|CMP             R7, R5|175-66
113882|code|BEQ             loc_1BD02|18-208
113884|code|MOVS            R0, #1; nmemb|1-32
113886|code|MOV             R1, R0; size|1-70
113888|code|BLX             calloc|250-247-60-239
113892|code|STR.W           R0, [R8,#4]!|72-248-4-15
113896|code|CMP             R0, #0|0-40
113898|code|BNE             loc_1BCD6|244-209
113900|code|BL              logMallocError|254-247-168-251
113904|code|CMP             R7, R5|175-66
113906|code|BEQ             loc_1BD02|6-208
113908|code|LDR             R0, [SP,#0x40+ptr]; ptr|4-152
113910|code|BL              deallocateStrings|255-247-155-253
113914|code|MOVS            R0, #0|0-32
113916|code|ADD             SP, SP, #0x1C|7-176
113918|code|POP.W           {R4-R11,PC}|189-232-240-143
113922|code|LSLS            R7, R7, #2|191-0
113924|code|LDR             R2, [SP,#0x40+ptr]|4-154
113926|code|MOVS            R3, #0|0-35
113928|code|STR             R3, [R2,R7]|211-81
113930|code|CMP             R4, #0|0-44
113932|code|BEQ             loc_1BD8C|62-208
113934|code|LDRB            R3, [R4]|35-120
113936|code|CMP             R3, #0|0-43
113938|code|BEQ             loc_1BD8C|59-208
113940|code|MOV             R8, R6|176-70
113942|code|MOV             R0, R4; s|32-70
113944|code|MOVS            R1, #0x2C ; ','; c|44-33
113946|code|BLX             strchr|251-247-168-232
113950|code|CLZ.W           R6, R0|176-250-128-246
113954|code|MOV             R10, R0|130-70
113956|code|LSRS            R6, R6, #5|118-9
113958|code|CMP             R6, #0|0-46
113960|code|BEQ             loc_1BE06|109-208
113962|code|MOV             R0, R4; s|32-70
113964|code|BLX             strlen|250-247-120-239
113968|code|SUBS            R3, R0, #0|3-30
113970|code|STR             R3, [SP,#0x40+n]|2-147
113972|code|BLE             loc_1BD8C|42-221
113974|code|ADD.W           R10, R4, R3|4-235-3-10
113978|code|MOV             R0, R4; s|32-70
113980|code|MOVS            R1, #0x3D ; '='; c|61-33
113982|code|LDR             R2, [SP,#0x40+n]; n|2-154
113984|code|BLX             memchr|251-247-24-232
113988|code|STR             R0, [SP,#0x40+var_2C]|5-144
113990|code|CMP             R0, #0|0-40
113992|code|BEQ.W           loc_1BE6C|0-240-144-128
113996|code|LDR             R3, [SP,#0x40+var_2C]|5-155
113998|code|SUBS            R5, R3, R4|29-27
114000|code|LDR             R3, [SP,#0x40+s]|3-155
114002|code|CMP             R3, #0|0-43
114004|code|BEQ             loc_1BE10|92-208
114006|code|MOV             R0, R4; s|32-70
114008|code|MOVS            R1, #0x3A ; ':'; c|58-33
114010|code|MOV             R2, R5; n|42-70
114012|code|BLX             memchr|251-247-10-232
114016|code|CMP             R0, #0|0-40
114018|code|BEQ             loc_1BE10|85-208
114020|code|RSB.W           R9, R4, R0|196-235-0-9
114024|code|ADD.W           R7, R9, #1|9-241-1-7
114028|code|SUBS            R5, R5, R7|237-27
114030|code|CMP.W           R9, #0|185-241-0-15
114034|code|BEQ.W           loc_1BE88|0-240-137-128
114038|code|LDR             R0, [SP,#0x40+s]; s|3-152
114040|code|BLX             strlen|250-247-82-239
114044|code|CMP             R9, R0|129-69
114046|code|BEQ             loc_1BD94|9-208
114048|code|CMP             R5, #0|0-45
114050|code|BEQ             loc_1BE4E|100-208
114052|code|CBNZ            R6, loc_1BD8C|22-185
114054|code|ADD.W           R4, R10, #1|10-241-1-4
114058|code|B               loc_1BD16|196-231
114060|code|LDR             R0, [SP,#0x40+ptr]|4-152
114062|code|ADD             SP, SP, #0x1C|7-176
114064|code|POP.W           {R4-R11,PC}|189-232-240-143
114068|code|MOV             R2, R9; n|74-70
114070|code|MOV             R0, R4; s1|32-70
114072|code|LDR             R1, [SP,#0x40+s]; s2|3-153
114074|code|ADD             R7, R4|39-68
114076|code|BLX             memcmp|250-247-254-239
114080|code|CMP             R0, #0|0-40
114082|code|BNE             loc_1BD80|237-209
114084|code|CMP             R5, #0|0-45
114086|code|BEQ             loc_1BE4E|82-208
114088|code|LDR.W           R1, [R8]|216-248-0-16
114092|code|CBZ             R1, loc_1BE14|145-179
114094|code|MOV             R11, R8|195-70
114096|code|B               loc_1BDB8|2-224
114098|code|LDR.W           R1, [R11,#4]!; "%s%c%s"|91-248-4-31
114102|code|CBZ             R1, loc_1BE14|105-179
114104|code|MOV             R0, R7; s1|56-70
114106|code|MOV             R2, R5; n|42-70
114108|code|RSB.W           R9, R8, R11|200-235-11-9
114112|code|BLX             strncasecmp|250-247-126-238
114116|code|CMP             R0, #0|0-40
114118|code|BNE             loc_1BDB2|244-209
114120|code|LDR             R7, [SP,#0x40+var_2C]|5-159
114122|code|STR             R0, [SP,#0x40+n]|2-144
114124|code|ADDS            R7, #1|1-55
114126|code|RSB.W           R4, R7, R10|199-235-10-4
114130|code|ADDS            R0, R4, #1; size|96-28
114132|code|BLX             malloc|250-247-28-239
114136|code|LDR.W           R12, [SP,#0x40+n]|221-248-8-192
114140|code|MOV             R5, R0|5-70
114142|code|CMP             R0, #0|0-40
114144|code|BEQ             loc_1BEA6|97-208
114146|code|MOV             R2, R4; n|34-70
114148|code|MOV             R1, R7; src|57-70
114150|code|STR.W           R12, [SP,#0x40+n]|205-248-8-192
114154|code|BLX             memcpy|250-247-6-239
114158|code|LDR.W           R12, [SP,#0x40+n]|221-248-8-192
114162|code|STRB.W          R12, [R5,R4]|5-248-4-192
114166|code|LDR             R4, [SP,#0x40+ptr]|4-156
114168|code|LDR.W           R0, [R4,R9]; ptr|84-248-9-0
114172|code|BLX             free|250-247-66-236
114176|code|STR.W           R5, [R4,R9]|68-248-9-80
114180|code|B               loc_1BD84|190-231
114182|code|SUBS            R3, R0, R4|3-27
114184|code|STR             R3, [SP,#0x40+n]|2-147
114186|code|CMP             R3, #0|0-43
114188|code|BGT             loc_1BD3A|149-220
114190|code|B               loc_1BD86|186-231
114192|code|MOV             R7, R4|39-70
114194|code|B               loc_1BDA4|199-231
114196|code|LDR             R1, =(aUnsupportedPar - 0x1BE1E); "unsupported parameter"|37-73
114198|code|MOVS            R2, #5; category|5-34
114200|code|MOVS            R0, #0; domainname|0-32
114202|code|ADD             R1, PC; "unsupported parameter"|121-68
114204|code|BLX             dcgettext|250-247-42-238
114208|code|LDR             R1, =(aSS_2 - 0x1BE2A); "%s: %.*s"|35-73
114210|code|STR             R4, [SP,#0x40+var_40]|0-148
114212|code|LDR             R3, [SP,#0x40+n]|2-155
114214|code|ADD             R1, PC; "%s: %.*s"|121-68
114216|code|MOV             R2, R0|2-70
114218|code|MOVS            R0, #3|3-32
114220|code|BL              logMessage|254-247-124-250
114224|code|B               loc_1BCF4|96-231
114226|code|LDR             R6, =(dword_227C0 - 0x1BE38)|32-78
114228|code|ADD             R6, PC; dword_227C0|126-68
114230|code|B               loc_1BCAA|56-231
114232|code|MOVS            R0, #4; size|4-32
114234|code|BLX             malloc|250-247-234-238
114238|code|STR             R0, [SP,#0x40+ptr]|4-144
114240|code|CMP             R0, #0|0-40
114242|code|BNE.W           loc_1BD04|127-244-95-175
114246|code|BL              logMallocError|254-247-251-250
114250|code|MOVS            R0, #0|0-32
114252|code|B               loc_1BD8E|159-231
114254|code|LDR             R1, =(aMissingParamet - 0x1BE58); "missing parameter name"|26-73
114256|code|MOVS            R2, #5; category|5-34
114258|code|MOVS            R0, #0; domainname|0-32
114260|code|ADD             R1, PC; "missing parameter name"|121-68
114262|code|BLX             dcgettext|250-247-14-238
114266|code|LDR             R1, =(aSS_2 - 0x1BE64); "%s: %.*s"|24-73
114268|code|STR             R4, [SP,#0x40+var_40]|0-148
114270|code|LDR             R3, [SP,#0x40+n]|2-155
114272|code|ADD             R1, PC; "%s: %.*s"|121-68
114274|code|MOV             R2, R0|2-70
114276|code|MOVS            R0, #3|3-32
114278|code|BL              logMessage|254-247-95-250
114282|code|B               loc_1BCF4|67-231
114284|code|LDR             R1, =(aMissingParamet_0 - 0x1BE74); "missing parameter value"|20-73
114286|code|MOVS            R2, #5; category|5-34
114288|code|ADD             R1, PC; "missing parameter value"|121-68
114290|code|BLX             dcgettext|250-247-0-238
114294|code|LDR             R1, =(aSS_2 - 0x1BE80); "%s: %.*s"|19-73
114296|code|STR             R4, [SP,#0x40+var_40]|0-148
114298|code|LDR             R3, [SP,#0x40+n]|2-155
114300|code|ADD             R1, PC; "%s: %.*s"|121-68
114302|code|MOV             R2, R0|2-70
114304|code|MOVS            R0, #3|3-32
114306|code|BL              logMessage|254-247-81-250
114310|code|B               loc_1BCF4|53-231
114312|code|LDR             R1, =(aMissingParamet_1 - 0x1BE92); "missing parameter qualifier"|15-73
114314|code|MOV             R0, R9; domainname|72-70
114316|code|MOVS            R2, #5; category|5-34
114318|code|ADD             R1, PC; "missing parameter qualifier"|121-68
114320|code|BLX             dcgettext|250-247-240-237
114324|code|LDR             R1, =(aSS_2 - 0x1BE9E); "%s: %.*s"|13-73
114326|code|STR             R4, [SP,#0x40+var_40]|0-148
114328|code|LDR             R3, [SP,#0x40+n]|2-155
114330|code|ADD             R1, PC; "%s: %.*s"|121-68
114332|code|MOV             R2, R0|2-70
114334|code|MOVS            R0, #3|3-32
114336|code|BL              logMessage|254-247-66-250
114340|code|B               loc_1BCF4|38-231
114342|code|BL              logMallocError|254-247-203-250
114346|code|B               loc_1BCF4|35-231
114348|data|DCD aUnsupportedPar - 0x1BE1E; "unsupported parameter"|14-106-0-0
114352|data|DCD aSS_2 - 0x1BE2A; "%s: %.*s"|194-105-0-0
114356|data|DCD dword_227C0 - 0x1BE38|136-105-0-0
114360|data|DCD aMissingParamet - 0x1BE58; "missing parameter name"|188-105-0-0
114364|data|DCD aSS_2 - 0x1BE64; "%s: %.*s"|136-105-0-0
114368|data|DCD aMissingParamet_0 - 0x1BE74; "missing parameter value"|96-105-0-0
114372|data|DCD aSS_2 - 0x1BE80; "%s: %.*s"|108-105-0-0
114376|data|DCD aMissingParamet_1 - 0x1BE92; "missing parameter qualifier"|102-105-0-0
114380|data|DCD aSS_2 - 0x1BE9E; "%s: %.*s"|78-105-0-0
114384|code|CMP             R0, #0|0-40
114386|code|IT NE|24-191
114388|code|CMPNE           R1, #0|0-41
114390|code|PUSH.W          {R4-R8,LR}|45-233-240-65
114394|code|MOV             R4, R0|4-70
114396|code|SUB             SP, SP, #8|130-176
114398|code|MOV             R5, R1|13-70
114400|code|BEQ             loc_1BF06|17-208
114402|code|LDR             R3, [R0]|3-104
114404|code|CBZ             R3, loc_1BF06|123-177
114406|code|LDR.W           R8, =(aSSS_0 - 0x1BEF0); "%s: %s=%s"|223-248-36-128
114410|code|MOV             R7, R2|23-70
114412|code|ADD             R8, PC; "%s: %s=%s"|248-68
114414|code|LDR.W           R6, [R5],#4|85-248-4-107
114418|code|MOVS            R0, #6|6-32
114420|code|MOV             R1, R8|65-70
114422|code|MOV             R2, R7|58-70
114424|code|STR             R6, [SP,#0x20+var_20]|0-150
114426|code|BL              logMessage|254-247-21-250
114430|code|LDR.W           R3, [R4,#4]!|84-248-4-63
114434|code|CMP             R3, #0|0-43
114436|code|BNE             loc_1BEEE|243-209
114438|code|ADD             SP, SP, #8|2-176
114440|code|POP.W           {R4-R8,PC}|189-232-240-129
114444|data|DCD aSSS_0 - 0x1BEF0; "%s: %s=%s"|84-105-0-0
114448|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1BF18)|12-75
114450|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|13-74
114452|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
114454|code|PUSH            {R4,R5,LR}|48-181
114456|code|SUB             SP, SP, #0x14|133-176
114458|code|LDR             R5, [R3,R2]; __stack_chk_guard|157-88
114460|code|MOV             R4, R0|4-70
114462|code|ADD             R1, SP, #0x20+tp; tp|1-169
114464|code|MOVS            R0, #0; clock_id|0-32
114466|code|LDR             R3, [R5]|43-104
114468|code|STR             R3, [SP,#0x20+var_14]|3-147
114470|code|BLX             clock_gettime|250-247-62-237
114474|code|LDR             R2, [SP,#0x20+var_14]|3-154
114476|code|LDR             R3, [R5]|43-104
114478|code|LDR             R0, [SP,#0x20+tp]|1-152
114480|code|LDR             R1, [SP,#0x20+tp.tv_nsec]|2-153
114482|code|CMP             R2, R3|154-66
114484|code|STM.W           R4, {R0,R1}|132-232-3-0
114488|code|BNE             loc_1BF3E|1-209
114490|code|ADD             SP, SP, #0x14|5-176
114492|code|POP             {R4,R5,PC}|48-189
114494|code|BLX             __stack_chk_fail|250-247-124-237
114498|data|ALIGN 4|0-191
114500|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1BF18|136-133-1-0
114504|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
114508|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1BF58)|27-74
114510|code|MOVS            R3, #0|0-35
114512|code|PUSH.W          {R4-R9,LR}|45-233-240-67
114516|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
114518|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|26-77
114520|code|MOV             R7, R0|7-70
114522|code|LDR             R6, [R1,#8]|142-104
114524|code|SUB             SP, SP, #0x34|141-176
114526|code|LDRH            R4, [R1]|12-136
114528|code|MOV.W           LR, #0xFFFFFFFF|79-240-255-62
114532|code|LDR             R5, [R2,R5]; __stack_chk_guard|85-89
114534|code|MOV             R0, SP; tp|104-70
114536|code|STR             R6, [R7,#4]|126-96
114538|code|SUBW            R2, R4, #0x76C|164-242-108-114
114542|code|LDRB.W          R9, [R1,#6]|145-248-6-144
114546|code|LDRB.W          R8, [R1,#5]|145-248-5-128
114550|code|LDRB.W          R12, [R1,#4]|145-248-4-192
114554|code|LDRB            R6, [R1,#2]|142-120
114556|code|LDR             R4, [R5]|44-104
114558|code|LDRB            R1, [R1,#3]|201-120
114560|code|STR             R2, [SP,#0x50+var_3C]|5-146
114562|code|ADDS            R1, #1|1-49
114564|code|STR             R3, [SP,#0x50+var_38]|6-147
114566|code|STR             R3, [SP,#0x50+var_34]|7-147
114568|code|STR             R3, [SP,#0x50+var_2C]|9-147
114570|code|STR             R3, [SP,#0x50+var_28]|10-147
114572|code|STR.W           R9, [SP,#0x50+var_50]|205-248-0-144
114576|code|STR.W           R8, [SP,#0x50+var_4C]|205-248-4-128
114580|code|STR             R1, [SP,#0x50+var_44]|3-145
114582|code|STR.W           R12, [SP,#0x50+var_48]|205-248-8-192
114586|code|STR             R6, [SP,#0x50+var_40]|4-150
114588|code|STR             R4, [SP,#0x50+var_24]|11-148
114590|code|STR.W           LR, [SP,#0x50+var_30]|205-248-32-224
114594|code|BLX             mktime|250-247-34-239
114598|code|LDR             R2, [SP,#0x50+var_24]|11-154
114600|code|LDR             R3, [R5]|43-104
114602|code|CMP             R2, R3|154-66
114604|code|STR             R0, [R7]|56-96
114606|code|BNE             loc_1BFB6|2-209
114608|code|ADD             SP, SP, #0x34 ; '4'|13-176
114610|code|POP.W           {R4-R9,PC}|189-232-240-131
114614|code|BLX             __stack_chk_fail|250-247-64-237
114618|data|ALIGN 4|0-191
114620|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1BF58|72-133-1-0
114624|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
114628|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1BFCE)|22-75
114630|code|PUSH.W          {R4-R8,LR}|45-233-240-65
114634|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
114636|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|21-77
114638|code|MOV             R8, R0|128-70
114640|code|SUB             SP, SP, #0x38|142-176
114642|code|LDR.W           R6, [R8]|216-248-0-96
114646|code|ADD             R0, SP, #0x50+var_18|14-168
114648|code|MOV             R4, R1|12-70
114650|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
114652|code|ADD             R1, SP, #0x50+tp; tp|2-169
114654|code|STR.W           R6, [R0,#-0x34]!; timer|64-248-52-109
114658|code|LDR             R3, [R5]|43-104
114660|code|STR             R3, [SP,#0x50+var_1C]|13-147
114662|code|BLX             localtime_r|250-247-234-234
114666|code|LDR             R7, [SP,#0x50+tp.tm_mon]|6-159
114668|code|LDR             R3, [SP,#0x50+tp.tm_mday]|5-155
114670|code|LDR.W           R0, [R8,#4]|216-248-4-0
114674|code|SUBS            R3, #1|1-59
114676|code|STRB            R7, [R4,#2]|167-112
114678|code|STRB            R3, [R4,#3]|227-112
114680|code|LDR             R7, [SP,#0x50+var_1C]|13-159
114682|code|LDR             R5, [R5]|45-104
114684|code|LDR             R1, [SP,#0x50+tp.tm_hour]|4-153
114686|code|LDR             R6, [SP,#0x50+tp.tm_min]|3-158
114688|code|CMP             R7, R5|175-66
114690|code|LDR             R2, [SP,#0x50+tp]|2-154
114692|code|LDR             R3, [SP,#0x50+tp.tm_year]|7-155
114694|code|STR             R0, [R4,#8]|160-96
114696|code|ADDW            R3, R3, #0x76C|3-242-108-115
114700|code|STRB            R1, [R4,#4]|33-113
114702|code|STRH            R3, [R4]|35-128
114704|code|STRB            R6, [R4,#5]|102-113
114706|code|STRB            R2, [R4,#6]|162-113
114708|code|BNE             loc_1C01C|2-209
114710|code|ADD             SP, SP, #0x38 ; '8'|14-176
114712|code|POP.W           {R4-R8,PC}|189-232-240-129
114716|code|BLX             __stack_chk_fail|250-247-12-237
114720|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1BFCE|210-132-1-0
114724|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
114728|code|PUSH.W          {R4-R10,LR}|45-233-240-71
114732|code|SUB             SP, SP, #0x38|142-176
114734|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x1C03A)|16-77
114736|code|ADD             R6, SP, #0x58+var_20|14-174
114738|code|LDR             R7, =(__stack_chk_guard_ptr - 0x344A0)|16-79
114740|code|ADD             R4, SP, #0x58+tp|2-172
114742|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
114744|code|MOV             R9, R0|129-70
114746|code|MOV             R8, R1|136-70
114748|code|MOV             R10, R2|146-70
114750|code|LDR             R7, [R5,R7]; __stack_chk_guard|239-89
114752|code|MOV             R1, R4; tp|33-70
114754|code|STR.W           R3, [R6,#-0x34]!|70-248-52-61
114758|code|MOV             R0, R6; timer|48-70
114760|code|LDR             R3, [R7]|59-104
114762|code|STR             R3, [SP,#0x58+var_24]|13-147
114764|code|BLX             localtime_r|250-247-182-234
114768|code|MOV             R2, R10; format|82-70
114770|code|MOV             R3, R4; tp|35-70
114772|code|MOV             R0, R9; s|72-70
114774|code|MOV             R1, R8; maxsize|65-70
114776|code|BLX             strftime|250-247-230-235
114780|code|LDR             R2, [SP,#0x58+var_24]|13-154
114782|code|LDR             R3, [R7]|59-104
114784|code|CMP             R2, R3|154-66
114786|code|BNE             loc_1C06A|2-209
114788|code|ADD             SP, SP, #0x38 ; '8'|14-176
114790|code|POP.W           {R4-R10,PC}|189-232-240-135
114794|code|BLX             __stack_chk_fail|250-247-230-236
114798|data|ALIGN 0x10|0-191
114800|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C03A|102-132-1-0
114804|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
114808|code|LDR             R3, [R0,#4]|67-104
114810|code|CMP             R3, #0|0-43
114812|code|BGE             loc_1C09C|14-218
114814|code|LDR             R2, [R0]|2-104
114816|code|SUBS            R2, #1|1-58
114818|code|ADD.W           R3, R3, #0x3B800000|3-241-110-83
114822|code|MOV             R1, R2|17-70
114824|code|ADD.W           R3, R3, #0x1AC000|3-245-214-19
114828|code|SUBS            R2, #1|1-58
114830|code|ADD.W           R3, R3, #0xA00|3-245-32-99
114834|code|CMP             R3, #0|0-43
114836|code|BLT             loc_1C082|245-219
114838|code|STM.W           R0, {R1,R3}|128-232-10-0
114842|code|BX              LR|112-71
114844|code|PUSH            {R4,R5}|48-180
114846|code|MOV             R5, #0x3B9AC9FF|76-246-255-21-195-246-154-53
114854|code|CMP             R3, R5|171-66
114856|code|BLE             loc_1C0CE|17-221
114858|code|MOV.W           R2, #0x3600|79-244-88-82
114862|code|LDR             R4, [R0]|4-104
114864|code|MOVT.W          R2, #0xC465|204-242-101-66
114868|code|ADD             R2, R3|26-68
114870|code|CMP             R2, R5|170-66
114872|code|ADD.W           R1, R4, #1|4-241-1-1
114876|code|ITTTT GT|193-191
114878|code|ADDGT           R1, R4, #2|161-28
114880|code|MOVGT.W         R2, #0x6C00|79-244-216-66
114884|code|MOVTGT.W        R2, #0x88CA|200-246-202-2
114888|code|ADDGT           R2, R2, R3|210-24
114890|code|STM.W           R0, {R1,R2}|128-232-6-0
114894|code|POP             {R4,R5}|48-188
114896|code|BX              LR|112-71
114898|data|ALIGN 4|0-191
114900|code|PUSH            {R4-R7,LR}|240-181
114902|code|MOV             R6, #0x10624DD3|68-246-211-86-193-242-98-6
114910|code|ASRS            R3, R1, #0x1F|203-23
114912|code|SMULL.W         R6, R7, R1, R6|129-251-6-103
114916|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1C0EE)|24-76
114918|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|25-74
114920|code|SUB             SP, SP, #0x14|133-176
114922|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
114924|code|MOV             R5, R0|5-70
114926|code|LDR             R4, [R4,R2]; __stack_chk_guard|164-88
114928|code|RSB.W           R3, R3, R7,ASR#6|195-235-167-19
114932|code|STR             R3, [SP,#0x28+var_24]|1-147
114934|code|RSB.W           R6, R3, R3,LSL#5|195-235-67-22
114938|code|LDR             R2, [R4]|34-104
114940|code|ADD.W           R3, R3, R6,LSL#2|3-235-134-3
114944|code|STR             R2, [SP,#0x28+var_1C]|3-146
114946|code|SUB.W           R1, R1, R3,LSL#3|161-235-195-1
114950|code|RSB.W           R3, R1, R1,LSL#5|193-235-65-19
114954|code|RSB.W           R3, R3, R3,LSL#6|195-235-131-19
114958|code|ADD.W           R1, R1, R3,LSL#3|1-235-195-1
114962|code|LSLS            R1, R1, #6|137-1
114964|code|STR             R1, [SP,#0x28+var_20]|2-145
114966|code|BL              normalizeTimeValue|255-247-175-255
114970|code|ADD             R0, SP, #0x28+var_24|1-168
114972|code|BL              normalizeTimeValue|255-247-172-255
114976|code|LDR             R6, [R5]|46-104
114978|code|LDR             R1, [R5,#4]|105-104
114980|code|MOV             R0, R5|40-70
114982|code|LDR             R2, [SP,#0x28+var_24]|1-154
114984|code|LDR             R3, [SP,#0x28+var_20]|2-155
114986|code|ADD             R2, R6|50-68
114988|code|STR             R2, [R5]|42-96
114990|code|ADD             R3, R1|11-68
114992|code|STR             R3, [R5,#4]|107-96
114994|code|BL              normalizeTimeValue|255-247-161-255
114998|code|LDR             R2, [SP,#0x28+var_1C]|3-154
115000|code|LDR             R3, [R4]|35-104
115002|code|CMP             R2, R3|154-66
115004|code|BNE             loc_1C142|1-209
115006|code|ADD             SP, SP, #0x14|5-176
115008|code|POP             {R4-R7,PC}|240-189
115010|code|BLX             __stack_chk_fail|250-247-122-236
115014|data|ALIGN 4|0-191
115016|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C0EE|178-131-1-0
115020|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
115024|code|LDR             R2, [R0]|2-104
115026|code|LDR             R3, [R1]|11-104
115028|code|CMP             R2, R3|154-66
115030|code|BLT             loc_1C16E|10-219
115032|code|BGT             loc_1C16A|7-220
115034|code|LDR             R2, [R0,#4]|66-104
115036|code|LDR             R3, [R1,#4]|75-104
115038|code|CMP             R2, R3|154-66
115040|code|BLT             loc_1C16E|5-219
115042|code|ITE GT|204-191
115044|code|MOVGT           R0, #1|1-32
115046|code|MOVLE           R0, #0|0-32
115048|code|BX              LR|112-71
115050|code|MOVS            R0, #1|1-32
115052|code|BX              LR|112-71
115054|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
115058|code|BX              LR|112-71
115060|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1C17C)|22-75
115062|code|PUSH            {R4-R7,LR}|240-181
115064|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
115066|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|22-77
115068|code|MOV             R7, R0|7-70
115070|code|SUB             SP, SP, #0x14|133-176
115072|code|LDR             R4, [R1]|12-104
115074|code|LDR             R2, [R1,#4]|74-104
115076|code|ADD             R0, SP, #0x28+var_24|1-168
115078|code|LDR             R6, [R3,R5]; __stack_chk_guard|94-89
115080|code|LDM.W           R7, {R1,R3}|151-232-10-0
115084|code|LDR             R5, [R6]|53-104
115086|code|SUBS            R1, R4, R1|97-26
115088|code|SUBS            R3, R2, R3|211-26
115090|code|STR             R1, [SP,#0x28+var_24]|1-145
115092|code|STR             R3, [SP,#0x28+var_20]|2-147
115094|code|MOVW            R4, #0xDE83|77-246-131-100
115098|code|STR             R5, [SP,#0x28+var_1C]|3-149
115100|code|BL              normalizeTimeValue|255-247-108-255
115104|code|LDR             R3, [SP,#0x28+var_20]|2-155
115106|code|MOVT.W          R4, #0x431B|196-242-27-52
115110|code|LDR             R2, [SP,#0x28+var_24]|1-154
115112|code|LDR             R7, [SP,#0x28+var_1C]|3-159
115114|code|SMULL.W         R4, R5, R3, R4|131-251-4-69
115118|code|RSB.W           R0, R2, R2,LSL#5|194-235-66-16
115122|code|LDR             R1, [R6]|49-104
115124|code|ASRS            R3, R3, #0x1F|219-23
115126|code|ADD.W           R0, R2, R0,LSL#2|2-235-128-0
115130|code|CMP             R7, R1|143-66
115132|code|RSB.W           R3, R3, R5,ASR#18|195-235-165-67
115136|code|ADD.W           R0, R3, R0,LSL#3|3-235-192-0
115140|code|BNE             loc_1C1CA|1-209
115142|code|ADD             SP, SP, #0x14|5-176
115144|code|POP             {R4-R7,PC}|240-189
115146|code|BLX             __stack_chk_fail|250-247-54-236
115150|data|ALIGN 0x10|0-191
115152|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C17C|36-131-1-0
115156|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
115160|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1C1E2)|14-75
115162|code|MOV             R2, R0|2-70
115164|code|PUSH            {R4,R5,LR}|48-181
115166|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
115168|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|13-76
115170|code|SUB             SP, SP, #0x14|133-176
115172|code|LDM             R0, {R0,R1}|3-200
115174|code|MOVS            R5, #0|0-37
115176|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
115178|code|ADD             R3, SP, #0x20+var_1C|1-171
115180|code|STM.W           R3, {R0,R1}|131-232-3-0
115184|code|MOV             R1, R3|25-70
115186|code|LDR             R3, [R4]|35-104
115188|code|MOV             R0, R2|16-70
115190|code|LDR             R2, [SP,#0x20+var_1C]|1-154
115192|code|STR             R5, [SP,#0x20+var_18]|2-149
115194|code|ADDS            R2, #1|1-50
115196|code|STR             R3, [SP,#0x20+var_14]|3-147
115198|code|STR             R2, [SP,#0x20+var_1C]|1-146
115200|code|BL              millisecondsBetween|255-247-184-255
115204|code|LDR             R2, [SP,#0x20+var_14]|3-154
115206|code|LDR             R3, [R4]|35-104
115208|code|CMP             R2, R3|154-66
115210|code|BNE             loc_1C210|1-209
115212|code|ADD             SP, SP, #0x14|5-176
115214|code|POP             {R4,R5,PC}|48-189
115216|code|BLX             __stack_chk_fail|250-247-18-236
115220|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C1E2|190-130-1-0
115224|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
115228|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1C224)|21-75
115230|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|22-74
115232|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
115234|code|PUSH            {R4-R7,LR}|240-181
115236|code|MOV             R5, R0|5-70
115238|code|SUB             SP, SP, #0x14|133-176
115240|code|LDM             R0, {R0,R1}|3-200
115242|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
115244|code|ADD             R2, SP, #0x28+var_24|1-170
115246|code|MOVW            R6, #0x8889|72-246-137-6
115250|code|MOVS            R7, #0|0-39
115252|code|STM.W           R2, {R0,R1}|130-232-3-0
115256|code|MOVT.W          R6, #0x8888|200-246-136-6
115260|code|LDR             R3, [SP,#0x28+var_24]|1-155
115262|code|MOV             R1, R2|17-70
115264|code|STR             R7, [SP,#0x28+var_20]|2-151
115266|code|MOV             R0, R5|40-70
115268|code|LDR             R5, [R4]|37-104
115270|code|SMULL.W         R6, R7, R3, R6|131-251-6-103
115274|code|ASRS            R2, R3, #0x1F|218-23
115276|code|STR             R5, [SP,#0x28+var_1C]|3-149
115278|code|ADD             R3, R7|59-68
115280|code|RSB.W           R3, R2, R3,ASR#5|194-235-99-19
115284|code|ADDS            R3, #1|1-51
115286|code|RSB.W           R3, R3, R3,LSL#4|195-235-3-19
115290|code|LSLS            R3, R3, #2|155-0
115292|code|STR             R3, [SP,#0x28+var_24]|1-147
115294|code|BL              millisecondsBetween|255-247-137-255
115298|code|LDR             R2, [SP,#0x28+var_1C]|3-154
115300|code|LDR             R3, [R4]|35-104
115302|code|CMP             R2, R3|154-66
115304|code|BNE             loc_1C26E|1-209
115306|code|ADD             SP, SP, #0x14|5-176
115308|code|POP             {R4-R7,PC}|240-189
115310|code|BLX             __stack_chk_fail|250-247-228-235
115314|data|ALIGN 4|0-191
115316|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C224|124-130-1-0
115320|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
115324|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1C286)|27-75
115326|code|LDR             R2, =(off_34838 - 0x1C288)|28-74
115328|code|LDR             R1, =(__stack_chk_guard_ptr - 0x344A0)|28-73
115330|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
115332|code|ADD             R2, PC; off_34838|122-68
115334|code|PUSH.W          {R4-R9,LR}|45-233-240-67
115338|code|MOV             R8, R0|128-70
115340|code|LDR.W           R9, [R3,R1]; __stack_chk_guard|83-248-1-144
115344|code|SUB             SP, SP, #0x14|133-176
115346|code|LDR             R4, [R2]; dword_22850|20-104
115348|code|LDR.W           R3, [R9]|217-248-0-48
115352|code|LDR             R0, [R4]|32-104
115354|code|STR             R3, [SP,#0x30+var_24]|3-147
115356|code|CBZ             R0, loc_1C2D2|200-177
115358|code|LDR             R7, =(aClockNotAvaila - 0x1C2A8); "clock not available: %u"|22-79
115360|code|ADD             R6, SP, #0x30+tp|1-174
115362|code|LDR             R5, =(off_34838 - 0x1C2AA)|22-77
115364|code|ADD             R7, PC; "clock not available: %u"|127-68
115366|code|ADD             R5, PC; off_34838|125-68
115368|code|B               loc_1C2BE|9-224
115370|code|LDR             R2, [R4]|34-104
115372|code|MOVS            R0, #4|4-32
115374|code|MOV             R1, R7|57-70
115376|code|BL              logMessage|254-247-58-248
115380|code|LDR             R3, [R5]; dword_22850|43-104
115382|code|ADDS            R4, R3, #4|28-29
115384|code|STR             R4, [R5]; dword_22850|44-96
115386|code|LDR             R0, [R3,#(dword_22854 - 0x22850)]; clock_id|88-104
115388|code|CBZ             R0, loc_1C2D2|72-177
115390|code|MOV             R1, R6; tp|49-70
115392|code|BLX             clock_gettime|250-247-112-235
115396|code|ADDS            R0, #1|1-48
115398|code|BEQ             loc_1C2AA|240-208
115400|code|LDR             R2, [SP,#0x30+tp]|1-154
115402|code|LDR             R3, [SP,#0x30+tp.tv_nsec]|2-155
115404|code|STM.W           R8, {R2,R3}|136-232-12-0
115408|code|B               loc_1C2D8|2-224
115410|code|MOV             R0, R8|64-70
115412|code|BL              getCurrentTime|255-247-28-254
115416|code|LDR             R2, [SP,#0x30+var_24]|3-154
115418|code|LDR.W           R3, [R9]|217-248-0-48
115422|code|CMP             R2, R3|154-66
115424|code|BNE             loc_1C2E8|2-209
115426|code|ADD             SP, SP, #0x14|5-176
115428|code|POP.W           {R4-R9,PC}|189-232-240-131
115432|code|BLX             __stack_chk_fail|250-247-166-235
115436|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C286|26-130-1-0
115440|data|DCD off_34838 - 0x1C288|176-133-1-0
115444|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
115448|data|DCD aClockNotAvaila - 0x1C2A8; "clock not available: %u"|180-101-0-0
115452|data|DCD off_34838 - 0x1C2AA|142-133-1-0
115456|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1C308)|12-75
115458|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|13-74
115460|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
115462|code|PUSH            {R4-R6,LR}|112-181
115464|code|SUB             SP, SP, #0x10|132-176
115466|code|LDR             R5, [R3,R2]; __stack_chk_guard|157-88
115468|code|ADD             R4, SP, #0x20+var_1C|1-172
115470|code|MOV             R6, R0|6-70
115472|code|MOV             R0, R4|32-70
115474|code|LDR             R3, [R5]|43-104
115476|code|STR             R3, [SP,#0x20+var_14]|3-147
115478|code|BL              getMonotonicTime|255-247-177-255
115482|code|MOV             R0, R6|48-70
115484|code|MOV             R1, R4|33-70
115486|code|BL              millisecondsBetween|255-247-41-255
115490|code|LDR             R2, [SP,#0x20+var_14]|3-154
115492|code|LDR             R3, [R5]|43-104
115494|code|CMP             R2, R3|154-66
115496|code|BNE             loc_1C32E|1-209
115498|code|ADD             SP, SP, #0x10|4-176
115500|code|POP             {R4-R6,PC}|112-189
115502|code|BLX             __stack_chk_fail|250-247-132-235
115506|data|ALIGN 4|0-191
115508|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C308|152-129-1-0
115512|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
115516|code|B.W             getMonotonicTime|255-247-158-191
115520|code|STR             R1, [R0,#8]|129-96
115522|code|B.W             restartTimePeriod|255-247-251-191
115526|data|ALIGN 4|0-191
115528|code|PUSH            {R3-R5,LR}|56-181
115530|code|MOV             R4, R1|12-70
115532|code|MOV             R5, R0|5-70
115534|code|BL              getMonotonicElapsed|255-247-215-255
115538|code|CBZ             R4, loc_1C356|4-177
115540|code|STR             R0, [R4]|32-96
115542|code|LDR             R3, [R5,#8]|171-104
115544|code|CMP             R3, R0|131-66
115546|code|ITE GT|204-191
115548|code|MOVGT           R0, #0|0-32
115550|code|MOVLE           R0, #1|1-32
115552|code|POP             {R3-R5,PC}|56-189
115554|data|ALIGN 4|0-191
115556|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1C36C)|28-75
115558|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|29-74
115560|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
115562|code|PUSH            {R4-R7,LR}|240-181
115564|code|SUB             SP, SP, #0x14|133-176
115566|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
115568|code|LDR             R3, [R4]|35-104
115570|code|STR             R3, [SP,#0x28+var_1C]|3-147
115572|code|SUBS            R3, R0, #0|3-30
115574|code|BLE             loc_1C3B4|29-221
115576|code|MOVW            R6, #0x4DD3|68-246-211-86
115580|code|ASRS            R2, R3, #0x1F|218-23
115582|code|MOVT.W          R6, #0x1062|193-242-98-6
115586|code|ADD             R0, SP, #0x28+requested_time; requested_time|1-168
115588|code|SMULL.W         R6, R7, R3, R6|131-251-6-103
115592|code|MOVS            R1, #0; remaining|0-33
115594|code|RSB.W           R2, R2, R7,ASR#6|194-235-167-18
115598|code|STR             R2, [SP,#0x28+requested_time]|1-146
115600|code|RSB.W           R5, R2, R2,LSL#5|194-235-66-21
115604|code|ADD.W           R2, R2, R5,LSL#2|2-235-133-2
115608|code|SUB.W           R3, R3, R2,LSL#3|163-235-194-3
115612|code|RSB.W           R2, R3, R3,LSL#5|195-235-67-18
115616|code|RSB.W           R2, R2, R2,LSL#6|194-235-130-18
115620|code|ADD.W           R3, R3, R2,LSL#3|3-235-194-3
115624|code|LSLS            R3, R3, #6|155-1
115626|code|STR             R3, [SP,#0x28+requested_time.tv_nsec]|2-147
115628|code|BLX             nanosleep|250-247-54-234
115632|code|ADDS            R0, #1|1-48
115634|code|BEQ             loc_1C3C0|5-208
115636|code|LDR             R2, [SP,#0x28+var_1C]|3-154
115638|code|LDR             R3, [R4]|35-104
115640|code|CMP             R2, R3|154-66
115642|code|BNE             loc_1C3D4|11-209
115644|code|ADD             SP, SP, #0x14|5-176
115646|code|POP             {R4-R7,PC}|240-189
115648|code|BLX             __errno_location|250-247-202-236
115652|code|LDR             R3, [R0]|3-104
115654|code|CMP             R3, #4|4-43
115656|code|BEQ             loc_1C3B4|244-208
115658|code|LDR             R0, =(aNanosleep_0 - 0x1C3D0); "nanosleep"|5-72
115660|code|ADD             R0, PC; "nanosleep"|120-68
115662|code|BL              logSystemError|254-247-45-248
115666|code|B               loc_1C3B4|239-231
115668|code|BLX             __stack_chk_fail|250-247-48-235
115672|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C36C|52-129-1-0
115676|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
115680|data|DCD aNanosleep_0 - 0x1C3D0; "nanosleep"|164-100-0-0
115684|code|LDR             R0, [R0]|0-104
115686|code|BX              LR|112-71
115688|code|PUSH            {R4-R7,LR}|240-181
115690|code|MOV             R6, R1|14-70
115692|code|SUB             SP, SP, #0xC|131-176
115694|code|MOV             R7, R2|23-70
115696|code|MOV             R5, R0|5-70
115698|code|CBZ             R0, loc_1C458|136-179
115700|code|MOVS            R0, #0xC; size|12-32
115702|code|BLX             malloc|250-247-12-236
115706|code|STR             R0, [R5]|40-96
115708|code|CMP             R0, #0|0-40
115710|code|BEQ             loc_1C474|57-208
115712|code|MOV             R0, R7|56-70
115714|code|BLX             R6|176-71
115716|code|MOV             R4, R0|4-70
115718|code|CBZ             R0, loc_1C468|120-179
115720|code|LDR             R1, [R5]|41-104
115722|code|MOVS            R2, #0|0-34
115724|code|MOV             R3, R1|11-70
115726|code|STRB.W          R2, [R3],#1|3-248-1-43
115730|code|ADDS            R3, #1|1-51
115732|code|STRB            R2, [R1,#1]|74-112
115734|code|STRB.W          R2, [R3],#1|3-248-1-43
115738|code|STRB.W          R2, [R3],#1|3-248-1-43
115742|code|STRB.W          R2, [R3],#1|3-248-1-43
115746|code|STRB.W          R2, [R3],#1|3-248-1-43
115750|code|STRB.W          R2, [R3],#1|3-248-1-43
115754|code|STRB.W          R2, [R3],#1|3-248-1-43
115758|code|STRB.W          R2, [R3],#1|3-248-1-43
115762|code|STRB.W          R2, [R3],#1|3-248-1-43
115766|code|STRB.W          R2, [R3],#1|3-248-1-43
115770|code|STRB            R2, [R3]|26-112
115772|code|LDR             R3, [R5]|43-104
115774|code|STR             R4, [R3]|28-96
115776|code|LDR             R4, [R5]|44-104
115778|code|BL              getElementIdentifier|1-240-249-254
115782|code|LDR             R5, [R5]|45-104
115784|code|STR             R0, [R4,#4]|96-96
115786|code|MOVS            R4, #1|1-36
115788|code|BL              asyncGetThreadSpecificData|0-240-178-248
115792|code|STR             R0, [R5,#8]|168-96
115794|code|MOV             R0, R4|32-70
115796|code|ADD             SP, SP, #0xC|3-176
115798|code|POP             {R4-R7,PC}|240-189
115800|code|MOV             R0, R2|16-70
115802|code|BLX             R1|136-71
115804|code|MOVS            R4, R0|4-28
115806|code|IT NE|24-191
115808|code|MOVNE           R4, #1|1-36
115810|code|MOV             R0, R4|32-70
115812|code|ADD             SP, SP, #0xC|3-176
115814|code|POP             {R4-R7,PC}|240-189
115816|code|LDR             R0, [R5]; ptr|40-104
115818|code|BLX             free|250-247-12-233
115822|code|MOV             R0, R4|32-70
115824|code|ADD             SP, SP, #0xC|3-176
115826|code|POP             {R4-R7,PC}|240-189
115828|code|STR             R0, [SP,#0x20+var_1C]|1-144
115830|code|BL              logMallocError|253-247-227-255
115834|code|LDR             R0, [SP,#0x20+var_1C]|1-152
115836|code|MOV             R4, R0|4-70
115838|code|B               loc_1C452|232-231
115840|code|PUSH            {R4,LR}|16-181
115842|code|MOV             R4, R0|4-70
115844|code|BL              asyncGetThreadSpecificData|0-240-150-248
115848|code|LDR             R3, [R4,#8]|163-104
115850|code|CMP             R3, R0|131-66
115852|code|BEQ             loc_1C49C|6-208
115854|code|LDR             R1, =(aInvalidAsyncHa - 0x1C496); "invalid async handle"|4-73
115856|code|MOVS            R0, #4|4-32
115858|code|ADD             R1, PC; "invalid async handle"|121-68
115860|code|BL              logMessage|253-247-72-255
115864|code|MOVS            R0, #0|0-32
115866|code|POP             {R4,PC}|16-189
115868|code|MOVS            R0, #1|1-32
115870|code|POP             {R4,PC}|16-189
115872|data|DCD aInvalidAsyncHa - 0x1C496; "invalid async handle"|234-99-0-0
115876|code|PUSH            {R4-R6,LR}|112-181
115878|code|MOV             R5, R1|13-70
115880|code|MOV             R6, R0|6-70
115882|code|BL              asyncTestHandle|255-247-233-255
115886|code|CMP             R0, #0|0-40
115888|code|IT NE|24-191
115890|code|CMPNE           R5, #0|0-45
115892|code|BEQ             loc_1C4D6|15-208
115894|code|LDM             R6, {R4,R6}|80-206
115896|code|MOV             R0, R4|32-70
115898|code|BL              getElementIdentifier|1-240-189-254
115902|code|CMP             R6, R0|134-66
115904|code|BNE             loc_1C4D6|9-209
115906|code|CMP             R5, #1|1-45
115908|code|MOV             R0, R4|32-70
115910|code|BEQ             locret_1C4D4|5-208
115912|code|BL              getElementQueue|1-240-180-254
115916|code|CMP             R5, R0|133-66
115918|code|BNE             loc_1C4D6|2-209
115920|code|MOV             R0, R4|32-70
115922|code|POP             {R4-R6,PC}|112-189
115924|code|POP             {R4-R6,PC}|112-189
115926|code|MOVS            R0, #0|0-32
115928|code|POP             {R4-R6,PC}|112-189
115930|data|ALIGN 4|0-191
115932|code|B.W             j_free|250-247-208-184
115936|code|PUSH            {R4-R6,LR}|112-181
115938|code|MOVS            R1, #1|1-33
115940|code|MOV             R5, R0|5-70
115942|code|BL              asyncGetHandleElement|255-247-221-255
115946|code|MOV             R4, R0|4-70
115948|code|MOV             R0, R5; ptr|40-70
115950|code|BL              asyncDiscardHandle|255-247-245-255
115954|code|CBZ             R4, locret_1C516|132-177
115956|code|MOV             R0, R4|32-70
115958|code|BL              getElementQueue|1-240-157-254
115962|code|BL              getQueueData|1-240-9-255
115966|code|CBZ             R0, loc_1C50C|40-177
115968|code|LDR             R3, [R0]|3-104
115970|code|CBZ             R3, loc_1C50C|27-177
115972|code|MOV             R0, R4|32-70
115974|code|POP.W           {R4-R6,LR}|189-232-112-64
115978|code|BX              R3|24-71
115980|code|MOV             R0, R4|32-70
115982|code|POP.W           {R4-R6,LR}|189-232-112-64
115986|code|B.W             deleteElement|1-240-85-190
115990|code|POP             {R4-R6,PC}|112-189
115992|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1C520)|11-75
115994|code|PUSH            {R4,LR}|16-181
115996|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
115998|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|11-76
116000|code|SUB             SP, SP, #8|130-176
116002|code|ADD             R2, SP, #0x10+var_8|2-170
116004|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
116006|code|STR.W           R1, [R2,#-8]!|66-248-8-29
116010|code|LDR             R1, =(sub_1C3E4+1 - 0x1C532)|9-73
116012|code|LDR             R3, [R4]|35-104
116014|code|ADD             R1, PC; sub_1C3E4|121-68
116016|code|STR             R3, [SP,#0x10+var_C]|1-147
116018|code|BL              asyncMakeHandle|255-247-89-255
116022|code|LDR             R2, [SP,#0x10+var_C]|1-154
116024|code|LDR             R3, [R4]|35-104
116026|code|CMP             R2, R3|154-66
116028|code|BNE             loc_1C542|1-209
116030|code|ADD             SP, SP, #8|2-176
116032|code|POP             {R4,PC}|16-189
116034|code|BLX             __stack_chk_fail|250-247-122-234
116038|data|ALIGN 4|0-191
116040|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C520|128-127-1-0
116044|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
116048|data|DCD sub_1C3E4+1 - 0x1C532|179-254-255-255
116052|code|PUSH            {R4,LR}|16-181
116054|code|LDR             R4, =(dword_388B4 - 0x1C55E)|8-76
116056|code|LDR             R1, =(loc_1C5B0+1 - 0x1C560)|8-73
116058|code|ADD             R4, PC; dword_388B4|124-68
116060|code|ADD             R1, PC; loc_1C5B0 ; destr_function|121-68
116062|code|MOV             R0, R4; key|32-70
116064|code|BLX             pthread_key_create|250-247-192-234
116068|code|CBNZ            R0, loc_1C56C|16-185
116070|code|MOVS            R3, #1|1-35
116072|code|STRB            R3, [R4,#(byte_388B8 - 0x388B4)]|35-113
116074|code|POP             {R4,PC}|16-189
116076|code|LDR             R1, =(aPthreadKeyCrea_0 - 0x1C576); "pthread_key_create"|4-73
116078|code|POP.W           {R4,LR}|189-232-16-64
116082|code|ADD             R1, PC; "pthread_key_create"|121-68
116084|code|B.W             logActionError|253-247-72-191
116088|data|DCD dword_388B4 - 0x1C55E|86-195-1-0
116092|data|DCD loc_1C5B0+1 - 0x1C560|81-0-0-0
116096|data|DCD aPthreadKeyCrea_0 - 0x1C576; "pthread_key_create"|34-99-0-0
116100|code|CBZ             R0, locret_1C5AC|144-177
116102|code|PUSH            {R4,LR}|16-181
116104|code|MOV             R4, R0|4-70
116106|code|LDR             R0, [R0]|0-104
116108|code|BL              asyncDeallocateWaitData|0-240-106-248
116112|code|LDR             R0, [R4,#4]; ptr|96-104
116114|code|BL              asyncDeallocateAlarmData|0-240-159-249
116118|code|LDR             R0, [R4,#8]; ptr|160-104
116120|code|BL              asyncDeallocateTaskData|0-240-238-250
116124|code|LDR             R0, [R4,#0xC]; ptr|224-104
116126|code|BL              asyncDeallocateIoData|0-240-155-254
116130|code|MOV             R0, R4; ptr|32-70
116132|code|POP.W           {R4,LR}|189-232-16-64
116136|code|B.W             j_free|250-247-106-184
116140|code|BX              LR|112-71
116142|data|ALIGN 0x10|0-191
116144|code|B               sub_1C584|232-231
116146|data|ALIGN 4|0-191
116148|code|PUSH            {R4-R6,LR}|112-181
116150|code|LDR             R5, =(dword_388B4 - 0x1C5BE)|28-77
116152|code|LDR             R1, =(sub_1C554+1 - 0x1C5C0)|28-73
116154|code|ADD             R5, PC; dword_388B4|125-68
116156|code|ADD             R1, PC; sub_1C554 ; init_routine|121-68
116158|code|ADD.W           R0, R5, #8; once_control|5-241-8-0
116162|code|BLX             pthread_once|250-247-168-233
116166|code|CBNZ            R0, loc_1C602|224-185
116168|code|LDRB            R0, [R5,#(byte_388B8 - 0x388B4)]|40-121
116170|code|CBZ             R0, locret_1C600|200-177
116172|code|LDR             R0, [R5]; key|40-104
116174|code|BLX             pthread_getspecific|250-247-14-234
116178|code|MOV             R4, R0|4-70
116180|code|CBZ             R0, loc_1C5D8|0-177
116182|code|POP             {R4-R6,PC}|112-189
116184|code|MOVS            R0, #0x14; size|20-32
116186|code|BLX             malloc|250-247-26-235
116190|code|MOV             R6, R0|6-70
116192|code|CBZ             R0, loc_1C620|240-177
116194|code|ADD.W           R3, R0, #0xC|0-241-12-3
116198|code|MOV             R1, R6; pointer|49-70
116200|code|LDR             R0, [R5]; key|40-104
116202|code|STR.W           R4, [R3],#4|67-248-4-75
116206|code|STR             R4, [R6]|52-96
116208|code|STR             R4, [R6,#4]|116-96
116210|code|STR             R4, [R6,#8]|180-96
116212|code|STR             R4, [R6,#0xC]|244-96
116214|code|STR             R4, [R6,#0x10]|52-97
116216|code|BLX             pthread_setspecific|250-247-50-235
116220|code|CBNZ            R0, loc_1C60E|56-185
116222|code|MOV             R0, R6|48-70
116224|code|POP             {R4-R6,PC}|112-189
116226|code|LDR             R1, =(aPthreadOnce_0 - 0x1C608); "pthread_once"|11-73
116228|code|ADD             R1, PC; "pthread_once"|121-68
116230|code|BL              logActionError|253-247-255-254
116234|code|MOVS            R0, #0|0-32
116236|code|POP             {R4-R6,PC}|112-189
116238|code|LDR             R1, =(aPthreadSetspec_0 - 0x1C614); "pthread_setspecific"|9-73
116240|code|ADD             R1, PC; "pthread_setspecific"|121-68
116242|code|BL              logActionError|253-247-249-254
116246|code|MOV             R0, R6|48-70
116248|code|BL              sub_1C584|255-247-180-255
116252|code|MOV             R0, R4|32-70
116254|code|POP             {R4-R6,PC}|112-189
116256|code|BL              logMallocError|253-247-14-255
116260|code|MOV             R0, R6|48-70
116262|code|POP             {R4-R6,PC}|112-189
116264|data|DCD dword_388B4 - 0x1C5BE|246-194-1-0
116268|data|DCD sub_1C554+1 - 0x1C5C0|149-255-255-255
116272|data|DCD aPthreadOnce_0 - 0x1C608; "pthread_once"|184-98-0-0
116276|data|DCD aPthreadSetspec_0 - 0x1C614; "pthread_setspecific"|152-98-0-0
116280|code|LDR             R3, [R0]|3-104
116282|code|LDR             R1, [R0,#4]|65-104
116284|code|LDR             R0, [R3,#0xC]|216-104
116286|code|B.W             asyncExecuteIoCallback|0-240-89-190
116290|data|ALIGN 4|0-191
116292|code|LDR             R3, [R0]|3-104
116294|code|LDR             R2, [R3]|26-104
116296|code|LDR             R2, [R2,#4]|82-104
116298|code|CMP             R2, #1|1-42
116300|code|BEQ             loc_1C652|1-208
116302|code|MOVS            R0, #0|0-32
116304|code|BX              LR|112-71
116306|code|LDR             R0, [R3,#8]|152-104
116308|code|B.W             asyncExecuteTaskCallback|0-240-202-186
116312|code|MOV             R1, R0|1-70
116314|code|LDR.W           R3, [R1],#4|81-248-4-59
116318|code|LDR             R0, [R3,#4]|88-104
116320|code|B.W             asyncExecuteAlarmCallback|0-240-222-185
116324|code|CBZ             R0, locret_1C66A|8-177
116326|code|B.W             j_free|250-247-11-184
116330|code|BX              LR|112-71
116332|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1C676)|64-75
116334|code|PUSH.W          {R4-R11,LR}|45-233-240-79
116338|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
116340|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|63-76
116342|code|SUB             SP, SP, #0x44|145-176
116344|code|ADD             R7, SP, #0x30|12-175
116346|code|MOV             R8, R0|128-70
116348|code|STR             R2, [SP,#0x44+var_38]|3-146
116350|code|MOV             R6, R1|14-70
116352|code|LDR             R2, [R3,R4]; __stack_chk_guard|26-89
116354|code|MOV             R0, R7|56-70
116356|code|LDR             R3, =(aWaitingLd - 0x1C696); "waiting: %ld"|60-75
116358|code|MOV             R1, R8|65-70
116360|code|LDR.W           R11, =(aBeginLevelUTim - 0x1C69A); "begin: level %u: timeout %ld"|223-248-240-176
116364|code|ADD.W           R9, SP, #0x44+var_20|13-241-36-9
116368|code|STR             R2, [SP,#0x44+var_30]|5-146
116370|code|ADD             R3, PC; "waiting: %ld"|123-68
116372|code|STR             R3, [SP,#0x44+var_28]|7-147
116374|code|ADD             R11, PC; "begin: level %u: timeout %ld"|251-68
116376|code|LDR             R3, [R2]|19-104
116378|code|LDR             R2, =(off_341C8 - 0x1C6A0)|57-74
116380|code|ADD             R2, PC; off_341C8|122-68
116382|code|STR             R2, [SP,#0x44+var_40]|1-146
116384|code|LDR             R2, =(sub_1C658+1 - 0x1C6A8)|56-74
116386|code|STR             R3, [SP,#0x44+var_8]|15-147
116388|code|ADD             R2, PC; sub_1C658|122-68
116390|code|STR             R2, [SP,#0x44+var_3C]|2-146
116392|code|BL              startTimePeriod|255-247-74-254
116396|code|LDR             R3, =(aEndLevelUS - 0x1C6B2); "end: level %u: %s"|54-75
116398|code|ADD             R3, PC; "end: level %u: %s"|123-68
116400|code|STR             R3, [SP,#0x44+var_34]|4-147
116402|code|CBZ             R6, loc_1C6BC|30-177
116404|code|LDR             R0, [SP,#0x44+var_38]|3-152
116406|code|BLX             R6|176-71
116408|code|CMP             R0, #0|0-40
116410|code|BNE             loc_1C750|73-209
116412|code|MOV             R0, R7|56-70
116414|code|MOV             R1, R9|73-70
116416|code|BL              afterTimePeriod|255-247-66-254
116420|code|CMP             R0, #0|0-40
116422|code|BNE             loc_1C73E|58-209
116424|code|LDR             R4, [SP,#0x44+var_20]|9-156
116426|code|RSB.W           R4, R4, R8|196-235-8-4
116430|code|BL              asyncGetThreadSpecificData|255-247-113-255
116434|code|CMP             R0, #0|0-40
116436|code|BEQ             loc_1C758|64-208
116438|code|LDR             R5, [R0]|5-104
116440|code|CBZ             R5, loc_1C724|37-179
116442|code|LDR             R3, [R5,#4]|107-104
116444|code|LDR.W           LR, [R5]|213-248-0-224
116448|code|ADDS            R3, #1|1-51
116450|code|STR             R4, [SP,#0x44+var_18]|11-148
116452|code|MOV             R2, R3|26-70
116454|code|STR             R3, [R5,#4]|107-96
116456|code|MOVS            R0, #0x89|137-32
116458|code|MOV             R3, R4|35-70
116460|code|MOV             R1, R11|89-70
116462|code|STR.W           LR, [SP,#0x44+var_1C]|205-248-40-224
116466|code|ADD             R4, SP, #0x44+var_1C|10-172
116468|code|BL              logMessage|253-247-24-254
116472|code|LDR.W           R10, [SP,#0x44+var_40]|221-248-4-160
116476|code|LDR             R3, [SP,#0x44+var_3C]|2-155
116478|code|B               loc_1C706|2-224
116480|code|LDR.W           R3, [R10,#8]!|90-248-8-63
116484|code|CBZ             R3, loc_1C70E|27-177
116486|code|MOV             R0, R4|32-70
116488|code|BLX             R3|152-71
116490|code|CMP             R0, #0|0-40
116492|code|BEQ             loc_1C700|248-208
116494|code|LDR.W           R3, [R10,#4]|218-248-4-48
116498|code|MOVS            R0, #0x89|137-32
116500|code|LDR             R1, [SP,#0x44+var_34]|4-153
116502|code|LDR             R2, [R5,#4]|106-104
116504|code|BL              logMessage|253-247-6-254
116508|code|LDR             R3, [R5,#4]|107-104
116510|code|SUBS            R3, #1|1-59
116512|code|STR             R3, [R5,#4]|107-96
116514|code|B               loc_1C6B2|198-231
116516|code|STR             R0, [SP,#0x44+var_2C]|6-144
116518|code|MOVS            R0, #8; size|8-32
116520|code|BLX             malloc|250-247-114-234
116524|code|LDR             R2, [SP,#0x44+var_2C]|6-154
116526|code|CBZ             R0, loc_1C754|136-177
116528|code|STR             R5, [R0,#4]|69-96
116530|code|MOV             LR, R2|150-70
116532|code|STR             R2, [R0]|2-96
116534|code|MOVS            R3, #1|1-35
116536|code|STR             R0, [R2]|16-96
116538|code|MOV             R5, R0|5-70
116540|code|B               loc_1C6E2|209-231
116542|code|MOVS            R0, #0|0-32
116544|code|LDR             R3, [SP,#0x44+var_30]|5-155
116546|code|LDR             R2, [SP,#0x44+var_8]|15-154
116548|code|LDR             R3, [R3]|27-104
116550|code|CMP             R2, R3|154-66
116552|code|BNE             loc_1C76A|15-209
116554|code|ADD             SP, SP, #0x44 ; 'D'|17-176
116556|code|POP.W           {R4-R11,PC}|189-232-240-143
116560|code|MOVS            R0, #1|1-32
116562|code|B               loc_1C740|245-231
116564|code|BL              logMallocError|253-247-116-254
116568|code|MOVS            R0, #0x89|137-32
116570|code|LDR             R1, [SP,#0x44+var_28]|7-153
116572|code|MOV             R2, R4|34-70
116574|code|BL              logMessage|253-247-227-253
116578|code|MOV             R0, R4|32-70
116580|code|BL              approximateDelay|255-247-254-253
116584|code|B               loc_1C6B2|163-231
116586|code|BLX             __stack_chk_fail|250-247-102-233
116590|data|ALIGN 0x10|0-191
116592|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C676|42-126-1-0
116596|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
116600|data|DCD aWaitingLd - 0x1C696; "waiting: %ld"|78-98-0-0
116604|data|DCD aBeginLevelUTim - 0x1C69A; "begin: level %u: timeout %ld"|90-98-0-0
116608|data|DCD off_341C8 - 0x1C6A0|40-123-1-0
116612|data|DCD sub_1C658+1 - 0x1C6A8|177-255-255-255
116616|data|DCD aEndLevelUS - 0x1C6B2; "end: level %u: %s"|30-98-0-0
116620|code|MOVS            R1, #0|0-33
116622|code|MOV             R2, R1|10-70
116624|code|B.W             asyncAwaitCondition|255-247-108-191
116628|code|LDRB            R0, [R0,#0x14]|0-125
116630|code|AND.W           R0, R0, #1|0-240-1-0
116634|code|EOR.W           R0, R0, #1|128-240-1-0
116638|code|BX              LR|112-71
116640|code|B.W             j_free|249-247-110-191
116644|code|PUSH            {R3,LR}|8-181
116646|code|BL              compareTimeValues|255-247-211-252
116650|code|LSRS            R0, R0, #0x1F|192-15
116652|code|POP             {R3,PC}|8-189
116654|data|ALIGN 0x10|0-191
116656|code|PUSH            {R4,LR}|16-181
116658|code|MOV             R4, R0|4-70
116660|code|BL              getElementItem|1-240-66-253
116664|code|LDRB            R3, [R0,#0x14]|3-125
116666|code|LSLS            R2, R3, #0x1F|218-7
116668|code|BPL             loc_1C7C6|3-213
116670|code|ORR.W           R3, R3, #2|67-240-2-3
116674|code|STRB            R3, [R0,#0x14]|3-117
116676|code|POP             {R4,PC}|16-189
116678|code|MOV             R0, R4|32-70
116680|code|POP.W           {R4,LR}|189-232-16-64
116684|code|B.W             deleteElement|1-240-248-188
116688|code|PUSH            {R4-R6,LR}|112-181
116690|code|MOV             R6, R0|6-70
116692|code|BL              asyncGetThreadSpecificData|255-247-238-254
116696|code|MOV             R5, R0|5-70
116698|code|CBZ             R0, loc_1C830|72-179
116700|code|LDR             R4, [R0,#4]|68-104
116702|code|CBZ             R4, loc_1C7F8|92-177
116704|code|LDR             R2, [R4]|34-104
116706|code|CLZ.W           R3, R2|178-250-130-243
116710|code|LSRS            R3, R3, #5|91-9
116712|code|CMP             R6, #0|0-46
116714|code|ITE EQ|12-191
116716|code|MOVEQ           R3, #0|0-35
116718|code|ANDNE.W         R3, R3, #1|3-240-1-3
116722|code|CBNZ            R3, loc_1C80C|91-185
116724|code|MOV             R0, R2|16-70
116726|code|POP             {R4-R6,PC}|112-189
116728|code|MOVS            R0, #4; size|4-32
116730|code|BLX             malloc|250-247-10-234
116734|code|CBZ             R0, loc_1C82C|168-177
116736|code|STR             R4, [R0]|4-96
116738|code|MOVS            R3, #1|1-35
116740|code|STR             R0, [R5,#4]|104-96
116742|code|MOV             R4, R0|4-70
116744|code|MOVS            R2, #0|0-34
116746|code|B               loc_1C7E8|237-231
116748|code|LDR             R0, =(loc_1C7A0+1 - 0x1C814)|9-72
116750|code|LDR             R1, =(sub_1C7A4+1 - 0x1C816)|10-73
116752|code|ADD             R0, PC; loc_1C7A0|120-68
116754|code|ADD             R1, PC; sub_1C7A4|121-68
116756|code|BL              newQueue|1-240-20-253
116760|code|MOV             R2, R0|2-70
116762|code|STR             R0, [R4]|32-96
116764|code|CMP             R0, #0|0-40
116766|code|BEQ             loc_1C7F4|233-208
116768|code|LDR             R1, =(off_3483C - 0x1C826)|6-73
116770|code|ADD             R1, PC; off_3483C|121-68
116772|code|BL              setQueueData|1-240-118-253
116776|code|LDR             R2, [R4]|34-104
116778|code|B               loc_1C7F4|227-231
116780|code|BL              logMallocError|253-247-8-254
116784|code|MOVS            R2, #0|0-34
116786|code|B               loc_1C7F4|223-231
116788|data|DCD loc_1C7A0+1 - 0x1C814|141-255-255-255
116792|data|DCD sub_1C7A4+1 - 0x1C816|143-255-255-255
116796|data|DCD off_3483C - 0x1C826|22-128-1-0
116800|code|PUSH.W          {R4-R8,LR}|45-233-240-65
116804|code|MOV             R8, R0|128-70
116806|code|MOVS            R0, #1|1-32
116808|code|BL              sub_1C7D0|255-247-194-255
116812|code|MOV             R5, R0|5-70
116814|code|CBZ             R0, locret_1C8B6|144-179
116816|code|MOVS            R0, #0x18; size|24-32
116818|code|BLX             malloc|250-247-222-233
116822|code|MOV             R4, R0|4-70
116824|code|CBZ             R0, loc_1C8BA|120-179
116826|code|MOV             R3, R0|3-70
116828|code|LDR.W           R1, [R8]|216-248-0-16
116832|code|MOVS            R2, #0|0-34
116834|code|STR.W           R2, [R3],#4|67-248-4-43
116838|code|ADDS            R3, #4|4-51
116840|code|STR             R2, [R0,#4]|66-96
116842|code|LDR.W           R7, [R8,#4]|216-248-4-112
116846|code|STR.W           R2, [R3],#4|67-248-4-43
116850|code|LDR.W           R6, [R8,#8]|216-248-8-96
116854|code|STR.W           R2, [R3],#4|67-248-4-43
116858|code|STR.W           R2, [R3],#4|67-248-4-43
116862|code|STR             R2, [R3]|26-96
116864|code|LDRB            R3, [R0,#0x14]|3-125
116866|code|LDM             R1, {R0,R1}|3-201
116868|code|AND.W           R3, R3, #0xFC|3-240-252-3
116872|code|STR             R7, [R4,#0xC]|231-96
116874|code|BFI.W           R3, R2, #2, #1|98-243-130-3
116878|code|STR             R6, [R4,#0x10]|38-97
116880|code|STM.W           R4, {R0,R1}|132-232-3-0
116884|code|MOV             R0, R5|40-70
116886|code|STRB            R3, [R4,#0x14]|35-117
116888|code|MOV             R1, R4|33-70
116890|code|BL              enqueueItem|1-240-197-253
116894|code|MOV             R5, R0|5-70
116896|code|CBZ             R0, loc_1C8C4|128-177
116898|code|LDR             R2, =(aAlarmAdded - 0x1C8AE); "alarm added"|11-74
116900|code|MOVS            R0, #0x89|137-32
116902|code|LDR.W           R1, [R8,#4]|216-248-4-16
116906|code|ADD             R2, PC; "alarm added"|122-68
116908|code|BL              logSymbol|253-247-132-253
116912|code|MOV             R0, R5|40-70
116914|code|POP.W           {R4-R8,PC}|189-232-240-129
116918|code|POP.W           {R4-R8,PC}|189-232-240-129
116922|code|BL              logMallocError|253-247-193-253
116926|code|MOV             R0, R4|32-70
116928|code|POP.W           {R4-R8,PC}|189-232-240-129
116932|code|MOV             R0, R4; ptr|32-70
116934|code|BLX             free|249-247-222-238
116938|code|MOV             R0, R5|40-70
116940|code|POP.W           {R4-R8,PC}|189-232-240-129
116944|data|DCD aAlarmAdded - 0x1C8AE; "alarm added"|174-96-0-0
116948|code|CBZ             R0, locret_1C8EC|80-177
116950|code|PUSH            {R4,LR}|16-181
116952|code|MOV             R4, R0|4-70
116954|code|LDR             R0, [R0]|0-104
116956|code|CBZ             R0, loc_1C8E2|8-177
116958|code|BL              deallocateQueue|1-240-225-252
116962|code|MOV             R0, R4; ptr|32-70
116964|code|POP.W           {R4,LR}|189-232-16-64
116968|code|B.W             j_free|249-247-202-190
116972|code|BX              LR|112-71
116974|data|ALIGN 0x10|0-191
116976|code|PUSH            {R4,R5,LR}|48-181
116978|code|SUB             SP, SP, #0x14|133-176
116980|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1C8FC)|10-76
116982|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|11-77
116984|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
116986|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
116988|code|STMEA.W         SP, {R1,R2}|141-232-6-0
116992|code|MOV             R2, SP|106-70
116994|code|LDR             R1, =(sub_1C840+1 - 0x1C90A)|9-73
116996|code|LDR             R5, [R4]|37-104
116998|code|ADD             R1, PC; sub_1C840|121-68
117000|code|STR             R3, [SP,#0x20+var_18]|2-147
117002|code|STR             R5, [SP,#0x20+var_14]|3-149
117004|code|BL              asyncMakeHandle|255-247-108-253
117008|code|LDR             R2, [SP,#0x20+var_14]|3-154
117010|code|LDR             R3, [R4]|35-104
117012|code|CMP             R2, R3|154-66
117014|code|BNE             loc_1C91C|1-209
117016|code|ADD             SP, SP, #0x14|5-176
117018|code|POP             {R4,R5,PC}|48-189
117020|code|BLX             __stack_chk_fail|250-247-140-232
117024|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C8FC|164-123-1-0
117028|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
117032|data|DCD sub_1C840+1 - 0x1C90A|55-255-255-255
117036|code|PUSH.W          {R4-R10,LR}|45-233-240-71
117040|code|SUB             SP, SP, #0x10|132-176
117042|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x1C93E)|16-77
117044|code|ADD             R4, SP, #0x30+var_2C|1-172
117046|code|LDR             R6, =(__stack_chk_guard_ptr - 0x344A0)|16-78
117048|code|MOV             R7, R3|31-70
117050|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
117052|code|MOV             R9, R0|129-70
117054|code|MOV             R10, R1|138-70
117056|code|MOV             R0, R4|32-70
117058|code|LDR             R6, [R5,R6]; __stack_chk_guard|174-89
117060|code|MOV             R8, R2|144-70
117062|code|LDR             R3, [R6]|51-104
117064|code|STR             R3, [SP,#0x30+var_24]|3-147
117066|code|BL              getMonotonicTime|255-247-151-252
117070|code|MOV             R0, R4|32-70
117072|code|MOV             R1, R10|81-70
117074|code|BL              adjustTimeValue|255-247-191-251
117078|code|MOV             R2, R8|66-70
117080|code|MOV             R3, R7|59-70
117082|code|MOV             R0, R9|72-70
117084|code|MOV             R1, R4|33-70
117086|code|BL              asyncSetAlarmTo|255-247-199-255
117090|code|LDR             R2, [SP,#0x30+var_24]|3-154
117092|code|LDR             R3, [R6]|51-104
117094|code|CMP             R2, R3|154-66
117096|code|BNE             loc_1C970|2-209
117098|code|ADD             SP, SP, #0x10|4-176
117100|code|POP.W           {R4-R10,PC}|189-232-240-135
117104|code|BLX             __stack_chk_fail|250-247-98-232
117108|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C93E|98-123-1-0
117112|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
117116|code|PUSH            {R3-R5,LR}|56-181
117118|code|MOV             R4, R0|4-70
117120|code|MOVS            R0, #0|0-32
117122|code|MOV             R5, R1|13-70
117124|code|BL              sub_1C7D0|255-247-36-255
117128|code|MOV             R1, R0|1-70
117130|code|MOV             R0, R4|32-70
117132|code|BL              asyncGetHandleElement|255-247-138-253
117136|code|MOV             R4, R0|4-70
117138|code|CBZ             R0, locret_1C9AC|88-177
117140|code|BL              getElementItem|1-240-82-252
117144|code|MOV             R3, R0|3-70
117146|code|LDM.W           R5, {R0,R1}|149-232-3-0
117150|code|STM.W           R3, {R0,R1}|131-232-3-0
117154|code|MOV             R0, R4|32-70
117156|code|BL              requeueElement|1-240-110-253
117160|code|MOVS            R0, #1|1-32
117162|code|POP             {R3-R5,PC}|56-189
117164|code|POP             {R3-R5,PC}|56-189
117166|data|ALIGN 0x10|0-191
117168|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1C9B8)|14-75
117170|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|15-74
117172|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
117174|code|PUSH            {R4-R7,LR}|240-181
117176|code|SUB             SP, SP, #0x14|133-176
117178|code|LDR             R5, [R3,R2]; __stack_chk_guard|157-88
117180|code|ADD             R4, SP, #0x28+var_24|1-172
117182|code|MOV             R6, R0|6-70
117184|code|MOV             R7, R1|15-70
117186|code|MOV             R0, R4|32-70
117188|code|LDR             R3, [R5]|43-104
117190|code|STR             R3, [SP,#0x28+var_1C]|3-147
117192|code|BL              getMonotonicTime|255-247-88-252
117196|code|MOV             R0, R4|32-70
117198|code|MOV             R1, R7|57-70
117200|code|BL              adjustTimeValue|255-247-128-251
117204|code|MOV             R0, R6|48-70
117206|code|MOV             R1, R4|33-70
117208|code|BL              asyncResetAlarmTo|255-247-208-255
117212|code|LDR             R2, [SP,#0x28+var_1C]|3-154
117214|code|LDR             R3, [R5]|43-104
117216|code|CMP             R2, R3|154-66
117218|code|BNE             loc_1C9E8|1-209
117220|code|ADD             SP, SP, #0x14|5-176
117222|code|POP             {R4-R7,PC}|240-189
117224|code|BLX             __stack_chk_fail|250-247-38-232
117228|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C9B8|232-122-1-0
117232|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
117236|code|PUSH            {R3-R5,LR}|56-181
117238|code|MOV             R4, R0|4-70
117240|code|MOVS            R0, #0|0-32
117242|code|MOV             R5, R1|13-70
117244|code|BL              sub_1C7D0|255-247-232-254
117248|code|MOV             R1, R0|1-70
117250|code|MOV             R0, R4|32-70
117252|code|BL              asyncGetHandleElement|255-247-78-253
117256|code|CBZ             R0, locret_1CA1E|72-177
117258|code|BL              getElementItem|1-240-23-252
117262|code|LDRB            R2, [R0,#0x14]|2-125
117264|code|MOV             R3, R0|3-70
117266|code|STR             R5, [R3,#8]|157-96
117268|code|MOVS            R0, #1|1-32
117270|code|ORR.W           R2, R2, #4|66-240-4-2
117274|code|STRB            R2, [R3,#0x14]|26-117
117276|code|POP             {R3-R5,PC}|56-189
117278|code|POP             {R3-R5,PC}|56-189
117280|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1CA28)|55-75
117282|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|56-74
117284|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
117286|code|PUSH.W          {R4-R8,LR}|45-233-240-65
117290|code|SUB             SP, SP, #0x18|134-176
117292|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
117294|code|LDR             R3, [R4]|35-104
117296|code|STR             R3, [SP,#0x30+var_1C]|5-147
117298|code|CBZ             R0, loc_1CA68|200-177
117300|code|LDR             R0, [R0]|0-104
117302|code|CBZ             R0, loc_1CA68|184-177
117304|code|MOV             R5, R1|13-70
117306|code|LDR             R1, =(sub_1C794+1 - 0x1CA42)|51-73
117308|code|MOVS            R2, #0|0-34
117310|code|ADD             R1, PC; sub_1C794|121-68
117312|code|BL              processQueue|1-240-108-253
117316|code|MOV             R8, R0|128-70
117318|code|CBZ             R0, loc_1CA68|120-177
117320|code|BL              getElementItem|1-240-248-251
117324|code|ADD             R7, SP, #0x30+var_2C|1-175
117326|code|MOV             R6, R0|6-70
117328|code|MOV             R0, R7|56-70
117330|code|BL              getMonotonicTime|255-247-19-252
117334|code|MOV             R0, R7|56-70
117336|code|MOV             R1, R6|49-70
117338|code|BL              millisecondsBetween|255-247-139-251
117342|code|SUBS            R3, R0, #0|3-30
117344|code|BLE             loc_1CA88|18-221
117346|code|LDR             R2, [R5]|42-104
117348|code|CMP             R3, R2|147-66
117350|code|BLT             loc_1CA78|7-219
117352|code|MOVS            R0, #0|0-32
117354|code|LDR             R2, [SP,#0x30+var_1C]|5-154
117356|code|LDR             R3, [R4]|35-104
117358|code|CMP             R2, R3|154-66
117360|code|BNE             loc_1CAFC|68-209
117362|code|ADD             SP, SP, #0x18|6-176
117364|code|POP.W           {R4-R8,PC}|189-232-240-129
117368|code|LDR             R2, =(aNextAlarmLd - 0x1CA84); "next alarm: %ld"|36-74
117370|code|MOVS            R0, #0x89|137-32
117372|code|STR             R3, [R5]|43-96
117374|code|LDR             R1, [R6,#0xC]|241-104
117376|code|ADD             R2, PC; "next alarm: %ld"|122-68
117378|code|BL              logSymbol|253-247-153-252
117382|code|B               loc_1CA68|239-231
117384|code|LDR             R5, [R6,#0xC]|245-104
117386|code|MOVS            R0, #0x89|137-32
117388|code|LDR             R3, [R6,#0x10]|51-105
117390|code|LDR             R2, =(aAlarmStarting - 0x1CA98); "alarm starting"|32-74
117392|code|MOV             R1, R5|41-70
117394|code|STR             R7, [SP,#0x30+var_24]|3-151
117396|code|ADD             R2, PC; "alarm starting"|122-68
117398|code|STR             R3, [SP,#0x30+var_20]|4-147
117400|code|BL              logSymbol|253-247-142-252
117404|code|LDRB            R3, [R6,#0x14]|51-125
117406|code|ORR.W           R3, R3, #1|67-240-1-3
117410|code|STRB            R3, [R6,#0x14]|51-117
117412|code|CBZ             R5, loc_1CAAA|13-177
117414|code|ADD             R0, SP, #0x30+var_24|3-168
117416|code|BLX             R5|168-71
117418|code|LDRB            R3, [R6,#0x14]|51-125
117420|code|BFC.W           R3, #0, #1|111-243-0-3
117424|code|STRB            R3, [R6,#0x14]|51-117
117426|code|UXTB            R3, R3|219-178
117428|code|LSLS            R2, R3, #0x1D|90-7
117430|code|ITT PL|92-191
117432|code|ORRPL.W         R3, R3, #2|67-240-2-3
117436|code|STRBPL          R3, [R6,#0x14]|51-117
117438|code|BMI             loc_1CAD2|8-212
117440|code|LDRB            R3, [R6,#0x14]|51-125
117442|code|LSLS            R3, R3, #0x1E|155-7
117444|code|BMI             loc_1CACA|1-212
117446|code|MOVS            R0, #1|1-32
117448|code|B               loc_1CA6A|207-231
117450|code|MOV             R0, R8|64-70
117452|code|BL              deleteElement|1-240-120-251
117456|code|B               loc_1CAC6|249-231
117458|code|LDR             R1, [R6,#8]|177-104
117460|code|MOV             R0, R6|48-70
117462|code|BL              adjustTimeValue|255-247-253-250
117466|code|MOV             R0, R7|56-70
117468|code|BL              getMonotonicTime|255-247-206-251
117472|code|MOV             R1, R7|57-70
117474|code|MOV             R0, R6|48-70
117476|code|BL              compareTimeValues|255-247-52-251
117480|code|CMP             R0, #0|0-40
117482|code|ITT LT|188-191
117484|code|LDMLT.W         R7, {R0,R1}|151-232-3-0
117488|code|STMLT.W         R6, {R0,R1}|134-232-3-0
117492|code|MOV             R0, R8|64-70
117494|code|BL              requeueElement|1-240-197-252
117498|code|B               loc_1CAC0|225-231
117500|code|BLX             __stack_chk_fail|249-247-156-239
117504|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1CA28|120-122-1-0
117508|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
117512|data|DCD sub_1C794+1 - 0x1CA42|83-253-255-255
117516|data|DCD aNextAlarmLd - 0x1CA84; "next alarm: %ld"|244-94-0-0
117520|data|DCD aAlarmStarting - 0x1CA98; "alarm starting"|208-94-0-0
117524|code|B.W             j_free|249-247-180-189
117528|code|PUSH            {R4-R6,LR}|112-181
117530|code|MOV             R6, R0|6-70
117532|code|BL              asyncGetThreadSpecificData|255-247-74-253
117536|code|MOV             R5, R0|5-70
117538|code|CBZ             R0, loc_1CB62|240-177
117540|code|LDR             R4, [R0,#8]|132-104
117542|code|CBZ             R4, loc_1CB44|108-177
117544|code|LDR             R0, [R4]|32-104
117546|code|CBZ             R0, loc_1CB52|144-177
117548|code|MOV             R1, R6|49-70
117550|code|BL              enqueueItem|1-240-123-252
117554|code|CBZ             R0, loc_1CB62|176-177
117556|code|LDR             R2, =(aTaskAdded - 0x1CB3E); "task added"|13-74
117558|code|MOVS            R0, #0x89|137-32
117560|code|LDR             R1, [R6]|49-104
117562|code|ADD             R2, PC; "task added"|122-68
117564|code|BL              logSymbol|253-247-60-252
117568|code|MOVS            R0, #1|1-32
117570|code|POP             {R4-R6,PC}|112-189
117572|code|MOVS            R0, #4; size|4-32
117574|code|BLX             malloc|250-247-100-232
117578|code|CBZ             R0, loc_1CB66|96-177
117580|code|STR             R4, [R0]|4-96
117582|code|MOV             R4, R0|4-70
117584|code|STR             R0, [R5,#8]|168-96
117586|code|LDR             R0, =(loc_1CB14+1 - 0x1CB5A)|7-72
117588|code|MOVS            R1, #0|0-33
117590|code|ADD             R0, PC; loc_1CB14|120-68
117592|code|BL              newQueue|1-240-114-251
117596|code|STR             R0, [R4]|32-96
117598|code|CMP             R0, #0|0-40
117600|code|BNE             loc_1CB2C|228-209
117602|code|MOVS            R0, #0|0-32
117604|code|POP             {R4-R6,PC}|112-189
117606|code|BL              logMallocError|253-247-107-252
117610|code|B               loc_1CB62|250-231
117612|data|DCD aTaskAdded - 0x1CB3E; "task added"|74-94-0-0
117616|data|DCD loc_1CB14+1 - 0x1CB5A|187-255-255-255
117620|code|LDR             R0, [R0,#4]|64-104
117622|code|B               sub_1CB18|207-231
117624|code|CBZ             R0, locret_1CB90|80-177
117626|code|PUSH            {R4,LR}|16-181
117628|code|MOV             R4, R0|4-70
117630|code|LDR             R0, [R0]|0-104
117632|code|CBZ             R0, loc_1CB86|8-177
117634|code|BL              deallocateQueue|1-240-143-251
117638|code|MOV             R0, R4; ptr|32-70
117640|code|POP.W           {R4,LR}|189-232-16-64
117644|code|B.W             j_free|249-247-120-189
117648|code|BX              LR|112-71
117650|data|ALIGN 4|0-191
117652|code|PUSH            {R3-R7,LR}|248-181
117654|code|MOV             R5, R0|5-70
117656|code|MOVS            R0, #8; size|8-32
117658|code|MOV             R7, R1|15-70
117660|code|MOV             R6, R2|22-70
117662|code|BLX             malloc|250-247-56-232
117666|code|MOV             R4, R0|4-70
117668|code|CBZ             R0, loc_1CBCC|144-177
117670|code|STR             R7, [R0]|7-96
117672|code|STR             R6, [R0,#4]|70-96
117674|code|CBZ             R5, loc_1CBBA|53-177
117676|code|MOV             R0, R5|40-70
117678|code|MOV             R1, R4|33-70
117680|code|BL              asyncSignalEvent|0-240-66-253
117684|code|CBZ             R0, loc_1CBC2|40-177
117686|code|MOVS            R0, #1|1-32
117688|code|POP             {R3-R7,PC}|248-189
117690|code|BL              sub_1CB18|255-247-173-255
117694|code|CMP             R0, #0|0-40
117696|code|BNE             loc_1CBB6|249-209
117698|code|MOV             R0, R4; ptr|32-70
117700|code|BLX             free|249-247-94-237
117704|code|MOVS            R0, #0|0-32
117706|code|POP             {R3-R7,PC}|248-189
117708|code|BL              logMallocError|253-247-56-252
117712|code|MOV             R0, R4|32-70
117714|code|POP             {R3-R7,PC}|248-189
117716|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1CBDE)|3-75
117718|code|MOVS            R1, #0|0-33
117720|code|LDR             R2, =(asyncHandleAddTaskEvent_ptr - 0x344A0)|3-74
117722|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
117724|code|LDR             R0, [R3,R2]; asyncHandleAddTaskEvent|152-88
117726|code|B.W             asyncNewEvent|0-240-81-189
117730|data|ALIGN 4|0-191
117732|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1CBDE|194-120-1-0
117736|data|DCD asyncHandleAddTaskEvent_ptr - 0x344A0|16-3-0-0
117740|code|CBZ             R0, loc_1CC1A|168-177
117742|code|LDR             R0, [R0]|0-104
117744|code|CBZ             R0, loc_1CC1A|152-177
117746|code|PUSH            {R3-R5,LR}|56-181
117748|code|BL              dequeueItem|1-240-16-251
117752|code|MOV             R4, R0|4-70
117754|code|CBZ             R0, loc_1CC1E|128-177
117756|code|LDR             R5, [R0]|5-104
117758|code|MOVS            R0, #0x89|137-32
117760|code|LDR             R2, =(aTaskStarting - 0x1CC08); "task starting"|8-74
117762|code|MOV             R1, R5|41-70
117764|code|ADD             R2, PC; "task starting"|122-68
117766|code|BL              logSymbol|253-247-215-251
117770|code|CBZ             R5, loc_1CC10|13-177
117772|code|LDR             R0, [R4,#4]|96-104
117774|code|BLX             R5|168-71
117776|code|MOV             R0, R4; ptr|32-70
117778|code|BLX             free|249-247-56-237
117782|code|MOVS            R0, #1|1-32
117784|code|POP             {R3-R5,PC}|56-189
117786|code|MOVS            R0, #0|0-32
117788|code|BX              LR|112-71
117790|code|MOVS            R0, #0|0-32
117792|code|POP             {R3-R5,PC}|56-189
117794|data|ALIGN 4|0-191
117796|data|DCD aTaskStarting - 0x1CC08; "task starting"|140-93-0-0
117800|code|MOVS            R3, #1|1-35
117802|code|STRH            R3, [R0,#0xC]|131-129
117804|code|BX              LR|112-71
117806|data|ALIGN 0x10|0-191
117808|code|MOVS            R3, #4|4-35
117810|code|STRH            R3, [R0,#0xC]|131-129
117812|code|BX              LR|112-71
117814|data|ALIGN 4|0-191
117816|code|MOVS            R3, #2|2-35
117818|code|STRH            R3, [R0,#0xC]|131-129
117820|code|BX              LR|112-71
117822|data|ALIGN 0x10|0-191
117824|code|LDR             R2, [R0]|2-104
117826|code|LDR             R3, [R1]|11-104
117828|code|CMP             R2, R3|154-66
117830|code|ITTTT EQ|1-191
117832|code|LDREQ           R3, [R0,#4]|67-104
117834|code|LDREQ           R0, [R1,#4]|72-104
117836|code|SUBEQ           R0, R3, R0|24-26
117838|code|CLZEQ.W         R0, R0|176-250-128-240
117842|code|ITE EQ|12-191
117844|code|LSREQ           R0, R0, #5|64-9
117846|code|MOVNE           R0, #0|0-32
117848|code|BX              LR|112-71
117850|data|ALIGN 4|0-191
117852|code|PUSH            {R4,LR}|16-181
117854|code|MOV             R4, R0|4-70
117856|code|LDR             R0, [R0,#4]; ptr|64-104
117858|code|CBZ             R0, loc_1CC68|8-177
117860|code|BLX             free|249-247-14-237
117864|code|MOV             R0, R4; ptr|32-70
117866|code|POP.W           {R4,LR}|189-232-16-64
117870|code|B.W             j_free|249-247-7-189
117874|data|ALIGN 4|0-191
117876|code|PUSH            {R4,LR}|16-181
117878|code|MOV             R4, R0|4-70
117880|code|LDR             R0, [R0,#8]|128-104
117882|code|CBZ             R0, loc_1CC80|8-177
117884|code|BL              deallocateQueue|1-240-18-251
117888|code|LDR             R3, [R4,#4]|99-104
117890|code|LDR             R3, [R3,#8]|155-104
117892|code|CBZ             R3, loc_1CC8A|11-177
117894|code|MOV             R0, R4|32-70
117896|code|BLX             R3|152-71
117898|code|MOV             R0, R4; ptr|32-70
117900|code|POP.W           {R4,LR}|189-232-16-64
117904|code|B.W             j_free|249-247-246-188
117908|code|ADDS            R2, R1, #1|74-28
117910|code|LDR             R3, [R0,#4]|67-104
117912|code|PUSH            {R4,LR}|16-181
117914|code|MOV             R4, R0|4-70
117916|code|BEQ             loc_1CCC2|17-208
117918|code|CBZ             R1, loc_1CCB0|57-177
117920|code|LDR             R2, [R3,#0xC]|218-104
117922|code|ADD             R1, R2|17-68
117924|code|STR             R1, [R3,#0xC]|217-96
117926|code|LDRB            R3, [R4,#0x14]|35-125
117928|code|ORR.W           R3, R3, #4|67-240-4-3
117932|code|STRB            R3, [R4,#0x14]|35-117
117934|code|POP             {R4,PC}|16-189
117936|code|LDRB            R2, [R3,#4]|26-121
117938|code|ORR.W           R2, R2, #1|66-240-1-2
117942|code|STRB            R2, [R3,#4]|26-113
117944|code|LDRB            R3, [R4,#0x14]|35-125
117946|code|ORR.W           R3, R3, #4|67-240-4-3
117950|code|STRB            R3, [R4,#0x14]|35-117
117952|code|POP             {R4,PC}|16-189
117954|code|BLX             __errno_location|250-247-74-232
117958|code|LDR             R3, [R0]|3-104
117960|code|STR             R3, [R4,#0x10]|35-97
117962|code|LDRB            R3, [R4,#0x14]|35-125
117964|code|ORR.W           R3, R3, #4|67-240-4-3
117968|code|STRB            R3, [R4,#0x14]|35-117
117970|code|POP             {R4,PC}|16-189
117972|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1CCDE)|19-75
117974|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|20-74
117976|code|PUSH            {R4-R7,LR}|240-181
117978|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
117980|code|MOV             R5, R0|5-70
117982|code|SUB             SP, SP, #0x14|133-176
117984|code|LDR             R1, [R5]|41-104
117986|code|MOVS            R0, #0x89|137-32
117988|code|LDR             R4, [R5,#4]|108-104
117990|code|LDR             R6, [R3,R2]; __stack_chk_guard|158-88
117992|code|LDR             R3, [R1,#4]|75-104
117994|code|LDR             R4, [R4]|36-104
117996|code|LDR             R7, [R6]|55-104
117998|code|LDR             R2, =(aCheckingSDevic+0x14 - 0x1CCF8); "%s"|15-74
118000|code|MOV             R1, R4|33-70
118002|code|LDR             R3, [R3]|27-104
118004|code|ADD             R2, PC; "%s"|122-68
118006|code|STR             R7, [SP,#0xC]|3-151
118008|code|BL              logSymbol|253-247-94-251
118012|code|MOV             R0, R4|32-70
118014|code|CBZ             R4, loc_1CD12|68-177
118016|code|LDR             R2, [R5,#8]|170-104
118018|code|ADD             R0, SP, #4|1-168
118020|code|LDR             R3, [R5,#0x10]|43-105
118022|code|STR             R2, [SP,#4]|1-146
118024|code|STR             R3, [SP,#8]|2-147
118026|code|BLX             R4|160-71
118028|code|ADDS            R0, #0|0-48
118030|code|IT NE|24-191
118032|code|MOVNE           R0, #1|1-32
118034|code|LDR             R2, [SP,#0xC]|3-154
118036|code|LDR             R3, [R6]|51-104
118038|code|CMP             R2, R3|154-66
118040|code|BNE             loc_1CD1E|1-209
118042|code|ADD             SP, SP, #0x14|5-176
118044|code|POP             {R4-R7,PC}|240-189
118046|code|BLX             __stack_chk_fail|249-247-140-238
118050|data|ALIGN 4|0-191
118052|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1CCDE|194-119-1-0
118056|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
118060|data|DCD aCheckingSDevic+0x14 - 0x1CCF8; "%s"|128-90-0-0
118064|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1CD3A)|27-75
118066|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|28-74
118068|code|PUSH            {R4-R7,LR}|240-181
118070|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
118072|code|MOV             R5, R0|5-70
118074|code|SUB             SP, SP, #0x1C|135-176
118076|code|LDR             R1, [R5]|41-104
118078|code|MOVS            R0, #0x89|137-32
118080|code|LDR             R6, [R5,#4]|110-104
118082|code|LDR             R7, [R3,R2]; __stack_chk_guard|159-88
118084|code|LDR             R3, [R1,#4]|75-104
118086|code|LDR             R4, [R6]|52-104
118088|code|LDR.W           LR, [R7]|215-248-0-224
118092|code|LDR             R2, =(aCheckingSDevic+0x14 - 0x1CD56); "%s"|22-74
118094|code|LDR             R3, [R3]|27-104
118096|code|MOV             R1, R4|33-70
118098|code|ADD             R2, PC; "%s"|122-68
118100|code|STR.W           LR, [SP,#0x14]|205-248-20-224
118104|code|BL              logSymbol|253-247-46-251
118108|code|LDR             R3, [R5,#0x10]|43-105
118110|code|CBNZ            R3, loc_1CD68|27-185
118112|code|LDR             R1, [R6,#0xC]|241-104
118114|code|LDR             R2, [R6,#8]|178-104
118116|code|CMP             R1, R2|145-66
118118|code|BCC             loc_1CD8E|18-211
118120|code|MOV             R0, R4|32-70
118122|code|CBZ             R4, loc_1CD82|84-177
118124|code|LDR             R1, [R5,#8]|169-104
118126|code|ADD             R0, SP, #4|1-168
118128|code|LDR             R2, [R6,#8]|178-104
118130|code|ADD.W           R5, R6, #0x10|6-241-16-5
118134|code|STR             R3, [SP,#0x10]|4-147
118136|code|STR             R5, [SP,#8]|2-149
118138|code|STR             R1, [SP,#4]|1-145
118140|code|STR             R2, [SP,#0xC]|3-146
118142|code|BLX             R4|160-71
118144|code|MOVS            R0, #0|0-32
118146|code|LDR             R2, [SP,#0x14]|5-154
118148|code|LDR             R3, [R7]|59-104
118150|code|CMP             R2, R3|154-66
118152|code|BNE             loc_1CD9A|7-209
118154|code|ADD             SP, SP, #0x1C|7-176
118156|code|POP             {R4-R7,PC}|240-189
118158|code|LDRB            R2, [R5,#0x14]|42-125
118160|code|MOVS            R0, #1|1-32
118162|code|BFI.W           R2, R3, #2, #1|99-243-130-2
118166|code|STRB            R2, [R5,#0x14]|42-117
118168|code|B               loc_1CD82|243-231
118170|code|BLX             __stack_chk_fail|249-247-78-238
118174|data|ALIGN 0x10|0-191
118176|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1CD3A|102-119-1-0
118180|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
118184|data|DCD aCheckingSDevic+0x14 - 0x1CD56; "%s"|34-90-0-0
118188|code|PUSH            {R3-R5,LR}|56-181
118190|code|BL              asyncGetThreadSpecificData|255-247-1-252
118194|code|MOV             R5, R0|5-70
118196|code|CBZ             R0, loc_1CDCE|88-177
118198|code|LDR             R4, [R0,#0xC]|196-104
118200|code|CBZ             R4, loc_1CDBE|12-177
118202|code|MOV             R0, R4|32-70
118204|code|POP             {R3-R5,PC}|56-189
118206|code|MOVS            R0, #4; size|4-32
118208|code|BLX             malloc|249-247-38-239
118212|code|CBZ             R0, loc_1CDD2|40-177
118214|code|STR             R4, [R0]|4-96
118216|code|MOV             R4, R0|4-70
118218|code|STR             R0, [R5,#0xC]|232-96
118220|code|B               loc_1CDBA|245-231
118222|code|MOV             R4, R0|4-70
118224|code|B               loc_1CDBA|243-231
118226|code|BL              logMallocError|253-247-53-251
118230|code|B               loc_1CDBA|240-231
118232|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1CDE4)|44-75
118234|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|45-74
118236|code|PUSH.W          {R4-R8,LR}|45-233-240-65
118240|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
118242|code|MOV             R4, R0|4-70
118244|code|SUB             SP, SP, #0x28 ; '('|138-176
118246|code|LDR             R7, [R4]|39-104
118248|code|MOVS            R0, #0x89|137-32
118250|code|LDR             R5, [R4,#4]|101-104
118252|code|LDR             R6, [R3,R2]; __stack_chk_guard|158-88
118254|code|LDR             R3, [R7,#4]|123-104
118256|code|LDR.W           R8, [R5]|213-248-0-128
118260|code|LDR             R7, [R6]|55-104
118262|code|LDR             R2, =(aCheckingSDevic+0x14 - 0x1CE00); "%s"|39-74
118264|code|MOV             R1, R8|65-70
118266|code|LDR             R3, [R3]|27-104
118268|code|ADD             R2, PC; "%s"|122-68
118270|code|STR             R7, [SP,#0x24]|9-151
118272|code|BL              logSymbol|253-247-218-250
118276|code|CMP.W           R8, #0|184-241-0-15
118280|code|BEQ             loc_1CE54|36-208
118282|code|LDR             R3, [R4,#0x10]|35-105
118284|code|ADD.W           R7, R5, #0x10|5-241-16-7
118288|code|LDRB.W          LR, [R5,#4]|149-248-4-224
118292|code|ADD             R0, SP, #0xC|3-168
118294|code|LDR             R2, [R4,#8]|162-104
118296|code|STR             R3, [SP,#4]|1-147
118298|code|LDR             R3, [R5,#8]|171-104
118300|code|LDRB.W          R1, [SP,#0x20]|157-248-32-16
118304|code|STR             R2, [SP,#0xC]|3-146
118306|code|STR             R3, [SP,#0x14]|5-147
118308|code|BFI.W           R1, LR, #0, #1|110-243-0-1
118312|code|LDR             R3, [R5,#0xC]|235-104
118314|code|STR             R7, [SP,#0x10]|4-151
118316|code|STRB.W          R1, [SP,#0x20]|141-248-32-16
118320|code|STR             R3, [SP,#0x18]|6-147
118322|code|LDR             R3, [SP,#4]|1-155
118324|code|STR             R3, [SP,#0x1C]|7-147
118326|code|BLX             R8|192-71
118328|code|LDR             R3, [R4,#0x10]|35-105
118330|code|MOV             R2, R0|2-70
118332|code|CBNZ            R3, loc_1CE54|83-185
118334|code|LDRB            R3, [R5,#4]|43-121
118336|code|ANDS.W          R3, R3, #1|19-240-1-3
118340|code|BNE             loc_1CE54|6-209
118342|code|LDRB            R1, [R4,#0x14]|33-125
118344|code|BFI.W           R1, R3, #2, #1|99-243-130-1
118348|code|STRB            R1, [R4,#0x14]|33-117
118350|code|CBNZ            R0, loc_1CE64|72-185
118352|code|MOVS            R0, #1|1-32
118354|code|B               loc_1CE56|0-224
118356|code|MOVS            R0, #0|0-32
118358|code|LDR             R2, [SP,#0x24]|9-154
118360|code|LDR             R3, [R6]|51-104
118362|code|CMP             R2, R3|154-66
118364|code|BNE             loc_1CE88|20-209
118366|code|ADD             SP, SP, #0x28 ; '('|10-176
118368|code|POP.W           {R4-R8,PC}|189-232-240-129
118372|code|LDR             R3, [R5,#0xC]|235-104
118374|code|ADD.W           R1, R0, #0x10|0-241-16-1
118378|code|MOV             R0, R7|56-70
118380|code|ADD             R1, R5|41-68
118382|code|SUBS            R7, R3, R2|159-26
118384|code|STR             R7, [R5,#0xC]|239-96
118386|code|MOV             R2, R7|58-70
118388|code|BLX             memmove|249-247-96-237
118392|code|CMP             R7, #0|0-47
118394|code|BEQ             loc_1CE50|233-208
118396|code|LDRB            R3, [R4,#0x14]|35-125
118398|code|MOVS            R0, #1|1-32
118400|code|ORR.W           R3, R3, #4|67-240-4-3
118404|code|STRB            R3, [R4,#0x14]|35-117
118406|code|B               loc_1CE56|230-231
118408|code|BLX             __stack_chk_fail|249-247-214-237
118412|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1CDE4|188-118-1-0
118416|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
118420|data|DCD aCheckingSDevic+0x14 - 0x1CE00; "%s"|120-89-0-0
118424|code|PUSH            {R3-R5,LR}|56-181
118426|code|MOV             R4, R0|4-70
118428|code|LDM             R0, {R0,R3}|9-200
118430|code|LDR             R2, [R3,#0xC]|218-104
118432|code|LDR             R5, [R3,#8]|157-104
118434|code|ADD.W           R1, R2, #0x10|2-241-16-1
118438|code|LDR             R0, [R0]|0-104
118440|code|ADD             R1, R3|25-68
118442|code|SUBS            R2, R5, R2|170-26
118444|code|BLX             read|249-247-32-237
118448|code|MOV             R1, R0|1-70
118450|code|MOV             R0, R4|32-70
118452|code|POP.W           {R3-R5,LR}|189-232-56-64
118456|code|B               sub_1CC94|236-230
118458|data|ALIGN 4|0-191
118460|code|PUSH            {R3-R5,LR}|56-181
118462|code|MOV             R4, R0|4-70
118464|code|LDM             R0, {R0,R3}|9-200
118466|code|LDR             R2, [R3,#0xC]|218-104
118468|code|LDR             R5, [R3,#8]|157-104
118470|code|ADD.W           R1, R2, #0x10|2-241-16-1
118474|code|LDR             R0, [R0]|0-104
118476|code|ADD             R1, R3|25-68
118478|code|SUBS            R2, R5, R2|170-26
118480|code|BLX             write|249-247-224-238
118484|code|MOV             R1, R0|1-70
118486|code|MOV             R0, R4|32-70
118488|code|POP.W           {R3-R5,LR}|189-232-56-64
118492|code|B               sub_1CC94|218-230
118494|data|ALIGN 0x10|0-191
118496|code|LDR             R3, =(loc_1CCD4+1 - 0x1CEEA)|4-75
118498|code|LDR             R2, [R0,#0x18]|130-105
118500|code|MOV             R0, R1|8-70
118502|code|ADD             R3, PC; loc_1CCD4|123-68
118504|code|CMP             R2, R3|154-66
118506|code|BEQ             loc_1CEF0|1-208
118508|code|B.W             getQueueHead|1-240-22-186
118512|code|B.W             getStackHead|1-240-22-186
118516|data|DCD loc_1CCD4+1 - 0x1CEEA|235-253-255-255
118520|code|PUSH            {R3-R7,LR}|248-181
118522|code|MOV             R4, R0|4-70
118524|code|MOV             R5, R1|13-70
118526|code|LDR             R0, [R0,#4]|64-104
118528|code|LDR             R1, [R4,#8]|161-104
118530|code|BL              sub_1CEE0|255-247-237-255
118534|code|CBZ             R0, loc_1CF4A|0-179
118536|code|BL              getElementItem|1-240-152-249
118540|code|MOV             R3, R0|3-70
118542|code|CBZ             R0, loc_1CF4A|224-177
118544|code|LDRB            R2, [R0,#0x14]|2-125
118546|code|MOVS            R1, #0|0-33
118548|code|STR             R1, [R0,#0xC]|193-96
118550|code|LSLS            R1, R2, #0x1F|209-7
118552|code|BMI             loc_1CF4A|23-212
118554|code|AND.W           R2, R2, #4|2-240-4-2
118558|code|AND.W           R6, R2, #0xFF|2-240-255-6
118562|code|CBNZ            R2, loc_1CF46|130-185
118564|code|LDR             R1, [R5,#4]|105-104
118566|code|MOV             R0, R6|48-70
118568|code|LDR             R7, [R5]|47-104
118570|code|LDRH.W          LR, [R4,#0xC]|180-248-12-224
118574|code|ADDS            R2, R1, #1|74-28
118576|code|STR             R2, [R5,#4]|106-96
118578|code|ADD.W           R2, R7, R1,LSL#3|7-235-193-2
118582|code|LDR             R4, [R4]|36-104
118584|code|STR             R2, [R3,#0xC]|218-96
118586|code|STR.W           R4, [R7,R1,LSL#3]|71-248-49-64
118590|code|STRH.W          LR, [R2,#4]|162-248-4-224
118594|code|STRH            R6, [R2,#6]|214-128
118596|code|POP             {R3-R7,PC}|248-189
118598|code|MOVS            R0, #1|1-32
118600|code|POP             {R3-R7,PC}|248-189
118602|code|MOVS            R0, #0|0-32
118604|code|POP             {R3-R7,PC}|248-189
118606|data|ALIGN 0x10|0-191
118608|code|PUSH            {R3,LR}|8-181
118610|code|MOV             R3, R0|3-70
118612|code|LDR             R1, [R3,#8]|153-104
118614|code|LDR             R0, [R0,#4]|64-104
118616|code|BL              sub_1CEE0|255-247-194-255
118620|code|CBZ             R0, loc_1CF92|200-177
118622|code|BL              getElementItem|1-240-109-249
118626|code|MOV             R3, R0|3-70
118628|code|CBZ             R0, loc_1CF92|168-177
118630|code|LDR             R2, [R0,#0xC]|194-104
118632|code|CBZ             R2, loc_1CF92|154-177
118634|code|LDRH            R0, [R2,#6]|208-136
118636|code|MOVS            R2, #0|0-34
118638|code|STR             R2, [R3,#0x10]|26-97
118640|code|UXTH            R2, R0|130-178
118642|code|LSLS            R1, R2, #0x1C|17-7
118644|code|BPL             loc_1CF7E|3-213
118646|code|MOVS            R2, #5|5-34
118648|code|MOVS            R0, #1|1-32
118650|code|STR             R2, [R3,#0x10]|26-97
118652|code|POP             {R3,PC}|8-189
118654|code|TST.W           R2, #0x10|18-240-16-15
118658|code|ITE EQ|12-191
118660|code|MOVEQ           R2, #0|0-34
118662|code|MOVNE           R2, #0x13|19-34
118664|code|ADDS            R0, #0|0-48
118666|code|STR             R2, [R3,#0x10]|26-97
118668|code|IT NE|24-191
118670|code|MOVNE           R0, #1|1-32
118672|code|POP             {R3,PC}|8-189
118674|code|MOVS            R0, #0|0-32
118676|code|POP             {R3,PC}|8-189
118678|data|ALIGN 4|0-191
118680|code|PUSH.W          {R4-R11,LR}|45-233-240-79
118684|code|MOV             R9, R3|153-70
118686|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1CFAA)|81-76
118688|code|SUB             SP, SP, #0x1C|135-176
118690|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|81-77
118692|code|MOV             R11, R0|131-70
118694|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
118696|code|MOVS            R0, #0x18; size|24-32
118698|code|MOV             R7, R1|15-70
118700|code|MOV             R8, R2|144-70
118702|code|MOV             R3, R4|35-70
118704|code|LDR             R3, [R4,R5]; __stack_chk_guard|99-89
118706|code|STR             R3, [SP,#0x40+var_3C]|1-147
118708|code|LDR             R3, [R3]|27-104
118710|code|STR             R3, [SP,#0x40+var_2C]|5-147
118712|code|BLX             malloc|249-247-42-238
118716|code|MOV             R4, R0|4-70
118718|code|CMP             R0, #0|0-40
118720|code|BEQ.W           loc_1D0C8|0-240-130-128
118724|code|BL              sub_1CDAC|255-247-242-254
118728|code|MOV             R5, R0|5-70
118730|code|CMP             R0, #0|0-40
118732|code|BEQ             loc_1D0A4|106-208
118734|code|LDR             R6, [R0]|6-104
118736|code|CMP             R6, #0|0-46
118738|code|BEQ             loc_1D0AE|108-208
118740|code|LDR             R1, =(loc_1CC40+1 - 0x1CFE2)|69-73
118742|code|MOV             R0, R6|48-70
118744|code|ADD             R2, SP, #0x40+var_34|3-170
118746|code|STR.W           R11, [SP,#0x40+var_34]|205-248-12-176
118750|code|ADD             R1, PC; loc_1CC40|121-68
118752|code|STR             R7, [SP,#0x40+var_30]|4-151
118754|code|BL              findElement|1-240-209-249
118758|code|MOV             R5, R0|5-70
118760|code|CMP             R0, #0|0-40
118762|code|BEQ             loc_1D058|53-208
118764|code|MOV             R0, R5|40-70
118766|code|BL              getElementItem|1-240-37-249
118770|code|MOV             R10, R0|130-70
118772|code|LDR             R0, [R0,#8]|128-104
118774|code|BL              getQueueSize|1-240-137-249
118778|code|MOV             R1, R4|33-70
118780|code|CLZ.W           R11, R0|176-250-128-251
118784|code|LDR.W           R0, [R10,#8]|218-248-8-0
118788|code|BL              enqueueItem|1-240-16-250
118792|code|MOV.W           R11, R11,LSR#5|79-234-91-27
118796|code|MOV             R7, R0|7-70
118798|code|CMP             R0, #0|0-40
118800|code|BEQ             loc_1D0D0|94-208
118802|code|LDRB            R3, [R4,#0x14]|35-125
118804|code|MOVS            R2, #0|0-34
118806|code|STR.W           R10, [R4]|196-248-0-160
118810|code|AND.W           R3, R3, #0xFC|3-240-252-3
118814|code|STR.W           R8, [R4,#4]|196-248-4-128
118818|code|BFI.W           R3, R2, #2, #1|98-243-130-3
118822|code|STR.W           R9, [R4,#8]|196-248-8-144
118826|code|STR             R2, [R4,#0xC]|226-96
118828|code|STRB            R3, [R4,#0x14]|35-117
118830|code|STR             R2, [R4,#0x10]|34-97
118832|code|CMP.W           R11, #0|187-241-0-15
118836|code|BEQ             loc_1D054|14-208
118838|code|LDR.W           R3, [R10,#4]|218-248-4-48
118842|code|LDR             R3, [R3,#0xC]|219-104
118844|code|CBZ             R3, loc_1D054|83-177
118846|code|MOV             R0, R4|32-70
118848|code|BLX             R3|152-71
118850|code|MOV             R0, R7|56-70
118852|code|LDR             R3, [SP,#0x40+var_3C]|1-155
118854|code|LDR             R2, [SP,#0x40+var_2C]|5-154
118856|code|LDR             R3, [R3]|27-104
118858|code|CMP             R2, R3|154-66
118860|code|BNE             loc_1D0DE|71-209
118862|code|ADD             SP, SP, #0x1C|7-176
118864|code|POP.W           {R4-R11,PC}|189-232-240-143
118868|code|MOV             R0, R7|56-70
118870|code|B               loc_1D044|245-231
118872|code|MOVS            R0, #0x10; size|16-32
118874|code|BLX             malloc|249-247-218-237
118878|code|MOV             R10, R0|130-70
118880|code|CBZ             R0, loc_1D0C2|120-179
118882|code|STR.W           R11, [R0]|192-248-0-176
118886|code|MOV             R1, R5|41-70
118888|code|STR             R7, [R0,#4]|71-96
118890|code|LDR             R0, =(sub_1CC5C+1 - 0x1D070)|33-72
118892|code|ADD             R0, PC; sub_1CC5C|120-68
118894|code|BL              newQueue|1-240-231-248
118898|code|STR.W           R0, [R10,#8]|202-248-8-0
118902|code|CBZ             R0, loc_1D09E|144-177
118904|code|LDR             R1, =(off_34840 - 0x1D07E)|30-73
118906|code|ADD             R1, PC; off_34840|121-68
118908|code|BL              setQueueData|1-240-74-249
118912|code|LDR             R2, [R7,#4]|122-104
118914|code|CBZ             R2, loc_1D088|10-177
118916|code|MOV             R0, R10|80-70
118918|code|BLX             R2|144-71
118920|code|MOV             R0, R6|48-70
118922|code|MOV             R1, R10|81-70
118924|code|BL              enqueueItem|1-240-204-249
118928|code|MOV             R5, R0|5-70
118930|code|CMP             R0, #0|0-40
118932|code|BNE             loc_1CFEC|170-209
118934|code|LDR.W           R0, [R10,#8]|218-248-8-0
118938|code|BL              deallocateQueue|1-240-3-249
118942|code|MOV             R0, R10; ptr|80-70
118944|code|BLX             free|249-247-240-234
118948|code|MOV             R0, R4; ptr|32-70
118950|code|BLX             free|249-247-238-234
118954|code|MOVS            R0, #0|0-32
118956|code|B               loc_1D044|202-231
118958|code|LDR             R0, =(sub_1CC74+1 - 0x1D0B6)|18-72
118960|code|MOV             R1, R6|49-70
118962|code|ADD             R0, PC; sub_1CC74|120-68
118964|code|BL              newQueue|1-240-196-248
118968|code|MOV             R6, R0|6-70
118970|code|STR             R0, [R5]|40-96
118972|code|CMP             R0, #0|0-40
118974|code|BNE             loc_1CFD4|137-209
118976|code|B               loc_1D0A4|240-231
118978|code|BL              logMallocError|253-247-189-249
118982|code|B               loc_1D0A4|237-231
118984|code|BL              logMallocError|253-247-186-249
118988|code|MOV             R0, R4|32-70
118990|code|B               loc_1D044|185-231
118992|code|CMP.W           R11, #0|187-241-0-15
118996|code|BEQ             loc_1D0A4|230-208
118998|code|MOV             R0, R5|40-70
119000|code|BL              deleteElement|1-240-114-248
119004|code|B               loc_1D0A4|226-231
119006|code|BLX             __stack_chk_fail|249-247-172-236
119010|data|ALIGN 4|0-191
119012|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1CFAA|246-116-1-0
119016|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
119020|data|DCD loc_1CC40+1 - 0x1CFE2|95-252-255-255
119024|data|DCD sub_1CC5C+1 - 0x1D070|237-251-255-255
119028|data|DCD off_34840 - 0x1D07E|194-119-1-0
119032|data|DCD sub_1CC74+1 - 0x1D0B6|191-251-255-255
119036|code|PUSH            {R4-R6,LR}|112-181
119038|code|MOV             R5, R0|5-70
119040|code|MOVS            R0, #4; size|4-32
119042|code|BLX             malloc|249-247-134-237
119046|code|MOV             R6, R0|6-70
119048|code|CBZ             R0, loc_1D120|80-177
119050|code|LDR             R3, [R5,#8]|171-104
119052|code|MOV             R2, R0|2-70
119054|code|LDM.W           R5, {R0,R1}|149-232-3-0
119058|code|STR             R3, [R6]|51-96
119060|code|LDR             R3, [R5,#0xC]|235-104
119062|code|BL              sub_1CF98|255-247-63-255
119066|code|MOV             R4, R0|4-70
119068|code|CBZ             R0, loc_1D128|32-177
119070|code|POP             {R4-R6,PC}|112-189
119072|code|BL              logMallocError|253-247-142-249
119076|code|MOV             R0, R6|48-70
119078|code|POP             {R4-R6,PC}|112-189
119080|code|MOV             R0, R6; ptr|48-70
119082|code|BLX             free|249-247-172-234
119086|code|MOV             R0, R4|32-70
119088|code|POP             {R4-R6,PC}|112-189
119090|data|ALIGN 4|0-191
119092|code|PUSH.W          {R3-R9,LR}|45-233-248-67
119096|code|MOV             R9, R0|129-70
119098|code|ADD.W           R0, R3, #0x10; size|3-241-16-0
119102|code|MOV             R5, R3|29-70
119104|code|MOV             R8, R1|136-70
119106|code|MOV             R6, R2|22-70
119108|code|LDR             R7, [SP,#0x20+arg_0]|8-159
119110|code|BLX             malloc|249-247-100-237
119114|code|MOV             R4, R0|4-70
119116|code|CBZ             R0, loc_1D17E|184-177
119118|code|LDM.W           R6, {R0,R1}|150-232-3-0
119122|code|MOVS            R3, #0|0-35
119124|code|STR             R5, [R4,#8]|165-96
119126|code|STR             R3, [R4,#0xC]|227-96
119128|code|STM.W           R4, {R0,R1}|132-232-3-0
119132|code|CBZ             R7, loc_1D16A|47-177
119134|code|MOV             R1, R7; src|57-70
119136|code|MOV             R2, R5; n|42-70
119138|code|ADD.W           R0, R4, #0x10; dest|4-241-16-0
119142|code|BLX             memcpy|249-247-72-237
119146|code|MOV             R0, R9|72-70
119148|code|MOV             R1, R8|65-70
119150|code|MOV             R2, R4|34-70
119152|code|LDR             R3, [SP,#0x20+arg_4]|9-155
119154|code|BL              sub_1CF98|255-247-17-255
119158|code|MOV             R5, R0|5-70
119160|code|CBZ             R0, loc_1D188|48-177
119162|code|POP.W           {R3-R9,PC}|189-232-248-131
119166|code|BL              logMallocError|253-247-95-249
119170|code|MOV             R0, R4|32-70
119172|code|POP.W           {R3-R9,PC}|189-232-248-131
119176|code|MOV             R0, R4; ptr|32-70
119178|code|BLX             free|249-247-124-234
119182|code|MOV             R0, R5|40-70
119184|code|POP.W           {R3-R9,PC}|189-232-248-131
119188|code|PUSH            {R4-R7,LR}|240-181
119190|code|MOV             R1, R0|1-70
119192|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1D1A4)|17-76
119194|code|SUB             SP, SP, #0x1C|135-176
119196|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|17-77
119198|code|ADD             R2, SP, #0x30+var_24|3-170
119200|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
119202|code|LDR             R3, [R1,#4]|75-104
119204|code|LDR.W           R12, [R1,#0xC]|209-248-12-192
119208|code|MOVS            R6, #0|0-38
119210|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
119212|code|LDR             R1, [R1,#8]|137-104
119214|code|LDRB.W          R5, [SP,#0x30+var_20]|157-248-16-80
119218|code|LDR             R7, [R4]|39-104
119220|code|STR             R1, [SP,#0x30+var_24]|3-145
119222|code|BFC.W           R5, #0, #1|111-243-0-5
119226|code|LDR             R1, =(off_341E8 - 0x1D1C2); "input transferred"|11-73
119228|code|LDR             R0, [R0]|0-104
119230|code|ADD             R1, PC; off_341E8|121-68
119232|code|STMEA.W         SP, {R6,R12}|141-232-64-16
119236|code|STR             R7, [SP,#0x30+var_1C]|5-151
119238|code|STRB.W          R5, [SP,#0x30+var_20]|141-248-16-80
119242|code|BL              sub_1D134|255-247-179-255
119246|code|LDR             R2, [SP,#0x30+var_1C]|5-154
119248|code|LDR             R3, [R4]|35-104
119250|code|CMP             R2, R3|154-66
119252|code|BNE             loc_1D1DA|1-209
119254|code|ADD             SP, SP, #0x1C|7-176
119256|code|POP             {R4-R7,PC}|240-189
119258|code|BLX             __stack_chk_fail|249-247-46-236
119262|data|ALIGN 0x10|0-191
119264|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D1A4|252-114-1-0
119268|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
119272|data|DCD off_341E8 - 0x1D1C2; "input transferred"|38-112-1-0
119276|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1D1F6)|17-75
119278|code|MOV             R1, R0|1-70
119280|code|PUSH            {R4-R7,LR}|240-181
119282|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
119284|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|16-76
119286|code|SUB             SP, SP, #0x1C|135-176
119288|code|LDR.W           R12, [R1,#8]|209-248-8-192
119292|code|ADD             R2, SP, #0x18|6-170
119294|code|LDR             R7, [R0,#0xC]|199-104
119296|code|MOVS            R6, #0|0-38
119298|code|LDR             R5, [R3,R4]; __stack_chk_guard|29-89
119300|code|LDR             R3, [R1,#4]|75-104
119302|code|LDR             R1, [R1,#0x10]|9-105
119304|code|LDR             R0, [R0]|0-104
119306|code|STR             R6, [SP,#0x10]|4-150
119308|code|STR             R1, [SP,#4]|1-145
119310|code|LDR             R1, =(off_341E8 - 0x1D216); "input transferred"|11-73
119312|code|LDR             R4, [R5]|44-104
119314|code|ADD             R1, PC; off_341E8|121-68
119316|code|STR.W           R7, [R2,#-0xC]!|66-248-12-125
119320|code|ADDS            R1, #0x1C|28-49
119322|code|STR.W           R12, [SP]|205-248-0-192
119326|code|STR             R4, [SP,#0x14]|5-148
119328|code|BL              sub_1D134|255-247-136-255
119332|code|LDR             R2, [SP,#0x14]|5-154
119334|code|LDR             R3, [R5]|43-104
119336|code|CMP             R2, R3|154-66
119338|code|BNE             loc_1D230|1-209
119340|code|ADD             SP, SP, #0x1C|7-176
119342|code|POP             {R4-R7,PC}|240-189
119344|code|BLX             __stack_chk_fail|249-247-2-236
119348|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D1F6|170-114-1-0
119352|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
119356|data|DCD off_341E8 - 0x1D216; "input transferred"|210-111-1-0
119360|code|PUSH            {R4-R6,LR}|112-181
119362|code|MOV             R6, R0|6-70
119364|code|BL              getElementItem|0-240-250-255
119368|code|LDRB            R3, [R0,#0x14]|3-125
119370|code|MOV             R4, R0|4-70
119372|code|LSLS            R0, R3, #0x1F|216-7
119374|code|BPL             loc_1D258|3-213
119376|code|ORR.W           R3, R3, #2|67-240-2-3
119380|code|STRB            R3, [R4,#0x14]|35-117
119382|code|POP             {R4-R6,PC}|112-189
119384|code|LDR             R5, [R4]|37-104
119386|code|LDR             R0, [R5,#4]|104-104
119388|code|LDR             R1, [R5,#8]|169-104
119390|code|BL              sub_1CEE0|255-247-63-254
119394|code|CMP             R6, R0|134-66
119396|code|BNE             loc_1D2AA|33-209
119398|code|LDRB            R3, [R4,#0x14]|35-125
119400|code|LSLS            R1, R3, #0x1D|89-7
119402|code|BMI             loc_1D278|5-212
119404|code|LDR             R3, [R4]|35-104
119406|code|LDR             R3, [R3,#4]|91-104
119408|code|LDR             R3, [R3,#0x14]|91-105
119410|code|CBZ             R3, loc_1D278|11-177
119412|code|MOV             R0, R4|32-70
119414|code|BLX             R3|152-71
119416|code|LDR             R0, [R5,#8]|168-104
119418|code|BL              getQueueSize|1-240-71-248
119422|code|CMP             R0, #1|1-40
119424|code|BEQ             loc_1D2BE|29-208
119426|code|MOV             R0, R6|48-70
119428|code|BL              deleteElement|0-240-156-255
119432|code|LDR             R1, [R5,#8]|169-104
119434|code|LDR             R0, [R5,#4]|104-104
119436|code|BL              sub_1CEE0|255-247-40-254
119440|code|BL              getElementItem|0-240-212-255
119444|code|LDRB            R2, [R0,#0x14]|2-125
119446|code|MOV             R3, R0|3-70
119448|code|LSLS            R2, R2, #0x1D|82-7
119450|code|BMI             locret_1D2D6|28-212
119452|code|LDR             R3, [R3]|27-104
119454|code|LDR             R3, [R3,#4]|91-104
119456|code|LDR             R3, [R3,#0xC]|219-104
119458|code|CBZ             R3, locret_1D2D4|187-177
119460|code|POP.W           {R4-R6,LR}|189-232-112-64
119464|code|BX              R3|24-71
119466|code|LDR             R0, [R5,#8]|168-104
119468|code|BL              getQueueSize|1-240-46-248
119472|code|CMP             R0, #1|1-40
119474|code|BEQ             loc_1D2BE|4-208
119476|code|MOV             R0, R6|48-70
119478|code|POP.W           {R4-R6,LR}|189-232-112-64
119482|code|B.W             deleteElement|0-240-129-191
119486|code|BL              sub_1CDAC|255-247-117-253
119490|code|CBZ             R0, loc_1D2C6|0-177
119492|code|LDR             R0, [R0]|0-104
119494|code|MOV             R1, R5|41-70
119496|code|BL              findElementWithItem|1-240-32-249
119500|code|POP.W           {R4-R6,LR}|189-232-112-64
119504|code|B.W             deleteElement|0-240-118-191
119508|code|POP             {R4-R6,PC}|112-189
119510|code|POP             {R4-R6,PC}|112-189
119512|code|CBZ             R0, locret_1D2F0|80-177
119514|code|PUSH            {R4,LR}|16-181
119516|code|MOV             R4, R0|4-70
119518|code|LDR             R0, [R0]|0-104
119520|code|CBZ             R0, loc_1D2E6|8-177
119522|code|BL              deallocateQueue|0-240-223-255
119526|code|MOV             R0, R4; ptr|32-70
119528|code|POP.W           {R4,LR}|189-232-16-64
119532|code|B.W             j_free|249-247-200-185
119536|code|BX              LR|112-71
119538|data|ALIGN 4|0-191
119540|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1D2FE)|85-75
119542|code|PUSH.W          {R4-R10,LR}|45-233-240-71
119546|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
119548|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|84-76
119550|code|SUB             SP, SP, #0x10|132-176
119552|code|ADD             R7, SP, #0|0-175
119554|code|MOV             R5, R1|13-70
119556|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
119558|code|LDR             R3, [R4]|35-104
119560|code|STR             R3, [R7,#0x10+var_4]|251-96
119562|code|CBZ             R0, loc_1D318|40-177
119564|code|LDR             R6, [R0]|6-104
119566|code|CBZ             R6, loc_1D318|30-177
119568|code|MOV             R0, R6|48-70
119570|code|BL              getQueueSize|0-240-251-255
119574|code|CBNZ            R0, loc_1D332|96-185
119576|code|MOV             R0, R5|40-70
119578|code|BL              approximateDelay|255-247-35-248
119582|code|MOVS            R0, #0|0-32
119584|code|LDR             R2, [R7,#0x10+var_4]|250-104
119586|code|LDR             R3, [R4]|35-104
119588|code|CMP             R2, R3|154-66
119590|code|BNE.W           loc_1D448|64-240-143-128
119594|code|ADDS            R7, #0x10|16-55
119596|code|MOV             SP, R7|189-70
119598|code|POP.W           {R4-R10,PC}|189-232-240-135
119602|code|LSLS            R0, R0, #3|192-0
119604|code|LDR             R1, =(sub_1CEF8+1 - 0x1D346)|71-73
119606|code|ADD.W           R3, R0, #8|0-241-8-3
119610|code|MOV             R8, SP|232-70
119612|code|MOV             R0, R6|48-70
119614|code|SUB.W           SP, SP, R3|173-235-3-13
119618|code|ADD             R1, PC; sub_1CEF8|121-68
119620|code|ADDS            R2, R7, #4|58-29
119622|code|MOVS            R3, #0|0-35
119624|code|STR.W           SP, [R7,#0x10+fds]|199-248-4-208
119628|code|STR             R3, [R7,#0x10+nfds]|187-96
119630|code|BL              processQueue|1-240-229-248
119634|code|MOV             R10, R0|130-70
119636|code|CMP             R0, #0|0-40
119638|code|BEQ             loc_1D3E8|71-208
119640|code|MOV             R0, R10|80-70
119642|code|BL              getElementItem|0-240-111-255
119646|code|MOV             R9, R0|129-70
119648|code|LDR             R0, [R0,#4]|64-104
119650|code|LDR.W           R1, [R9,#8]|217-248-8-16
119654|code|BL              sub_1CEE0|255-247-187-253
119658|code|MOV             R6, R0|6-70
119660|code|BL              getElementItem|0-240-102-255
119664|code|LDRB            R3, [R0,#0x14]|3-125
119666|code|MOV             R5, R0|5-70
119668|code|LSLS            R1, R3, #0x1D|89-7
119670|code|BMI             loc_1D382|4-212
119672|code|LDR             R3, [R0]|3-104
119674|code|LDR             R3, [R3,#4]|91-104
119676|code|LDR             R3, [R3,#0x10]|27-105
119678|code|CBZ             R3, loc_1D382|3-177
119680|code|BLX             R3|152-71
119682|code|LDR.W           R2, [R9,#4]|217-248-4-32
119686|code|MOV             R0, R5|40-70
119688|code|LDRB            R3, [R5,#0x14]|43-125
119690|code|LDR             R2, [R2,#0x18]|146-105
119692|code|ORR.W           R3, R3, #1|67-240-1-3
119696|code|STRB            R3, [R5,#0x14]|43-117
119698|code|BLX             R2|144-71
119700|code|CBNZ            R0, loc_1D39E|24-185
119702|code|LDRB            R3, [R5,#0x14]|43-125
119704|code|ORR.W           R3, R3, #2|67-240-2-3
119708|code|STRB            R3, [R5,#0x14]|43-117
119710|code|LDRB            R3, [R5,#0x14]|43-125
119712|code|BFC.W           R3, #0, #1|111-243-0-3
119716|code|STRB            R3, [R5,#0x14]|43-117
119718|code|AND.W           R3, R3, #2|3-240-2-3
119722|code|AND.W           R2, R3, #0xFF|3-240-255-2
119726|code|CBNZ            R3, loc_1D3E0|187-185
119728|code|STR             R2, [R5,#0x10]|42-97
119730|code|LDR.W           R0, [R9,#4]|217-248-4-0
119734|code|LDR.W           R1, [R9,#8]|217-248-8-16
119738|code|BL              sub_1CEE0|255-247-145-253
119742|code|CBZ             R0, loc_1D3FE|240-177
119744|code|BL              getElementItem|0-240-60-255
119748|code|LDRB            R2, [R0,#0x14]|2-125
119750|code|LSLS            R2, R2, #0x1D|82-7
119752|code|BMI             loc_1D3D4|4-212
119754|code|LDR             R3, [R0]|3-104
119756|code|LDR             R3, [R3,#4]|91-104
119758|code|LDR             R3, [R3,#0xC]|219-104
119760|code|CBZ             R3, loc_1D3D4|3-177
119762|code|BLX             R3|152-71
119764|code|MOV             R0, R10|80-70
119766|code|BL              requeueElement|1-240-85-248
119770|code|MOVS            R0, #1|1-32
119772|code|MOV             SP, R8|197-70
119774|code|B               loc_1D320|159-231
119776|code|MOV             R0, R6|48-70
119778|code|BL              deleteElement|0-240-237-254
119782|code|B               loc_1D3B2|228-231
119784|code|LDR.W           R9, [R7,#0x10+nfds]|215-248-8-144
119788|code|CMP.W           R9, #0|185-241-0-15
119792|code|BNE             loc_1D40A|11-209
119794|code|MOV             R0, R5|40-70
119796|code|BL              approximateDelay|254-247-182-255
119800|code|MOV             R0, R9|72-70
119802|code|MOV             SP, R8|197-70
119804|code|B               loc_1D320|144-231
119806|code|MOV             R0, R10|80-70
119808|code|BL              deleteElement|0-240-222-254
119812|code|MOVS            R0, #1|1-32
119814|code|MOV             SP, R8|197-70
119816|code|B               loc_1D320|138-231
119818|code|MOV             R1, R9; nfds|73-70
119820|code|MOV             R2, R5; timeout|42-70
119822|code|LDR             R0, [R7,#0x10+fds]; fds|120-104
119824|code|BLX             poll|249-247-134-234
119828|code|CMP             R0, #0|0-40
119830|code|BLE             loc_1D430|11-221
119832|code|LDR             R1, =(sub_1CF50+1 - 0x1D422)|15-73
119834|code|MOV             R2, R10|82-70
119836|code|MOV             R0, R6|48-70
119838|code|ADD             R1, PC; sub_1CF50|121-68
119840|code|BL              processQueue|1-240-124-248
119844|code|MOV             R10, R0|130-70
119846|code|CMP             R0, #0|0-40
119848|code|BNE             loc_1D358|150-209
119850|code|MOVS            R0, #0|0-32
119852|code|MOV             SP, R8|197-70
119854|code|B               loc_1D320|119-231
119856|code|ADDS            R0, #1|1-48
119858|code|BNE             loc_1D42A|250-209
119860|code|BLX             __errno_location|249-247-144-236
119864|code|LDR             R3, [R0]|3-104
119866|code|CMP             R3, #4|4-43
119868|code|BEQ             loc_1D42A|245-208
119870|code|LDR             R0, =(aPoll_0 - 0x1D444); "poll"|7-72
119872|code|ADD             R0, PC; "poll"|120-68
119874|code|BL              logSystemError|252-247-243-255
119878|code|B               loc_1D42A|240-231
119880|code|BLX             __stack_chk_fail|249-247-246-234
119884|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D2FE|162-113-1-0
119888|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
119892|data|DCD sub_1CEF8+1 - 0x1D346|179-251-255-255
119896|data|DCD sub_1CF50+1 - 0x1D422|47-251-255-255
119900|data|DCD aPoll_0 - 0x1D444; "poll"|96-85-0-0
119904|code|PUSH            {R4-R6,LR}|112-181
119906|code|SUB             SP, SP, #0x18|134-176
119908|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x1D46C)|12-78
119910|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|13-77
119912|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
119914|code|LDR             R4, =(off_341E8 - 0x1D472); "input transferred"|13-76
119916|code|LDR             R5, [R6,R5]; __stack_chk_guard|117-89
119918|code|ADD             R4, PC; off_341E8|124-68
119920|code|STR             R1, [SP,#0x28+var_24]|1-145
119922|code|ADDS            R4, #0x38 ; '8'|56-52
119924|code|LDR             R1, =(sub_1D0FC+1 - 0x1D47E)|11-73
119926|code|LDR             R6, [R5]|46-104
119928|code|STR             R2, [SP,#0x28+var_1C]|3-146
119930|code|ADD             R1, PC; sub_1D0FC|121-68
119932|code|ADD             R2, SP, #0x28+var_24|1-170
119934|code|STR             R3, [SP,#0x28+var_18]|4-147
119936|code|STR             R6, [SP,#0x28+var_14]|5-150
119938|code|STR             R4, [SP,#0x28+var_20]|2-148
119940|code|BL              asyncMakeHandle|254-247-176-255
119944|code|LDR             R2, [SP,#0x28+var_14]|5-154
119946|code|LDR             R3, [R5]|43-104
119948|code|CMP             R2, R3|154-66
119950|code|BNE             loc_1D494|1-209
119952|code|ADD             SP, SP, #0x18|6-176
119954|code|POP             {R4-R6,PC}|112-189
119956|code|BLX             __stack_chk_fail|249-247-208-234
119960|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D46C|52-112-1-0
119964|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
119968|data|DCD off_341E8 - 0x1D472; "input transferred"|118-109-1-0
119972|data|DCD sub_1D0FC+1 - 0x1D47E|127-252-255-255
119976|code|PUSH            {R4-R6,LR}|112-181
119978|code|SUB             SP, SP, #0x18|134-176
119980|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x1D4B4)|12-78
119982|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|13-77
119984|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
119986|code|LDR             R4, =(off_341E8 - 0x1D4BA); "input transferred"|13-76
119988|code|LDR             R5, [R6,R5]; __stack_chk_guard|117-89
119990|code|ADD             R4, PC; off_341E8|124-68
119992|code|STR             R1, [SP,#0x28+var_24]|1-145
119994|code|ADDS            R4, #0x54 ; 'T'|84-52
119996|code|LDR             R1, =(sub_1D0FC+1 - 0x1D4C6)|11-73
119998|code|LDR             R6, [R5]|46-104
120000|code|STR             R2, [SP,#0x28+var_1C]|3-146
120002|code|ADD             R1, PC; sub_1D0FC|121-68
120004|code|ADD             R2, SP, #0x28+var_24|1-170
120006|code|STR             R3, [SP,#0x28+var_18]|4-147
120008|code|STR             R6, [SP,#0x28+var_14]|5-150
120010|code|STR             R4, [SP,#0x28+var_20]|2-148
120012|code|BL              asyncMakeHandle|254-247-140-255
120016|code|LDR             R2, [SP,#0x28+var_14]|5-154
120018|code|LDR             R3, [R5]|43-104
120020|code|CMP             R2, R3|154-66
120022|code|BNE             loc_1D4DC|1-209
120024|code|ADD             SP, SP, #0x18|6-176
120026|code|POP             {R4-R6,PC}|112-189
120028|code|BLX             __stack_chk_fail|249-247-172-234
120032|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D4B4|236-111-1-0
120036|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
120040|data|DCD off_341E8 - 0x1D4BA; "input transferred"|46-109-1-0
120044|data|DCD sub_1D0FC+1 - 0x1D4C6|55-252-255-255
120048|code|PUSH            {R4-R6,LR}|112-181
120050|code|SUB             SP, SP, #0x18|134-176
120052|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x1D4FC)|12-78
120054|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|13-77
120056|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
120058|code|LDR             R4, =(off_341E8 - 0x1D502); "input transferred"|13-76
120060|code|LDR             R5, [R6,R5]; __stack_chk_guard|117-89
120062|code|ADD             R4, PC; off_341E8|124-68
120064|code|STR             R1, [SP,#0x28+var_24]|1-145
120066|code|ADDS            R4, #0x70 ; 'p'|112-52
120068|code|LDR             R1, =(sub_1D0FC+1 - 0x1D50E)|11-73
120070|code|LDR             R6, [R5]|46-104
120072|code|STR             R2, [SP,#0x28+var_1C]|3-146
120074|code|ADD             R1, PC; sub_1D0FC|121-68
120076|code|ADD             R2, SP, #0x28+var_24|1-170
120078|code|STR             R3, [SP,#0x28+var_18]|4-147
120080|code|STR             R6, [SP,#0x28+var_14]|5-150
120082|code|STR             R4, [SP,#0x28+var_20]|2-148
120084|code|BL              asyncMakeHandle|254-247-104-255
120088|code|LDR             R2, [SP,#0x28+var_14]|5-154
120090|code|LDR             R3, [R5]|43-104
120092|code|CMP             R2, R3|154-66
120094|code|BNE             loc_1D524|1-209
120096|code|ADD             SP, SP, #0x18|6-176
120098|code|POP             {R4-R6,PC}|112-189
120100|code|BLX             __stack_chk_fail|249-247-136-234
120104|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D4FC|164-111-1-0
120108|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
120112|data|DCD off_341E8 - 0x1D502; "input transferred"|230-108-1-0
120116|data|DCD sub_1D0FC+1 - 0x1D50E|239-251-255-255
120120|code|PUSH            {R4-R6,LR}|112-181
120122|code|SUB             SP, SP, #0x18|134-176
120124|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x1D544)|11-78
120126|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|12-76
120128|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
120130|code|LDR             R5, [SP,#0x28+arg_0]|10-157
120132|code|LDR             R4, [R6,R4]; __stack_chk_guard|52-89
120134|code|STR             R1, [SP,#0x28+var_24]|1-145
120136|code|LDR             R1, =(sub_1D194+1 - 0x1D552)|10-73
120138|code|LDR             R6, [R4]|38-104
120140|code|STR             R2, [SP,#0x28+var_20]|2-146
120142|code|ADD             R1, PC; sub_1D194|121-68
120144|code|ADD             R2, SP, #0x28+var_24|1-170
120146|code|STR             R3, [SP,#0x28+var_1C]|3-147
120148|code|STR             R6, [SP,#0x28+var_14]|5-150
120150|code|STR             R5, [SP,#0x28+var_18]|4-149
120152|code|BL              asyncMakeHandle|254-247-70-255
120156|code|LDR             R2, [SP,#0x28+var_14]|5-154
120158|code|LDR             R3, [R4]|35-104
120160|code|CMP             R2, R3|154-66
120162|code|BNE             loc_1D568|1-209
120164|code|ADD             SP, SP, #0x18|6-176
120166|code|POP             {R4-R6,PC}|112-189
120168|code|BLX             __stack_chk_fail|249-247-102-234
120172|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D544|92-111-1-0
120176|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
120180|data|DCD sub_1D194+1 - 0x1D552|67-252-255-255
120184|code|PUSH            {R4-R7,LR}|240-181
120186|code|SUB             SP, SP, #0x1C|135-176
120188|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0x1D584)|12-79
120190|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|13-76
120192|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
120194|code|LDR             R6, [SP,#0x30+arg_0]|12-158
120196|code|LDR             R5, [SP,#0x30+arg_4]|13-157
120198|code|LDR             R4, [R7,R4]; __stack_chk_guard|60-89
120200|code|STR             R1, [SP,#0x30+var_30]|0-145
120202|code|LDR             R1, =(loc_1D1EC+1 - 0x1D594)|11-73
120204|code|LDR             R7, [R4]|39-104
120206|code|STR             R2, [SP,#0x30+var_28]|2-146
120208|code|ADD             R1, PC; loc_1D1EC|121-68
120210|code|MOV             R2, SP|106-70
120212|code|STR             R3, [SP,#0x30+var_2C]|1-147
120214|code|STR             R7, [SP,#0x30+var_1C]|5-151
120216|code|STR             R6, [SP,#0x30+var_24]|3-150
120218|code|STR             R5, [SP,#0x30+var_20]|4-149
120220|code|BL              asyncMakeHandle|254-247-36-255
120224|code|LDR             R2, [SP,#0x30+var_1C]|5-154
120226|code|LDR             R3, [R4]|35-104
120228|code|CMP             R2, R3|154-66
120230|code|BNE             loc_1D5AC|1-209
120232|code|ADD             SP, SP, #0x1C|7-176
120234|code|POP             {R4-R7,PC}|240-189
120236|code|BLX             __stack_chk_fail|249-247-68-234
120240|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D584|28-111-1-0
120244|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
120248|data|DCD loc_1D1EC+1 - 0x1D594|89-252-255-255
120252|code|B.W             asyncMonitorFileInput|255-247-80-191
120256|code|B.W             asyncMonitorFileOutput|255-247-114-191
120260|code|B.W             asyncMonitorFileAlert|255-247-148-191
120264|code|B.W             asyncReadFile|255-247-182-191
120268|code|PUSH            {R4}|16-180
120270|code|POP.W           {R4}|93-248-4-75
120274|code|B.W             asyncWriteFile|255-247-209-191
120278|data|ALIGN 4|0-191
120280|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1D5E2)|20-75
120282|code|MOVS            R2, #4; nbytes|4-34
120284|code|PUSH            {R4-R6,LR}|112-181
120286|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
120288|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|19-76
120290|code|SUB             SP, SP, #0x10|132-176
120292|code|LDR             R5, [R0]|5-104
120294|code|MOV             R1, SP; buf|105-70
120296|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
120298|code|LDR             R0, [R5,#0xC]; fd|232-104
120300|code|LDR             R3, [R4]|35-104
120302|code|STR             R3, [SP,#0x20+var_14]|3-147
120304|code|BL              readFileDescriptor|253-247-66-254
120308|code|CMP             R0, #4|4-40
120310|code|IT NE|24-191
120312|code|MOVNE           R0, #0|0-32
120314|code|BEQ             loc_1D608|5-208
120316|code|LDR             R2, [SP,#0x20+var_14]|3-154
120318|code|LDR             R3, [R4]|35-104
120320|code|CMP             R2, R3|154-66
120322|code|BNE             loc_1D628|17-209
120324|code|ADD             SP, SP, #0x10|4-176
120326|code|POP             {R4-R6,PC}|112-189
120328|code|LDR             R6, [R5]|46-104
120330|code|MOVS            R0, #0x89|137-32
120332|code|LDR             R5, [R5,#4]|109-104
120334|code|LDR             R3, [SP,#0x20+var_20]|0-155
120336|code|LDR             R2, =(aEventStarting - 0x1D61A); "event starting"|8-74
120338|code|MOV             R1, R6|49-70
120340|code|STR             R5, [SP,#0x20+var_1C]|1-149
120342|code|ADD             R2, PC; "event starting"|122-68
120344|code|STR             R3, [SP,#0x20+var_18]|2-147
120346|code|BL              logSymbol|252-247-205-254
120350|code|CBZ             R6, loc_1D624|14-177
120352|code|ADD             R0, SP, #0x20+var_1C|1-168
120354|code|BLX             R6|176-71
120356|code|MOVS            R0, #1|1-32
120358|code|B               loc_1D5FC|233-231
120360|code|BLX             __stack_chk_fail|249-247-6-234
120364|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D5E2|190-110-1-0
120368|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
120372|data|DCD aEventStarting - 0x1D61A; "event starting"|246-83-0-0
120376|code|PUSH            {LR}|0-181
120378|code|SUB             SP, SP, #0xC|131-176
120380|code|ADD             R3, SP, #0x10+var_8|2-171
120382|code|LDR             R0, [R0,#8]; fd|128-104
120384|code|MOVS            R2, #4; n|4-34
120386|code|STR.W           R1, [R3,#-4]!|67-248-4-29
120390|code|MOV             R1, R3; buf|25-70
120392|code|BL              writeFileDescriptor|253-247-24-254
120396|code|CMP             R0, #4|4-40
120398|code|IT EQ|8-191
120400|code|MOVEQ           R0, #1|1-32
120402|code|BEQ             loc_1D664|7-208
120404|code|ADDS            R0, #1|1-48
120406|code|BEQ             loc_1D66A|8-208
120408|code|LDR             R1, =(aShortWrite - 0x1D660); "short write"|8-73
120410|code|MOVS            R0, #3|3-32
120412|code|ADD             R1, PC; "short write"|121-68
120414|code|BL              logMessage|252-247-99-254
120418|code|MOVS            R0, #0|0-32
120420|code|ADD             SP, SP, #0xC|3-176
120422|code|POP.W           {PC}|93-248-4-251
120426|code|LDR             R0, =(aWrite - 0x1D670); "write"|5-72
120428|code|ADD             R0, PC; "write"|120-68
120430|code|BL              logSystemError|252-247-221-254
120434|code|MOVS            R0, #0|0-32
120436|code|ADD             SP, SP, #0xC|3-176
120438|code|POP.W           {PC}|93-248-4-251
120442|data|ALIGN 4|0-191
120444|data|DCD aShortWrite - 0x1D660; "short write"|192-83-0-0
120448|data|DCD aWrite - 0x1D670; "write"|128-80-0-0
120452|code|PUSH            {R3-R7,LR}|248-181
120454|code|MOV             R7, R0|7-70
120456|code|MOVS            R0, #0x18; size|24-32
120458|code|MOV             R6, R1|14-70
120460|code|BLX             malloc|249-247-192-234
120464|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x1D696)|30-77
120466|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
120468|code|MOV             R4, R0|4-70
120470|code|CMP             R0, #0|0-40
120472|code|BEQ             loc_1D702|51-208
120474|code|ADD.W           R3, R0, #8|0-241-8-3
120478|code|MOVS            R2, #0|0-34
120480|code|ADD.W           R1, R4, #0xC|4-241-12-1
120484|code|MOV             R0, R3|24-70
120486|code|STR.W           R2, [R3],#4|67-248-4-43
120490|code|STR.W           R2, [R3],#4|67-248-4-43
120494|code|STR.W           R2, [R3],#4|67-248-4-43
120498|code|STR             R2, [R3]|26-96
120500|code|STR             R7, [R4]|39-96
120502|code|STR             R6, [R4,#4]|102-96
120504|code|BL              createAnonymousPipe|253-247-232-253
120508|code|CBZ             R0, loc_1D6F8|224-177
120510|code|LDR             R1, [R4,#0xC]|225-104
120512|code|ADDS            R3, R1, #1|75-28
120514|code|STR             R1, [R4,#0x10]|33-97
120516|code|BEQ             loc_1D6EC|18-208
120518|code|LDR             R2, =(asyncMonitorEventPipe_ptr - 0x344A0)|18-74
120520|code|ADD.W           R0, R4, #0x14|4-241-20-0
120524|code|MOV             R3, R4|35-70
120526|code|LDR             R2, [R5,R2]; asyncMonitorEventPipe|170-88
120528|code|BL              asyncMonitorFileInput|255-247-198-254
120532|code|CBZ             R0, loc_1D6E6|56-177
120534|code|LDR             R2, =(aEventAdded - 0x1D6E0); "event added"|15-74
120536|code|MOVS            R0, #0x89|137-32
120538|code|LDR             R1, [R4]|33-104
120540|code|ADD             R2, PC; "event added"|122-68
120542|code|BL              logSymbol|252-247-107-254
120546|code|MOV             R0, R4|32-70
120548|code|POP             {R3-R7,PC}|248-189
120550|code|LDR             R0, [R4,#0x10]; fd|32-105
120552|code|BLX             close|249-247-232-232
120556|code|LDR             R0, [R4,#8]; fd|160-104
120558|code|BLX             close|249-247-230-232
120562|code|LDR             R0, [R4,#0xC]; fd|224-104
120564|code|BLX             close|249-247-226-232
120568|code|MOV             R0, R4; ptr|32-70
120570|code|BLX             free|248-247-196-239
120574|code|MOVS            R0, #0|0-32
120576|code|POP             {R3-R7,PC}|248-189
120578|code|BL              logMallocError|252-247-157-254
120582|code|MOV             R0, R4|32-70
120584|code|POP             {R3-R7,PC}|248-189
120586|data|ALIGN 4|0-191
120588|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D696|10-110-1-0
120592|data|DCD asyncMonitorEventPipe_ptr - 0x344A0|32-3-0-0
120596|data|DCD aEventAdded - 0x1D6E0; "event added"|76-83-0-0
120600|code|PUSH            {R4,LR}|16-181
120602|code|MOV             R4, R0|4-70
120604|code|LDR             R0, [R0,#0x14]|64-105
120606|code|BL              asyncCancelRequest|254-247-223-254
120610|code|LDR             R0, [R4,#8]; fd|160-104
120612|code|BLX             close|249-247-202-232
120616|code|LDR             R0, [R4,#0xC]; fd|224-104
120618|code|BLX             close|249-247-200-232
120622|code|LDR             R2, =(aEventRemoved - 0x1D738); "event removed"|5-74
120624|code|LDR             R1, [R4]|33-104
120626|code|MOVS            R0, #0x89|137-32
120628|code|ADD             R2, PC; "event removed"|122-68
120630|code|BL              logSymbol|252-247-63-254
120634|code|MOV             R0, R4; ptr|32-70
120636|code|POP.W           {R4,LR}|189-232-16-64
120640|code|B.W             j_free|248-247-158-191
120644|data|DCD aEventRemoved - 0x1D738; "event removed"|0-83-0-0
120648|code|LDR             R0, [R0]|0-104
120650|code|LDR             R3, [R1]|11-104
120652|code|SUBS            R0, R0, R3|192-26
120654|code|CLZ.W           R0, R0|176-250-128-240
120658|code|LSRS            R0, R0, #5|64-9
120660|code|BX              LR|112-71
120662|data|ALIGN 4|0-191
120664|code|B.W             j_free|248-247-146-191
120668|code|PUSH            {R3-R5,LR}|56-181
120670|code|MOV             R4, R1|12-70
120672|code|MOV             R5, R0|5-70
120674|code|BLX             sigemptyset|249-247-40-235
120678|code|ADDS            R0, #1|1-48
120680|code|BEQ             loc_1D77A|7-208
120682|code|MOV             R0, R5; set|40-70
120684|code|MOV             R1, R4; signo|33-70
120686|code|BLX             sigaddset|249-247-160-232
120690|code|ADDS            R0, #1|1-48
120692|code|BEQ             loc_1D786|7-208
120694|code|MOVS            R0, #1|1-32
120696|code|POP             {R3-R5,PC}|56-189
120698|code|LDR             R0, =(aSigemptyset_0 - 0x1D780); "sigemptyset"|6-72
120700|code|ADD             R0, PC; "sigemptyset"|120-68
120702|code|BL              logSystemError|252-247-85-254
120706|code|MOVS            R0, #0|0-32
120708|code|POP             {R3-R5,PC}|56-189
120710|code|LDR             R0, =(aSigaddset_0 - 0x1D78C); "sigaddset"|4-72
120712|code|ADD             R0, PC; "sigaddset"|120-68
120714|code|BL              logSystemError|252-247-79-254
120718|code|MOVS            R0, #0|0-32
120720|code|POP             {R3-R5,PC}|56-189
120722|data|ALIGN 4|0-191
120724|data|DCD aSigemptyset_0 - 0x1D780; "sigemptyset"|212-82-0-0
120728|data|DCD aSigaddset_0 - 0x1D78C; "sigaddset"|188-82-0-0
120732|code|PUSH            {R3,LR}|8-181
120734|code|BLX             pthread_sigmask|249-247-106-232
120738|code|CBNZ            R0, loc_1D7A8|8-185
120740|code|MOVS            R0, #1|1-32
120742|code|POP             {R3,PC}|8-189
120744|code|LDR             R1, =(aPthreadSetmask - 0x1D7AE); "pthread_setmask"|2-73
120746|code|ADD             R1, PC; "pthread_setmask"|121-68
120748|code|BL              logActionError|252-247-44-254
120752|code|MOVS            R0, #0|0-32
120754|code|POP             {R3,PC}|8-189
120756|data|DCD aPthreadSetmask - 0x1D7AE; "pthread_setmask"|178-82-0-0
120760|code|PUSH            {R3-R7,LR}|248-181
120762|code|BL              asyncGetThreadSpecificData|254-247-251-254
120766|code|MOV             R5, R0|5-70
120768|code|CBZ             R0, loc_1D82C|160-179
120770|code|LDR             R4, [R0,#0x10]|4-105
120772|code|CBZ             R4, loc_1D7CA|12-177
120774|code|MOV             R0, R4|32-70
120776|code|POP             {R3-R7,PC}|248-189
120778|code|MOV.W           R0, #0x18C; size|79-244-198-112
120782|code|BLX             malloc|249-247-32-234
120786|code|MOV             R6, R0|6-70
120788|code|CBZ             R0, loc_1D830|96-179
120790|code|MOV             R1, R4; c|33-70
120792|code|MOV.W           R2, #0x18C; n|79-244-198-114
120796|code|BLX             memset|249-247-42-232
120800|code|MOV             R0, R6|48-70
120802|code|STR.W           R4, [R0],#4; set|64-248-4-75
120806|code|ADD.W           R7, R6, #0x104|6-245-130-119
120810|code|BLX             sigemptyset|249-247-228-234
120814|code|ADD.W           R0, R6, #0x84; set|6-241-132-0
120818|code|BLX             sigemptyset|249-247-224-234
120822|code|MOV             R0, R7; set|56-70
120824|code|BLX             sigemptyset|249-247-220-234
120828|code|BLX             __libc_current_sigrtmin|249-247-192-232
120832|code|STR.W           R0, [R6,#0x184]|198-248-132-1
120836|code|BLX             __libc_current_sigrtmax|249-247-208-234
120840|code|LDR.W           R4, [R6,#0x184]|214-248-132-65
120844|code|CMP             R0, R4|160-66
120846|code|STR.W           R0, [R6,#0x188]|198-248-136-1
120850|code|BLT             loc_1D826|8-219
120852|code|MOV             R1, R4; signo|33-70
120854|code|MOV             R0, R7; set|56-70
120856|code|BLX             sigaddset|249-247-74-232
120860|code|LDR.W           R3, [R6,#0x188]|214-248-136-49
120864|code|ADDS            R4, #1|1-52
120866|code|CMP             R3, R4|163-66
120868|code|BGE             loc_1D814|246-218
120870|code|STR             R6, [R5,#0x10]|46-97
120872|code|MOV             R4, R6|52-70
120874|code|B               loc_1D7C6|204-231
120876|code|MOV             R4, R0|4-70
120878|code|B               loc_1D7C6|202-231
120880|code|BL              logMallocError|252-247-6-254
120884|code|B               loc_1D7C6|199-231
120886|data|ALIGN 4|0-191
120888|code|PUSH            {R4,LR}|16-181
120890|code|MOV             R4, R0|4-70
120892|code|LDR             R0, [R0,#8]|128-104
120894|code|BL              deallocateQueue|0-240-49-253
120898|code|LDR             R0, [R4,#4]|96-104
120900|code|BL              asyncDiscardEvent|255-247-104-255
120904|code|MOV             R0, R4; ptr|32-70
120906|code|POP.W           {R4,LR}|189-232-16-64
120910|code|B.W             j_free|248-247-23-191
120914|data|ALIGN 4|0-191
120916|code|PUSH            {R4,LR}|16-181
120918|code|MOV             R4, R0|4-70
120920|code|LDM             R0, {R0,R1}|3-200
120922|code|BL              enqueueItem|0-240-229-253
120926|code|STR             R0, [R4,#8]|160-96
120928|code|POP             {R4,PC}|16-189
120930|data|ALIGN 4|0-191
120932|code|PUSH            {R4,LR}|16-181
120934|code|MOV             R4, R0|4-70
120936|code|BL              sub_1D7B8|255-247-166-255
120940|code|CBZ             R0, loc_1D870|0-177
120942|code|LDR             R0, [R0]|0-104
120944|code|LDR             R1, [R4]|33-104
120946|code|BL              findElementWithItem|0-240-75-254
120950|code|POP.W           {R4,LR}|189-232-16-64
120954|code|B.W             deleteElement|0-240-161-188
120958|data|ALIGN 0x10|0-191
120960|code|CBZ             R0, locret_1D898|80-177
120962|code|PUSH            {R4,LR}|16-181
120964|code|MOV             R4, R0|4-70
120966|code|LDR             R0, [R0]|0-104
120968|code|CBZ             R0, loc_1D88E|8-177
120970|code|BL              deallocateQueue|0-240-11-253
120974|code|MOV             R0, R4; ptr|32-70
120976|code|POP.W           {R4,LR}|189-232-16-64
120980|code|B.W             j_free|248-247-244-190
120984|code|BX              LR|112-71
120986|data|ALIGN 4|0-191
120988|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1D8A6)|24-75
120990|code|PUSH.W          {R4-R8,LR}|45-233-240-65
120994|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
120996|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|23-77
120998|code|SUB             SP, SP, #0x120|200-176
121000|code|ADD             R4, SP, #0x138+s|1-172
121002|code|MOV             R8, R0|128-70
121004|code|MOV             R7, R1|15-70
121006|code|MOV             R6, R2|22-70
121008|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
121010|code|MOVS            R1, #0; c|0-33
121012|code|MOVS            R2, #0x8C; n|140-34
121014|code|MOV             R0, R4; s|32-70
121016|code|LDR             R3, [R5]|43-104
121018|code|STR             R3, [SP,#0x138+var_1C]|71-147
121020|code|BLX             memset|248-247-186-239
121024|code|ADD             R0, SP, #0x138+set; set|2-168
121026|code|BLX             sigemptyset|249-247-120-234
121030|code|MOV             R0, R8; sig|64-70
121032|code|MOV             R1, R4; act|33-70
121034|code|ADD             R2, SP, #0x138+var_A8; oact|36-170
121036|code|STR             R7, [R4]|39-96
121038|code|BLX             sigaction|249-247-58-233
121042|code|ADDS            R0, #1|1-48
121044|code|BEQ             loc_1D8EE|11-208
121046|code|MOVS            R0, #1|1-32
121048|code|CBZ             R6, loc_1D8E0|22-177
121050|code|LDR             R3, [SP,#0x138+var_A8]|36-155
121052|code|MOVS            R0, #1|1-32
121054|code|STR             R3, [R6]|51-96
121056|code|LDR             R2, [SP,#0x138+var_1C]|71-154
121058|code|LDR             R3, [R5]|43-104
121060|code|CMP             R2, R3|154-66
121062|code|BNE             loc_1D8FA|8-209
121064|code|ADD             SP, SP, #0x120|72-176
121066|code|POP.W           {R4-R8,PC}|189-232-240-129
121070|code|LDR             R0, =(aSigaction_0 - 0x1D8F4); "sigaction"|6-72
121072|code|ADD             R0, PC; "sigaction"|120-68
121074|code|BL              logSystemError|252-247-155-253
121078|code|MOVS            R0, #0|0-32
121080|code|B               loc_1D8E0|242-231
121082|code|BLX             __stack_chk_fail|249-247-158-232
121086|data|ALIGN 0x10|0-191
121088|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D8A6|250-107-1-0
121092|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
121096|data|DCD aSigaction_0 - 0x1D8F4; "sigaction"|124-81-0-0
121100|code|MOV             R2, R1|10-70
121102|code|MOVS            R1, #1|1-33
121104|code|B.W             asyncHandleSignal|255-247-196-191
121108|code|MOV             R2, R1|10-70
121110|code|MOVS            R1, #0|0-33
121112|code|B.W             asyncHandleSignal|255-247-192-191
121116|code|BX              LR|112-71
121118|data|ALIGN 0x10|0-191
121120|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1D928)|16-75
121122|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|17-74
121124|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
121126|code|PUSH            {R4-R6,LR}|112-181
121128|code|MOV             R4, R0|4-70
121130|code|MOV             R6, R1|14-70
121132|code|MOV             R1, R4|33-70
121134|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
121136|code|SUB             SP, SP, #0x88|162-176
121138|code|ADD             R5, SP, #0x98+var_94|1-173
121140|code|LDR             R3, [R4]|35-104
121142|code|MOV             R0, R5|40-70
121144|code|STR             R3, [SP,#0x98+var_14]|33-147
121146|code|BL              sub_1D75C|255-247-15-255
121150|code|CBZ             R0, loc_1D954|72-177
121152|code|CLZ.W           R0, R6|182-250-134-240
121156|code|MOV             R1, R5|41-70
121158|code|MOVS            R2, #0|0-34
121160|code|LSRS            R0, R0, #5|64-9
121162|code|BL              sub_1D79C|255-247-39-255
121166|code|ADDS            R0, #0|0-48
121168|code|IT NE|24-191
121170|code|MOVNE           R0, #1|1-32
121172|code|LDR             R2, [SP,#0x98+var_14]|33-154
121174|code|LDR             R3, [R4]|35-104
121176|code|CMP             R2, R3|154-66
121178|code|BNE             loc_1D960|1-209
121180|code|ADD             SP, SP, #0x88|34-176
121182|code|POP             {R4-R6,PC}|112-189
121184|code|BLX             __stack_chk_fail|249-247-106-232
121188|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D928|120-107-1-0
121192|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
121196|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1D976)|17-75
121198|code|MOVS            R1, #0|0-33
121200|code|PUSH            {R4-R6,LR}|112-181
121202|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
121204|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|16-76
121206|code|SUB             SP, SP, #0x88|162-176
121208|code|ADD             R5, SP, #0x98+var_94|1-173
121210|code|MOV             R6, R0|6-70
121212|code|MOVS            R0, #2|2-32
121214|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
121216|code|MOV             R2, R5|42-70
121218|code|LDR             R3, [R4]|35-104
121220|code|STR             R3, [SP,#0x98+var_14]|33-147
121222|code|BL              sub_1D79C|255-247-9-255
121226|code|CBNZ            R0, loc_1D998|40-185
121228|code|LDR             R2, [SP,#0x98+var_14]|33-154
121230|code|LDR             R3, [R4]|35-104
121232|code|CMP             R2, R3|154-66
121234|code|BNE             loc_1D9B0|13-209
121236|code|ADD             SP, SP, #0x88|34-176
121238|code|POP             {R4-R6,PC}|112-189
121240|code|MOV             R0, R5; set|40-70
121242|code|MOV             R1, R6; signo|49-70
121244|code|BLX             sigismember|249-247-142-233
121248|code|ADDS            R3, R0, #1|67-28
121250|code|BNE             loc_1D98C|243-209
121252|code|LDR             R0, =(aSigismember_0 - 0x1D9AA); "sigismember"|5-72
121254|code|ADD             R0, PC; "sigismember"|120-68
121256|code|BL              logSystemError|252-247-64-253
121260|code|MOVS            R0, #0|0-32
121262|code|B               loc_1D98C|237-231
121264|code|BLX             __stack_chk_fail|249-247-66-232
121268|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D976|42-107-1-0
121272|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
121276|data|DCD aSigismember_0 - 0x1D9AA; "sigismember"|210-80-0-0
121280|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1D9C8)|16-75
121282|code|PUSH            {R4-R7,LR}|240-181
121284|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
121286|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|16-76
121288|code|SUB             SP, SP, #0x8C|163-176
121290|code|ADD             R5, SP, #0xA0+var_9C|1-173
121292|code|MOV             R6, R1|14-70
121294|code|MOV             R7, R2|23-70
121296|code|MOV             R1, R0|1-70
121298|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
121300|code|MOV             R2, R5|42-70
121302|code|MOVS            R0, #0|0-32
121304|code|LDR             R3, [R4]|35-104
121306|code|STR             R3, [SP,#0xA0+var_1C]|33-147
121308|code|BL              sub_1D79C|255-247-222-254
121312|code|CBZ             R0, loc_1D9F2|56-177
121314|code|MOV             R0, R7|56-70
121316|code|BLX             R6|176-71
121318|code|MOV             R1, R5|41-70
121320|code|MOVS            R0, #2|2-32
121322|code|MOVS            R2, #0|0-34
121324|code|BL              sub_1D79C|255-247-214-254
121328|code|MOVS            R0, #1|1-32
121330|code|LDR             R2, [SP,#0xA0+var_1C]|33-154
121332|code|LDR             R3, [R4]|35-104
121334|code|CMP             R2, R3|154-66
121336|code|BNE             loc_1D9FE|1-209
121338|code|ADD             SP, SP, #0x8C|35-176
121340|code|POP             {R4-R7,PC}|240-189
121342|code|BLX             __stack_chk_fail|249-247-28-232
121346|data|ALIGN 4|0-191
121348|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D9C8|216-106-1-0
121352|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
121356|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1DA14)|16-75
121358|code|PUSH            {R4-R7,LR}|240-181
121360|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
121362|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|16-76
121364|code|SUB             SP, SP, #0x8C|163-176
121366|code|ADD             R7, SP, #4|1-175
121368|code|MOV             R5, R0|5-70
121370|code|MOV             R6, R1|14-70
121372|code|MOV             R1, R5|41-70
121374|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
121376|code|MOV             R0, R7|56-70
121378|code|MOV             R5, R2|21-70
121380|code|LDR             R3, [R4]|35-104
121382|code|STR             R3, [SP,#0x8C+var_8]|33-147
121384|code|BL              sub_1D75C|255-247-152-254
121388|code|CBZ             R0, loc_1DA3E|56-177
121390|code|MOV             R0, R7|56-70
121392|code|MOV             R1, R6|49-70
121394|code|MOV             R2, R5|42-70
121396|code|BL              asyncCallWithSignalsBlocked|255-247-196-255
121400|code|ADDS            R0, #0|0-48
121402|code|IT NE|24-191
121404|code|MOVNE           R0, #1|1-32
121406|code|LDR             R2, [SP,#0x8C+var_8]|33-154
121408|code|LDR             R3, [R4]|35-104
121410|code|CMP             R2, R3|154-66
121412|code|BNE             loc_1DA4A|1-209
121414|code|ADD             SP, SP, #0x8C|35-176
121416|code|POP             {R4-R7,PC}|240-189
121418|code|BLX             __stack_chk_fail|248-247-246-239
121422|data|ALIGN 0x10|0-191
121424|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1DA14|140-106-1-0
121428|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
121432|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1DA60)|18-75
121434|code|PUSH            {R4-R7,LR}|240-181
121436|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
121438|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|18-76
121440|code|SUB             SP, SP, #0x8C|163-176
121442|code|ADD             R5, SP, #0xA0+set|1-173
121444|code|MOV             R6, R0|6-70
121446|code|MOV             R7, R1|15-70
121448|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
121450|code|MOV             R0, R5; set|40-70
121452|code|LDR             R3, [R4]|35-104
121454|code|STR             R3, [SP,#0xA0+var_1C]|33-147
121456|code|BLX             sigfillset|248-247-168-238
121460|code|ADDS            R0, #1|1-48
121462|code|BEQ             loc_1DA94|13-208
121464|code|MOV             R0, R5|40-70
121466|code|MOV             R1, R6|49-70
121468|code|MOV             R2, R7|58-70
121470|code|BL              asyncCallWithSignalsBlocked|255-247-159-255
121474|code|ADDS            R0, #0|0-48
121476|code|IT NE|24-191
121478|code|MOVNE           R0, #1|1-32
121480|code|LDR             R2, [SP,#0xA0+var_1C]|33-154
121482|code|LDR             R3, [R4]|35-104
121484|code|CMP             R2, R3|154-66
121486|code|BNE             loc_1DAA0|7-209
121488|code|ADD             SP, SP, #0x8C|35-176
121490|code|POP             {R4-R7,PC}|240-189
121492|code|LDR             R0, =(aSigfillset_0 - 0x1DA9A); "sigfillset"|5-72
121494|code|ADD             R0, PC; "sigfillset"|120-68
121496|code|BL              logSystemError|252-247-200-252
121500|code|MOVS            R0, #0|0-32
121502|code|B               loc_1DA88|243-231
121504|code|BLX             __stack_chk_fail|248-247-202-239
121508|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1DA60|64-106-1-0
121512|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
121516|data|DCD aSigfillset_0 - 0x1DA9A; "sigfillset"|238-79-0-0
121520|code|PUSH            {R4-R7,LR}|240-181
121522|code|SUB             SP, SP, #0xC|131-176
121524|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x1DABE)|25-77
121526|code|MOV             R7, R0|7-70
121528|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|25-75
121530|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
121532|code|LDR             R6, [R5,R3]; __stack_chk_guard|238-88
121534|code|LDR             R3, [R6]|51-104
121536|code|STR             R3, [SP,#0x20+var_1C]|1-147
121538|code|BL              getElementItem|0-240-187-251
121542|code|LDR             R2, =(aSignalDRemoved - 0x1DACC); "signal %d removed"|23-74
121544|code|ADD             R2, PC; "signal %d removed"|122-68
121546|code|MOV             R3, R0|3-70
121548|code|MOVS            R0, #0x89|137-32
121550|code|LDR             R4, [R3]|28-104
121552|code|LDR             R1, [R3,#4]|89-104
121554|code|LDR             R3, [R4]|35-104
121556|code|BL              logSymbol|252-247-112-252
121560|code|MOV             R0, R7|56-70
121562|code|BL              deleteElement|0-240-113-251
121566|code|LDR             R0, [R4,#8]|160-104
121568|code|BL              getQueueSize|0-240-20-252
121572|code|CBNZ            R0, loc_1DB0A|136-185
121574|code|MOV             R2, R0|2-70
121576|code|LDR             R1, [R4,#0xC]|225-104
121578|code|LDR             R0, [R4]|32-104
121580|code|BL              asyncHandleSignal|255-247-214-254
121584|code|LDRB            R1, [R4,#0x10]|33-124
121586|code|LDR             R0, [R4]|32-104
121588|code|AND.W           R1, R1, #1|1-240-1-1
121592|code|BL              asyncSetSignalBlocked|255-247-18-255
121596|code|LDR             R3, =(asyncDeleteSignalEntry_ptr - 0x344A0)|10-75
121598|code|ADD             R1, SP, #0x20+var_18|2-169
121600|code|STR.W           R4, [R1,#-8]!|65-248-8-77
121604|code|LDR             R0, [R5,R3]; asyncDeleteSignalEntry|232-88
121606|code|BL              asyncCallWithAllSignalsBlocked|255-247-167-255
121610|code|LDR             R2, [SP,#0x20+var_1C]|1-154
121612|code|LDR             R3, [R6]|51-104
121614|code|CMP             R2, R3|154-66
121616|code|BNE             loc_1DB16|1-209
121618|code|ADD             SP, SP, #0xC|3-176
121620|code|POP             {R4-R7,PC}|240-189
121622|code|BLX             __stack_chk_fail|248-247-144-239
121626|data|ALIGN 4|0-191
121628|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1DABE|226-105-1-0
121632|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
121636|data|DCD aSignalDRemoved - 0x1DACC; "signal %d removed"|200-79-0-0
121640|data|DCD asyncDeleteSignalEntry_ptr - 0x344A0|128-3-0-0
121644|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1DB34)|33-74
121646|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|34-75
121648|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
121650|code|PUSH.W          {R4-R8,LR}|45-233-240-65
121654|code|SUB             SP, SP, #0x10|132-176
121656|code|LDR             R5, [R2,R3]; __stack_chk_guard|213-88
121658|code|LDR             R6, [R0]|6-104
121660|code|LDR             R3, [R5]|43-104
121662|code|LDR             R0, [R6,#8]|176-104
121664|code|STR             R3, [SP,#0x28+var_1C]|3-147
121666|code|BL              getQueueHead|0-240-235-251
121670|code|CBZ             R0, loc_1DB86|240-177
121672|code|MOV             R8, R0|128-70
121674|code|BL              getElementItem|0-240-119-251
121678|code|LDR.W           LR, [R6]|214-248-0-224
121682|code|LDR             R2, =(aSignalDStartin - 0x1DB5A); "signal %d starting"|26-74
121684|code|MOV             R3, LR|115-70
121686|code|ADD             R2, PC; "signal %d starting"|122-68
121688|code|STR.W           LR, [SP,#0x28+var_24]|205-248-4-224
121692|code|MOV             R4, R0|4-70
121694|code|MOVS            R0, #0x89|137-32
121696|code|LDR             R6, [R4,#4]|102-104
121698|code|LDR             R7, [R4,#8]|167-104
121700|code|MOV             R1, R6|49-70
121702|code|STR             R7, [SP,#0x28+var_20]|2-151
121704|code|BL              logSymbol|252-247-38-252
121708|code|LDRB            R3, [R4,#0xC]|35-123
121710|code|ADD             R0, SP, #0x28+var_24|1-168
121712|code|ORR.W           R3, R3, #1|67-240-1-3
121716|code|STRB            R3, [R4,#0xC]|35-115
121718|code|BLX             R6|176-71
121720|code|CBZ             R0, loc_1DB94|96-177
121722|code|LDRB            R3, [R4,#0xC]|35-123
121724|code|BFC.W           R3, #0, #1|111-243-0-3
121728|code|STRB            R3, [R4,#0xC]|35-115
121730|code|LSLS            R3, R3, #0x1E|155-7
121732|code|BMI             loc_1DBA8|16-212
121734|code|LDR             R2, [SP,#0x28+var_1C]|3-154
121736|code|LDR             R3, [R5]|43-104
121738|code|CMP             R2, R3|154-66
121740|code|BNE             loc_1DBB0|16-209
121742|code|ADD             SP, SP, #0x10|4-176
121744|code|POP.W           {R4-R8,PC}|189-232-240-129
121748|code|LDRB            R3, [R4,#0xC]|35-123
121750|code|ORR.W           R3, R3, #2|67-240-2-3
121754|code|STRB            R3, [R4,#0xC]|35-115
121756|code|LDRB            R3, [R4,#0xC]|35-123
121758|code|BFC.W           R3, #0, #1|111-243-0-3
121762|code|STRB            R3, [R4,#0xC]|35-115
121764|code|LSLS            R3, R3, #0x1E|155-7
121766|code|BPL             loc_1DB86|238-213
121768|code|MOV             R0, R8|64-70
121770|code|BL              sub_1DAB0|255-247-129-255
121774|code|B               loc_1DB86|234-231
121776|code|BLX             __stack_chk_fail|248-247-66-239
121780|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1DB34|108-105-1-0
121784|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
121788|data|DCD aSignalDStartin - 0x1DB5A; "signal %d starting"|78-79-0-0
121792|code|PUSH            {R4,LR}|16-181
121794|code|MOV             R4, R0|4-70
121796|code|BL              getElementItem|0-240-58-251
121800|code|LDRB            R3, [R0,#0xC]|3-123
121802|code|LSLS            R2, R3, #0x1F|218-7
121804|code|BPL             loc_1DBD6|3-213
121806|code|ORR.W           R3, R3, #2|67-240-2-3
121810|code|STRB            R3, [R0,#0xC]|3-115
121812|code|POP             {R4,PC}|16-189
121814|code|MOV             R0, R4|32-70
121816|code|POP.W           {R4,LR}|189-232-16-64
121820|code|B               sub_1DAB0|104-231
121822|data|ALIGN 0x10|0-191
121824|code|PUSH.W          {R4-R10,LR}|45-233-240-71
121828|code|SUB             SP, SP, #0x10|132-176
121830|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0x1DBF2)|60-79
121832|code|MOV             R8, R0|128-70
121834|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|60-75
121836|code|MOV             R5, R1|13-70
121838|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
121840|code|LDR.W           R9, [R7,R3]; __stack_chk_guard|87-248-3-144
121844|code|LDR.W           R3, [R9]|217-248-0-48
121848|code|STR             R3, [SP,#0x30+var_24]|3-147
121850|code|BL              sub_1D7B8|255-247-221-253
121854|code|MOV             R4, R0|4-70
121856|code|CMP             R0, #0|0-40
121858|code|BEQ             loc_1DCB6|88-208
121860|code|ADDS            R5, #0|0-53
121862|code|LDR             R6, [R0]|6-104
121864|code|IT NE|24-191
121866|code|MOVNE           R5, #1|1-37
121868|code|CMP             R6, #0|0-46
121870|code|ITE NE|20-191
121872|code|MOVNE           R3, #0|0-35
121874|code|ANDEQ.W         R3, R5, #1|5-240-1-3
121878|code|CMP             R3, #0|0-43
121880|code|BNE             loc_1DCBA|79-209
121882|code|CMP             R6, #0|0-46
121884|code|BEQ             loc_1DCB6|75-208
121886|code|ADD.W           R10, SP, #0x30+var_20|13-241-16-10
121890|code|LDR             R1, =(loc_1D748+1 - 0x1DC2E)|47-73
121892|code|MOV             R0, R6|48-70
121894|code|STR.W           R8, [R10,#-0x10]!|74-248-16-141
121898|code|ADD             R1, PC; loc_1D748|121-68
121900|code|MOV             R2, R10|82-70
121902|code|BL              findElement|0-240-171-251
121906|code|MOV             R4, R0|4-70
121908|code|CBZ             R4, loc_1DC46|60-177
121910|code|LDR             R2, [SP,#0x30+var_24]|3-154
121912|code|LDR.W           R3, [R9]|217-248-0-48
121916|code|CMP             R2, R3|154-66
121918|code|BNE             loc_1DCD2|72-209
121920|code|ADD             SP, SP, #0x10|4-176
121922|code|POP.W           {R4-R10,PC}|189-232-240-135
121926|code|CMP             R5, #0|0-45
121928|code|BEQ             loc_1DCB6|53-208
121930|code|MOVS            R0, #0x14; size|20-32
121932|code|BLX             malloc|248-247-224-239
121936|code|MOV             R5, R0|5-70
121938|code|CMP             R0, #0|0-40
121940|code|BEQ             loc_1DCCA|57-208
121942|code|ADD.W           R3, R0, #8|0-241-8-3
121946|code|LDR             R2, =(asyncHandlePendingSignal_ptr - 0x344A0)|34-74
121948|code|STR             R4, [R0,#4]|68-96
121950|code|MOV             R1, R0|1-70
121952|code|STR.W           R4, [R3],#4|67-248-4-75
121956|code|STR.W           R4, [R3],#4|67-248-4-75
121960|code|STR             R4, [R3]|28-96
121962|code|STR.W           R8, [R0]|192-248-0-128
121966|code|LDR             R0, [R7,R2]; asyncHandlePendingSignal|184-88
121968|code|BL              asyncNewEvent|255-247-8-253
121972|code|STR             R0, [R5,#4]|104-96
121974|code|CBZ             R0, loc_1DCB0|216-177
121976|code|LDR             R0, =(loc_1D758+1 - 0x1DC80)|27-72
121978|code|MOV             R1, R4|33-70
121980|code|ADD             R0, PC; loc_1D758|120-68
121982|code|BL              newQueue|0-240-223-250
121986|code|STR             R0, [R5,#8]|168-96
121988|code|CBZ             R0, loc_1DCAA|136-177
121990|code|LDR             R1, =(off_34844 - 0x1DC8C)|25-73
121992|code|ADD             R1, PC; off_34844|121-68
121994|code|BL              setQueueData|0-240-67-251
121998|code|LDR             R3, =(asyncAddSignalEntry_ptr - 0x344A0)|24-75
122000|code|STR             R6, [SP,#0x30+var_30]|0-150
122002|code|MOV             R1, R10|81-70
122004|code|STR             R5, [SP,#0x30+var_2C]|1-149
122006|code|STR             R4, [SP,#0x30+var_28]|2-148
122008|code|LDR             R0, [R7,R3]; asyncAddSignalEntry|248-88
122010|code|BL              asyncCallWithAllSignalsBlocked|255-247-221-254
122014|code|LDR             R0, [SP,#0x30+var_28]|2-152
122016|code|CMP             R0, #0|0-40
122018|code|BNE             loc_1DC36|200-209
122020|code|LDR             R0, [R5,#8]|168-104
122022|code|BL              deallocateQueue|0-240-253-250
122026|code|LDR             R0, [R5,#4]|104-104
122028|code|BL              asyncDiscardEvent|255-247-52-253
122032|code|MOV             R0, R5; ptr|40-70
122034|code|BLX             free|248-247-232-236
122038|code|MOVS            R0, #0|0-32
122040|code|B               loc_1DC36|189-231
122042|code|LDR             R0, =(sub_1D838+1 - 0x1DCC2)|14-72
122044|code|MOVS            R1, #0|0-33
122046|code|ADD             R0, PC; sub_1D838|120-68
122048|code|BL              newQueue|0-240-190-250
122052|code|MOV             R6, R0|6-70
122054|code|STR             R0, [R4]|32-96
122056|code|B               loc_1DC1A|167-231
122058|code|BL              logMallocError|252-247-185-251
122062|code|MOV             R0, R5|40-70
122064|code|B               loc_1DC36|177-231
122066|code|BLX             __stack_chk_fail|248-247-178-238
122070|data|ALIGN 4|0-191
122072|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1DBF2|174-104-1-0
122076|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
122080|data|DCD loc_1D748+1 - 0x1DC2E|27-251-255-255
122084|data|DCD asyncHandlePendingSignal_ptr - 0x344A0|104-3-0-0
122088|data|DCD loc_1D758+1 - 0x1DC80|217-250-255-255
122092|data|DCD off_34844 - 0x1DC8C|184-107-1-0
122096|data|DCD asyncAddSignalEntry_ptr - 0x344A0|0-3-0-0
122100|data|DCD sub_1D838+1 - 0x1DCC2|119-251-255-255
122104|code|PUSH            {R3,LR}|8-181
122106|code|MOVS            R1, #0|0-33
122108|code|BL              sub_1DBE0|255-247-112-255
122112|code|CBZ             R0, locret_1DD12|56-177
122114|code|BL              getElementItem|0-240-155-250
122118|code|MOVS            R1, #0|0-33
122120|code|POP.W           {R3,LR}|189-232-8-64
122124|code|LDR             R0, [R0,#4]|64-104
122126|code|B.W             asyncSignalEvent|255-247-147-188
122130|code|POP             {R3,PC}|8-189
122132|code|PUSH.W          {R3-R11,LR}|45-233-248-79
122136|code|MOVS            R1, #1|1-33
122138|code|MOV             R7, R0|7-70
122140|code|LDR             R0, [R0]|0-104
122142|code|BL              sub_1DBE0|255-247-95-255
122146|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1DD2A)|223-248-208-160
122150|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
122152|code|CMP             R0, #0|0-40
122154|code|BEQ             loc_1DDD4|83-208
122156|code|MOV             R11, R0|131-70
122158|code|BL              getElementItem|0-240-133-250
122162|code|MOV             R5, R0|5-70
122164|code|LDR             R0, [R0,#8]|128-104
122166|code|BL              getQueueSize|0-240-233-250
122170|code|CLZ.W           R8, R0|176-250-128-248
122174|code|MOVS            R0, #0x10; size|16-32
122176|code|BLX             malloc|248-247-102-239
122180|code|MOV.W           R8, R8,LSR#5|79-234-88-24
122184|code|MOV             R4, R0|4-70
122186|code|CMP             R0, #0|0-40
122188|code|BEQ             loc_1DDE6|75-208
122190|code|MOV.W           R9, #0|79-240-0-9
122194|code|LDR             R2, [R7,#4]|122-104
122196|code|STR.W           R9, [R0,#0xC]|192-248-12-144
122200|code|MOV             R1, R0|1-70
122202|code|LDRB            R6, [R0,#0xC]|6-123
122204|code|LDR             R3, [R7,#8]|187-104
122206|code|AND.W           R6, R6, #0xFE|6-240-254-6
122210|code|STR             R5, [R0]|5-96
122212|code|BFI.W           R6, R9, #1, #1|105-243-65-6
122216|code|LDR             R0, [R5,#8]|168-104
122218|code|STRB            R6, [R4,#0xC]|38-115
122220|code|STR             R2, [R4,#4]|98-96
122222|code|STR             R3, [R4,#8]|163-96
122224|code|BL              enqueueItem|0-240-90-251
122228|code|MOV             R6, R0|6-70
122230|code|CBZ             R0, loc_1DDC8|56-179
122232|code|LDR             R2, =(aSignalDAdded - 0x1DD82); "signal %d added"|31-74
122234|code|MOVS            R0, #0x89|137-32
122236|code|LDR             R1, [R4,#4]|97-104
122238|code|ADD             R2, PC; "signal %d added"|122-68
122240|code|LDR             R3, [R5]|43-104
122242|code|BL              logSymbol|252-247-25-251
122246|code|CMP.W           R8, #0|184-241-0-15
122250|code|BNE             loc_1DD92|2-209
122252|code|MOV             R0, R6|48-70
122254|code|POP.W           {R3-R11,PC}|189-232-248-143
122258|code|LDR             R3, =(asyncHandleMonitoredSignal_ptr - 0x344A0)|26-75
122260|code|ADD.W           R2, R5, #0xC|5-241-12-2
122264|code|LDR             R0, [R7]|56-104
122266|code|LDR.W           R1, [R10,R3]; asyncHandleMonitoredSignal|90-248-3-16
122270|code|BL              asyncHandleSignal|255-247-125-253
122274|code|CBZ             R0, loc_1DDC2|112-177
122276|code|LDR             R0, [R7]|56-104
122278|code|BL              asyncIsSignalBlocked|255-247-225-253
122282|code|LDRB            R3, [R5,#0x10]|43-124
122284|code|BFI.W           R3, R0, #0, #1|96-243-0-3
122288|code|STRB            R3, [R5,#0x10]|43-116
122290|code|LSLS            R3, R3, #0x1F|219-7
122292|code|BPL             loc_1DD8C|234-213
122294|code|LDR             R0, [R5]|40-104
122296|code|MOV             R1, R9|73-70
122298|code|BL              asyncSetSignalBlocked|255-247-177-253
122302|code|CMP             R0, #0|0-40
122304|code|BNE             loc_1DD8C|228-209
122306|code|MOV             R0, R6|48-70
122308|code|BL              deleteElement|0-240-252-249
122312|code|MOV             R0, R4; ptr|32-70
122314|code|BLX             free|248-247-92-236
122318|code|CMP.W           R8, #0|184-241-0-15
122322|code|BNE             loc_1DDDA|2-209
122324|code|MOVS            R0, #0|0-32
122326|code|POP.W           {R3-R11,PC}|189-232-248-143
122330|code|MOV             R0, R11|88-70
122332|code|BL              deleteElement|0-240-240-249
122336|code|MOVS            R0, #0|0-32
122338|code|POP.W           {R3-R11,PC}|189-232-248-143
122342|code|BL              logMallocError|252-247-43-251
122346|code|CMP.W           R8, #0|184-241-0-15
122350|code|BEQ             loc_1DDD4|241-208
122352|code|B               loc_1DDDA|243-231
122354|data|ALIGN 4|0-191
122356|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1DD2A|118-103-1-0
122360|data|DCD aSignalDAdded - 0x1DD82; "signal %d added"|58-77-0-0
122364|data|DCD asyncHandleMonitoredSignal_ptr - 0x344A0|124-3-0-0
122368|code|PUSH            {R3-R5,LR}|56-181
122370|code|MOV             R5, R0|5-70
122372|code|MOV             R4, R1|12-70
122374|code|BL              sub_1D7B8|255-247-215-252
122378|code|CBZ             R0, locret_1DE1E|64-177
122380|code|ADD.W           R0, R0, #0x104|0-245-130-112
122384|code|MOV             R1, R5|41-70
122386|code|MOV             R2, R4|34-70
122388|code|BL              asyncCallWithSignalsBlocked|255-247-212-253
122392|code|ADDS            R0, #0|0-48
122394|code|IT NE|24-191
122396|code|MOVNE           R0, #1|1-32
122398|code|POP             {R3-R5,PC}|56-189
122400|code|PUSH            {R4,R5,LR}|48-181
122402|code|SUB             SP, SP, #0x14|133-176
122404|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1DE2C)|10-76
122406|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|11-77
122408|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
122410|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
122412|code|STMEA.W         SP, {R1,R2}|141-232-6-0
122416|code|MOV             R2, SP|106-70
122418|code|LDR             R1, =(sub_1DD14+1 - 0x1DE3A)|9-73
122420|code|LDR             R5, [R4]|37-104
122422|code|ADD             R1, PC; sub_1DD14|121-68
122424|code|STR             R3, [SP,#0x20+var_18]|2-147
122426|code|STR             R5, [SP,#0x20+var_14]|3-149
122428|code|BL              asyncMakeHandle|254-247-212-250
122432|code|LDR             R2, [SP,#0x20+var_14]|3-154
122434|code|LDR             R3, [R4]|35-104
122436|code|CMP             R2, R3|154-66
122438|code|BNE             loc_1DE4C|1-209
122440|code|ADD             SP, SP, #0x14|5-176
122442|code|POP             {R4,R5,PC}|48-189
122444|code|BLX             __stack_chk_fail|248-247-244-237
122448|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1DE2C|116-102-1-0
122452|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
122456|data|DCD sub_1DD14+1 - 0x1DE3A|219-254-255-255
122460|code|PUSH            {R4-R6,LR}|112-181
122462|code|MOV             R5, R0|5-70
122464|code|BL              sub_1D7B8|255-247-170-252
122468|code|MOV             R4, R0|4-70
122470|code|CBZ             R0, loc_1DE96|176-177
122472|code|ADD.W           R0, R0, #0x104; set|0-245-130-112
122476|code|MOV             R1, R5; signo|41-70
122478|code|BLX             sigismember|248-247-38-239
122482|code|CBZ             R0, loc_1DE86|64-177
122484|code|ADDS            R6, R4, #4|38-29
122486|code|MOV             R1, R5; signo|41-70
122488|code|MOV             R0, R6; set|48-70
122490|code|BLX             sigismember|248-247-32-239
122494|code|CBZ             R0, loc_1DE9A|96-177
122496|code|LDR             R2, =(aSignalNumberAl - 0x1DE86); "signal number already claimed"|13-74
122498|code|ADD             R2, PC; "signal number already claimed"|122-68
122500|code|B               loc_1DE8A|1-224
122502|code|LDR             R2, =(aSignalNumberNo - 0x1DE8C); "signal number not claimable"|13-74
122504|code|ADD             R2, PC; "signal number not claimable"|122-68
122506|code|LDR             R1, =(aSD - 0x1DE94); "%s: %d"|13-73
122508|code|MOV             R3, R5|43-70
122510|code|MOVS            R0, #3|3-32
122512|code|ADD             R1, PC; "%s: %d"|121-68
122514|code|BL              logMessage|252-247-73-250
122518|code|MOVS            R0, #0|0-32
122520|code|POP             {R4-R6,PC}|112-189
122522|code|ADD.W           R0, R4, #0x84; set|4-241-132-0
122526|code|MOV             R1, R5; signo|41-70
122528|code|BLX             sigismember|248-247-12-239
122532|code|CBZ             R0, loc_1DEAC|16-177
122534|code|LDR             R2, =(aSignalNumberIn - 0x1DEAC); "signal number in use"|7-74
122536|code|ADD             R2, PC; "signal number in use"|122-68
122538|code|B               loc_1DE8A|238-231
122540|code|MOV             R0, R6; set|48-70
122542|code|MOV             R1, R5; signo|41-70
122544|code|BLX             sigaddset|248-247-254-236
122548|code|MOVS            R0, #1|1-32
122550|code|POP             {R4-R6,PC}|112-189
122552|data|DCD aSignalNumberAl - 0x1DE86; "signal number already claimed"|98-76-0-0
122556|data|DCD aSignalNumberNo - 0x1DE8C; "signal number not claimable"|64-76-0-0
122560|data|DCD aSD - 0x1DE94; "%s: %d"|140-76-0-0
122564|data|DCD aSignalNumberIn - 0x1DEAC; "signal number in use"|92-76-0-0
122568|code|PUSH            {R3-R5,LR}|56-181
122570|code|MOV             R5, R0|5-70
122572|code|BL              sub_1D7B8|255-247-116-252
122576|code|CBZ             R0, loc_1DEDE|40-177
122578|code|ADDS            R4, R0, #4|4-29
122580|code|MOV             R1, R5; signo|41-70
122582|code|MOV             R0, R4; set|32-70
122584|code|BLX             sigismember|248-247-240-238
122588|code|CBNZ            R0, loc_1DEEE|56-185
122590|code|LDR             R1, =(aSignalNumberNo_0 - 0x1DEE8); "signal number not claimed: %d"|7-73
122592|code|MOV             R2, R5|42-70
122594|code|MOVS            R0, #3|3-32
122596|code|ADD             R1, PC; "signal number not claimed: %d"|121-68
122598|code|BL              logMessage|252-247-31-250
122602|code|MOVS            R0, #0|0-32
122604|code|POP             {R3-R5,PC}|56-189
122606|code|MOV             R0, R4; set|32-70
122608|code|MOV             R1, R5; signo|41-70
122610|code|BLX             sigdelset|248-247-186-237
122614|code|MOVS            R0, #1|1-32
122616|code|POP             {R3-R5,PC}|56-189
122618|data|ALIGN 4|0-191
122620|data|DCD aSignalNumberNo_0 - 0x1DEE8; "signal number not claimed: %d"|64-76-0-0
122624|code|PUSH.W          {R4-R8,LR}|45-233-240-65
122628|code|BL              sub_1D7B8|255-247-88-252
122632|code|MOV             R5, R0|5-70
122634|code|CBZ             R0, loc_1DF60|72-179
122636|code|LDR.W           R4, [R0,#0x184]|208-248-132-65
122640|code|LDR.W           R3, [R0,#0x188]|208-248-136-49
122644|code|CMP             R4, R3|156-66
122646|code|BGT             loc_1DF60|35-220
122648|code|ADD.W           R6, R0, #0x104|0-245-130-118
122652|code|ADDS            R7, R0, #4|7-29
122654|code|ADD.W           R8, R0, #0x84|0-241-132-8
122658|code|B               loc_1DF2E|4-224
122660|code|LDR.W           R3, [R5,#0x188]|213-248-136-49
122664|code|ADDS            R4, #1|1-52
122666|code|CMP             R3, R4|163-66
122668|code|BLT             loc_1DF60|24-219
122670|code|MOV             R0, R6; set|48-70
122672|code|MOV             R1, R4; signo|33-70
122674|code|BLX             sigismember|248-247-196-238
122678|code|CMP             R0, #0|0-40
122680|code|BEQ             loc_1DF24|244-208
122682|code|MOV             R0, R7; set|56-70
122684|code|MOV             R1, R4; signo|33-70
122686|code|BLX             sigismember|248-247-190-238
122690|code|CMP             R0, #0|0-40
122692|code|BNE             loc_1DF24|238-209
122694|code|MOV             R0, R8; set|64-70
122696|code|MOV             R1, R4; signo|33-70
122698|code|BLX             sigismember|248-247-184-238
122702|code|CMP             R0, #0|0-40
122704|code|BNE             loc_1DF24|232-209
122706|code|MOV             R0, R8; set|64-70
122708|code|MOV             R1, R4; signo|33-70
122710|code|BLX             sigaddset|248-247-172-236
122714|code|MOV             R0, R4|32-70
122716|code|POP.W           {R4-R8,PC}|189-232-240-129
122720|code|LDR             R1, =(aNoObtainableSi - 0x1DF68); "no obtainable signal number"|3-73
122722|code|MOVS            R0, #3|3-32
122724|code|ADD             R1, PC; "no obtainable signal number"|121-68
122726|code|BL              logMessage|252-247-223-249
122730|code|MOVS            R0, #0|0-32
122732|code|POP.W           {R4-R8,PC}|189-232-240-129
122736|data|DCD aNoObtainableSi - 0x1DF68; "no obtainable signal number"|224-75-0-0
122740|code|PUSH            {R3-R5,LR}|56-181
122742|code|MOV             R5, R0|5-70
122744|code|BL              sub_1D7B8|255-247-30-252
122748|code|CBZ             R0, loc_1DF8C|48-177
122750|code|ADD.W           R4, R0, #0x84|0-241-132-4
122754|code|MOV             R1, R5; signo|41-70
122756|code|MOV             R0, R4; set|32-70
122758|code|BLX             sigismember|248-247-154-238
122762|code|CBNZ            R0, loc_1DF9C|56-185
122764|code|LDR             R1, =(aSignalNumberNo_1 - 0x1DF96); "signal number not obtained: %d"|6-73
122766|code|MOV             R2, R5|42-70
122768|code|MOVS            R0, #3|3-32
122770|code|ADD             R1, PC; "signal number not obtained: %d"|121-68
122772|code|BL              logMessage|252-247-200-249
122776|code|MOVS            R0, #0|0-32
122778|code|POP             {R3-R5,PC}|56-189
122780|code|MOV             R0, R4; set|32-70
122782|code|MOV             R1, R5; signo|41-70
122784|code|BLX             sigdelset|248-247-98-237
122788|code|MOVS            R0, #1|1-32
122790|code|POP             {R3-R5,PC}|56-189
122792|data|DCD aSignalNumberNo_1 - 0x1DF96; "signal number not obtained: %d"|206-75-0-0
122796|code|PUSH            {R3,LR}|8-181
122798|code|BL              sub_1D7B8|255-247-3-252
122802|code|MOV             R1, R0|1-70
122804|code|CBZ             R0, locret_1DFCA|72-177
122806|code|MOVS            R0, #0|0-32
122808|code|ADD.W           R1, R1, #0x104|1-245-130-113
122812|code|MOV             R2, R0|2-70
122814|code|BL              sub_1D79C|255-247-237-251
122818|code|ADDS            R0, #0|0-48
122820|code|IT NE|24-191
122822|code|MOVNE           R0, #1|1-32
122824|code|POP             {R3,PC}|8-189
122826|code|POP             {R3,PC}|8-189
122828|code|PUSH            {R4-R6,LR}|112-181
122830|code|MOV             R5, R0|5-70
122832|code|LDR             R4, =(unk_22B84 - 0x1DFD8)|32-76
122834|code|MOVS            R0, #2|2-32
122836|code|ADD             R4, PC; unk_22B84|124-68
122838|code|MOVS            R1, #1|1-33
122840|code|BL              asyncSetSignalBlocked|255-247-162-252
122844|code|LDR.W           R0, [R4,#4]!|84-248-4-15
122848|code|CMP             R0, #0|0-40
122850|code|BNE             loc_1DFD6|248-209
122852|code|LDR             R6, [R5]|46-104
122854|code|MOV             R0, R6; s|48-70
122856|code|BLX             strlen|248-247-26-238
122860|code|ADDS            R0, #9; size|9-48
122862|code|BLX             malloc|248-247-16-238
122866|code|MOV             R4, R0|4-70
122868|code|CBZ             R0, loc_1E044|48-179
122870|code|LDR             R3, [R5,#0x10]|43-105
122872|code|MOV             R1, R6; src|49-70
122874|code|LDR             R2, [R5,#0xC]|234-104
122876|code|ADDS            R0, #8; dest|8-48
122878|code|STM.W           R4, {R2,R3}|132-232-12-0
122882|code|BLX             strcpy|248-247-220-236
122886|code|LDR             R1, =(aCreatingThread - 0x1E010); "creating thread: %s"|20-73
122888|code|MOV             R2, R6|50-70
122890|code|MOVS            R0, #0x89|137-32
122892|code|ADD             R1, PC; "creating thread: %s"|121-68
122894|code|BL              logMessage|252-247-139-249
122898|code|LDR             R2, =(sub_1E124+1 - 0x1E01E)|18-74
122900|code|LDR             R0, [R5,#4]; newthread|104-104
122902|code|MOV             R3, R4; arg|35-70
122904|code|LDR             R1, [R5,#8]; attr|169-104
122906|code|ADD             R2, PC; sub_1E124 ; start_routine|122-68
122908|code|BLX             pthread_create|248-247-132-238
122912|code|STR             R0, [R5,#0x14]|104-97
122914|code|CBNZ            R0, loc_1E026|0-185
122916|code|POP             {R4-R6,PC}|112-189
122918|code|LDR             R5, [R5]|45-104
122920|code|BLX             strerror|248-247-136-235
122924|code|LDR             R1, =(unk_22BA8 - 0x1E034)|12-73
122926|code|MOV             R2, R5|42-70
122928|code|ADD             R1, PC; unk_22BA8|121-68
122930|code|MOV             R3, R0|3-70
122932|code|MOVS            R0, #0x89|137-32
122934|code|BL              logMessage|252-247-119-249
122938|code|MOV             R0, R4; ptr|32-70
122940|code|POP.W           {R4-R6,LR}|189-232-112-64
122944|code|B.W             j_free|248-247-30-187
122948|code|BLX             __errno_location|248-247-136-238
122952|code|LDR             R3, [R0]|3-104
122954|code|STR             R3, [R5,#0x14]|107-97
122956|code|POP.W           {R4-R6,LR}|189-232-112-64
122960|code|B.W             logMallocError|252-247-246-185
122964|data|DCD unk_22B84 - 0x1DFD8|172-75-0-0
122968|data|DCD aCreatingThread - 0x1E010; "creating thread: %s"|132-75-0-0
122972|data|DCD sub_1E124+1 - 0x1E01E|7-1-0-0
122976|data|DCD unk_22BA8 - 0x1E034|116-75-0-0
122980|code|PUSH            {R4-R7,LR}|240-181
122982|code|SUB             SP, SP, #0x24|137-176
122984|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1E072)|13-76
122986|code|MOVS            R7, #0|0-39
122988|code|LDR             R6, =(__stack_chk_guard_ptr - 0x344A0)|13-78
122990|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
122992|code|LDR             R5, =(createSignalSafeThread_ptr - 0x344A0)|13-77
122994|code|LDR             R6, [R4,R6]; __stack_chk_guard|166-89
122996|code|STR             R0, [SP,#0x38+var_34]|1-144
122998|code|STR             R3, [SP,#0x38+var_28]|4-147
123000|code|LDR             R0, [R6]|48-104
123002|code|LDR             R3, [SP,#0x38+arg_0]|14-155
123004|code|STR             R1, [SP,#0x38+var_30]|2-145
123006|code|ADD             R1, SP, #0x38+var_34|1-169
123008|code|STR             R2, [SP,#0x38+var_2C]|3-146
123010|code|STR             R3, [SP,#0x38+var_24]|5-147
123012|code|STR             R0, [SP,#0x38+var_1C]|7-144
123014|code|STR             R7, [SP,#0x38+var_20]|6-151
123016|code|LDR             R0, [R4,R5]; createSignalSafeThread|96-89
123018|code|BL              asyncCallWithObtainableSignalsBlocked|255-247-185-254
123022|code|LDR             R2, [SP,#0x38+var_1C]|7-154
123024|code|LDR             R3, [R6]|51-104
123026|code|LDR             R0, [SP,#0x38+var_20]|6-152
123028|code|CMP             R2, R3|154-66
123030|code|BNE             loc_1E09C|1-209
123032|code|ADD             SP, SP, #0x24 ; '$'|9-176
123034|code|POP             {R4-R7,PC}|240-189
123036|code|BLX             __stack_chk_fail|248-247-204-236
123040|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1E072|46-100-1-0
123044|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
123048|data|DCD createSignalSafeThread_ptr - 0x344A0|96-3-0-0
123052|code|PUSH            {R3-R5,LR}|56-181
123054|code|MOV             R5, R0|5-70
123056|code|BLX             pthread_mutex_lock|248-247-126-234
123060|code|LDR             R2, =(aMutexLock - 0x1E0BC); "mutex lock"|4-74
123062|code|MOV             R1, R5|41-70
123064|code|ADD             R2, PC; "mutex lock"|122-68
123066|code|MOV             R4, R0|4-70
123068|code|MOVS            R0, #0x89|137-32
123070|code|BL              logSymbol|252-247-123-249
123074|code|MOV             R0, R4|32-70
123076|code|POP             {R3-R5,PC}|56-189
123078|data|ALIGN 4|0-191
123080|data|DCD aMutexLock - 0x1E0BC; "mutex lock"|8-75-0-0
123084|code|LDR             R2, =(aMutexUnlock - 0x1E0D6); "mutex unlock"|6-74
123086|code|MOV             R1, R0|1-70
123088|code|PUSH            {R4,LR}|16-181
123090|code|ADD             R2, PC; "mutex unlock"|122-68
123092|code|MOV             R4, R0|4-70
123094|code|MOVS            R0, #0x89|137-32
123096|code|BL              logSymbol|252-247-110-249
123100|code|MOV             R0, R4; mutex|32-70
123102|code|POP.W           {R4,LR}|189-232-16-64
123106|code|B.W             j_pthread_mutex_unlock|248-247-201-190
123110|data|ALIGN 4|0-191
123112|data|DCD aMutexUnlock - 0x1E0D6; "mutex unlock"|250-74-0-0
123116|code|PUSH            {R3-R5,LR}|56-181
123118|code|MOV             R5, R1|13-70
123120|code|MOV             R4, R0|4-70
123122|code|BLX             pthread_self|248-247-166-235
123126|code|MOV             R1, R4|33-70
123128|code|MOV             R2, R5|42-70
123130|code|BLX             pthread_getname_np|248-247-56-235
123134|code|CBNZ            R0, loc_1E10A|32-185
123136|code|MOV             R0, R4; s|32-70
123138|code|POP.W           {R3-R5,LR}|189-232-56-64
123142|code|B.W             j_strlen|248-247-137-189
123146|code|MOVS            R0, #0|0-32
123148|code|POP             {R3-R5,PC}|56-189
123150|data|ALIGN 0x10|0-191
123152|code|PUSH            {R4,LR}|16-181
123154|code|MOV             R4, R0|4-70
123156|code|BLX             pthread_self|248-247-148-235
123160|code|MOV             R1, R4|33-70
123162|code|POP.W           {R4,LR}|189-232-16-64
123166|code|B.W             j_pthread_setname_np|248-247-207-186
123170|data|ALIGN 4|0-191
123172|code|PUSH            {R4-R6,LR}|112-181
123174|code|ADD.W           R5, R0, #8|0-241-8-5
123178|code|MOV             R4, R0|4-70
123180|code|MOV             R0, R5|40-70
123182|code|BL              setThreadName|255-247-239-255
123186|code|LDR             R1, =(aThreadStarting - 0x1E13C); "thread starting: %s"|10-73
123188|code|MOV             R2, R5|42-70
123190|code|MOVS            R0, #0x89|137-32
123192|code|ADD             R1, PC; "thread starting: %s"|121-68
123194|code|BL              logMessage|252-247-245-248
123198|code|LDR             R3, [R4]|35-104
123200|code|LDR             R0, [R4,#4]|96-104
123202|code|BLX             R3|152-71
123204|code|LDR             R1, =(aThreadFinished - 0x1E14C); "thread finished: %s"|6-73
123206|code|MOV             R2, R5|42-70
123208|code|ADD             R1, PC; "thread finished: %s"|121-68
123210|code|MOV             R6, R0|6-70
123212|code|MOVS            R0, #0x89|137-32
123214|code|BL              logMessage|252-247-235-248
123218|code|MOV             R0, R4; ptr|32-70
123220|code|BLX             free|248-247-150-234
123224|code|MOV             R0, R6|48-70
123226|code|POP             {R4-R6,PC}|112-189
123228|data|DCD aThreadStarting - 0x1E13C; "thread starting: %s"|164-74-0-0
123232|data|DCD aThreadFinished - 0x1E14C; "thread finished: %s"|168-74-0-0
123236|code|MOV             R2, R1|10-70
123238|code|MOV             R1, R0|1-70
123240|code|LDR             R3, [R2]|19-104
123242|code|PUSH            {R4}|16-180
123244|code|LDR             R4, [R3,#0x10]|28-105
123246|code|LDR             R0, [R2,#4]|80-104
123248|code|LDR             R2, [R3,#8]|154-104
123250|code|MOV             R3, R4|35-70
123252|code|POP.W           {R4}|93-248-4-75
123256|code|BX              R3|24-71
123258|data|ALIGN 4|0-191
123260|code|SUBS            R0, R1, R0|8-26
123262|code|CLZ.W           R0, R0|176-250-128-240
123266|code|LSRS            R0, R0, #5|64-9
123268|code|BX              LR|112-71
123270|data|ALIGN 4|0-191
123272|code|SUBS            R0, R1, R0|8-26
123274|code|CLZ.W           R0, R0|176-250-128-240
123278|code|LSRS            R0, R0, #5|64-9
123280|code|BX              LR|112-71
123282|data|ALIGN 4|0-191
123284|code|PUSH            {R3-R5,LR}|56-181
123286|code|LDR             R5, =(dword_388C0 - 0x1E19C)|8-77
123288|code|ADD             R5, PC; dword_388C0|125-68
123290|code|LDR             R0, [R5]; ptr|40-104
123292|code|CBZ             R0, loc_1E1AC|48-177
123294|code|LDR             R4, [R0]|4-104
123296|code|STR             R4, [R5]|44-96
123298|code|BLX             free|248-247-112-234
123302|code|MOV             R0, R4|32-70
123304|code|CMP             R4, #0|0-44
123306|code|BNE             loc_1E19E|248-209
123308|code|LDR             R3, =(dword_388C0 - 0x1E1B4)|3-75
123310|code|MOVS            R2, #0|0-34
123312|code|ADD             R3, PC; dword_388C0|123-68
123314|code|STR             R2, [R3,#(dword_388C4 - 0x388C0)]|90-96
123316|code|POP             {R3-R5,PC}|56-189
123318|data|ALIGN 4|0-191
123320|data|DCD dword_388C0 - 0x1E19C|36-167-1-0
123324|data|DCD dword_388C0 - 0x1E1B4|12-167-1-0
123328|code|PUSH            {R3-R5,LR}|56-181
123330|code|MOV             R4, R0|4-70
123332|code|LDR             R3, [R0]|3-104
123334|code|LDR             R2, [R0,#8]|130-104
123336|code|CMP             R0, R3|152-66
123338|code|ITT EQ|4-191
123340|code|MOVEQ           R3, #0|0-35
123342|code|STREQ           R3, [R2]|19-96
123344|code|BEQ             loc_1E1E2|7-208
123346|code|LDR             R1, [R2]|17-104
123348|code|CMP             R0, R1|136-66
123350|code|IT EQ|8-191
123352|code|STREQ           R3, [R2]|19-96
123354|code|LDR             R2, [R0,#4]|66-104
123356|code|STR             R2, [R3,#4]|90-96
123358|code|LDR             R2, [R0,#4]|66-104
123360|code|STR             R3, [R2]|19-96
123362|code|LDR             R0, [R4,#0x10]|32-105
123364|code|MOVS            R2, #0|0-34
123366|code|LDR             R3, [R4,#8]|163-104
123368|code|STR             R2, [R4]|34-96
123370|code|STR             R2, [R4,#4]|98-96
123372|code|CBZ             R0, loc_1E1FC|48-177
123374|code|LDR             R2, [R3,#0xC]|218-104
123376|code|CBZ             R2, loc_1E1F8|18-177
123378|code|LDR             R1, [R3,#8]|153-104
123380|code|BLX             R2|144-71
123382|code|LDR             R3, [R4,#8]|163-104
123384|code|MOVS            R2, #0|0-34
123386|code|STR             R2, [R4,#0x10]|34-97
123388|code|LDR             R2, =(dword_388C0 - 0x1E206)|5-74
123390|code|MOVS            R0, #0|0-32
123392|code|LDR             R1, [R3,#4]|89-104
123394|code|ADD             R2, PC; dword_388C0|122-68
123396|code|SUBS            R1, #1|1-57
123398|code|STR             R1, [R3,#4]|89-96
123400|code|LDR             R5, [R2]|21-104
123402|code|STR             R0, [R4,#8]|160-96
123404|code|STR             R4, [R2]|20-96
123406|code|STR             R5, [R4]|37-96
123408|code|STR             R0, [R4,#0xC]|224-96
123410|code|POP             {R3-R5,PC}|56-189
123412|data|DCD dword_388C0 - 0x1E206|186-166-1-0
123416|code|LDR             R3, [R0]|3-104
123418|code|CBZ             R3, loc_1E22E|67-177
123420|code|PUSH            {R4,LR}|16-181
123422|code|MOVS            R2, #0|0-34
123424|code|LDR             R4, [R3,#0x10]|28-105
123426|code|MOV             R0, R3|24-70
123428|code|STR             R2, [R3,#0x10]|26-97
123430|code|BL              deleteElement|255-247-203-255
123434|code|MOV             R0, R4|32-70
123436|code|POP             {R4,PC}|16-189
123438|code|MOV             R0, R3|24-70
123440|code|BX              LR|112-71
123442|data|ALIGN 4|0-191
123444|code|LDR             R0, [R0,#8]|128-104
123446|code|BX              LR|112-71
123448|code|LDR             R0, [R0,#0xC]|192-104
123450|code|BX              LR|112-71
123452|code|LDR             R0, [R0,#0x10]|0-105
123454|code|BX              LR|112-71
123456|code|LDR             R3, =(dword_388C0 - 0x1E248)|16-75
123458|code|PUSH            {R4-R6,LR}|112-181
123460|code|ADD             R3, PC; dword_388C0|123-68
123462|code|SUB             SP, SP, #8|130-176
123464|code|MOV             R5, R0|5-70
123466|code|LDR             R2, [R3,#(dword_388C4 - 0x388C0)]|90-104
123468|code|MOV             R4, R1|12-70
123470|code|CBZ             R2, loc_1E268|90-177
123472|code|MOVS            R0, #0x14; size|20-32
123474|code|BLX             malloc|248-247-222-236
123478|code|CBZ             R0, loc_1E27A|128-177
123480|code|MOVS            R3, #0|0-35
123482|code|STR             R5, [R0,#0xC]|197-96
123484|code|STR             R4, [R0,#0x10]|4-97
123486|code|STR             R3, [R0]|3-96
123488|code|STR             R3, [R0,#4]|67-96
123490|code|STR             R3, [R0,#8]|131-96
123492|code|ADD             SP, SP, #8|2-176
123494|code|POP             {R4-R6,PC}|112-189
123496|code|LDR             R0, =(aQueue - 0x1E272); "queue"|7-72
123498|code|MOVS            R6, #1|1-38
123500|code|LDR             R1, =(sub_1E194+1 - 0x1E276)|7-73
123502|code|ADD             R0, PC; "queue"|120-68
123504|code|STR             R6, [R3,#(dword_388C4 - 0x388C0)]|94-96
123506|code|ADD             R1, PC; sub_1E194|121-68
123508|code|BL              onProgramExit|250-247-230-249
123512|code|B               loc_1E250|234-231
123514|code|STR             R0, [SP,#0x18+var_14]|1-144
123516|code|BL              logMallocError|252-247-224-248
123520|code|LDR             R0, [SP,#0x18+var_14]|1-152
123522|code|B               loc_1E264|239-231
123524|data|DCD dword_388C0 - 0x1E248|120-166-1-0
123528|data|DCD aQueue - 0x1E272; "queue"|150-73-0-0
123532|data|DCD sub_1E194+1 - 0x1E276|31-255-255-255
123536|code|PUSH            {R4,LR}|16-181
123538|code|MOV             R4, R0|4-70
123540|code|LDR             R0, [R0]|0-104
123542|code|CBZ             R0, locret_1E2A2|32-177
123544|code|BL              deleteElement|255-247-146-255
123548|code|LDR             R0, [R4]|32-104
123550|code|CMP             R0, #0|0-40
123552|code|BNE             loc_1E298|250-209
123554|code|POP             {R4,PC}|16-189
123556|code|PUSH            {R4,LR}|16-181
123558|code|MOV             R4, R0|4-70
123560|code|BL              deleteElements|255-247-242-255
123564|code|MOV             R0, R4; ptr|32-70
123566|code|POP.W           {R4,LR}|189-232-16-64
123570|code|B.W             j_free|248-247-229-185
123574|data|ALIGN 4|0-191
123576|code|LDR             R3, [R0]|3-104
123578|code|CBZ             R3, locret_1E2CC|59-177
123580|code|PUSH            {R4,LR}|16-181
123582|code|MOV             R4, R0|4-70
123584|code|MOV             R0, R3|24-70
123586|code|BL              deallocateQueue|255-247-239-255
123590|code|MOVS            R3, #0|0-35
123592|code|STR             R3, [R4]|35-96
123594|code|POP             {R4,PC}|16-189
123596|code|BX              LR|112-71
123598|data|ALIGN 0x10|0-191
123600|code|PUSH            {R4-R6,LR}|112-181
123602|code|CMP             R2, #0|0-42
123604|code|LDR             R4, [R0]|4-104
123606|code|CLZ.W           R5, R4|180-250-132-245
123610|code|MOV.W           R5, R5,LSR#5|79-234-85-21
123614|code|IT EQ|8-191
123616|code|MOVEQ           R5, #0|0-37
123618|code|CBNZ            R5, loc_1E2E8|13-185
123620|code|MOV             R0, R4|32-70
123622|code|POP             {R4-R6,PC}|112-189
123624|code|MOV             R5, R0|5-70
123626|code|LDR             R0, [SP,#0x10+arg_0]|4-152
123628|code|MOV             R6, R1|14-70
123630|code|BLX             R3|152-71
123632|code|MOV             R4, R0|4-70
123634|code|STR             R0, [R5]|40-96
123636|code|CMP             R0, #0|0-40
123638|code|BEQ             loc_1E2E4|245-208
123640|code|LDR             R1, =(loc_1E2B8+1 - 0x1E302)|3-73
123642|code|MOV             R0, R6|48-70
123644|code|MOV             R2, R5|42-70
123646|code|ADD             R1, PC; loc_1E2B8|121-68
123648|code|BL              onProgramExit|250-247-160-249
123652|code|LDR             R4, [R5]|44-104
123654|code|B               loc_1E2E4|237-231
123656|data|DCD loc_1E2B8+1 - 0x1E302|183-255-255-255
123660|code|LDR             R0, [R0,#4]|64-104
123662|code|BX              LR|112-71
123664|code|LDR             R0, [R0,#8]|128-104
123666|code|BX              LR|112-71
123668|code|MOV             R3, R0|3-70
123670|code|LDR             R0, [R0,#8]|128-104
123672|code|STR             R1, [R3,#8]|153-96
123674|code|BX              LR|112-71
123676|code|LDR             R0, [R0]|0-104
123678|code|BX              LR|112-71
123680|code|LDR             R0, [R0]|0-104
123682|code|CBZ             R0, locret_1E326|0-177
123684|code|LDR             R0, [R0,#4]|64-104
123686|code|BX              LR|112-71
123688|code|LDM             R0, {R0,R3}|9-200
123690|code|CMP             R3, R1|139-66
123692|code|BLS             loc_1E354|18-217
123694|code|MVNS            R2, R1|202-67
123696|code|ADD             R3, R2|19-68
123698|code|CMP             R1, R3|153-66
123700|code|BLS             loc_1E34E|11-217
123702|code|LDR             R0, [R0,#4]|64-104
123704|code|MOV             R1, R3|25-70
123706|code|MOVS            R2, #1|1-34
123708|code|CBZ             R1, locret_1E352|73-177
123710|code|LDR             R3, [R0]|3-104
123712|code|LDR             R0, [R0,#4]|64-104
123714|code|CMP             R2, #0|0-42
123716|code|IT EQ|8-191
123718|code|MOVEQ           R0, R3|24-70
123720|code|SUBS            R1, #1|1-57
123722|code|BNE             loc_1E33E|248-209
123724|code|BX              LR|112-71
123726|code|MOVS            R2, #0|0-34
123728|code|B               loc_1E33C|244-231
123730|code|BX              LR|112-71
123732|code|MOVS            R0, #0|0-32
123734|code|BX              LR|112-71
123736|code|LDM             R0, {R0,R3}|9-200
123738|code|CMP             R3, R1|139-66
123740|code|BLS             loc_1E384|18-217
123742|code|MVNS            R2, R1|202-67
123744|code|ADD             R3, R2|19-68
123746|code|CMP             R1, R3|153-66
123748|code|BLS             loc_1E37A|9-217
123750|code|MOVS            R1, #0|0-33
123752|code|CBZ             R3, locret_1E382|91-177
123754|code|LDR             R2, [R0]|2-104
123756|code|LDR             R0, [R0,#4]|64-104
123758|code|CMP             R1, #0|0-41
123760|code|IT EQ|8-191
123762|code|MOVEQ           R0, R2|16-70
123764|code|SUBS            R3, #1|1-59
123766|code|BNE             loc_1E36A|248-209
123768|code|BX              LR|112-71
123770|code|MOV             R3, R1|11-70
123772|code|LDR             R0, [R0,#4]|64-104
123774|code|MOVS            R1, #1|1-33
123776|code|B               loc_1E368|242-231
123778|code|BX              LR|112-71
123780|code|MOVS            R0, #0|0-32
123782|code|BX              LR|112-71
123784|code|PUSH            {R3-R7,LR}|248-181
123786|code|MOV             R5, R0|5-70
123788|code|LDR             R4, [R0]|4-104
123790|code|MOV             R7, R1|15-70
123792|code|MOV             R6, R2|22-70
123794|code|CBNZ            R4, loc_1E39E|36-185
123796|code|B               loc_1E3AC|10-224
123798|code|LDR             R4, [R4]|36-104
123800|code|LDR             R3, [R5]|43-104
123802|code|CMP             R4, R3|156-66
123804|code|BEQ             loc_1E3AC|6-208
123806|code|LDR             R0, [R4,#0x10]|32-105
123808|code|MOV             R1, R6|49-70
123810|code|BLX             R7|184-71
123812|code|CMP             R0, #0|0-40
123814|code|BEQ             loc_1E396|246-208
123816|code|MOV             R0, R4|32-70
123818|code|POP             {R3-R7,PC}|248-189
123820|code|MOVS            R0, #0|0-32
123822|code|POP             {R3-R7,PC}|248-189
123824|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1E3B8)|26-75
123826|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|27-74
123828|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
123830|code|PUSH            {R4-R6,LR}|112-181
123832|code|SUB             SP, SP, #0x10|132-176
123834|code|LDR             R6, [R3,R2]; __stack_chk_guard|158-88
123836|code|MOV             R4, R0|4-70
123838|code|LDR             R5, [R0,#8]|133-104
123840|code|LDR             R2, [R6]|50-104
123842|code|LDR             R3, [R5]|43-104
123844|code|STR             R2, [SP,#0x20+var_14]|3-146
123846|code|CBZ             R3, loc_1E410|27-179
123848|code|LDR             R2, [R5,#0x10]|42-105
123850|code|CBZ             R2, loc_1E402|210-177
123852|code|LDR             R3, [R0,#0x10]|3-105
123854|code|ADD             R2, SP, #0x20+var_1C|1-170
123856|code|LDR             R1, =(loc_1E164+1 - 0x1E3DA)|20-73
123858|code|MOV             R0, R5|40-70
123860|code|STR             R5, [SP,#0x20+var_1C]|1-149
123862|code|ADD             R1, PC; loc_1E164|121-68
123864|code|STR             R3, [SP,#0x20+var_18]|2-147
123866|code|BL              findElement|255-247-213-255
123870|code|CBZ             R0, loc_1E400|120-177
123872|code|LDR             R2, [R0,#4]|66-104
123874|code|LDR             R3, [R5]|43-104
123876|code|STM.W           R4, {R0,R2}|132-232-5-0
123880|code|CMP             R0, R3|152-66
123882|code|STR             R4, [R0,#4]|68-96
123884|code|LDR             R2, [R4,#4]|98-104
123886|code|STR             R4, [R2]|20-96
123888|code|BNE             loc_1E3F4|0-209
123890|code|STR             R4, [R5]|44-96
123892|code|LDR             R2, [SP,#0x20+var_14]|3-154
123894|code|LDR             R3, [R6]|51-104
123896|code|CMP             R2, R3|154-66
123898|code|BNE             loc_1E416|12-209
123900|code|ADD             SP, SP, #0x10|4-176
123902|code|POP             {R4-R6,PC}|112-189
123904|code|LDR             R3, [R5]|43-104
123906|code|LDR             R2, [R3,#4]|90-104
123908|code|STR             R3, [R4]|35-96
123910|code|STR             R2, [R4,#4]|98-96
123912|code|STR             R4, [R3,#4]|92-96
123914|code|LDR             R3, [R4,#4]|99-104
123916|code|STR             R4, [R3]|28-96
123918|code|B               loc_1E3F4|241-231
123920|code|STR             R0, [R4]|32-96
123922|code|STR             R0, [R4,#4]|96-96
123924|code|B               loc_1E3F2|237-231
123926|code|BLX             __stack_chk_fail|248-247-16-235
123930|data|ALIGN 4|0-191
123932|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1E3B8|232-96-1-0
123936|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
123940|data|DCD loc_1E164+1 - 0x1E3DA|139-253-255-255
123944|code|LDR             R3, =(dword_388C0 - 0x1E430)|20-75
123946|code|PUSH            {R4-R6,LR}|112-181
123948|code|ADD             R3, PC; dword_388C0|123-68
123950|code|SUB             SP, SP, #8|130-176
123952|code|MOV             R5, R0|5-70
123954|code|LDR             R4, [R3]|28-104
123956|code|CBZ             R4, loc_1E460|164-177
123958|code|LDR             R2, [R4]|34-104
123960|code|MOVS            R0, #0|0-32
123962|code|STR             R0, [R4]|32-96
123964|code|STR             R2, [R3]|26-96
123966|code|LDR             R6, =(dword_388C0 - 0x1E448)|16-78
123968|code|MOV             R0, R4|32-70
123970|code|STR             R5, [R4,#8]|165-96
123972|code|ADD             R6, PC; dword_388C0|126-68
123974|code|LDR             R3, [R6,#(dword_388C8 - 0x388C0)]|179-104
123976|code|ADDS            R3, #1|1-51
123978|code|STR             R3, [R4,#0xC]|227-96
123980|code|LDR             R2, [R5,#4]|106-104
123982|code|STR             R3, [R6,#(dword_388C8 - 0x388C0)]|179-96
123984|code|ADDS            R2, #1|1-50
123986|code|STR             R2, [R5,#4]|106-96
123988|code|STR             R1, [R4,#0x10]|33-97
123990|code|BL              sub_1E3B0|255-247-171-255
123994|code|MOV             R0, R4|32-70
123996|code|ADD             SP, SP, #8|2-176
123998|code|POP             {R4-R6,PC}|112-189
124000|code|MOVS            R0, #0x14; size|20-32
124002|code|STR             R1, [SP,#0x18+var_14]|1-145
124004|code|BLX             malloc|248-247-212-235
124008|code|LDR             R1, [SP,#0x18+var_14]|1-153
124010|code|MOV             R4, R0|4-70
124012|code|CBZ             R0, loc_1E476|24-177
124014|code|MOVS            R3, #0|0-35
124016|code|STR             R3, [R4]|35-96
124018|code|STR             R3, [R4,#4]|99-96
124020|code|B               loc_1E43E|227-231
124022|code|BL              logMallocError|251-247-227-255
124026|code|B               loc_1E45A|238-231
124028|data|DCD dword_388C0 - 0x1E430|144-164-1-0
124032|data|DCD dword_388C0 - 0x1E448|120-164-1-0
124036|code|LDR             R2, [R0]|2-104
124038|code|MOV             R3, R0|3-70
124040|code|LDR             R1, [R0,#8]|129-104
124042|code|CMP             R0, R2|144-66
124044|code|ITT EQ|4-191
124046|code|MOVEQ           R2, #0|0-34
124048|code|STREQ           R2, [R1]|10-96
124050|code|BEQ             loc_1E4A4|7-208
124052|code|LDR             R0, [R1]|8-104
124054|code|CMP             R3, R0|131-66
124056|code|IT EQ|8-191
124058|code|STREQ           R2, [R1]|10-96
124060|code|LDR             R1, [R3,#4]|89-104
124062|code|STR             R1, [R2,#4]|81-96
124064|code|LDR             R1, [R3,#4]|89-104
124066|code|STR             R2, [R1]|10-96
124068|code|MOVS            R2, #0|0-34
124070|code|MOV             R0, R3|24-70
124072|code|STR             R2, [R3]|26-96
124074|code|STR             R2, [R3,#4]|90-96
124076|code|B               sub_1E3B0|128-231
124078|data|ALIGN 0x10|0-191
124080|code|LDR             R2, [R0]|2-104
124082|code|MOV             R3, R0|3-70
124084|code|LDR             R0, [R0,#8]|128-104
124086|code|CMP             R3, R2|147-66
124088|code|PUSH            {R4-R7}|240-180
124090|code|ITT EQ|4-191
124092|code|MOVEQ           R2, #0|0-34
124094|code|STREQ           R2, [R0]|2-96
124096|code|BEQ             loc_1E4D2|7-208
124098|code|LDR             R4, [R0]|4-104
124100|code|CMP             R3, R4|163-66
124102|code|IT EQ|8-191
124104|code|STREQ           R2, [R0]|2-96
124106|code|LDR             R0, [R3,#4]|88-104
124108|code|STR             R0, [R2,#4]|80-96
124110|code|LDR             R0, [R3,#4]|88-104
124112|code|STR             R2, [R0]|2-96
124114|code|LDR             R5, =(dword_388C0 - 0x1E4DE)|10-77
124116|code|MOVS            R7, #0|0-39
124118|code|LDR             R6, [R3,#8]|158-104
124120|code|MOV             R0, R3|24-70
124122|code|ADD             R5, PC; dword_388C0|125-68
124124|code|STR             R7, [R3]|31-96
124126|code|LDR             R4, [R6,#4]|116-104
124128|code|LDR             R2, [R5,#(dword_388C8 - 0x388C0)]|170-104
124130|code|STR             R7, [R3,#4]|95-96
124132|code|SUBS            R4, #1|1-60
124134|code|ADDS            R2, #1|1-50
124136|code|STR             R4, [R6,#4]|116-96
124138|code|STR             R2, [R3,#0xC]|218-96
124140|code|LDR             R4, [R1,#4]|76-104
124142|code|STR             R2, [R5,#(dword_388C8 - 0x388C0)]|170-96
124144|code|STR             R1, [R3,#8]|153-96
124146|code|ADDS            R3, R4, #1|99-28
124148|code|POP             {R4-R7}|240-188
124150|code|STR             R3, [R1,#4]|75-96
124152|code|B               sub_1E3B0|90-231
124154|data|ALIGN 4|0-191
124156|data|DCD dword_388C0 - 0x1E4DE|226-163-1-0
124160|code|PUSH            {R3,LR}|8-181
124162|code|BL              findElement|255-247-65-255
124166|code|CBZ             R0, locret_1E50A|0-177
124168|code|LDR             R0, [R0,#0x10]|0-105
124170|code|POP             {R3,PC}|8-189
124172|code|MOV             R2, R1|10-70
124174|code|LDR             R1, =(loc_1E17C+1 - 0x1E514)|2-73
124176|code|ADD             R1, PC; loc_1E17C|121-68
124178|code|B.W             findElement|255-247-57-191
124182|data|ALIGN 4|0-191
124184|data|DCD loc_1E17C+1 - 0x1E514|105-252-255-255
124188|code|PUSH.W          {R4-R8,LR}|45-233-240-65
124192|code|LDR             R5, [R0]|5-104
124194|code|CBZ             R5, loc_1E54C|157-177
124196|code|MOV             R7, R2|23-70
124198|code|MOV             R6, R1|14-70
124200|code|MOV             R8, R0|128-70
124202|code|MOV             R3, R5|43-70
124204|code|B               loc_1E53C|6-224
124206|code|LDR             R0, [R5,#0x10]|40-105
124208|code|BLX             R6|176-71
124210|code|CBNZ            R0, loc_1E552|112-185
124212|code|CBZ             R4, loc_1E54C|84-177
124214|code|LDR.W           R3, [R8]|216-248-0-48
124218|code|MOV             R5, R4|37-70
124220|code|LDR             R4, [R5]|44-104
124222|code|MOV             R1, R7|57-70
124224|code|CMP             R4, R3|156-66
124226|code|BNE             loc_1E52E|244-209
124228|code|MOV             R1, R7|57-70
124230|code|LDR             R0, [R5,#0x10]|40-105
124232|code|BLX             R6|176-71
124234|code|CBNZ            R0, loc_1E552|16-185
124236|code|MOVS            R0, #0|0-32
124238|code|POP.W           {R4-R8,PC}|189-232-240-129
124242|code|MOV             R0, R5|40-70
124244|code|POP.W           {R4-R8,PC}|189-232-240-129
124248|code|MOV             R2, R1|10-70
124250|code|LDR             R1, =(loc_1E188+1 - 0x1E562)|6-73
124252|code|PUSH            {R3,LR}|8-181
124254|code|ADD             R1, PC; loc_1E188|121-68
124256|code|BL              findElement|255-247-18-255
124260|code|CBZ             R0, locret_1E572|40-177
124262|code|MOVS            R2, #0|0-34
124264|code|STR             R2, [R0,#0x10]|2-97
124266|code|BL              deleteElement|255-247-41-254
124270|code|MOVS            R0, #1|1-32
124272|code|POP             {R3,PC}|8-189
124274|code|POP             {R3,PC}|8-189
124276|data|DCD loc_1E188+1 - 0x1E562|39-252-255-255
124280|code|PUSH            {R3,LR}|8-181
124282|code|BLX             dlerror|248-247-88-232
124286|code|CBZ             R0, loc_1E590|56-177
124288|code|LDR             R1, =(aCheckingSDevic+0x14 - 0x1E58A); "%s"|4-73
124290|code|MOV             R2, R0|2-70
124292|code|MOVS            R0, #3|3-32
124294|code|ADD             R1, PC; "%s"|121-68
124296|code|BL              logMessage|251-247-206-254
124300|code|MOVS            R0, #0|0-32
124302|code|POP             {R3,PC}|8-189
124304|code|MOVS            R0, #1|1-32
124306|code|POP             {R3,PC}|8-189
124308|data|DCD aCheckingSDevic+0x14 - 0x1E58A; "%s"|238-65-0-0
124312|code|PUSH            {R4,LR}|16-181
124314|code|MOV             R4, R0|4-70
124316|code|BLX             dlerror|248-247-70-232
124320|code|MOV             R0, R4; file|32-70
124322|code|MOVW            R1, #0x101; mode|64-242-1-17
124326|code|BLX             dlopen|248-247-224-233
124330|code|MOV             R4, R0|4-70
124332|code|CBZ             R0, loc_1E5B2|8-177
124334|code|MOV             R0, R4|32-70
124336|code|POP             {R4,PC}|16-189
124338|code|BL              sub_1E578|255-247-225-255
124342|code|MOV             R0, R4|32-70
124344|code|POP             {R4,PC}|16-189
124346|data|ALIGN 4|0-191
124348|code|PUSH            {R4,LR}|16-181
124350|code|MOV             R4, R0|4-70
124352|code|BLX             dlerror|248-247-52-232
124356|code|MOV             R0, R4; handle|32-70
124358|code|BLX             dlclose|248-247-204-232
124362|code|CBNZ            R0, loc_1E5CE|0-185
124364|code|POP             {R4,PC}|16-189
124366|code|POP.W           {R4,LR}|189-232-16-64
124370|code|B               sub_1E578|209-231
124372|code|PUSH            {R4-R6,LR}|112-181
124374|code|MOV             R6, R0|6-70
124376|code|MOV             R5, R1|13-70
124378|code|MOV             R4, R2|20-70
124380|code|BLX             dlerror|248-247-38-232
124384|code|MOV             R0, R6; handle|48-70
124386|code|MOV             R1, R5; name|41-70
124388|code|BLX             dlsym|248-247-30-236
124392|code|STR             R0, [R4]|32-96
124394|code|POP.W           {R4-R6,LR}|189-232-112-64
124398|code|B               sub_1E578|195-231
124400|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1E5F8)|13-75
124402|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|14-74
124404|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
124406|code|PUSH            {R4-R6,LR}|112-181
124408|code|SUB             SP, SP, #0x18|134-176
124410|code|LDR             R5, [R3,R2]; __stack_chk_guard|157-88
124412|code|MOV             R6, R1|14-70
124414|code|ADD             R1, SP, #0x28+var_24|1-169
124416|code|MOV             R4, R0|4-70
124418|code|LDR             R3, [R5]|43-104
124420|code|STR             R3, [SP,#0x28+var_14]|5-147
124422|code|BLX             dladdr|248-247-74-232
124426|code|CBZ             R0, loc_1E616|32-177
124428|code|CBZ             R6, loc_1E614|22-177
124430|code|LDR             R3, [SP,#0x28+var_18]|4-155
124432|code|SUBS            R4, R4, R3|228-26
124434|code|STR             R4, [R6]|52-96
124436|code|LDR             R0, [SP,#0x28+var_1C]|3-152
124438|code|LDR             R2, [SP,#0x28+var_14]|5-154
124440|code|LDR             R3, [R5]|43-104
124442|code|CMP             R2, R3|154-66
124444|code|BNE             loc_1E622|1-209
124446|code|ADD             SP, SP, #0x18|6-176
124448|code|POP             {R4-R6,PC}|112-189
124450|code|BLX             __stack_chk_fail|248-247-10-234
124454|data|ALIGN 4|0-191
124456|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1E5F8|168-94-1-0
124460|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
124464|code|PUSH            {R4-R6,LR}|112-181
124466|code|MOV             R5, R1|13-70
124468|code|SUB             SP, SP, #8|130-176
124470|code|MOV             R1, R2; num|17-70
124472|code|MOV             R4, R2|20-70
124474|code|MOV             R6, R0|6-70
124476|code|MOVS            R2, #1; turn_on|1-34
124478|code|MOV             R0, R5; from|40-70
124480|code|BLX             ioperm|248-247-250-234
124484|code|ADDS            R0, #1|1-48
124486|code|IT NE|24-191
124488|code|MOVNE           R0, #1|1-32
124490|code|BEQ             loc_1E650|1-208
124492|code|ADD             SP, SP, #8|2-176
124494|code|POP             {R4-R6,PC}|112-189
124496|code|BLX             __errno_location|248-247-130-235
124500|code|LDR             R0, [R0]; errnum|0-104
124502|code|BLX             strerror|248-247-114-232
124506|code|LDR             R1, =(aPortEnableErro - 0x1E664); "Port enable error: %u.%u: %s"|5-73
124508|code|MOV             R2, R5|42-70
124510|code|MOV             R3, R4|35-70
124512|code|ADD             R1, PC; "Port enable error: %u.%u: %s"|121-68
124514|code|STR             R0, [SP,#0x18+var_18]|0-144
124516|code|MOV             R0, R6|48-70
124518|code|BL              logMessage|251-247-95-254
124522|code|MOVS            R0, #0|0-32
124524|code|ADD             SP, SP, #8|2-176
124526|code|POP             {R4-R6,PC}|112-189
124528|data|DCD aPortEnableErro - 0x1E664; "Port enable error: %u.%u: %s"|172-69-0-0
124532|code|PUSH            {R4,R5,LR}|48-181
124534|code|MOVS            R2, #0; turn_on|0-34
124536|code|SUB             SP, SP, #0xC|131-176
124538|code|MOV             R5, R0|5-70
124540|code|MOV             R4, R1|12-70
124542|code|BLX             ioperm|248-247-220-234
124546|code|ADDS            R0, #1|1-48
124548|code|IT NE|24-191
124550|code|MOVNE           R0, #1|1-32
124552|code|BEQ             loc_1E68E|1-208
124554|code|ADD             SP, SP, #0xC|3-176
124556|code|POP             {R4,R5,PC}|48-189
124558|code|BLX             __errno_location|248-247-100-235
124562|code|LDR             R0, [R0]; errnum|0-104
124564|code|BLX             strerror|248-247-82-232
124568|code|LDR             R1, =(aPortDisableErr - 0x1E6A2); "Port disable error: %u.%u: %s"|5-73
124570|code|MOV             R2, R5|42-70
124572|code|MOV             R3, R4|35-70
124574|code|ADD             R1, PC; "Port disable error: %u.%u: %s"|121-68
124576|code|STR             R0, [SP,#0x18+var_18]|0-144
124578|code|MOVS            R0, #3|3-32
124580|code|BL              logMessage|251-247-64-254
124584|code|MOVS            R0, #0|0-32
124586|code|ADD             SP, SP, #0xC|3-176
124588|code|POP             {R4,R5,PC}|48-189
124590|data|ALIGN 0x10|0-191
124592|data|DCD aPortDisableErr - 0x1E6A2; "Port disable error: %u.%u: %s"|142-69-0-0
124596|code|B.W             j_inb|248-247-244-186
124600|code|MOV             R3, R0|3-70
124602|code|MOV             R0, R1|8-70
124604|code|MOV             R1, R3|25-70
124606|code|B.W             j_outb|248-247-193-186
124610|data|ALIGN 4|0-191
124612|code|PUSH.W          {R4-R8,LR}|45-233-240-65
124616|code|MOV             R5, R1|13-70
124618|code|MOV             R7, R2|23-70
124620|code|MOV             R6, R0|6-70
124622|code|BLX             __open_2|248-247-12-232
124626|code|ADDS            R1, R0, #1|65-28
124628|code|MOV             R4, R0|4-70
124630|code|BEQ             loc_1E6EC|9-208
124632|code|LDR             R1, =(aDeviceOpenedSF - 0x1E6E4); "device opened: %s: fd=%d"|31-73
124634|code|MOV             R2, R6|50-70
124636|code|MOVS            R0, #7|7-32
124638|code|MOV             R3, R4|35-70
124640|code|ADD             R1, PC; "device opened: %s: fd=%d"|121-68
124642|code|BL              logMessage|251-247-33-254
124646|code|MOV             R0, R4|32-70
124648|code|POP.W           {R4-R8,PC}|189-232-240-129
124652|code|CBZ             R7, loc_1E732|15-179
124654|code|AND.W           R3, R5, #3|5-240-3-3
124658|code|CMP             R3, #2|2-43
124660|code|BNE             loc_1E732|29-209
124662|code|BLX             __errno_location|248-247-48-235
124666|code|BIC.W           R5, R5, #3|37-240-3-5
124670|code|LDR             R7, [R0]|7-104
124672|code|MOV             R8, R0|128-70
124674|code|CMP             R7, #0xD|13-47
124676|code|BEQ             loc_1E720|12-208
124678|code|CMP             R7, #0x1E|30-47
124680|code|BNE             loc_1E752|35-209
124682|code|MOV             R1, R5|41-70
124684|code|MOV             R0, R6|48-70
124686|code|BLX             __open_2|247-247-236-239
124690|code|ADDS            R2, R0, #1|66-28
124692|code|MOV             R4, R0|4-70
124694|code|BNE             loc_1E6D8|223-209
124696|code|STR.W           R7, [R8]|200-248-0-112
124700|code|MOV             R0, R7|56-70
124702|code|B               loc_1E738|11-224
124704|code|MOV             R0, R6|48-70
124706|code|ORR.W           R1, R5, #1|69-240-1-1
124710|code|BLX             __open_2|247-247-224-239
124714|code|ADDS            R3, R0, #1|67-28
124716|code|MOV             R4, R0|4-70
124718|code|BNE             loc_1E6D8|211-209
124720|code|B               loc_1E70A|235-231
124722|code|BLX             __errno_location|248-247-18-235
124726|code|LDR             R0, [R0]; errnum|0-104
124728|code|BLX             strerror|248-247-0-232
124732|code|LDR             R1, =(aCannotOpenDevi - 0x1E744); "cannot open device: %s: %s"|7-73
124734|code|MOV             R2, R6|50-70
124736|code|ADD             R1, PC; "cannot open device: %s: %s"|121-68
124738|code|MOV             R3, R0|3-70
124740|code|MOVS            R0, #7|7-32
124742|code|BL              logMessage|251-247-239-253
124746|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
124750|code|POP.W           {R4-R8,PC}|189-232-240-129
124754|code|MOV             R0, R7|56-70
124756|code|B               loc_1E738|240-231
124758|data|ALIGN 4|0-191
124760|data|DCD aDeviceOpenedSF - 0x1E6E4; "device opened: %s: fd=%d"|140-77-0-0
124764|data|DCD aCannotOpenDevi - 0x1E744; "cannot open device: %s: %s"|16-77-0-0
124768|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1E768)|52-75
124770|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|53-74
124772|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
124774|code|PUSH.W          {R4-R9,LR}|45-233-240-67
124778|code|SUB             SP, SP, #0x11C|199-176
124780|code|LDR             R7, [R3,R2]; __stack_chk_guard|159-88
124782|code|MOV             R6, R0|6-70
124784|code|MOV             R4, R1|12-70
124786|code|LDR             R3, [R7]|59-104
124788|code|STR             R3, [SP,#0x138+var_24]|69-147
124790|code|CBZ             R1, loc_1E77E|17-177
124792|code|LDRB            R3, [R1]|11-120
124794|code|ADDS            R3, #1|1-51
124796|code|STRB            R3, [R1]|11-112
124798|code|LDR.W           R9, =(aProcSysKernelM - 0x1E788); "/proc/sys/kernel/modprobe"|223-248-188-144
124802|code|LDR             R1, =(aInvalidUnicode+0x18 - 0x1E78A); "r"|47-73
124804|code|ADD             R9, PC; "/proc/sys/kernel/modprobe"|249-68
124806|code|ADD             R1, PC; "r" ; modes|121-68
124808|code|MOV             R0, R9; filename|72-70
124810|code|BLX             fopen|248-247-170-232
124814|code|MOV             R5, R0|5-70
124816|code|CMP             R0, #0|0-40
124818|code|BEQ             loc_1E80E|60-208
124820|code|ADD             R0, SP, #0x138+s; s|5-168
124822|code|MOV.W           R1, #0x100; n|79-244-128-113
124826|code|MOV             R2, R5; stream|42-70
124828|code|BLX             fgets|248-247-2-234
124832|code|MOV             R8, R0|128-70
124834|code|CBZ             R0, loc_1E7AA|16-177
124836|code|BLX             strlen|248-247-60-234
124840|code|CBNZ            R0, loc_1E7E8|240-185
124842|code|LDR.W           R8, =(aModprobe - 0x1E7B2); "modprobe"|223-248-152-128
124846|code|ADD             R8, PC; "modprobe"|248-68
124848|code|MOV             R0, R5; stream|40-70
124850|code|BLX             fclose|248-247-98-234
124854|code|ADD             R3, SP, #0x138+var_134|1-171
124856|code|LDR             R1, =(aQ - 0x1E7C6); "-q"|35-73
124858|code|MOVS            R5, #0|0-37
124860|code|STR.W           R8, [SP,#0x138+var_134]|205-248-4-128
124864|code|MOV             R0, R3|24-70
124866|code|ADD             R1, PC; "-q"|121-68
124868|code|STR             R6, [SP,#0x138+var_12C]|3-150
124870|code|STR             R1, [SP,#0x138+var_130]|2-145
124872|code|STR             R5, [SP,#0x138+var_128]|4-149
124874|code|BL              executeHostCommand|0-240-29-252
124878|code|CBNZ            R0, loc_1E7FE|176-185
124880|code|CBZ             R4, loc_1E7D8|20-177
124882|code|LDRB            R3, [R4]|35-120
124884|code|ADDS            R3, #1|1-51
124886|code|STRB            R3, [R4]|35-112
124888|code|MOVS            R0, #1|1-32
124890|code|LDR             R2, [SP,#0x138+var_24]|69-154
124892|code|LDR             R3, [R7]|59-104
124894|code|CMP             R2, R3|154-66
124896|code|BNE             loc_1E82E|37-209
124898|code|ADD             SP, SP, #0x11C|71-176
124900|code|POP.W           {R4-R9,PC}|189-232-240-131
124904|code|SUBS            R0, #1|1-56
124906|code|LDRB.W          R3, [R8,R0]|24-248-0-48
124910|code|CMP             R3, #0xA|10-43
124912|code|BNE             loc_1E7B0|222-209
124914|code|MOVS            R3, #0|0-35
124916|code|STRB.W          R3, [R8,R0]|8-248-0-48
124920|code|CMP             R0, #0|0-40
124922|code|BNE             loc_1E7B0|217-209
124924|code|B               loc_1E7AA|213-231
124926|code|LDR             R1, =(aKernelModuleNo - 0x1E808); "kernel module not installed: %s"|19-73
124928|code|MOVS            R0, #4|4-32
124930|code|MOV             R2, R6|50-70
124932|code|ADD             R1, PC; "kernel module not installed: %s"|121-68
124934|code|BL              logMessage|251-247-143-253
124938|code|MOV             R0, R5|40-70
124940|code|B               loc_1E7DA|229-231
124942|code|BLX             __errno_location|248-247-164-234
124946|code|LDR.W           R8, =(aModprobe - 0x1E81A); "modprobe"|223-248-60-128
124950|code|ADD             R8, PC; "modprobe"|248-68
124952|code|LDR             R0, [R0]; errnum|0-104
124954|code|BLX             strerror|247-247-144-239
124958|code|LDR             R1, =(aCannotOpenSS - 0x1E826); "cannot open %s: %s"|13-73
124960|code|MOV             R2, R9|74-70
124962|code|ADD             R1, PC; "cannot open %s: %s"|121-68
124964|code|MOV             R3, R0|3-70
124966|code|MOVS            R0, #4|4-32
124968|code|BL              logMessage|251-247-126-253
124972|code|B               loc_1E7B6|195-231
124974|code|BLX             __stack_chk_fail|248-247-4-233
124978|data|ALIGN 4|0-191
124980|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1E768|56-93-1-0
124984|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
124988|data|DCD aProcSysKernelM - 0x1E788; "/proc/sys/kernel/modprobe"|16-77-0-0
124992|data|DCD aInvalidUnicode+0x18 - 0x1E78A; "r"|214-83-0-0
124996|data|DCD aModprobe - 0x1E7B2; "modprobe"|218-76-0-0
125000|data|DCD aQ - 0x1E7C6; "-q"|2-77-0-0
125004|data|DCD aKernelModuleNo - 0x1E808; "kernel module not installed: %s"|196-76-0-0
125008|data|DCD aModprobe - 0x1E81A; "modprobe"|114-76-0-0
125012|data|DCD aCannotOpenSS - 0x1E826; "cannot open %s: %s"|142-76-0-0
125016|code|CBZ             R1, loc_1E85E|9-177
125018|code|LDRB            R3, [R1]|11-120
125020|code|CBNZ            R3, loc_1E860|3-185
125022|code|B               loc_1E760|127-231
125024|code|SUB.W           R0, R3, #2|163-241-2-0
125028|code|CLZ.W           R0, R0|176-250-128-240
125032|code|LSRS            R0, R0, #5|64-9
125034|code|BX              LR|112-71
125036|code|PUSH.W          {R4-R11,LR}|45-233-240-79
125040|code|MOV             R6, R1|14-70
125042|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1E87E)|93-76
125044|code|MOV             R7, R3|31-70
125046|code|LDR             R1, =(__stack_chk_guard_ptr - 0x344A0)|93-73
125048|code|SUB             SP, SP, #0x74|157-176
125050|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
125052|code|MOV             R10, R2|146-70
125054|code|MOV             R8, R0|128-70
125056|code|MOV             R3, R4|35-70
125058|code|LDR             R4, [R4,R1]; __stack_chk_guard|100-88
125060|code|LDR             R3, [R4]|35-104
125062|code|STR             R3, [SP,#0x98+var_2C]|27-147
125064|code|BL              getDevicePath|252-247-28-254
125068|code|CMP             R0, #0|0-40
125070|code|BEQ             loc_1E90C|61-208
125072|code|MOV             R1, R6|49-70
125074|code|MOVS            R2, #1|1-34
125076|code|MOV             R5, R0|5-70
125078|code|BL              sub_1E6C4|255-247-21-255
125082|code|CMP.W           R0, #0xFFFFFFFF|176-241-255-63
125086|code|MOV             R9, R0|129-70
125088|code|BEQ             loc_1E8F8|42-208
125090|code|MOVS            R0, #3; ver|3-32
125092|code|MOV             R1, R9; fildes|73-70
125094|code|ADD             R2, SP, #0x98+stat_buf; stat_buf|4-170
125096|code|BLX             __fxstat|248-247-136-233
125100|code|ADDS            R0, #1|1-48
125102|code|BEQ             loc_1E912|48-208
125104|code|LDR             R3, [SP,#0x98+stat_buf.st_mode]|8-155
125106|code|AND.W           R3, R3, #0xF000|3-244-112-67
125110|code|CMP.W           R3, #0x2000|179-245-0-95
125114|code|BEQ             loc_1E8E2|18-208
125116|code|LDR             R1, =(aNotACharacterD - 0x1E8C8); "not a character device: %s: fd=%d"|76-73
125118|code|MOVS            R0, #7|7-32
125120|code|MOV             R2, R5|42-70
125122|code|MOV             R3, R9|75-70
125124|code|ADD             R1, PC; "not a character device: %s: fd=%d"|121-68
125126|code|BL              logMessage|251-247-47-253
125130|code|MOV             R0, R9; fd|72-70
125132|code|BLX             close|247-247-246-239
125136|code|LDR             R1, =(aDeviceClosedSF - 0x1E8DA); "device closed: %s: fd=%d"|72-73
125138|code|MOV             R3, R9|75-70
125140|code|MOVS            R0, #7|7-32
125142|code|ADD             R1, PC; "device closed: %s: fd=%d"|121-68
125144|code|MOV             R2, R5|42-70
125146|code|MOV.W           R9, #0xFFFFFFFF|79-240-255-57
125150|code|BL              logMessage|251-247-35-253
125154|code|MOV             R0, R5; ptr|40-70
125156|code|BLX             free|247-247-206-238
125160|code|LDR             R2, [SP,#0x98+var_2C]|27-154
125162|code|MOV             R0, R9|72-70
125164|code|LDR             R3, [R4]|35-104
125166|code|CMP             R2, R3|154-66
125168|code|BNE             loc_1E9CA|107-209
125170|code|ADD             SP, SP, #0x74 ; 't'|29-176
125172|code|POP.W           {R4-R11,PC}|189-232-240-143
125176|code|BLX             __errno_location|248-247-46-234
125180|code|LDR             R3, [R0]|3-104
125182|code|MOV             R11, R0|131-70
125184|code|CMP             R3, #2|2-43
125186|code|BEQ             loc_1E92E|20-208
125188|code|MOV.W           R9, #0xFFFFFFFF|79-240-255-57
125192|code|CMP             R5, #0|0-45
125194|code|BNE             loc_1E8E2|234-209
125196|code|MOV.W           R9, #0xFFFFFFFF|79-240-255-57
125200|code|B               loc_1E8E8|234-231
125202|code|BLX             __errno_location|248-247-34-234
125206|code|LDR             R0, [R0]; errnum|0-104
125208|code|BLX             strerror|247-247-16-239
125212|code|LDR             R1, =(unk_2353C - 0x1E926)|54-73
125214|code|MOV             R2, R9|74-70
125216|code|MOV             R3, R5|43-70
125218|code|ADD             R1, PC; unk_2353C|121-68
125220|code|STR             R0, [SP,#0x98+var_98]|0-144
125222|code|MOVS            R0, #7|7-32
125224|code|BL              logMessage|251-247-254-252
125228|code|B               loc_1E8CA|205-231
125230|code|MOV             R0, R5; ptr|40-70
125232|code|BLX             free|247-247-168-238
125236|code|MOV             R0, R8|64-70
125238|code|BL              locatePathName|251-247-155-255
125242|code|BL              makeWritablePath|252-247-159-249
125246|code|MOV             R5, R0|5-70
125248|code|CMP             R0, #0|0-40
125250|code|BEQ             loc_1E90C|227-208
125252|code|MOV             R1, R6|49-70
125254|code|MOVS            R2, #0|0-34
125256|code|BL              sub_1E6C4|255-247-188-254
125260|code|CMP.W           R0, #0xFFFFFFFF|176-241-255-63
125264|code|MOV             R9, R0|129-70
125266|code|BNE             loc_1E8A2|166-209
125268|code|LDR.W           R3, [R11]|219-248-0-48
125272|code|CMP             R3, #2|2-43
125274|code|BNE             loc_1E904|211-209
125276|code|BIC.W           R1, R7, #0xFF|39-240-255-1
125280|code|UBFX.W          R12, R10, #0, #0xC|202-243-11-12
125284|code|ADD.W           LR, SP, #0x98+var_28|13-241-112-14
125288|code|UXTB            R0, R7|248-178
125290|code|LSLS            R2, R1, #0xC|10-3
125292|code|BIC.W           R9, R10, #0xFF0|42-244-127-105
125296|code|ORR.W           R12, R0, R12,LSL#8|64-234-12-44
125300|code|LSRS            R3, R1, #0x14|11-13
125302|code|MOV.W           R8, #0|79-240-0-8
125306|code|BIC.W           R9, R9, #0xF|41-240-15-9
125310|code|ORR.W           R2, R2, R8|66-234-8-2
125314|code|ORR.W           R3, R3, R9|67-234-9-3
125318|code|ORR.W           R2, R2, R12|66-234-12-2
125322|code|MOVS            R0, #1; ver|1-32
125324|code|STRD.W          R2, R3, [LR,#-0x68]!|110-233-26-35
125328|code|MOV             R1, R5; path|41-70
125330|code|MOV.W           R2, #0x2180; mode|79-244-6-82
125334|code|MOV             R3, LR; dev|115-70
125336|code|BLX             __xmknod|247-247-214-238
125340|code|ADDS            R0, #1|1-48
125342|code|BEQ             loc_1E9CE|22-208
125344|code|LDR             R1, =(aDeviceCreatedS - 0x1E9AE); "device created: %s mode=%06o major=%d m"...|22-73
125346|code|MOVS            R0, #7|7-32
125348|code|MOV             R2, R5|42-70
125350|code|MOV.W           R3, #0x2180|79-244-6-83
125354|code|ADD             R1, PC; "device created: %s mode=%06o major=%d m"...|121-68
125356|code|STR.W           R10, [SP,#0x98+var_98]|205-248-0-160
125360|code|STR             R7, [SP,#0x98+var_94]|1-151
125362|code|BL              logMessage|251-247-185-252
125366|code|MOV             R0, R5|40-70
125368|code|MOV             R1, R6|49-70
125370|code|MOV             R2, R8|66-70
125372|code|BL              sub_1E6C4|255-247-130-254
125376|code|CMP.W           R0, #0xFFFFFFFF|176-241-255-63
125380|code|MOV             R9, R0|129-70
125382|code|BEQ             loc_1E8E2|140-208
125384|code|B               loc_1E8A2|107-231
125386|code|BLX             __stack_chk_fail|248-247-54-232
125390|code|LDR.W           R0, [R11]; errnum|219-248-0-0
125394|code|BLX             strerror|247-247-180-238
125398|code|LDR             R1, =(aCannotCreateDe - 0x1E9DE); "cannot create device: %s: %s"|10-73
125400|code|MOV             R2, R5|42-70
125402|code|ADD             R1, PC; "cannot create device: %s: %s"|121-68
125404|code|MOV             R3, R0|3-70
125406|code|MOVS            R0, #7|7-32
125408|code|BL              logMessage|251-247-162-252
125412|code|B               loc_1E904|142-231
125414|data|ALIGN 4|0-191
125416|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1E87E|34-92-1-0
125420|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
125424|data|DCD aNotACharacterD - 0x1E8C8; "not a character device: %s: fd=%d"|152-76-0-0
125428|data|DCD aDeviceClosedSF - 0x1E8DA; "device closed: %s: fd=%d"|170-76-0-0
125432|data|DCD unk_2353C - 0x1E926|22-76-0-0
125436|data|DCD aDeviceCreatedS - 0x1E9AE; "device created: %s mode=%06o major=%d m"...|94-75-0-0
125440|data|DCD aCannotCreateDe - 0x1E9DE; "cannot create device: %s: %s"|14-75-0-0
125444|code|PUSH.W          {R4-R9,LR}|45-233-240-67
125448|code|SUBW            SP, SP, #0x4B4|173-242-180-77
125452|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x1EA18)|88-78
125454|code|MOV             R8, R0|128-70
125456|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|88-75
125458|code|MOVS            R0, #0x64 ; 'd'; size|100-32
125460|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
125462|code|LDR             R7, [R6,R3]; __stack_chk_guard|247-88
125464|code|LDR             R3, [R7]|59-104
125466|code|STR.W           R3, [SP,#0x4D0+var_24]|205-248-172-52
125470|code|BLX             malloc|248-247-248-232
125474|code|MOV             R5, R0|5-70
125476|code|CMP             R0, #0|0-40
125478|code|BEQ.W           loc_1EB5C|0-240-153-128
125482|code|MOVS            R1, #0; c|0-33
125484|code|MOVS            R2, #0x64 ; 'd'; n|100-34
125486|code|BLX             memset|247-247-2-239
125490|code|LDR             R1, =(byte_388CC - 0x1EA3A)|81-73
125492|code|LDR             R0, =(aUinput - 0x1EA3C); "uinput"|81-72
125494|code|ADD             R1, PC; byte_388CC|121-68
125496|code|ADD             R0, PC; "uinput"|120-68
125498|code|LDRB            R4, [R1]|12-120
125500|code|BL              installKernelModule|255-247-12-255
125504|code|CLZ.W           R4, R4|180-250-132-244
125508|code|LSRS            R4, R4, #5|100-9
125510|code|CMP             R0, #0|0-40
125512|code|ITE EQ|12-191
125514|code|MOVEQ           R0, #0|0-32
125516|code|ANDNE.W         R0, R4, #1|4-240-1-0
125520|code|CBZ             R0, loc_1EA5A|24-177
125522|code|MOV.W           R0, #0x1F4|79-244-250-112
125526|code|BL              asyncWait|253-247-153-254
125530|code|LDR             R0, =(off_34274 - 0x1EA62); "uinput"|73-72
125532|code|LDR             R1, =(aUinput - 0x1EA64); "uinput"|73-73
125534|code|ADD             R0, PC; off_34274|120-68
125536|code|ADD             R1, PC; "uinput"|121-68
125538|code|BL              resolveDeviceName|252-247-57-253
125542|code|MOV             R9, R0|129-70
125544|code|CMP             R0, #0|0-40
125546|code|BEQ             loc_1EB3A|102-208
125548|code|MOVS            R1, #1|1-33
125550|code|MOVS            R2, #0xA|10-34
125552|code|MOVS            R3, #0xDF|223-35
125554|code|BL              openCharacterDevice|255-247-251-254
125558|code|STR             R0, [R5]|40-96
125560|code|ADDS            R0, #1|1-48
125562|code|BEQ             loc_1EB22|82-208
125564|code|ADD             R4, SP, #0x4D0+s|4-172
125566|code|MOVS            R1, #0; c|0-33
125568|code|MOVW            R2, #0x45C; n|64-242-92-66
125572|code|MOV             R0, R4; s|32-70
125574|code|BLX             memset|247-247-214-238
125578|code|LDR             R2, =(aSSS_1 - 0x1EA9E); "%s %s %s"|63-74
125580|code|LDR.W           R12, =(aBrltty_1 - 0x1EA9C); "BRLTTY"|223-248-252-192
125584|code|MOVS            R1, #0x50 ; 'P'|80-33
125586|code|LDR.W           LR, =(a52dev - 0x1EAA0); "5.2dev"|223-248-252-224
125590|code|MOV             R3, R1|11-70
125592|code|ADD             R12, PC; "BRLTTY"|252-68
125594|code|ADD             R2, PC; "%s %s %s"|122-68
125596|code|ADD             LR, PC; "5.2dev"|254-68
125598|code|STR             R2, [SP,#0x4D0+var_4D0]|0-146
125600|code|STR.W           R12, [SP,#0x4D0+var_4CC]|205-248-4-192
125604|code|MOVS            R2, #1|1-34
125606|code|STR.W           LR, [SP,#0x4D0+var_4C8]|205-248-8-224
125610|code|MOV             R0, R4|32-70
125612|code|STR.W           R8, [SP,#0x4D0+var_4C4]|205-248-12-128
125616|code|BLX             __snprintf_chk|248-247-188-232
125620|code|MOV             R1, R4; buf|33-70
125622|code|LDR             R0, [R5]; fd|40-104
125624|code|MOVW            R2, #0x45C; n|64-242-92-66
125628|code|BLX             write|248-247-234-232
125632|code|ADDS            R0, #1|1-48
125634|code|BEQ             loc_1EB44|63-208
125636|code|BLX             getpid|247-247-154-237
125640|code|LDR             R4, =(__progname_ptr - 0x344A0)|50-76
125642|code|LDR             R3, =(aPidUSD - 0x1EAD8); "pid-%u/%s/%d"|51-75
125644|code|ADDW            R8, SP, #0x4D0+var_64|13-242-108-72
125648|code|MOVS            R1, #0x40 ; '@'|64-33
125650|code|MOVS            R2, #1|1-34
125652|code|ADD             R3, PC; "pid-%u/%s/%d"|123-68
125654|code|STR             R3, [SP,#0x4D0+var_4D0]|0-147
125656|code|MOV             R3, R1|11-70
125658|code|STR             R0, [SP,#0x4D0+var_4CC]|1-144
125660|code|MOV             R0, R8|64-70
125662|code|LDR             R4, [R6,R4]; __progname|52-89
125664|code|LDR             R4, [R4]|36-104
125666|code|STR             R4, [SP,#0x4D0+var_4C8]|2-148
125668|code|LDR             R4, [R5]|44-104
125670|code|STR             R4, [SP,#0x4D0+var_4C4]|3-148
125672|code|BLX             __snprintf_chk|248-247-160-232
125676|code|MOVW            R1, #0x556C|69-242-108-81
125680|code|MOV             R2, R8|66-70
125682|code|MOVT.W          R1, #0x4004; request|196-242-4-1
125686|code|LDR             R0, [R5]; fd|40-104
125688|code|BLX             ioctl|247-247-78-239
125692|code|ADDS            R0, #1|1-48
125694|code|BEQ             loc_1EB62|48-208
125696|code|LDR             R1, =(aUinputOpenedSF - 0x1EB0C); "uinput opened: %s fd=%d"|38-73
125698|code|MOV             R2, R9|74-70
125700|code|MOVS            R0, #7|7-32
125702|code|LDR             R3, [R5]|43-104
125704|code|ADD             R1, PC; "uinput opened: %s fd=%d"|121-68
125706|code|BL              logMessage|251-247-13-252
125710|code|LDR.W           R2, [SP,#0x4D0+var_24]|221-248-172-36
125714|code|MOV             R0, R5|40-70
125716|code|LDR             R3, [R7]|59-104
125718|code|CMP             R2, R3|154-66
125720|code|BNE             loc_1EB6C|40-209
125722|code|ADDW            SP, SP, #0x4B4|13-242-180-77
125726|code|POP.W           {R4-R9,PC}|189-232-240-131
125730|code|BLX             __errno_location|248-247-26-233
125734|code|LDR             R0, [R0]; errnum|0-104
125736|code|BLX             strerror|247-247-8-238
125740|code|LDR             R1, =(aCannotOpenUinp - 0x1EB34); "cannot open uinput device: %s: %s"|28-73
125742|code|MOV             R2, R9|74-70
125744|code|ADD             R1, PC; "cannot open uinput device: %s: %s"|121-68
125746|code|MOV             R3, R0|3-70
125748|code|MOVS            R0, #7|7-32
125750|code|BL              logMessage|251-247-247-251
125754|code|MOV             R0, R5; ptr|40-70
125756|code|MOVS            R5, #0|0-37
125758|code|BLX             free|247-247-162-237
125762|code|B               loc_1EB0E|228-231
125764|code|LDR             R0, =(aWriteStructUin - 0x1EB4A); "write(struct uinput_user_dev)"|23-72
125766|code|ADD             R0, PC; "write(struct uinput_user_dev)"|120-68
125768|code|BL              logSystemError|251-247-112-252
125772|code|LDR             R0, [R5]; fd|40-104
125774|code|BLX             close|247-247-182-238
125778|code|MOV             R0, R5; ptr|40-70
125780|code|MOVS            R5, #0|0-37
125782|code|BLX             free|247-247-150-237
125786|code|B               loc_1EB0E|216-231
125788|code|BL              logMallocError|251-247-112-252
125792|code|B               loc_1EB0E|213-231
125794|code|LDR             R0, =(aIoctlUiSetPhys - 0x1EB68); "ioctl[UI_SET_PHYS]"|17-72
125796|code|ADD             R0, PC; "ioctl[UI_SET_PHYS]"|120-68
125798|code|BL              logSystemError|251-247-97-252
125802|code|B               loc_1EB00|201-231
125804|code|BLX             __stack_chk_fail|247-247-100-239
125808|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1EA18|136-90-1-0
125812|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
125816|data|DCD byte_388CC - 0x1EA3A|146-158-1-0
125820|data|DCD aUinput - 0x1EA3C; "uinput"|100-75-0-0
125824|data|DCD off_34274 - 0x1EA62; "uinput"|18-88-1-0
125828|data|DCD aUinput - 0x1EA64; "uinput"|60-75-0-0
125832|data|DCD aSSS_1 - 0x1EA9E; "%s %s %s"|10-75-0-0
125836|data|DCD aBrltty_1 - 0x1EA9C; "BRLTTY"|24-75-0-0
125840|data|DCD a52dev - 0x1EAA0; "5.2dev"|28-75-0-0
125844|data|DCD __progname_ptr - 0x344A0|24-3-0-0
125848|data|DCD aPidUSD - 0x1EAD8; "pid-%u/%s/%d"|236-74-0-0
125852|data|DCD aUinputOpenedSF - 0x1EB0C; "uinput opened: %s fd=%d"|220-74-0-0
125856|data|DCD aCannotOpenUinp - 0x1EB34; "cannot open uinput device: %s: %s"|236-74-0-0
125860|data|DCD aWriteStructUin - 0x1EB4A; "write(struct uinput_user_dev)"|182-74-0-0
125864|data|DCD aIoctlUiSetPhys - 0x1EB68; "ioctl[UI_SET_PHYS]"|108-74-0-0
125868|code|PUSH            {R3,LR}|8-181
125870|code|MOVW            R1, #0x5501; request|69-242-1-81
125874|code|LDR             R0, [R0]; fd|0-104
125876|code|BLX             ioctl|247-247-240-238
125880|code|ADDS            R0, #1|1-48
125882|code|BEQ             loc_1EBC0|1-208
125884|code|MOVS            R0, #1|1-32
125886|code|POP             {R3,PC}|8-189
125888|code|LDR             R0, =(aIoctlUiDevCrea - 0x1EBC6); "ioctl[UI_DEV_CREATE]"|2-72
125890|code|ADD             R0, PC; "ioctl[UI_DEV_CREATE]"|120-68
125892|code|BL              logSystemError|251-247-50-252
125896|code|MOVS            R0, #0|0-32
125898|code|POP             {R3,PC}|8-189
125900|data|DCD aIoctlUiDevCrea - 0x1EBC6; "ioctl[UI_DEV_CREATE]"|126-74-0-0
125904|code|MOV             R2, R1|10-70
125906|code|MOVW            R1, #0x5564|69-242-100-81
125910|code|PUSH            {R3,LR}|8-181
125912|code|MOVT.W          R1, #0x4004; request|196-242-4-1
125916|code|LDR             R0, [R0]; fd|0-104
125918|code|BLX             ioctl|247-247-220-238
125922|code|ADDS            R0, #1|1-48
125924|code|BEQ             loc_1EBEA|1-208
125926|code|MOVS            R0, #1|1-32
125928|code|POP             {R3,PC}|8-189
125930|code|LDR             R0, =(aIoctlUiSetEvbi - 0x1EBF0); "ioctl[UI_SET_EVBIT]"|3-72
125932|code|ADD             R0, PC; "ioctl[UI_SET_EVBIT]"|120-68
125934|code|BL              logSystemError|251-247-29-252
125938|code|MOVS            R0, #0|0-32
125940|code|POP             {R3,PC}|8-189
125942|data|ALIGN 4|0-191
125944|data|DCD aIoctlUiSetEvbi - 0x1EBF0; "ioctl[UI_SET_EVBIT]"|108-74-0-0
125948|code|PUSH.W          {R4-R11,LR}|45-233-240-79
125952|code|SUB             SP, SP, #0x1C|135-176
125954|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x1EC0E)|25-78
125956|code|ADD             R5, SP, #0x40+tv|1-173
125958|code|LDR             R7, =(__stack_chk_guard_ptr - 0x344A0)|25-79
125960|code|MOV             R10, R3|154-70
125962|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
125964|code|MOVS            R4, #0|0-36
125966|code|MOV             R9, R0|129-70
125968|code|MOV             R8, R1|136-70
125970|code|LDR             R7, [R6,R7]; __stack_chk_guard|247-89
125972|code|MOV             R1, R4; tz|33-70
125974|code|MOV             R0, R5; tv|40-70
125976|code|MOV             R11, R2|147-70
125978|code|STR             R4, [SP,#0x40+tv]|1-148
125980|code|LDR             R3, [R7]|59-104
125982|code|STR             R4, [SP,#0x40+tv.tv_usec]|2-148
125984|code|STR             R4, [SP,#0x40+var_34]|3-148
125986|code|STR             R3, [SP,#0x40+var_2C]|5-147
125988|code|STR             R4, [SP,#0x40+var_30]|4-148
125990|code|BLX             gettimeofday|247-247-8-237
125994|code|LDR.W           R0, [R9]; fd|217-248-0-0
125998|code|MOV             R1, R5; buf|41-70
126000|code|MOVS            R2, #0x10; n|16-34
126002|code|STRH.W          R8, [SP,#0x40+var_34]|173-248-12-128
126006|code|STRH.W          R11, [SP,#0x40+var_34+2]|173-248-14-176
126010|code|STR.W           R10, [SP,#0x40+var_30]|205-248-16-160
126014|code|BLX             write|248-247-42-232
126018|code|ADDS            R0, #1|1-48
126020|code|IT NE|24-191
126022|code|MOVNE           R0, #1|1-32
126024|code|BEQ             loc_1EC58|6-208
126026|code|LDR             R2, [SP,#0x40+var_2C]|5-154
126028|code|LDR             R3, [R7]|59-104
126030|code|CMP             R2, R3|154-66
126032|code|BNE             loc_1EC64|8-209
126034|code|ADD             SP, SP, #0x1C|7-176
126036|code|POP.W           {R4-R11,PC}|189-232-240-143
126040|code|LDR             R0, =(aWriteStructInp - 0x1EC5E); "write(struct input_event)"|5-72
126042|code|ADD             R0, PC; "write(struct input_event)"|120-68
126044|code|BL              logSystemError|251-247-230-251
126048|code|MOV             R0, R4|32-70
126050|code|B               loc_1EC4A|242-231
126052|code|BLX             __stack_chk_fail|247-247-232-238
126056|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1EC0E|146-88-1-0
126060|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
126064|data|DCD aWriteStructInp - 0x1EC5E; "write(struct input_event)"|18-74-0-0
126068|code|MOV             R2, R1|10-70
126070|code|MOVW            R1, #0x5565|69-242-101-81
126074|code|PUSH            {R3,LR}|8-181
126076|code|MOVT.W          R1, #0x4004; request|196-242-4-1
126080|code|LDR             R0, [R0]; fd|0-104
126082|code|BLX             ioctl|247-247-138-238
126086|code|ADDS            R0, #1|1-48
126088|code|BEQ             loc_1EC8E|1-208
126090|code|MOVS            R0, #1|1-32
126092|code|POP             {R3,PC}|8-189
126094|code|LDR             R0, =(aIoctlUiSetKeyb - 0x1EC94); "ioctl[UI_SET_KEYBIT]"|3-72
126096|code|ADD             R0, PC; "ioctl[UI_SET_KEYBIT]"|120-68
126098|code|BL              logSystemError|251-247-203-251
126102|code|MOVS            R0, #0|0-32
126104|code|POP             {R3,PC}|8-189
126106|data|ALIGN 4|0-191
126108|data|DCD aIoctlUiSetKeyb - 0x1EC94; "ioctl[UI_SET_KEYBIT]"|248-73-0-0
126112|code|PUSH            {R4-R6,LR}|112-181
126114|code|MOV             R3, R2|19-70
126116|code|MOV             R4, R1|12-70
126118|code|MOV             R5, R2|21-70
126120|code|UXTH            R2, R1|138-178
126122|code|MOVS            R1, #1|1-33
126124|code|MOV             R6, R0|6-70
126126|code|BL              writeInputEvent|255-247-165-255
126130|code|CBZ             R0, locret_1ECDC|152-177
126132|code|ADD.W           R1, R6, R4,LSR#3|6-235-212-1
126136|code|MOVS            R3, #1|1-35
126138|code|AND.W           R4, R4, #7|4-240-7-4
126142|code|LDRB            R2, [R1,#4]|10-121
126144|code|LSLS            R3, R4|163-64
126146|code|CBNZ            R5, loc_1ECDE|101-185
126148|code|BIC.W           R3, R2, R3|34-234-3-3
126152|code|STRB            R3, [R1,#4]|11-113
126154|code|MOVS            R1, #0|0-33
126156|code|MOV             R0, R6|48-70
126158|code|MOV             R2, R1|10-70
126160|code|MOV             R3, R1|11-70
126162|code|BL              writeInputEvent|255-247-147-255
126166|code|ADDS            R0, #0|0-48
126168|code|IT NE|24-191
126170|code|MOVNE           R0, #1|1-32
126172|code|POP             {R4-R6,PC}|112-189
126174|code|ORRS            R3, R2|19-67
126176|code|STRB            R3, [R1,#4]|11-113
126178|code|B               loc_1ECCA|242-231
126180|code|PUSH.W          {R4-R10,LR}|45-233-240-71
126184|code|MOV             R10, R0|130-70
126186|code|MOVS            R4, #0|0-36
126188|code|MOV.W           R9, #1|79-240-1-9
126192|code|B               loc_1ECFA|3-224
126194|code|ADDS            R4, #1|1-52
126196|code|CMP.W           R4, #0x300|180-245-64-127
126200|code|BEQ             loc_1ED34|28-208
126202|code|ADD.W           R5, R10, R4,LSR#3|10-235-212-5
126206|code|AND.W           R8, R4, #7|4-240-7-8
126210|code|MOVS            R3, #0|0-35
126212|code|MOVS            R7, #0|0-39
126214|code|LDRB            R2, [R5,#4]|42-121
126216|code|LSR.W           R6, R2, R8|34-250-8-246
126220|code|AND.W           R2, R6, #1|6-240-1-2
126224|code|ORRS            R3, R2|19-67
126226|code|BEQ             loc_1ECF2|238-208
126228|code|MOV             R2, R7|58-70
126230|code|MOV             R0, R10|80-70
126232|code|MOV             R1, R4|33-70
126234|code|BL              writeKeyEvent|255-247-193-255
126238|code|LSL.W           R2, R9, R8|9-250-8-242
126242|code|CBZ             R0, locret_1ED36|64-177
126244|code|ADDS            R4, #1|1-52
126246|code|LDRB            R3, [R5,#4]|43-121
126248|code|CMP.W           R4, #0x300|180-245-64-127
126252|code|BIC.W           R3, R3, R2|35-234-2-3
126256|code|STRB            R3, [R5,#4]|43-113
126258|code|BNE             loc_1ECFA|226-209
126260|code|MOVS            R0, #1|1-32
126262|code|POP.W           {R4-R10,PC}|189-232-240-135
126266|data|ALIGN 4|0-191
126268|code|PUSH            {R4,LR}|16-181
126270|code|MOV             R4, R0|4-70
126272|code|BL              releasePressedKeys|255-247-208-255
126276|code|LDR             R0, [R4]; fd|32-104
126278|code|BLX             close|247-247-186-237
126282|code|MOV             R0, R4; ptr|32-70
126284|code|POP.W           {R4,LR}|189-232-16-64
126288|code|B.W             j_free|247-247-150-188
126292|code|PUSH            {R4,LR}|16-181
126294|code|MOV             R3, R1|11-70
126296|code|MOVS            R2, #0|0-34
126298|code|MOVS            R1, #0x14|20-33
126300|code|MOV             R4, R0|4-70
126302|code|BL              writeInputEvent|255-247-77-255
126306|code|CBZ             R0, locret_1ED76|64-177
126308|code|MOVS            R1, #0|0-33
126310|code|MOV             R0, R4|32-70
126312|code|MOV             R2, R1|10-70
126314|code|MOV             R3, R1|11-70
126316|code|BL              writeInputEvent|255-247-70-255
126320|code|ADDS            R0, #0|0-48
126322|code|IT NE|24-191
126324|code|MOVNE           R0, #1|1-32
126326|code|POP             {R4,PC}|16-189
126328|code|PUSH            {R4,LR}|16-181
126330|code|MOV             R3, R1|11-70
126332|code|MOVS            R2, #1|1-34
126334|code|MOVS            R1, #0x14|20-33
126336|code|MOV             R4, R0|4-70
126338|code|BL              writeInputEvent|255-247-59-255
126342|code|CBZ             R0, locret_1ED9A|64-177
126344|code|MOVS            R1, #0|0-33
126346|code|MOV             R0, R4|32-70
126348|code|MOV             R2, R1|10-70
126350|code|MOV             R3, R1|11-70
126352|code|BL              writeInputEvent|255-247-52-255
126356|code|ADDS            R0, #0|0-48
126358|code|IT NE|24-191
126360|code|MOVNE           R0, #1|1-32
126362|code|POP             {R4,PC}|16-189
126364|code|PUSH.W          {R4-R11,LR}|45-233-240-79
126368|code|SUB             SP, SP, #0x74|157-176
126370|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1EDAA)|51-76
126372|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|51-75
126374|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
126376|code|LDR             R3, [R4,R3]; __stack_chk_guard|227-88
126378|code|STR             R3, [SP,#0x98+var_94]|1-147
126380|code|LDR             R3, [R3]|27-104
126382|code|STR             R3, [SP,#0x98+var_2C]|27-147
126384|code|BL              newUinputObject|255-247-40-254
126388|code|MOV             R5, R0|5-70
126390|code|CBZ             R0, loc_1EDC6|48-177
126392|code|MOVS            R1, #1|1-33
126394|code|BL              enableUinputEventType|255-247-9-255
126398|code|CBNZ            R0, loc_1EDD8|88-185
126400|code|MOV             R0, R5|40-70
126402|code|BL              destroyUinputObject|255-247-187-255
126406|code|MOVS            R0, #0|0-32
126408|code|LDR             R3, [SP,#0x98+var_94]|1-155
126410|code|LDR             R2, [SP,#0x98+var_2C]|27-154
126412|code|LDR             R3, [R3]|27-104
126414|code|CMP             R2, R3|154-66
126416|code|BNE             loc_1EE6A|75-209
126418|code|ADD             SP, SP, #0x74 ; 't'|29-176
126420|code|POP.W           {R4-R11,PC}|189-232-240-143
126424|code|ADD             R0, SP, #0x98+s; s|3-168
126426|code|MOVS            R1, #0; c|0-33
126428|code|MOVS            R2, #0x60 ; '`'; n|96-34
126430|code|MOV.W           R8, #1|79-240-1-8
126434|code|BLX             memset|247-247-40-237
126438|code|LDR             R3, =(linuxKeyMapDescriptors_ptr - 0x344A0)|36-75
126440|code|LDR.W           R9, [R4,R3]; linuxKeyMapDescriptors|84-248-3-144
126444|code|MOV             R10, R9|202-70
126446|code|LDR.W           R0, [R10,#8]|218-248-8-0
126450|code|MOVS            R4, #0|0-36
126452|code|CBNZ            R0, loc_1EDFE|24-185
126454|code|B               loc_1EE44|37-224
126456|code|ADDS            R4, #1|1-52
126458|code|CMP             R4, R0|132-66
126460|code|BCS             loc_1EE44|34-210
126462|code|LDR.W           R3, [R10,#4]|218-248-4-48
126466|code|LDRB            R1, [R3,R4]|25-93
126468|code|CMP             R1, #0|0-41
126470|code|BEQ             loc_1EDF8|247-208
126472|code|ADD             R3, SP, #0x98+var_28|28-171
126474|code|AND.W           R11, R1, #7|1-240-7-11
126478|code|ADD.W           LR, R3, R1,LSR#3|3-235-209-14
126482|code|MOVS            R3, #0|0-35
126484|code|LDRB.W          R12, [LR,#-0x64]|30-248-100-204
126488|code|LSR.W           R6, R12, R11|44-250-11-246
126492|code|AND.W           R2, R6, #1|6-240-1-2
126496|code|ORRS            R3, R2|19-67
126498|code|BNE             loc_1EDF8|233-209
126500|code|LSL.W           R3, R8, R11|8-250-11-243
126504|code|MOV             R0, R5|40-70
126506|code|ORR.W           R12, R12, R3|76-234-3-12
126510|code|STRB.W          R12, [LR,#-0x64]|14-248-100-204
126514|code|BL              enableUinputKey|255-247-31-255
126518|code|CMP             R0, #0|0-40
126520|code|BEQ             loc_1EDC0|194-208
126522|code|LDR.W           R0, [R10,#8]|218-248-8-0
126526|code|ADDS            R4, #1|1-52
126528|code|CMP             R4, R0|132-66
126530|code|BCC             loc_1EDFE|220-211
126532|code|ADD.W           R10, R10, #0xC|10-241-12-10
126536|code|ADD.W           R3, R9, #0x60 ; '`'|9-241-96-3
126540|code|CMP             R10, R3|154-69
126542|code|BCC             loc_1EDEE|206-211
126544|code|MOV             R0, R5|40-70
126546|code|MOVS            R1, #0x14|20-33
126548|code|BL              enableUinputEventType|255-247-188-254
126552|code|CMP             R0, #0|0-40
126554|code|BEQ             loc_1EDC0|177-208
126556|code|MOV             R0, R5|40-70
126558|code|BL              createUinputDevice|255-247-165-254
126562|code|CMP             R0, #0|0-40
126564|code|BEQ             loc_1EDC0|172-208
126566|code|MOV             R0, R5|40-70
126568|code|B               loc_1EDC8|174-231
126570|code|BLX             __stack_chk_fail|247-247-230-237
126574|data|ALIGN 0x10|0-191
126576|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1EDAA|246-86-1-0
126580|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
126584|data|DCD linuxKeyMapDescriptors_ptr - 0x344A0|68-3-0-0
126588|code|BX              LR|112-71
126590|data|ALIGN 0x10|0-191
126592|code|PUSH            {R4,LR}|16-181
126594|code|MOV             R4, R0|4-70
126596|code|ADDS            R0, #0xC|12-48
126598|code|BL              destructHostCommandPackageData|0-240-33-249
126602|code|LDR             R3, [R4]|35-104
126604|code|LDR             R3, [R3]|27-104
126606|code|LDR             R0, [R3]; stream|24-104
126608|code|CBZ             R0, loc_1EE9E|40-177
126610|code|BLX             fclose|247-247-242-238
126614|code|LDR             R3, [R4]|35-104
126616|code|MOVS            R2, #0|0-34
126618|code|LDR             R3, [R3]|27-104
126620|code|STR             R2, [R3]|26-96
126622|code|MOVS            R0, #1|1-32
126624|code|POP             {R4,PC}|16-189
126626|data|ALIGN 4|0-191
126628|code|LDR.W           R3, [R0],#0xC|80-248-12-59
126632|code|MOVS            R2, #0|0-34
126634|code|LDR             R3, [R3]|27-104
126636|code|STR             R2, [R3]|26-96
126638|code|B.W             constructHostCommandPackageData|0-240-5-185
126642|data|ALIGN 4|0-191
126644|code|LDRB            R2, [R0,#8]|2-122
126646|code|PUSH            {R3-R5,LR}|56-181
126648|code|LSLS            R3, R2, #0x1F|211-7
126650|code|BMI             loc_1EED6|12-212
126652|code|LDR             R2, =(aInvalidUnicode+0x18 - 0x1EEC2); "r"|10-74
126654|code|ADD             R2, PC; "r"|122-68
126656|code|LDR             R3, [R0]|3-104
126658|code|MOV             R0, R1; fd|8-70
126660|code|MOV             R1, R2; modes|17-70
126662|code|LDR             R5, [R3]|29-104
126664|code|BLX             fdopen|247-247-206-235
126668|code|MOV             R4, R0|4-70
126670|code|STR             R0, [R5]|40-96
126672|code|CBZ             R0, loc_1EEDC|32-177
126674|code|MOVS            R0, #1|1-32
126676|code|POP             {R3-R5,PC}|56-189
126678|code|LDR             R2, =(aW - 0x1EEDC); "w"|5-74
126680|code|ADD             R2, PC; "w"|122-68
126682|code|B               loc_1EEC0|241-231
126684|code|LDR             R0, =(aFdopen_0 - 0x1EEE2); "fdopen"|4-72
126686|code|ADD             R0, PC; "fdopen"|120-68
126688|code|BL              logSystemError|251-247-164-250
126692|code|MOV             R0, R4|32-70
126694|code|POP             {R3-R5,PC}|56-189
126696|data|DCD aInvalidUnicode+0x18 - 0x1EEC2; "r"|158-76-0-0
126700|data|DCD aW - 0x1EEDC; "w"|184-50-0-0
126704|data|DCD aFdopen_0 - 0x1EEE2; "fdopen"|10-72-0-0
126708|code|LDR             R3, [R0]|3-104
126710|code|CBZ             R3, loc_1EF1A|131-177
126712|code|PUSH            {R4-R6,LR}|112-181
126714|code|MOV             R5, R2|21-70
126716|code|MOV             R6, R1|14-70
126718|code|MOV             R4, R0|4-70
126720|code|LDR             R3, [R3]|27-104
126722|code|MOV             R0, R4|32-70
126724|code|MOV             R1, R5|41-70
126726|code|CBZ             R3, loc_1EF0C|11-177
126728|code|BLX             R6|176-71
126730|code|CBZ             R0, locret_1EF18|40-177
126732|code|LDR.W           R3, [R4,#0x14]!|84-248-20-63
126736|code|CMP             R3, #0|0-43
126738|code|BNE             loc_1EF00|245-209
126740|code|MOVS            R0, #1|1-32
126742|code|POP             {R4-R6,PC}|112-189
126744|code|POP             {R4-R6,PC}|112-189
126746|code|MOVS            R0, #1|1-32
126748|code|BX              LR|112-71
126750|data|ALIGN 0x10|0-191
126752|code|LDRB            R2, [R0]|2-120
126754|code|MOVS            R3, #0|0-35
126756|code|STR             R3, [R0,#4]|67-96
126758|code|BFC.W           R2, #0, #1|111-243-0-2
126762|code|STR             R3, [R0,#8]|131-96
126764|code|STRB            R2, [R0]|2-112
126766|code|STR             R3, [R0,#0xC]|195-96
126768|code|BX              LR|112-71
126770|data|ALIGN 4|0-191
126772|code|PUSH.W          {R4-R8,LR}|45-233-240-65
126776|code|SUB             SP, SP, #0x68|154-176
126778|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x1EF46)|45-78
126780|code|MOVS            R2, #0xFF|255-34
126782|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|45-75
126784|code|MOV             R8, R0|128-70
126786|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
126788|code|MOV             R4, R1|12-70
126790|code|LDR             R7, [R6,R3]; __stack_chk_guard|247-88
126792|code|STR             R2, [SP,#0x80+var_80]|0-146
126794|code|LDR             R3, [R7]|59-104
126796|code|STR             R3, [SP,#0x80+var_1C]|25-147
126798|code|CMP             R1, #0|0-41
126800|code|BEQ             loc_1EFE0|70-208
126802|code|LDR             R1, =(aStartingHostCo - 0x1EF60); "starting host command: %s"|41-73
126804|code|ADD             R5, SP, #0x80+var_6C|5-173
126806|code|MOVS            R0, #7|7-32
126808|code|LDR.W           R2, [R8]|216-248-0-32
126812|code|ADD             R1, PC; "starting host command: %s"|121-68
126814|code|BL              logMessage|251-247-227-249
126818|code|MOVS            R1, #0; c|0-33
126820|code|MOVS            R2, #0x50 ; 'P'; n|80-34
126822|code|MOV             R0, R5; s|40-70
126824|code|BLX             memset|247-247-100-236
126828|code|LDR             R1, =(loc_1EEA4+1 - 0x1EF76)|35-73
126830|code|MOV             R0, R5|40-70
126832|code|MOVS            R2, #0|0-34
126834|code|ADD             R1, PC; loc_1EEA4|121-68
126836|code|MOVS            R3, #1|1-35
126838|code|ADD.W           LR, R4, #4|4-241-4-14
126842|code|STRB.W          R3, [SP,#0x80+var_64]|141-248-28-48
126846|code|STR.W           LR, [SP,#0x80+var_6C]|205-248-20-224
126850|code|ADD.W           LR, R4, #8|4-241-8-14
126854|code|STR             R3, [SP,#0x80+var_54]|11-147
126856|code|MOVS            R3, #2|2-35
126858|code|STR.W           LR, [SP,#0x80+var_58]|205-248-40-224
126862|code|ADD.W           LR, R4, #0xC|4-241-12-14
126866|code|STR             R3, [SP,#0x80+var_40]|16-147
126868|code|STR.W           LR, [SP,#0x80+var_44]|205-248-60-224
126872|code|BL              processHostCommandStreams|255-247-172-255
126876|code|CBNZ            R0, loc_1EFAE|56-185
126878|code|LDR             R2, [SP,#0x80+var_1C]|25-154
126880|code|LDR             R3, [R7]|59-104
126882|code|LDR             R0, [SP,#0x80+var_80]|0-152
126884|code|CMP             R2, R3|154-66
126886|code|BNE             loc_1EFEA|32-209
126888|code|ADD             SP, SP, #0x68 ; 'h'|26-176
126890|code|POP.W           {R4-R8,PC}|189-232-240-129
126894|code|LDR             R3, =(prepareHostCommandStream_ptr - 0x344A0)|20-75
126896|code|MOV             R0, R5|40-70
126898|code|MOVS            R2, #0|0-34
126900|code|LDR             R1, [R6,R3]; prepareHostCommandStream|241-88
126902|code|BL              processHostCommandStreams|255-247-157-255
126906|code|CBNZ            R0, loc_1EFCA|48-185
126908|code|LDR             R1, =(sub_1EE80+1 - 0x1EFC6)|17-73
126910|code|MOV             R0, R5|40-70
126912|code|MOVS            R2, #0|0-34
126914|code|ADD             R1, PC; sub_1EE80|121-68
126916|code|BL              processHostCommandStreams|255-247-150-255
126920|code|B               loc_1EF9E|233-231
126922|code|LDRB            R3, [R4]|35-120
126924|code|MOV             R1, R8|65-70
126926|code|MOV             R0, SP|104-70
126928|code|MOV             R2, R5|42-70
126930|code|AND.W           R3, R3, #1|3-240-1-3
126934|code|BL              runCommand|0-240-157-248
126938|code|CMP             R0, #0|0-40
126940|code|BEQ             loc_1EFBC|238-208
126942|code|B               loc_1EF9E|222-231
126944|code|ADD             R0, SP, #0x80+var_7C|1-168
126946|code|MOV             R4, R0|4-70
126948|code|BL              initializeHostCommandOptions|255-247-156-255
126952|code|B               loc_1EF52|179-231
126954|code|BLX             __stack_chk_fail|247-247-38-237
126958|data|ALIGN 0x10|0-191
126960|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1EF46|90-85-1-0
126964|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
126968|data|DCD aStartingHostCo - 0x1EF60; "starting host command: %s"|148-71-0-0
126972|data|DCD loc_1EEA4+1 - 0x1EF76|47-255-255-255
126976|data|DCD prepareHostCommandStream_ptr - 0x344A0|84-3-0-0
126980|data|DCD sub_1EE80+1 - 0x1EFC6|187-254-255-255
126984|code|MOVS            R1, #0|0-33
126986|code|B.W             runHostCommand|255-247-147-191
126990|data|ALIGN 0x10|0-191
126992|code|PUSH            {R3-R7,LR}|248-181
126994|code|MOV             R4, R0|4-70
126996|code|LDRB            R3, [R0,#8]|3-122
126998|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
127002|code|LSLS            R3, R3, #0x1F|219-7
127004|code|ITTEE MI|71-191
127006|code|ADDMI.W         R5, R0, #0x10|0-241-16-5
127010|code|ADDMI.W         R7, R0, #0xC|0-241-12-7
127014|code|ADDPL.W         R5, R4, #0xC|4-241-12-5
127018|code|ADDPL.W         R7, R4, #0x10|4-241-16-7
127022|code|ITE MI|76-191
127024|code|LDRMI           R0, [R0,#0xC]|192-104
127026|code|LDRPL           R0, [R4,#0x10]; fd|32-105
127028|code|BLX             close|247-247-66-236
127032|code|STR             R6, [R7]|62-96
127034|code|MOV             R0, R4|32-70
127036|code|LDR             R1, [R5]|41-104
127038|code|BL              finishHostCommandStream|255-247-57-255
127042|code|CBZ             R0, locret_1F048|8-177
127044|code|MOVS            R0, #1|1-32
127046|code|STR             R6, [R5]|46-96
127048|code|POP             {R3-R7,PC}|248-189
127050|data|ALIGN 4|0-191
127052|code|PUSH            {R3-R7,LR}|248-181
127054|code|MOV             R4, R0|4-70
127056|code|LDRB            R3, [R0,#8]|3-122
127058|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
127062|code|LSLS            R3, R3, #0x1F|219-7
127064|code|ITETE MI|75-191
127066|code|ADDMI.W         R7, R0, #0x10|0-241-16-7
127070|code|ADDPL.W         R7, R4, #0xC|4-241-12-7
127074|code|ADDMI.W         R5, R0, #0xC|0-241-12-5
127078|code|LDRPL           R0, [R4,#0xC]|224-104
127080|code|ITE MI|76-191
127082|code|LDRMI           R0, [R0,#0x10]; fd|0-105
127084|code|ADDPL.W         R5, R4, #0x10|4-241-16-5
127088|code|BLX             close|247-247-36-236
127092|code|STR             R6, [R7]|62-96
127094|code|LDR             R0, [R4,#4]; fd|96-104
127096|code|BLX             close|247-247-32-236
127100|code|CMP             R0, R6|176-66
127102|code|BEQ             loc_1F09A|12-208
127104|code|LDR             R2, [R4,#4]|98-104
127106|code|MOVS            R1, #0; cmd|0-33
127108|code|LDR             R0, [R5]; fd|40-104
127110|code|BLX             fcntl|247-247-240-235
127114|code|ADDS            R0, #1|1-48
127116|code|BEQ             loc_1F0A6|11-208
127118|code|LDR             R0, [R5]; fd|40-104
127120|code|BLX             close|247-247-20-236
127124|code|MOVS            R0, #1|1-32
127126|code|STR             R6, [R5]|46-96
127128|code|POP             {R3-R7,PC}|248-189
127130|code|LDR             R0, =(aClose - 0x1F0A0); "close"|6-72
127132|code|ADD             R0, PC; "close"|120-68
127134|code|BL              logSystemError|251-247-197-249
127138|code|MOVS            R0, #0|0-32
127140|code|POP             {R3-R7,PC}|248-189
127142|code|LDR             R0, =(aFcntlFDupfd - 0x1F0AC); "fcntl[F_DUPFD]"|4-72
127144|code|ADD             R0, PC; "fcntl[F_DUPFD]"|120-68
127146|code|BL              logSystemError|251-247-191-249
127150|code|MOVS            R0, #0|0-32
127152|code|POP             {R3-R7,PC}|248-189
127154|data|ALIGN 4|0-191
127156|data|DCD aClose - 0x1F0A0; "close"|112-70-0-0
127160|data|DCD aFcntlFDupfd - 0x1F0AC; "fcntl[F_DUPFD]"|108-70-0-0
127164|code|MOV             R3, R0|3-70
127166|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
127170|code|MOVS            R0, #1|1-32
127172|code|STR             R2, [R3,#4]|90-96
127174|code|STR             R2, [R3]|26-96
127176|code|BX              LR|112-71
127178|data|ALIGN 4|0-191
127180|code|PUSH            {R4-R6,LR}|112-181
127182|code|ADD.W           R5, R0, #8|0-241-8-5
127186|code|CMP             R0, R5|168-66
127188|code|BCS             locret_1F0F0|12-210
127190|code|MOV             R4, R0|4-70
127192|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
127196|code|LDR.W           R0, [R4],#4; fd|84-248-4-11
127200|code|ADDS            R3, R0, #1|67-28
127202|code|BEQ             loc_1F0EC|3-208
127204|code|BLX             close|247-247-234-235
127208|code|STR.W           R6, [R4,#-4]|68-248-4-108
127212|code|CMP             R5, R4|165-66
127214|code|BHI             loc_1F0DC|245-216
127216|code|POP             {R4-R6,PC}|112-189
127218|data|ALIGN 4|0-191
127220|code|PUSH            {R3,LR}|8-181
127222|code|ADDS            R0, #0xC; pipedes|12-48
127224|code|BLX             pipe|247-247-204-238
127228|code|ADDS            R0, #1|1-48
127230|code|BEQ             loc_1F104|1-208
127232|code|MOVS            R0, #1|1-32
127234|code|POP             {R3,PC}|8-189
127236|code|LDR             R0, =(aPipe_0 - 0x1F10A); "pipe"|2-72
127238|code|ADD             R0, PC; "pipe"|120-68
127240|code|BL              logSystemError|251-247-144-249
127244|code|MOVS            R0, #0|0-32
127246|code|POP             {R3,PC}|8-189
127248|data|DCD aPipe_0 - 0x1F10A; "pipe"|134-53-0-0
127252|code|PUSH.W          {R4-R11,LR}|45-233-240-79
127256|code|SUB             SP, SP, #0x10C|195-176
127258|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x1F126)|86-77
127260|code|ADD             R4, SP, #0x10C+set|1-172
127262|code|LDR             R6, =(__stack_chk_guard_ptr - 0x344A0)|86-78
127264|code|MOV             R11, R3|155-70
127266|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
127268|code|MOV             R10, R0|130-70
127270|code|ADD             R7, SP, #0x84|33-175
127272|code|MOV             R0, R4; set|32-70
127274|code|LDR             R6, [R5,R6]; __stack_chk_guard|174-89
127276|code|MOV             R8, R2|144-70
127278|code|MOV             R9, R1|137-70
127280|code|LDR             R3, [R6]|51-104
127282|code|STR             R3, [SP,#0x10C+var_8]|65-147
127284|code|BLX             sigemptyset|247-247-62-238
127288|code|MOV             R0, R4; set|32-70
127290|code|MOVS            R1, #0x11; signo|17-33
127292|code|BLX             sigaddset|247-247-184-235
127296|code|MOV             R1, R4; set|33-70
127298|code|MOV             R2, R7; oset|58-70
127300|code|MOVS            R0, #0; how|0-32
127302|code|BLX             sigprocmask|247-247-140-238
127306|code|BLX             fork|247-247-130-236
127310|code|ADDS            R3, R0, #1|67-28
127312|code|MOV             R4, R0|4-70
127314|code|BEQ             loc_1F196|32-208
127316|code|CBNZ            R0, loc_1F176|120-185
127318|code|MOV             R1, R7; set|57-70
127320|code|MOV             R2, R4; oset|34-70
127322|code|MOVS            R0, #2; how|2-32
127324|code|BLX             sigprocmask|247-247-128-238
127328|code|LDR             R1, =(sub_1F04C+1 - 0x1F16A)|70-73
127330|code|MOV             R0, R8|64-70
127332|code|MOV             R2, R4|34-70
127334|code|ADD             R1, PC; sub_1F04C|121-68
127336|code|BL              processHostCommandStreams|255-247-196-254
127340|code|CMP             R0, #0|0-40
127342|code|BNE             loc_1F1FE|70-209
127344|code|MOVS            R0, #1; status|1-32
127346|code|BLX             _exit|247-247-212-237
127350|code|LDR             R1, =(sub_1F010+1 - 0x1F180)|66-73
127352|code|MOV             R0, R8|64-70
127354|code|MOVS            R2, #0|0-34
127356|code|ADD             R1, PC; sub_1F010|121-68
127358|code|BL              processHostCommandStreams|255-247-185-254
127362|code|CMP             R0, #0|0-40
127364|code|BEQ             loc_1F1FA|57-208
127366|code|CMP.W           R11, #0|187-241-0-15
127370|code|BEQ             loc_1F1BA|22-208
127372|code|MOVS            R3, #0|0-35
127374|code|MOVS            R4, #1|1-36
127376|code|STR.W           R3, [R10]|202-248-0-48
127380|code|B               loc_1F1A0|4-224
127382|code|LDR             R0, =(aFork_0 - 0x1F19E); "fork"|59-72
127384|code|MOVS            R4, #0|0-36
127386|code|ADD             R0, PC; "fork"|120-68
127388|code|BL              logSystemError|251-247-70-249
127392|code|MOVS            R2, #0; oset|0-34
127394|code|MOV             R1, R7; set|57-70
127396|code|MOVS            R0, #2; how|2-32
127398|code|BLX             sigprocmask|247-247-92-238
127402|code|LDR             R2, [SP,#0x10C+var_8]|65-154
127404|code|LDR             R3, [R6]|51-104
127406|code|MOV             R0, R4|32-70
127408|code|CMP             R2, R3|154-66
127410|code|BNE             loc_1F26E|92-209
127412|code|ADD             SP, SP, #0x10C|67-176
127414|code|POP.W           {R4-R11,PC}|189-232-240-143
127418|code|MOV             R0, R4; pid|32-70
127420|code|MOV             R2, R11; options|90-70
127422|code|MOV             R1, SP; stat_loc|105-70
127424|code|BLX             waitpid|247-247-14-236
127428|code|ADDS            R0, #1|1-48
127430|code|BEQ             loc_1F242|60-208
127432|code|LDR             R3, [SP,#0x10C+var_10C]|0-155
127434|code|ANDS.W          R2, R3, #0x7F|19-240-127-2
127438|code|BEQ             loc_1F212|32-208
127440|code|ADDS            R1, R2, #1|81-28
127442|code|SBFX.W          R1, R1, #1, #7|65-243-70-1
127446|code|CMP             R1, #0|0-41
127448|code|BLE             loc_1F22A|39-221
127450|code|LDR             R1, =(aHostCommandTer - 0x1F1EA); "host command termination signal: %d: %s"|43-73
127452|code|MOVS            R0, #7|7-32
127454|code|LDR.W           R3, [R9]|217-248-0-48
127458|code|STR.W           R2, [R10]|202-248-0-32
127462|code|ADD             R1, PC; "host command termination signal: %d: %s"|121-68
127464|code|BL              logMessage|251-247-158-248
127468|code|LDR.W           R3, [R10]|218-248-0-48
127472|code|ADDS            R3, #0x80|128-51
127474|code|STR.W           R3, [R10]|202-248-0-48
127478|code|MOVS            R4, #1|1-36
127480|code|B               loc_1F1A0|210-231
127482|code|MOV             R4, R0|4-70
127484|code|B               loc_1F1A0|208-231
127486|code|LDR.W           R0, [R9]; file|217-248-0-0
127490|code|MOV             R1, R9; argv|73-70
127492|code|BLX             execvp|247-247-20-238
127496|code|LDR             R0, =(aExecvp_0 - 0x1F20E); "execvp"|32-72
127498|code|ADD             R0, PC; "execvp"|120-68
127500|code|BL              logSystemError|251-247-14-249
127504|code|B               loc_1F170|174-231
127506|code|LDR             R1, =(aHostCommandExi - 0x1F222); "host command exit status: %d: %s"|31-73
127508|code|UBFX.W          R2, R3, #8, #8|195-243-7-34
127512|code|MOVS            R0, #7|7-32
127514|code|LDR.W           R3, [R9]|217-248-0-48
127518|code|ADD             R1, PC; "host command exit status: %d: %s"|121-68
127520|code|STR.W           R2, [R10]|202-248-0-32
127524|code|BL              logMessage|251-247-128-248
127528|code|B               loc_1F1F6|229-231
127530|code|UXTB            R2, R3|218-178
127532|code|CMP             R2, #0x7F|127-42
127534|code|BEQ             loc_1F24C|13-208
127536|code|LDR             R1, =(aUnknownHostCom - 0x1F23E); "unknown host command status: 0X%X: %s"|24-73
127538|code|MOV             R2, R3|26-70
127540|code|MOVS            R0, #7|7-32
127542|code|LDR.W           R3, [R9]|217-248-0-48
127546|code|ADD             R1, PC; "unknown host command status: 0X%X: %s"|121-68
127548|code|BL              logMessage|251-247-116-248
127552|code|B               loc_1F1F6|217-231
127554|code|LDR             R0, =(aWaitpid_0 - 0x1F248); "waitpid"|21-72
127556|code|ADD             R0, PC; "waitpid"|120-68
127558|code|BL              logSystemError|251-247-241-248
127562|code|B               loc_1F1F6|212-231
127564|code|LDR             R1, =(aHostCommandSto - 0x1F25C); "host command stop signal: %d: %s"|19-73
127566|code|UBFX.W          R2, R3, #8, #8|195-243-7-34
127570|code|MOVS            R0, #7|7-32
127572|code|LDR.W           R3, [R9]|217-248-0-48
127576|code|ADD             R1, PC; "host command stop signal: %d: %s"|121-68
127578|code|STR.W           R2, [R10]|202-248-0-32
127582|code|BL              logMessage|251-247-99-248
127586|code|LDR.W           R3, [R10]|218-248-0-48
127590|code|ADDS            R3, #0x80|128-51
127592|code|STR.W           R3, [R10]|202-248-0-48
127596|code|B               loc_1F1F6|195-231
127598|code|BLX             __stack_chk_fail|247-247-228-235
127602|data|ALIGN 4|0-191
127604|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1F126|122-83-1-0
127608|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
127612|data|DCD sub_1F04C+1 - 0x1F16A|227-254-255-255
127616|data|DCD sub_1F010+1 - 0x1F180|145-254-255-255
127620|data|DCD aFork_0 - 0x1F19E; "fork"|138-69-0-0
127624|data|DCD aHostCommandTer - 0x1F1EA; "host command termination signal: %d: %s"|122-69-0-0
127628|data|DCD aExecvp_0 - 0x1F20E; "execvp"|34-69-0-0
127632|data|DCD aHostCommandExi - 0x1F222; "host command exit status: %d: %s"|30-69-0-0
127636|data|DCD aUnknownHostCom - 0x1F23E; "unknown host command status: 0X%X: %s"|114-69-0-0
127640|data|DCD aWaitpid_0 - 0x1F248; "waitpid"|240-68-0-0
127644|data|DCD aHostCommandSto - 0x1F25C; "host command stop signal: %d: %s"|48-69-0-0
127648|code|SUB.W           R3, R0, #0x30 ; '0'|160-241-48-3
127652|code|CMP             R3, #9|9-43
127654|code|IT LS|152-191
127656|code|STRLS           R3, [R1]|11-96
127658|code|BLS             loc_1F2C6|12-217
127660|code|SUB.W           R3, R0, #0x61 ; 'a'|160-241-97-3
127664|code|CMP             R3, #5|5-43
127666|code|ITT LS|156-191
127668|code|SUBLS           R0, #0x57 ; 'W'|87-56
127670|code|STRLS           R0, [R1]|8-96
127672|code|BLS             loc_1F2C6|5-217
127674|code|SUB.W           R3, R0, #0x41 ; 'A'|160-241-65-3
127678|code|CMP             R3, #5|5-43
127680|code|BHI             loc_1F2CE|5-216
127682|code|SUBS            R0, #0x37 ; '7'|55-56
127684|code|STR             R0, [R1]|8-96
127686|code|MOVS            R3, #4|4-35
127688|code|MOVS            R0, #1|1-32
127690|code|STR             R3, [R2]|19-96
127692|code|BX              LR|112-71
127694|code|MOVS            R0, #0|0-32
127696|code|BX              LR|112-71
127698|data|ALIGN 4|0-191
127700|code|SUBS            R0, #0x30 ; '0'|48-56
127702|code|CMP             R0, #7|7-40
127704|code|ITTTT LS|159-191
127706|code|STRLS           R0, [R1]|8-96
127708|code|MOVLS           R3, #3|3-35
127710|code|MOVLS           R0, #1|1-32
127712|code|STRLS           R3, [R2]|19-96
127714|code|IT HI|136-191
127716|code|MOVHI           R0, #0|0-32
127718|code|BX              LR|112-71
127720|code|LDR             R0, =(sub_1F308+1 - 0x1F2F2)|6-72
127722|code|MOVS            R1, #0|0-33
127724|code|PUSH            {R4,LR}|16-181
127726|code|ADD             R0, PC; sub_1F308|120-68
127728|code|BL              newQueue|254-247-166-255
127732|code|MOV             R4, R0|4-70
127734|code|CBZ             R0, loc_1F2FE|16-177
127736|code|MOVS            R1, #0|0-33
127738|code|BL              setQueueData|255-247-11-248
127742|code|MOV             R0, R4|32-70
127744|code|POP             {R4,PC}|16-189
127746|data|ALIGN 4|0-191
127748|data|DCD sub_1F308+1 - 0x1F2F2|23-0-0-0
127752|code|PUSH            {R4,LR}|16-181
127754|code|MOV             R4, R0|4-70
127756|code|LDR             R0, [R0]; ptr|0-104
127758|code|CBZ             R0, loc_1F314|8-177
127760|code|BLX             free|247-247-184-233
127764|code|LDR             R0, [R4,#8]; ptr|160-104
127766|code|CBZ             R0, loc_1F31C|8-177
127768|code|BLX             free|247-247-180-233
127772|code|MOV             R0, R4; ptr|32-70
127774|code|POP.W           {R4,LR}|189-232-16-64
127778|code|B.W             j_free|247-247-173-185
127782|data|ALIGN 4|0-191
127784|code|B.W             j_free|247-247-170-185
127788|code|PUSH            {R3,LR}|8-181
127790|code|LDR             R2, [R0,#4]; n|66-104
127792|code|LDR             R3, [R1,#4]|75-104
127794|code|CMP             R2, R3|154-66
127796|code|BEQ             loc_1F33A|1-208
127798|code|MOVS            R0, #0|0-32
127800|code|POP             {R3,PC}|8-189
127802|code|LDR             R0, [R0]; s1|0-104
127804|code|LDR             R1, [R1]; s2|9-104
127806|code|BLX             wmemcmp|247-247-202-234
127810|code|CLZ.W           R0, R0|176-250-128-240
127814|code|LSRS            R0, R0, #5|64-9
127816|code|POP             {R3,PC}|8-189
127818|data|ALIGN 4|0-191
127820|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1F354)|20-75
127822|code|PUSH            {R4-R6,LR}|112-181
127824|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
127826|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|20-77
127828|code|SUB             SP, SP, #0x60|152-176
127830|code|MOV             R4, R0|4-70
127832|code|MOVS            R0, #3; ver|3-32
127834|code|MOV             R2, SP; stat_buf|106-70
127836|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
127838|code|LDR             R3, [R5]|43-104
127840|code|STR             R3, [SP,#0x70+var_14]|23-147
127842|code|BLX             __xstat|247-247-184-236
127846|code|ADDS            R0, #1|1-48
127848|code|BEQ             loc_1F38E|17-208
127850|code|CBZ             R4, loc_1F38E|132-177
127852|code|LDRD.W          R0, R1, [SP,#0x70+var_70]|221-233-0-1
127856|code|LDR             R6, [SP,#0x70+var_64]|3-158
127858|code|B               loc_1F378|1-224
127860|code|LDR             R4, [R4,#4]|100-104
127862|code|CBZ             R4, loc_1F38E|84-177
127864|code|LDRD.W          R2, R3, [R4,#0x10]|212-233-4-35
127868|code|CMP             R1, R3|153-66
127870|code|IT EQ|8-191
127872|code|CMPEQ           R0, R2|144-66
127874|code|BNE             loc_1F374|247-209
127876|code|LDR             R3, [R4,#0x18]|163-105
127878|code|CMP             R3, R6|179-66
127880|code|BNE             loc_1F374|244-209
127882|code|MOVS            R0, #1|1-32
127884|code|B               loc_1F390|0-224
127886|code|MOVS            R0, #0|0-32
127888|code|LDR             R2, [SP,#0x70+var_14]|23-154
127890|code|LDR             R3, [R5]|43-104
127892|code|CMP             R2, R3|154-66
127894|code|BNE             loc_1F39C|1-209
127896|code|ADD             SP, SP, #0x60 ; '`'|24-176
127898|code|POP             {R4-R6,PC}|112-189
127900|code|BLX             __stack_chk_fail|247-247-76-235
127904|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1F354|76-81-1-0
127908|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
127912|code|PUSH.W          {R3-R11,LR}|45-233-248-79
127916|code|MOV             R8, R1|136-70
127918|code|MOV             R9, R2|145-70
127920|code|MOV             R10, R3|154-70
127922|code|MOV             R7, R0|7-70
127924|code|BL              getAllOverrideDirectories|251-247-246-252
127928|code|LDRB.W          R11, [R9]|153-248-0-176
127932|code|MOV             R5, R0|5-70
127934|code|MOV             R0, R8|64-70
127936|code|BL              locatePathName|251-247-86-250
127940|code|MOV             R6, R0|6-70
127942|code|CBZ             R5, loc_1F406|245-177
127944|code|LDR             R0, [R5]|40-104
127946|code|CBNZ            R0, loc_1F3D4|24-185
127948|code|B               loc_1F406|27-224
127950|code|LDR.W           R0, [R5,#4]!|85-248-4-15
127954|code|CBZ             R0, loc_1F406|192-177
127956|code|LDRB            R3, [R0]|3-120
127958|code|CMP             R3, #0|0-43
127960|code|BEQ             loc_1F3CE|249-208
127962|code|MOV             R1, R6|49-70
127964|code|BL              makePath|251-247-170-250
127968|code|MOV             R4, R0|4-70
127970|code|MOV             R1, R0|1-70
127972|code|CMP             R0, #0|0-40
127974|code|BEQ             loc_1F3CE|242-208
127976|code|MOV             R0, R7|56-70
127978|code|BL              sub_1F34C|255-247-175-255
127982|code|CBNZ            R0, loc_1F3F8|24-185
127984|code|MOV             R0, R4; filename|32-70
127986|code|BL              testFilePath|251-247-93-251
127990|code|CBNZ            R0, loc_1F462|160-187
127992|code|MOV             R0, R4; ptr|32-70
127994|code|BLX             free|247-247-68-233
127998|code|LDR.W           R0, [R5,#4]!|85-248-4-15
128002|code|CMP             R0, #0|0-40
128004|code|BNE             loc_1F3D4|230-209
128006|code|MOV             R0, R7|56-70
128008|code|MOV             R1, R8|65-70
128010|code|BL              sub_1F34C|255-247-159-255
128014|code|CBNZ            R0, loc_1F476|144-187
128016|code|MOV             R0, R8|64-70
128018|code|MOV             R1, R9|73-70
128020|code|MOV             R2, R10|82-70
128022|code|BL              openFile|251-247-235-253
128026|code|MOV             R5, R0|5-70
128028|code|CBZ             R0, loc_1F424|16-177
128030|code|MOV             R0, R5|40-70
128032|code|POP.W           {R3-R11,PC}|189-232-248-143
128036|code|CMP.W           R11, #0x61 ; 'a'|187-241-97-15
128040|code|IT NE|24-191
128042|code|CMPNE.W         R11, #0x77 ; 'w'|187-241-119-15
128046|code|BNE             loc_1F41E|246-209
128048|code|BLX             __errno_location|247-247-146-236
128052|code|LDR             R3, [R0]|3-104
128054|code|MOV             R4, R0|4-70
128056|code|CMP             R3, #2|2-43
128058|code|BEQ             loc_1F48E|40-208
128060|code|CMP             R3, #0xD|13-43
128062|code|IT NE|24-191
128064|code|CMPNE           R3, #0x1E|30-43
128066|code|BNE             loc_1F41E|236-209
128068|code|BL              getPrimaryOverrideDirectory|251-247-164-253
128072|code|MOV             R7, R0|7-70
128074|code|CMP             R0, #0|0-40
128076|code|BEQ             loc_1F41E|231-208
128078|code|MOV             R1, R6|49-70
128080|code|BL              makePath|251-247-112-250
128084|code|MOV             R4, R0|4-70
128086|code|CMP             R0, #0|0-40
128088|code|BEQ             loc_1F41E|225-208
128090|code|MOV             R0, R7|56-70
128092|code|BL              ensureDirectory|251-247-182-251
128096|code|CBZ             R0, loc_1F46E|40-177
128098|code|MOV             R1, R9|73-70
128100|code|MOV             R2, R10|82-70
128102|code|MOV             R0, R4|32-70
128104|code|BL              openFile|251-247-194-253
128108|code|MOV             R5, R0|5-70
128110|code|MOV             R0, R4; ptr|32-70
128112|code|BLX             free|247-247-8-233
128116|code|B               loc_1F41E|211-231
128118|code|LDR             R1, =(aDataFileInclud - 0x1F482); "data file include loop: %s"|16-73
128120|code|MOV             R2, R8|66-70
128122|code|MOVS            R0, #4|4-32
128124|code|MOVS            R5, #0|0-37
128126|code|ADD             R1, PC; "data file include loop: %s"|121-68
128128|code|BL              logMessage|250-247-82-255
128132|code|BLX             __errno_location|247-247-104-236
128136|code|MOVS            R3, #2|2-35
128138|code|STR             R3, [R0]|3-96
128140|code|B               loc_1F41E|199-231
128142|code|MOV             R0, R8|64-70
128144|code|BL              getPathDirectory|251-247-158-249
128148|code|MOV             R11, R0|131-70
128150|code|CBZ             R0, loc_1F4A6|48-177
128152|code|BL              ensureDirectory|251-247-152-251
128156|code|MOV             R7, R0|7-70
128158|code|MOV             R0, R11; ptr|88-70
128160|code|BLX             free|247-247-240-232
128164|code|CBNZ            R7, loc_1F4AA|15-185
128166|code|LDR             R3, [R4]|35-104
128168|code|B               loc_1F43C|200-231
128170|code|MOV             R0, R8|64-70
128172|code|MOV             R1, R9|73-70
128174|code|MOV             R2, R10|82-70
128176|code|POP.W           {R3-R11,LR}|189-232-248-79
128180|code|B.W             openFile|251-247-156-189
128184|data|DCD aDataFileInclud - 0x1F482; "data file include loop: %s"|222-67-0-0
128188|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1F4C6)|44-75
128190|code|PUSH.W          {R4-R10,LR}|45-233-240-71
128194|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
128196|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|43-77
128198|code|SUB             SP, SP, #0x10|132-176
128200|code|MOV             R7, R0|7-70
128202|code|MOV             R6, R1|14-70
128204|code|LDM             R1, {R0,R1}|3-201
128206|code|MOV             R8, R2|144-70
128208|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
128210|code|ADD             R3, SP, #0x30+var_2C|1-171
128212|code|STM.W           R3, {R0,R1}|131-232-3-0
128216|code|MOV             R2, R3|26-70
128218|code|LDR             R1, =(sub_1F32C+1 - 0x1F4E4)|39-73
128220|code|MOV             R0, R7|56-70
128222|code|LDR             R3, [R5]|43-104
128224|code|ADD             R1, PC; sub_1F32C|121-68
128226|code|STR             R3, [SP,#0x30+var_24]|3-147
128228|code|BL              findItem|255-247-12-248
128232|code|MOV             R4, R0|4-70
128234|code|CBZ             R4, loc_1F4FA|52-177
128236|code|LDR             R2, [SP,#0x30+var_24]|3-154
128238|code|LDR             R3, [R5]|43-104
128240|code|CMP             R2, R3|154-66
128242|code|BNE             loc_1F56C|59-209
128244|code|ADD             SP, SP, #0x10|4-176
128246|code|POP.W           {R4-R10,PC}|189-232-240-135
128250|code|CMP.W           R8, #0|184-241-0-15
128254|code|BEQ             loc_1F54A|36-208
128256|code|MOVS            R0, #0x10; size|16-32
128258|code|BLX             malloc|247-247-134-235
128262|code|MOV             R8, R0|128-70
128264|code|CBZ             R0, loc_1F55E|72-179
128266|code|MOV             R3, R0|3-70
128268|code|LDR.W           R9, [R6,#4]|214-248-4-144
128272|code|STR.W           R4, [R3],#4|67-248-4-75
128276|code|ADDS            R3, #4|4-51
128278|code|STR             R4, [R0,#4]|68-96
128280|code|STR.W           R4, [R3],#4|67-248-4-75
128284|code|MOV.W           R0, R9,LSL#2; size|79-234-137-0
128288|code|STR             R4, [R3]|28-96
128290|code|BLX             malloc|247-247-118-235
128294|code|MOV             R10, R0|130-70
128296|code|CBZ             R0, loc_1F566|232-177
128298|code|LDR             R1, [R6]; s2|49-104
128300|code|MOV             R2, R9; n|74-70
128302|code|BLX             wmemcpy|247-247-62-233
128306|code|LDR             R3, [R6,#4]|115-104
128308|code|STR.W           R4, [R8,#8]|200-248-8-64
128312|code|MOV             R1, R8|65-70
128314|code|STR.W           R4, [R8,#0xC]|200-248-12-64
128318|code|STM.W           R8, {R0,R3}|136-232-9-0
128322|code|MOV             R0, R7|56-70
128324|code|BL              enqueueItem|254-247-112-255
128328|code|CBZ             R0, loc_1F54E|8-177
128330|code|MOV             R0, R8|64-70
128332|code|B               loc_1F4EC|206-231
128334|code|MOV             R0, R10; ptr|80-70
128336|code|BLX             free|247-247-152-232
128340|code|MOV             R0, R8; ptr|64-70
128342|code|BLX             free|247-247-150-232
128346|code|MOVS            R0, #0|0-32
128348|code|B               loc_1F4EC|198-231
128350|code|BL              logMallocError|250-247-111-255
128354|code|MOV             R0, R8|64-70
128356|code|B               loc_1F4EC|194-231
128358|code|BL              logMallocError|250-247-107-255
128362|code|B               loc_1F554|243-231
128364|code|BLX             __stack_chk_fail|247-247-100-234
128368|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1F4C6|218-79-1-0
128372|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
128376|data|DCD sub_1F32C+1 - 0x1F4E4|73-254-255-255
128380|code|PUSH.W          {R4-R8,LR}|45-233-240-65
128384|code|MOV             R5, R0|5-70
128386|code|MOV             R7, R1|15-70
128388|code|MOV             R4, R3|28-70
128390|code|MOV             R6, R3|30-70
128392|code|CBNZ            R3, loc_1F59C|67-185
128394|code|LDR             R0, [R5]; ptr|40-104
128396|code|CBZ             R0, loc_1F592|8-177
128398|code|BLX             free|247-247-122-232
128402|code|STR             R6, [R5]|46-96
128404|code|MOVS            R0, #1|1-32
128406|code|STR             R4, [R7]|60-96
128408|code|POP.W           {R4-R8,PC}|189-232-240-129
128412|code|LSLS            R0, R3, #2; size|152-0
128414|code|MOV             R8, R2|144-70
128416|code|BLX             malloc|247-247-54-235
128420|code|MOV             R6, R0|6-70
128422|code|CBZ             R0, loc_1F5B2|32-177
128424|code|MOV             R1, R8; s2|65-70
128426|code|MOV             R2, R4; n|34-70
128428|code|BLX             wmemcpy|247-247-254-232
128432|code|B               loc_1F58A|235-231
128434|code|BL              logMallocError|250-247-69-255
128438|code|MOV             R0, R6|48-70
128440|code|POP.W           {R4-R8,PC}|189-232-240-129
128444|code|PUSH            {R3-R5,LR}|56-181
128446|code|MOV             R4, R0|4-70
128448|code|MOV             R5, R1|13-70
128450|code|B               loc_1F5CE|4-224
128452|code|MOV             R0, R4|32-70
128454|code|BL              getQueueData|254-247-163-254
128458|code|MOV             R4, R0|4-70
128460|code|CBZ             R0, locret_1F5DE|56-177
128462|code|MOV             R0, R4|32-70
128464|code|MOV             R1, R5|41-70
128466|code|MOVS            R2, #0|0-34
128468|code|BL              sub_1F4BC|255-247-114-255
128472|code|CMP             R0, #0|0-40
128474|code|BEQ             loc_1F5C4|243-208
128476|code|POP             {R3-R5,PC}|56-189
128478|code|POP             {R3-R5,PC}|56-189
128480|code|PUSH            {R3,LR}|8-181
128482|code|LDR             R0, [R0,#0x2C]|192-106
128484|code|BL              sub_1F5BC|255-247-234-255
128488|code|ADDS            R0, #0|0-48
128490|code|IT NE|24-191
128492|code|MOVNE           R0, #1|1-32
128494|code|POP             {R3,PC}|8-189
128496|code|PUSH            {R3-R5,LR}|56-181
128498|code|MOVS            R2, #8; n|8-34
128500|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1F600)|7-75
128502|code|MOV             R5, R1|13-70
128504|code|LDR             R4, =(brlDotNumbers_ptr - 0x344A0)|7-76
128506|code|MOV             R1, R0; c|1-70
128508|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
128510|code|LDR             R4, [R3,R4]; brlDotNumbers|28-89
128512|code|MOV             R0, R4; s|32-70
128514|code|BLX             wmemchr|247-247-124-233
128518|code|CBZ             R0, locret_1F610|24-177
128520|code|SUBS            R3, R0, R4|3-27
128522|code|MOVS            R0, #1|1-32
128524|code|ASRS            R3, R3, #2|155-16
128526|code|STR             R3, [R5]|43-96
128528|code|POP             {R3-R5,PC}|56-189
128530|data|ALIGN 4|0-191
128532|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1F600|160-78-1-0
128536|data|DCD brlDotNumbers_ptr - 0x344A0|88-3-0-0
128540|code|PUSH            {R3-R5,LR}|56-181
128542|code|MOVS            R2, #8; n|8-34
128544|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1F62C)|6-75
128546|code|MOV             R5, R1|13-70
128548|code|LDR             R4, =(brlDotBits_ptr - 0x344A0)|6-76
128550|code|MOV             R1, R0; c|1-70
128552|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
128554|code|LDR             R4, [R3,R4]; brlDotBits|28-89
128556|code|MOV             R0, R4; s|32-70
128558|code|BLX             memchr|247-247-162-235
128562|code|CBZ             R0, locret_1F63A|16-177
128564|code|SUBS            R3, R0, R4|3-27
128566|code|MOVS            R0, #1|1-32
128568|code|STR             R3, [R5]|43-96
128570|code|POP             {R3-R5,PC}|56-189
128572|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1F62C|116-78-1-0
128576|data|DCD brlDotBits_ptr - 0x344A0|56-3-0-0
128580|code|PUSH            {R1-R3}|14-180
128582|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1F64E)|22-74
128584|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|22-75
128586|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
128588|code|PUSH            {R4-R7,LR}|240-181
128590|code|SUB             SP, SP, #0x110|196-176
128592|code|LDR             R6, [R2,R3]; __stack_chk_guard|214-88
128594|code|LDR             R1, [SP,#0x130+varg_r1]|73-153
128596|code|LDR             R3, [R6]|51-104
128598|code|STR             R3, [SP,#0x130+var_24]|67-147
128600|code|CBZ             R0, loc_1F696|232-177
128602|code|LDR             R3, [R0,#8]|131-104
128604|code|LDR             R2, [R0]; int|2-104
128606|code|CBZ             R3, loc_1F664|11-177
128608|code|ADD.W           R3, R0, #8; int|0-241-8-3
128612|code|ADD             R4, SP, #0x130+s|3-172
128614|code|STR             R1, [SP,#0x130+var_130]; int|0-145
128616|code|ADD             R7, SP, #0x130+varg_r2|74-175
128618|code|MOV.W           R1, #0x100; int|79-244-128-113
128622|code|MOV             R0, R4; s|32-70
128624|code|STR             R7, [SP,#0x130+var_12C]; int|1-151
128626|code|STR             R7, [SP,#0x130+var_128]|2-151
128628|code|BL              formatInputError|251-247-172-253
128632|code|LDR             R1, =(aCheckingSDevic+0x14 - 0x1F682); "%s"|11-73
128634|code|MOV             R2, R4|34-70
128636|code|MOVS            R0, #4|4-32
128638|code|ADD             R1, PC; "%s"|121-68
128640|code|BL              logMessage|250-247-82-254
128644|code|LDR             R2, [SP,#0x130+var_24]|67-154
128646|code|LDR             R3, [R6]|51-104
128648|code|CMP             R2, R3|154-66
128650|code|BNE             loc_1F69C|7-209
128652|code|ADD             SP, SP, #0x110|68-176
128654|code|POP.W           {R4-R7,LR}|189-232-240-64
128658|code|ADD             SP, SP, #0xC|3-176
128660|code|BX              LR|112-71
128662|code|MOV             R3, R0|3-70
128664|code|MOV             R2, R0|2-70
128666|code|B               loc_1F664|227-231
128668|code|BLX             __stack_chk_fail|247-247-204-233
128672|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1F64E|82-78-1-0
128676|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
128680|data|DCD aCheckingSDevic+0x14 - 0x1F682; "%s"|246-48-0-0
128684|code|PUSH.W          {R4-R8,LR}|45-233-240-65
128688|code|MOV             R8, R0|128-70
128690|code|MOV             R4, R2|20-70
128692|code|CBZ             R2, loc_1F6EA|202-177
128694|code|LDR             R0, [R0]|0-104
128696|code|CBZ             R0, loc_1F6E2|152-177
128698|code|MOV             R6, R1|14-70
128700|code|ADD.W           R5, R8, #4|8-241-4-5
128704|code|B               loc_1F6CE|5-224
128706|code|BHI             loc_1F6F8|25-216
128708|code|SUBS            R4, #1|1-60
128710|code|BEQ             loc_1F6EA|16-208
128712|code|LDR.W           R0, [R5],#4; wc|85-248-4-11
128716|code|CBZ             R0, loc_1F6E2|72-177
128718|code|BLX             towlower|246-247-130-239
128722|code|MOV             R8, R5|168-70
128724|code|MOV             R7, R0|7-70
128726|code|LDR.W           R0, [R6],#4; wc|86-248-4-11
128730|code|BLX             towlower|246-247-124-239
128734|code|CMP             R7, R0|135-66
128736|code|BCS             loc_1F6C2|239-210
128738|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
128742|code|POP.W           {R4-R8,PC}|189-232-240-129
128746|code|LDR.W           R0, [R8]|216-248-0-0
128750|code|ADDS            R0, #0|0-48
128752|code|IT NE|24-191
128754|code|MOVNE           R0, #1|1-32
128756|code|POP.W           {R4-R8,PC}|189-232-240-129
128760|code|MOVS            R0, #1|1-32
128762|code|POP.W           {R4-R8,PC}|189-232-240-129
128766|data|ALIGN 0x10|0-191
128768|code|PUSH            {R3-R5,LR}|56-181
128770|code|MOV             R5, R0|5-70
128772|code|MOV             R0, R1; s|8-70
128774|code|MOV             R4, R1|12-70
128776|code|BLX             wcslen|246-247-94-239
128780|code|MOV             R1, R4|33-70
128782|code|MOV             R2, R0|2-70
128784|code|MOV             R0, R5|40-70
128786|code|POP.W           {R3-R5,LR}|189-232-56-64
128790|code|B.W             compareKeyword|255-247-201-191
128794|data|ALIGN 4|0-191
128796|code|PUSH            {R3,LR}|8-181
128798|code|BL              compareKeyword|255-247-197-255
128802|code|CLZ.W           R0, R0|176-250-128-240
128806|code|LSRS            R0, R0, #5|64-9
128808|code|POP             {R3,PC}|8-189
128810|data|ALIGN 4|0-191
128812|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1F738)|32-75
128814|code|CMP             R2, #0|0-42
128816|code|PUSH.W          {R4-R8,LR}|45-233-240-65
128820|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
128822|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|31-76
128824|code|SUB             SP, SP, #8|130-176
128826|code|ADD             R7, SP, #0|0-175
128828|code|IT LE|216-191
128830|code|MOVLE           R0, #0|0-32
128832|code|LDR             R6, [R3,R4]; __stack_chk_guard|30-89
128834|code|LDR             R3, [R6]|51-104
128836|code|STR             R3, [R7,#8+var_4]|123-96
128838|code|BLE             loc_1F78E|34-221
128840|code|ADD.W           R3, R2, #8|2-241-8-3
128844|code|MOV             R8, SP|232-70
128846|code|BIC.W           R3, R3, #7|35-240-7-3
128850|code|SUBS            R1, #4|4-57
128852|code|SUB.W           SP, SP, R3|173-235-3-13
128856|code|MOV             R5, R0|5-70
128858|code|ADD.W           R4, SP, R2|13-235-2-4
128862|code|MOV.W           LR, #0|79-240-0-14
128866|code|MOV             R0, SP; nptr|104-70
128868|code|MOV             R3, SP|107-70
128870|code|STRB.W          LR, [SP,R2]|13-248-2-224
128874|code|LDR.W           R2, [R1,#4]!|81-248-4-47
128878|code|CMP             R2, #0xFF|255-42
128880|code|BHI             loc_1F79E|21-216
128882|code|STRB.W          R2, [R3],#1|3-248-1-43
128886|code|CMP             R3, R4|163-66
128888|code|BNE             loc_1F76A|247-209
128890|code|MOV             R1, R7; endptr|57-70
128892|code|MOVS            R2, #0; base|0-34
128894|code|BLX             strtol|246-247-122-239
128898|code|LDR             R3, [R7,#8+var_8]|59-104
128900|code|LDRB            R3, [R3]|27-120
128902|code|CBNZ            R3, loc_1F7A4|107-185
128904|code|STR             R0, [R5]|40-96
128906|code|MOVS            R0, #1|1-32
128908|code|MOV             SP, R8|197-70
128910|code|LDR             R2, [R7,#8+var_4]|122-104
128912|code|LDR             R3, [R6]|51-104
128914|code|CMP             R2, R3|154-66
128916|code|BNE             loc_1F7AA|9-209
128918|code|ADDS            R7, #8|8-55
128920|code|MOV             SP, R7|189-70
128922|code|POP.W           {R4-R8,PC}|189-232-240-129
128926|code|MOVS            R0, #0|0-32
128928|code|MOV             SP, R8|197-70
128930|code|B               loc_1F78E|244-231
128932|code|MOVS            R0, #0|0-32
128934|code|MOV             SP, R8|197-70
128936|code|B               loc_1F78E|241-231
128938|code|BLX             __stack_chk_fail|247-247-70-233
128942|data|ALIGN 0x10|0-191
128944|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1F738|104-77-1-0
128948|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
128952|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1F7C8)|52-74
128954|code|PUSH.W          {R4-R11,LR}|45-233-240-79
128958|code|MOV             R8, R1|136-70
128960|code|SUB             SP, SP, #0x24|137-176
128962|code|LDR             R1, =(__stack_chk_guard_ptr - 0x344A0)|51-73
128964|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
128966|code|ADD             R7, SP, #8|2-175
128968|code|ADD.W           R5, R7, #0xC|7-241-12-5
128972|code|STR             R0, [R7,#0x1C+var_1C]|56-96
128974|code|LDR             R3, [R2,R1]; __stack_chk_guard|83-88
128976|code|LDR             R2, [R3]|26-104
128978|code|STR             R3, [R7,#0x1C+var_18]|123-96
128980|code|STR             R2, [R7,#0x1C+var_8]|122-97
128982|code|BL              getUtf8Length|1-240-137-250
128986|code|ADDS            R4, R0, #1|68-28
128988|code|MOV             R9, R0|129-70
128990|code|MOV             R0, R8|64-70
128992|code|LSLS            R4, R4, #2|164-0
128994|code|ADD.W           R2, R4, #0xA|4-241-10-2
128998|code|BIC.W           R2, R2, #7|34-240-7-2
129002|code|SUB.W           SP, SP, R2|173-235-2-13
129006|code|BL              getUtf8Length|1-240-125-250
129010|code|LDR             R3, [R7,#0x1C+var_1C]|59-104
129012|code|LSRS            R2, R4, #2|162-8
129014|code|ADD.W           R4, R7, #8|7-241-8-4
129018|code|ADD.W           R10, SP, #0x24+var_1C|13-241-8-10
129022|code|MOV             R1, R5|41-70
129024|code|STR             R3, [R7,#0x1C+var_14]|187-96
129026|code|STR.W           R10, [R7,#0x1C+var_10]|199-248-12-160
129030|code|ADD.W           R12, R0, #1|0-241-1-12
129034|code|MOV             R11, R0|131-70
129036|code|MOV             R0, R4|32-70
129038|code|MOV.W           R6, R12,LSL#2|79-234-140-6
129042|code|ADD.W           LR, R6, #0xA|6-241-10-14
129046|code|BIC.W           R3, LR, #7|46-240-7-3
129050|code|SUB.W           SP, SP, R3|173-235-3-13
129054|code|BL              convertUtf8ToWchars|1-240-147-250
129058|code|MOV             R0, R4|32-70
129060|code|LSRS            R2, R6, #2|178-8
129062|code|MOV             R1, R5|41-70
129064|code|STR.W           R8, [R7,#0x1C+var_14]|199-248-8-128
129068|code|ADD             R4, SP, #0x24+var_1C|2-172
129070|code|STR             R4, [R7,#0x1C+var_10]|252-96
129072|code|BL              convertUtf8ToWchars|1-240-138-250
129076|code|MOVS            R3, #0|0-35
129078|code|LDR             R0, =(unk_388D0 - 0x1F842)|23-72
129080|code|STR             R3, [SP,#0x24+var_24]|0-147
129082|code|MOVS            R2, #1|1-34
129084|code|LDR             R1, =(aGlobalDataVari - 0x1F846); "global-data-variables"|22-73
129086|code|ADD             R0, PC; unk_388D0|120-68
129088|code|LDR             R3, =(sub_1F2E8+1 - 0x1F848)|22-75
129090|code|ADD             R1, PC; "global-data-variables"|121-68
129092|code|ADD             R3, PC; sub_1F2E8|123-68
129094|code|BL              getProgramQueue|254-247-67-253
129098|code|CBZ             R0, loc_1F886|224-177
129100|code|MOV             R1, R5|41-70
129102|code|MOVS            R2, #1|1-34
129104|code|STR.W           R10, [R7,#0x1C+var_10]|199-248-12-160
129108|code|STR.W           R9, [R7,#0x1C+var_C]|199-248-16-144
129112|code|BL              sub_1F4BC|255-247-48-254
129116|code|MOV             R1, R0|1-70
129118|code|CBZ             R0, loc_1F86E|48-177
129120|code|MOV             R2, R4|34-70
129122|code|MOV             R3, R11|91-70
129124|code|ADDS            R0, #8|8-48
129126|code|ADDS            R1, #0xC|12-49
129128|code|BL              sub_1F57C|255-247-136-254
129132|code|CBNZ            R0, loc_1F882|72-185
129134|code|MOVS            R0, #0|0-32
129136|code|LDR             R3, [R7,#0x1C+var_18]|123-104
129138|code|LDR             R2, [R7,#0x1C+var_8]|122-105
129140|code|LDR             R3, [R3]|27-104
129142|code|CMP             R2, R3|154-66
129144|code|BNE             loc_1F888|6-209
129146|code|ADDS            R7, #0x1C|28-55
129148|code|MOV             SP, R7|189-70
129150|code|POP.W           {R4-R11,PC}|189-232-240-143
129154|code|MOVS            R0, #1|1-32
129156|code|B               loc_1F870|244-231
129158|code|B               loc_1F870|243-231
129160|code|BLX             __stack_chk_fail|247-247-214-232
129164|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1F7C8|216-76-1-0
129168|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
129172|data|DCD unk_388D0 - 0x1F842|142-144-1-0
129176|data|DCD aGlobalDataVari - 0x1F846; "global-data-variables"|54-64-0-0
129180|data|DCD sub_1F2E8+1 - 0x1F848|161-250-255-255
129184|code|MOV             R3, R0|3-70
129186|code|LDR             R0, =(aTableextension - 0x1F8AA); "tableExtension"|8-72
129188|code|PUSH            {R4,LR}|16-181
129190|code|ADD             R0, PC; "tableExtension"|120-68
129192|code|MOV             R4, R1|12-70
129194|code|MOV             R1, R3|25-70
129196|code|BL              setGlobalDataVariable|255-247-132-255
129200|code|CBZ             R0, locret_1F8C2|56-177
129202|code|LDR             R0, =(aSubtableextens - 0x1F8BA); "subtableExtension"|5-72
129204|code|MOV             R1, R4|33-70
129206|code|ADD             R0, PC; "subtableExtension"|120-68
129208|code|BL              setGlobalDataVariable|255-247-126-255
129212|code|ADDS            R0, #0|0-48
129214|code|IT NE|24-191
129216|code|MOVNE           R0, #1|1-32
129218|code|POP             {R4,PC}|16-189
129220|data|DCD aTableextension - 0x1F8AA; "tableExtension"|234-63-0-0
129224|data|DCD aSubtableextens - 0x1F8BA; "subtableExtension"|234-63-0-0
129228|code|PUSH.W          {R3-R9,LR}|45-233-248-67
129232|code|MOV             R7, R0|7-70
129234|code|LDR             R4, [R0,#0x34]|68-107
129236|code|MOV             R9, R1|137-70
129238|code|STR             R4, [R0,#0x30]|4-99
129240|code|B               loc_1F8DC|0-224
129242|code|STR             R4, [R7,#0x30]|60-99
129244|code|MOV             R8, R4|160-70
129246|code|LDR.W           R6, [R4],#4|84-248-4-107
129250|code|MOV             R0, R6; wc|48-70
129252|code|BLX             iswspace|246-247-130-238
129256|code|MOV             R5, R0|5-70
129258|code|CMP             R0, #0|0-40
129260|code|BNE             loc_1F8DA|245-209
129262|code|STR.W           R8, [R7,#0x34]|199-248-52-128
129266|code|CBNZ            R6, loc_1F90C|94-185
129268|code|CMP.W           R9, #0|185-241-0-15
129272|code|BEQ             loc_1F906|5-208
129274|code|LDR             R1, =(aSNotSpecified - 0x1F904); "%s not specified"|6-73
129276|code|MOV             R0, R7|56-70
129278|code|MOV             R2, R9|74-70
129280|code|ADD             R1, PC; "%s not specified"|121-68
129282|code|BL              reportDataError|255-247-159-254
129286|code|MOV             R0, R5|40-70
129288|code|POP.W           {R3-R9,PC}|189-232-248-131
129292|code|MOVS            R5, #1|1-37
129294|code|MOV             R0, R5|40-70
129296|code|POP.W           {R3-R9,PC}|189-232-248-131
129300|data|DCD aSNotSpecified - 0x1F904; "%s not specified"|180-63-0-0
129304|code|PUSH            {R4,LR}|16-181
129306|code|MOV             R3, R1|11-70
129308|code|MOVS            R1, #0|0-33
129310|code|STR             R3, [R0,#0x30]|3-99
129312|code|STR             R3, [R0,#0x34]|67-99
129314|code|MOV             R4, R0|4-70
129316|code|BL              findDataOperand|255-247-210-255
129320|code|CBZ             R0, loc_1F93E|72-177
129322|code|LDR             R3, [R4,#0x30]|35-107
129324|code|LDR             R3, [R3]|27-104
129326|code|CMP             R3, #0x23 ; '#'|35-43
129328|code|BEQ             loc_1F93E|5-208
129330|code|LDR             R3, [R4,#0x20]|35-106
129332|code|MOV             R0, R4|32-70
129334|code|LDR             R1, [R4,#0x24]|97-106
129336|code|POP.W           {R4,LR}|189-232-16-64
129340|code|BX              R3|24-71
129342|code|MOVS            R0, #1|1-32
129344|code|POP             {R4,PC}|16-189
129346|data|ALIGN 4|0-191
129348|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1F94C)|27-75
129350|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|28-74
129352|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
129354|code|PUSH.W          {R4-R8,LR}|45-233-240-65
129358|code|SUB             SP, SP, #0x10|132-176
129360|code|LDR             R6, [R3,R2]; __stack_chk_guard|158-88
129362|code|ADD             R7, SP, #0|0-175
129364|code|MOV             R4, R1|12-70
129366|code|MOV             R5, R0|5-70
129368|code|LDR             R3, [R6]|51-104
129370|code|STR             R3, [R7,#0xC]|251-96
129372|code|BLX             strlen|247-247-96-233
129376|code|LDR             R3, [R4,#8]|163-104
129378|code|ADD.W           R1, R7, #8|7-241-8-1
129382|code|STR             R5, [R7,#4]|125-96
129384|code|ADDS            R3, #1|1-51
129386|code|STR             R3, [R4,#8]|163-96
129388|code|ADDS            R2, R0, #1|66-28
129390|code|ADDS            R0, R7, #4|56-29
129392|code|LSLS            R3, R2, #2|147-0
129394|code|ADDS            R3, #0xA|10-51
129396|code|BIC.W           R3, R3, #7|35-240-7-3
129400|code|SUB.W           SP, SP, R3|173-235-3-13
129404|code|STR.W           SP, [R7,#8]|199-248-8-208
129408|code|BL              convertUtf8ToWchars|1-240-226-249
129412|code|LDR             R2, [R7,#4]|122-104
129414|code|MOV             R0, R4|32-70
129416|code|LDRB            R3, [R2]|19-120
129418|code|CBNZ            R3, loc_1F9A2|83-185
129420|code|MOV             R1, SP|105-70
129422|code|BL              sub_1F918|255-247-195-255
129426|code|LDR             R2, [R7,#0xC]|250-104
129428|code|LDR             R3, [R6]|51-104
129430|code|CMP             R2, R3|154-66
129432|code|BNE             loc_1F9B0|10-209
129434|code|ADDS            R7, #0x10|16-55
129436|code|MOV             SP, R7|189-70
129438|code|POP.W           {R4-R8,PC}|189-232-240-129
129442|code|LDR             R1, =(aIllegalUtf8Cha - 0x1F9AA); "illegal UTF-8 character at offset %u"|6-73
129444|code|SUBS            R2, R2, R5|82-27
129446|code|ADD             R1, PC; "illegal UTF-8 character at offset %u"|121-68
129448|code|BL              reportDataError|255-247-76-254
129452|code|MOVS            R0, #1|1-32
129454|code|B               loc_1F992|240-231
129456|code|BLX             __stack_chk_fail|247-247-66-232
129460|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1F94C|84-75-1-0
129464|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
129468|data|DCD aIllegalUtf8Cha - 0x1F9AA; "illegal UTF-8 character at offset %u"|34-63-0-0
129472|code|PUSH            {R4-R6,LR}|112-181
129474|code|MOV             R4, R0|4-70
129476|code|MOV             R0, R1|8-70
129478|code|MOV             R5, R1|13-70
129480|code|BL              getElementIdentifier|254-247-54-252
129484|code|MOVS            R1, #0|0-33
129486|code|MOV             R6, R0|6-70
129488|code|MOV             R0, R4|32-70
129490|code|BL              findDataOperand|255-247-123-255
129494|code|CBNZ            R0, loc_1F9DC|8-185
129496|code|MOVS            R0, #1|1-32
129498|code|POP             {R4-R6,PC}|112-189
129500|code|MOV             R0, R4|32-70
129502|code|LDR             R1, [R4,#0x30]|33-107
129504|code|BL              sub_1F918|255-247-154-255
129508|code|MOV             R4, R0|4-70
129510|code|CBZ             R5, loc_1F9F2|37-177
129512|code|MOV             R0, R5|40-70
129514|code|BL              getElementIdentifier|254-247-37-252
129518|code|CMP             R6, R0|134-66
129520|code|BEQ             loc_1F9F6|1-208
129522|code|MOV             R0, R4|32-70
129524|code|POP             {R4-R6,PC}|112-189
129526|code|MOV             R0, R5|40-70
129528|code|BL              deleteElement|254-247-226-251
129532|code|MOV             R0, R4|32-70
129534|code|POP             {R4-R6,PC}|112-189
129536|code|LDR             R3, [R0,#0x34]|67-107
129538|code|PUSH            {R4}|16-180
129540|code|LDR             R2, [R3]|26-104
129542|code|MOV             R4, R2|20-70
129544|code|CBZ             R2, loc_1FA12|26-177
129546|code|MOVS            R4, #1|1-36
129548|code|ADDS            R3, #4|4-51
129550|code|STR             R3, [R0,#0x34]|67-99
129552|code|STR             R2, [R1]|10-96
129554|code|MOV             R0, R4|32-70
129556|code|POP.W           {R4}|93-248-4-75
129560|code|BX              LR|112-71
129562|data|ALIGN 4|0-191
129564|code|PUSH            {R3-R5,LR}|56-181
129566|code|MOV             R5, R0|5-70
129568|code|LDR             R4, [R0,#0x34]|68-107
129570|code|LDR             R3, [R0,#0x30]|3-107
129572|code|SUBS            R3, R4, R3|227-26
129574|code|ASRS            R3, R3, #2|155-16
129576|code|CMP             R3, R1|139-66
129578|code|BCC             loc_1FA36|4-211
129580|code|SUB.W           R4, R4, R1,LSL#2|164-235-129-4
129584|code|MOVS            R0, #1|1-32
129586|code|STR             R4, [R5,#0x34]|108-99
129588|code|POP             {R3-R5,PC}|56-189
129590|code|MOV             R2, R1|10-70
129592|code|LDR             R1, =(aUngetCharacter - 0x1FA3E); "unget character count out of range: %u "...|2-73
129594|code|ADD             R1, PC; "unget character count out of range: %u "...|121-68
129596|code|BL              reportDataError|255-247-2-254
129600|code|MOVS            R0, #0|0-32
129602|code|POP             {R3-R5,PC}|56-189
129604|data|DCD aUngetCharacter - 0x1FA3E; "unget character count out of range: %u "...|182-62-0-0
129608|code|PUSH            {R4-R6,LR}|112-181
129610|code|MOV             R6, R1|14-70
129612|code|MOV             R1, R2|17-70
129614|code|MOV             R5, R0|5-70
129616|code|BL              findDataOperand|255-247-60-255
129620|code|CBZ             R0, locret_1FA7A|136-177
129622|code|LDR             R4, [R5,#0x34]|108-107
129624|code|B               loc_1FA60|2-224
129626|code|BLX             iswspace|246-247-200-237
129630|code|CBNZ            R0, loc_1FA6C|40-185
129632|code|ADDS            R4, #4|4-52
129634|code|LDR             R3, [R4]|35-104
129636|code|STR             R4, [R5,#0x34]|108-99
129638|code|MOV             R0, R3; wc|24-70
129640|code|CMP             R3, #0|0-43
129642|code|BNE             loc_1FA5A|246-209
129644|code|LDR             R3, [R5,#0x30]|43-107
129646|code|MOVS            R0, #1|1-32
129648|code|SUBS            R4, R4, R3|228-26
129650|code|STR             R3, [R6]|51-96
129652|code|ASRS            R4, R4, #2|164-16
129654|code|STR             R4, [R6,#4]|116-96
129656|code|POP             {R4-R6,PC}|112-189
129658|code|POP             {R4-R6,PC}|112-189
129660|code|PUSH            {R3-R7,LR}|248-181
129662|code|MOV             R6, R1|14-70
129664|code|MOV             R1, R2|17-70
129666|code|MOV             R7, R0|7-70
129668|code|BL              findDataOperand|255-247-34-255
129672|code|CBZ             R0, locret_1FABA|184-177
129674|code|LDR             R4, [R7,#0x30]|60-107
129676|code|MOV             R0, R4; s|32-70
129678|code|BLX             wcslen|246-247-156-237
129682|code|LSLS            R0, R0, #2|128-0
129684|code|ADDS            R5, R4, R0|37-24
129686|code|STR             R5, [R7,#0x34]|125-99
129688|code|ASRS            R3, R0, #2|131-16
129690|code|STR             R4, [R6]|52-96
129692|code|STR             R3, [R6,#4]|115-96
129694|code|CBNZ            R3, loc_1FAA6|19-185
129696|code|B               loc_1FAB6|9-224
129698|code|STR             R4, [R6,#4]|116-96
129700|code|CBZ             R4, loc_1FAB6|60-177
129702|code|LDR.W           R0, [R5,#-4]!; wc|85-248-4-13
129706|code|SUBS            R4, R3, #1|92-30
129708|code|BLX             iswspace|246-247-158-237
129712|code|MOV             R3, R4|35-70
129714|code|CMP             R0, #0|0-40
129716|code|BNE             loc_1FAA2|245-209
129718|code|MOVS            R0, #1|1-32
129720|code|POP             {R3-R7,PC}|248-189
129722|code|POP             {R3-R7,PC}|248-189
129724|code|PUSH.W          {R4-R11,LR}|45-233-240-79
129728|code|MOV             R11, R1|139-70
129730|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1FACC)|205-76
129732|code|SUB             SP, SP, #0x44|145-176
129734|code|LDR             R1, =(__stack_chk_guard_ptr - 0x344A0)|205-73
129736|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
129738|code|ADD             R7, SP, #8|2-175
129740|code|MOV             R8, R2|144-70
129742|code|SUBS.W          R10, R3, #0|179-241-0-10
129746|code|MOV             R2, R4|34-70
129748|code|STR             R4, [R7,#0x3C+var_2C]|60-97
129750|code|STR             R0, [R7,#0x3C+var_30]|248-96
129752|code|MOV.W           R4, #0|79-240-0-4
129756|code|LDR             R2, [R2,R1]; __stack_chk_guard|82-88
129758|code|STR             R2, [R7,#0x3C+var_28]|122-97
129760|code|LDR             R2, [R2]|18-104
129762|code|STRB.W          R4, [R11]|139-248-0-64
129766|code|STR             R2, [R7,#0x3C+var_8]|122-99
129768|code|BGT             loc_1FB16|21-220
129770|code|B               loc_1FD9C|87-225
129772|code|LDRB.W          R0, [R11]|155-248-0-0
129776|code|MOVS            R2, #1; n|1-34
129778|code|ADD.W           R1, R7, #0x24 ; '$'; s2|7-241-36-1
129782|code|ADDS            R4, #1|1-52
129784|code|ADDS            R5, R2, R0|21-24
129786|code|CMP             R5, #0xFE|254-45
129788|code|BHI.W           loc_1FD5A|0-242-45-129
129792|code|ADD.W           R0, R11, R0,LSL#2|11-235-128-0
129796|code|UXTB            R5, R5|237-178
129798|code|ADDS            R0, #4; s1|4-48
129800|code|BLX             wmemcpy|246-247-80-238
129804|code|CMP             R10, R4|162-69
129806|code|STRB.W          R5, [R11]|139-248-0-80
129810|code|BLE.W           loc_1FD9E|64-243-68-129
129814|code|LDR.W           R2, [R8,R4,LSL#2]|88-248-36-32
129818|code|LSLS            R1, R4, #2|161-0
129820|code|ADD.W           R3, R8, R1|8-235-1-3
129824|code|STR             R3, [R7,#0x3C+var_20]|251-97
129826|code|CMP             R2, #0x5C ; '\'|92-42
129828|code|STR             R2, [R7,#0x3C+var_18]|122-98
129830|code|BNE             loc_1FAEC|225-209
129832|code|ADDS            R2, R4, #1|98-28
129834|code|CMP             R10, R2|146-69
129836|code|MOV             R5, R2|21-70
129838|code|BLE.W           loc_1FC56|64-243-146-128
129842|code|ADDS            R0, R1, #4|8-29
129844|code|ADD.W           R12, R8, R0|8-235-0-12
129848|code|LDR.W           R6, [R8,R0]|88-248-0-96
129852|code|SUB.W           R0, R6, #0x23 ; '#'; switch 89 cases|166-241-35-0
129856|code|STR             R6, [R7,#0x3C+var_18]|126-98
129858|code|CMP             R0, #0x58|88-40
129860|code|BHI.W           def_1FB48; jumptable 0001FB48 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|0-242-132-128
129864|code|TBH.W           [PC,R0,LSL#1]; switch jump|223-232-16-240
129868|data|DCW 0x95; jump table for switch statement|149-0
129870|data|DCW 0x82|130-0
129872|data|DCW 0x82|130-0
129874|data|DCW 0x82|130-0
129876|data|DCW 0x82|130-0
129878|data|DCW 0x82|130-0
129880|data|DCW 0x82|130-0
129882|data|DCW 0x82|130-0
129884|data|DCW 0x82|130-0
129886|data|DCW 0x82|130-0
129888|data|DCW 0x82|130-0
129890|data|DCW 0x82|130-0
129892|data|DCW 0x82|130-0
129894|data|DCW 0x82|130-0
129896|data|DCW 0x82|130-0
129898|data|DCW 0x82|130-0
129900|data|DCW 0x82|130-0
129902|data|DCW 0x82|130-0
129904|data|DCW 0x82|130-0
129906|data|DCW 0x82|130-0
129908|data|DCW 0x82|130-0
129910|data|DCW 0x82|130-0
129912|data|DCW 0x82|130-0
129914|data|DCW 0x82|130-0
129916|data|DCW 0x82|130-0
129918|data|DCW 0xB2|178-0
129920|data|DCW 0x82|130-0
129922|data|DCW 0x82|130-0
129924|data|DCW 0x82|130-0
129926|data|DCW 0x82|130-0
129928|data|DCW 0x82|130-0
129930|data|DCW 0x82|130-0
129932|data|DCW 0x82|130-0
129934|data|DCW 0x82|130-0
129936|data|DCW 0x82|130-0
129938|data|DCW 0x82|130-0
129940|data|DCW 0x82|130-0
129942|data|DCW 0x82|130-0
129944|data|DCW 0x82|130-0
129946|data|DCW 0x82|130-0
129948|data|DCW 0x82|130-0
129950|data|DCW 0x82|130-0
129952|data|DCW 0x82|130-0
129954|data|DCW 0x82|130-0
129956|data|DCW 0x82|130-0
129958|data|DCW 0x82|130-0
129960|data|DCW 0x82|130-0
129962|data|DCW 0x82|130-0
129964|data|DCW 0x82|130-0
129966|data|DCW 0x82|130-0
129968|data|DCW 0xA9|169-0
129970|data|DCW 0x82|130-0
129972|data|DCW 0x82|130-0
129974|data|DCW 0xA3|163-0
129976|data|DCW 0x82|130-0
129978|data|DCW 0x82|130-0
129980|data|DCW 0x82|130-0
129982|data|DCW 0x95|149-0
129984|data|DCW 0x82|130-0
129986|data|DCW 0x82|130-0
129988|data|DCW 0x82|130-0
129990|data|DCW 0x82|130-0
129992|data|DCW 0x82|130-0
129994|data|DCW 0x9F|159-0
129996|data|DCW 0x82|130-0
129998|data|DCW 0x82|130-0
130000|data|DCW 0x82|130-0
130002|data|DCW 0x9B|155-0
130004|data|DCW 0x82|130-0
130006|data|DCW 0x82|130-0
130008|data|DCW 0x82|130-0
130010|data|DCW 0x82|130-0
130012|data|DCW 0x82|130-0
130014|data|DCW 0x82|130-0
130016|data|DCW 0x82|130-0
130018|data|DCW 0x97|151-0
130020|data|DCW 0x59|89-0
130022|data|DCW 0x82|130-0
130024|data|DCW 0x82|130-0
130026|data|DCW 0x124|36-1
130028|data|DCW 0x120|32-1
130030|data|DCW 0x11C|28-1
130032|data|DCW 0x112|18-1
130034|data|DCW 0x10E|14-1
130036|data|DCW 0x82|130-0
130038|data|DCW 0xA3|163-0
130040|data|DCW 0x82|130-0
130042|data|DCW 0x82|130-0
130044|data|DCW 0xE4|228-0
130046|code|LDR             R0, =0x35C; jumptable 0001FB48 case 111|128-72
130048|code|MOVS            R1, #3|3-33
130050|code|LDR             R3, [R7,#0x3C+var_2C]|59-105
130052|code|LDR             R3, [R3,R0]|27-88
130054|code|MOV             R0, R3|24-70
130056|code|ADDS            R3, R2, R1|83-24
130058|code|ADD.W           R2, R7, #0x2C ; ','|7-241-44-2
130062|code|STR             R3, [R7,#0x3C+var_24]|187-97
130064|code|ADD.W           R3, R7, #0x28 ; '('|7-241-40-3
130068|code|MOVS            R6, #0|0-38
130070|code|STM.W           R7, {R8,R11}|135-232-0-9
130074|code|STR             R4, [R7,#0x3C+var_34]|188-96
130076|code|MOV             R9, R12|225-70
130078|code|MOV             R4, R6|52-70
130080|code|MOV             R8, R3|152-70
130082|code|MOV             R6, R0|6-70
130084|code|MOV             R11, R2|147-70
130086|code|B               loc_1FC48|15-224
130088|code|LDR.W           R0, [R9,#4]!|89-248-4-15
130092|code|MOV             R1, R8|65-70
130094|code|MOV             R2, R11|90-70
130096|code|BLX             R6|176-71
130098|code|CBZ             R0, loc_1FC4E|96-177
130100|code|LDR             R1, [R7,#0x3C+var_10]|249-106
130102|code|LDR             R2, [R7,#0x3C+var_14]|186-106
130104|code|LSL.W           R3, R4, R1|4-250-1-243
130108|code|ORR.W           R4, R3, R2|67-234-2-4
130112|code|LDR             R3, [R7,#0x3C+var_24]|187-105
130114|code|CMP             R5, R3|157-66
130116|code|BEQ.W           loc_1FDBA|0-240-185-128
130120|code|ADDS            R5, #1|1-53
130122|code|CMP             R5, R10|85-69
130124|code|BNE             loc_1FC28|236-209
130126|code|LDR             R4, [R7,#0x3C+var_34]|188-104
130128|code|CMP             R10, R5; jumptable 0001FB48 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|170-69
130130|code|IT GT|200-191
130132|code|ADDGT           R5, #1|1-53
130134|code|LDR             R1, =(aInvalidEscapeS - 0x1FC60); "invalid escape sequence"|107-73
130136|code|MOVS            R2, #5; category|5-34
130138|code|MOVS            R0, #0; domainname|0-32
130140|code|ADD             R1, PC; "invalid escape sequence"|121-68
130142|code|BLX             dcgettext|246-247-10-239
130146|code|LDR             R3, [R7,#0x3C+var_20]|251-105
130148|code|LDR             R1, =(aSLs - 0x1FC6C); "%s: %.*ls"|104-73
130150|code|STR             R3, [SP,#0x44+var_44]|0-147
130152|code|ADD             R1, PC; "%s: %.*ls"|121-68
130154|code|SUBS            R3, R5, R4|43-27
130156|code|MOV             R2, R0|2-70
130158|code|LDR             R0, [R7,#0x3C+var_30]|248-104
130160|code|BL              reportDataError|255-247-232-252
130164|code|B               loc_1FD64|118-224
130166|code|MOV             R4, R2; jumptable 0001FB48 cases 35,92|20-70
130168|code|B               loc_1FAEC|56-231
130170|code|MOV             R4, R2; jumptable 0001FB48 case 110|20-70
130172|code|MOVS            R2, #0xA|10-34
130174|code|STR             R2, [R7,#0x3C+var_18]|122-98
130176|code|B               loc_1FAEC|52-231
130178|code|MOV             R4, R2; jumptable 0001FB48 case 102|20-70
130180|code|MOVS            R2, #0xC|12-34
130182|code|STR             R2, [R7,#0x3C+var_18]|122-98
130184|code|B               loc_1FAEC|48-231
130186|code|MOV             R4, R2; jumptable 0001FB48 case 98|20-70
130188|code|MOVS            R2, #8|8-34
130190|code|STR             R2, [R7,#0x3C+var_18]|122-98
130192|code|B               loc_1FAEC|44-231
130194|code|LDR             R0, =0x32C; jumptable 0001FB48 cases 88,120|94-72
130196|code|MOVS            R1, #2|2-33
130198|code|LDR             R3, [R7,#0x3C+var_2C]|59-105
130200|code|LDR             R3, [R3,R0]|27-88
130202|code|MOV             R0, R3|24-70
130204|code|B               loc_1FC08|180-231
130206|code|LDR             R3, [R7,#0x3C+arg_0]; jumptable 0001FB48 case 85|59-110
130208|code|CMP             R3, #0|0-43
130210|code|BNE             def_1FB48; jumptable 0001FB48 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|213-209
130212|code|LDR             R0, =0x32C|89-72
130214|code|MOVS            R1, #8|8-33
130216|code|LDR             R3, [R7,#0x3C+var_2C]|59-105
130218|code|LDR             R3, [R3,R0]|27-88
130220|code|MOV             R0, R3|24-70
130222|code|B               loc_1FC08|171-231
130224|code|ADDS            R1, #8; jumptable 0001FB48 case 60|8-49
130226|code|ADDS            R5, R4, #2|165-28
130228|code|ADD.W           R6, R8, R1|8-235-1-6
130232|code|RSB.W           R2, R5, R10; n|197-235-10-2
130236|code|MOVS            R1, #0x3E ; '>'; c|62-33
130238|code|MOV             R0, R6; s|48-70
130240|code|BLX             wmemchr|246-247-28-238
130244|code|LDR             R3, [R7,#0x3C+arg_0]|59-110
130246|code|CMP             R3, #0|0-43
130248|code|BNE             def_1FB48; jumptable 0001FB48 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|194-209
130250|code|CMP             R0, #0|0-40
130252|code|BEQ.W           loc_1FDEC|0-240-142-128
130256|code|SUBS            R0, R0, R6|128-27
130258|code|MOV             R9, SP|233-70
130260|code|MOV.W           LR, R0,ASR#2|79-234-160-14
130264|code|ADD.W           R2, LR, #8|14-241-8-2
130268|code|ADD             R5, LR|117-68
130270|code|BIC.W           R2, R2, #7|34-240-7-2
130274|code|SUB.W           SP, SP, R2|173-235-2-13
130278|code|ADD             R1, SP, #0x44+var_3C|2-169
130280|code|CMP.W           LR, #0|190-241-0-15
130284|code|BEQ             loc_1FDC4|106-208
130286|code|SUBS            R6, #4|4-62
130288|code|ADD.W           R12, SP, #0x44+var_3D|13-241-7-12
130292|code|MOV             R0, R3|24-70
130294|code|B               loc_1FD08|7-224
130296|code|CMP             R3, #0xFF|255-43
130298|code|BHI             loc_1FDE4|115-216
130300|code|UXTB            R3, R3|219-178
130302|code|ADDS            R0, #1|1-48
130304|code|STRB.W          R3, [R12,#1]!|12-248-1-63
130308|code|CMP             R0, LR|112-69
130310|code|BEQ             loc_1FDC4|93-208
130312|code|LDR.W           R3, [R6,#4]!|86-248-4-63
130316|code|CMP             R3, #0x5F ; '_'|95-43
130318|code|BNE             loc_1FCF8|243-209
130320|code|MOVS            R3, #0x20 ; ' '|32-35
130322|code|B               loc_1FCFE|244-231
130324|code|ADDS            R1, #8; jumptable 0001FB48 case 123|8-49
130326|code|ADDS            R5, R4, #2|165-28
130328|code|ADD.W           R6, R8, R1|8-235-1-6
130332|code|RSB.W           R2, R5, R10; n|197-235-10-2
130336|code|MOVS            R1, #0x7D ; '}'; c|125-33
130338|code|MOV             R0, R6; s|48-70
130340|code|BLX             wmemchr|246-247-234-237
130344|code|CMP             R0, #0|0-40
130346|code|BEQ             loc_1FDEC|95-208
130348|code|LDR             R3, [R7,#0x3C+var_30]|251-104
130350|code|SUBS            R2, R0, R6|130-27
130352|code|ADD.W           R1, R7, #0x2C ; ','|7-241-44-1
130356|code|STR             R6, [R7,#0x3C+var_10]|254-98
130358|code|ASRS            R6, R2, #2|150-16
130360|code|STR             R6, [R7,#0x3C+var_C]|62-99
130362|code|LDR             R0, [R3,#0x2C]|216-106
130364|code|ADD             R5, R6|53-68
130366|code|BL              sub_1F5BC|255-247-61-252
130370|code|CMP             R0, #0|0-40
130372|code|BEQ             def_1FB48; jumptable 0001FB48 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|132-208
130374|code|LDR             R1, [R0,#8]|129-104
130376|code|MOV             R4, R5|44-70
130378|code|LDR             R2, [R0,#0xC]|194-104
130380|code|LDRB.W          R0, [R11]|155-248-0-0
130384|code|ADDS            R4, #1|1-52
130386|code|ADDS            R5, R2, R0|21-24
130388|code|CMP             R5, #0xFE|254-45
130390|code|BLS.W           loc_1FB00|127-246-211-174
130394|code|LDR             R1, =(aStringOperandT - 0x1FD62); "string operand too long"|45-73
130396|code|LDR             R0, [R7,#0x3C+var_30]|248-104
130398|code|ADD             R1, PC; "string operand too long"|121-68
130400|code|BL              reportDataError|255-247-112-252
130404|code|MOVS            R0, #0|0-32
130406|code|B               loc_1FDA8|31-224
130408|code|MOV             R4, R2; jumptable 0001FB48 case 118|20-70
130410|code|MOVS            R2, #0xB|11-34
130412|code|STR             R2, [R7,#0x3C+var_18]|122-98
130414|code|B               loc_1FAEC|189-230
130416|code|LDR             R3, [R7,#0x3C+arg_0]; jumptable 0001FB48 case 117|59-110
130418|code|CMP             R3, #0|0-43
130420|code|BNE.W           def_1FB48; jumptable 0001FB48 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|127-244-108-175
130424|code|LDR             R0, =0x32C|36-72
130426|code|MOVS            R1, #4|4-33
130428|code|LDR             R3, [R7,#0x3C+var_2C]|59-105
130430|code|LDR             R3, [R3,R0]|27-88
130432|code|MOV             R0, R3|24-70
130434|code|B               loc_1FC08|65-231
130436|code|MOV             R4, R2; jumptable 0001FB48 case 116|20-70
130438|code|MOVS            R2, #9|9-34
130440|code|STR             R2, [R7,#0x3C+var_18]|122-98
130442|code|B               loc_1FAEC|175-230
130444|code|MOVS            R3, #0x20 ; ' '; jumptable 0001FB48 case 115|32-35
130446|code|MOV             R4, R2|20-70
130448|code|STR             R3, [R7,#0x3C+var_18]|123-98
130450|code|B               loc_1FAEC|171-230
130452|code|MOV             R4, R2; jumptable 0001FB48 case 114|20-70
130454|code|MOVS            R2, #0xD|13-34
130456|code|STR             R2, [R7,#0x3C+var_18]|122-98
130458|code|B               loc_1FAEC|167-230
130460|code|MOV             R5, R4|37-70
130462|code|ADD.W           R5, R11, R5,LSL#2|11-235-133-5
130466|code|MOVS            R0, #1|1-32
130468|code|MOVS            R3, #0|0-35
130470|code|STR             R3, [R5,#4]|107-96
130472|code|LDR             R3, [R7,#0x3C+var_28]|123-105
130474|code|LDR             R2, [R7,#0x3C+var_8]|122-107
130476|code|LDR             R3, [R3]|27-104
130478|code|CMP             R2, R3|154-66
130480|code|BNE             loc_1FDF2|31-209
130482|code|ADDS            R7, #0x3C ; '<'|60-55
130484|code|MOV             SP, R7|189-70
130486|code|POP.W           {R4-R11,PC}|189-232-240-143
130490|code|STR             R4, [R7,#0x3C+var_18]|124-98
130492|code|MOV             R4, R5|44-70
130494|code|LDM.W           R7, {R8,R11}|151-232-0-9
130498|code|B               loc_1FAEC|147-230
130500|code|MOV             R0, LR|112-70
130502|code|ADD.W           R6, R7, #0x24 ; '$'|7-241-36-6
130506|code|MOVS            R2, #0|0-34
130508|code|STRB            R2, [R1,R0]|10-84
130510|code|MOV             R0, R6|48-70
130512|code|BL              getCharacterByName|0-240-112-253
130516|code|MOV             R1, R6|49-70
130518|code|MOVS            R2, #1|1-34
130520|code|MOV             SP, R9|205-70
130522|code|CMP             R0, #0|0-40
130524|code|BEQ.W           def_1FB48; jumptable 0001FB48 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|63-244-56-175
130528|code|MOV             R4, R5|44-70
130530|code|B               loc_1FD4C|179-231
130532|code|CMP             LR, R0|134-69
130534|code|BLS             loc_1FDC6|238-217
130536|code|MOV             SP, R9|205-70
130538|code|B               def_1FB48; jumptable 0001FB48 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|49-231
130540|code|ADD.W           R5, R10, #0xFFFFFFFF|10-241-255-53
130544|code|B               def_1FB48; jumptable 0001FB48 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|46-231
130546|code|BLX             __stack_chk_fail|246-247-34-238
130550|data|ALIGN 4|0-191
130552|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1FACC|212-73-1-0
130556|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
130560|data|DCD 0x35C|92-3-0-0
130564|data|DCD aInvalidEscapeS - 0x1FC60; "invalid escape sequence"|192-60-0-0
130568|data|DCD aSLs - 0x1FC6C; "%s: %.*ls"|212-61-0-0
130572|data|DCD 0x32C|44-3-0-0
130576|data|DCD aStringOperandT - 0x1FD62; "string operand too long"|214-59-0-0
130580|code|PUSH.W          {R4-R8,LR}|45-233-240-65
130584|code|MOV             R6, R2|22-70
130586|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1FE26)|17-76
130588|code|MOV             R2, R3|26-70
130590|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|17-77
130592|code|SUB             SP, SP, #0x18|134-176
130594|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
130596|code|MOV             R7, R1|15-70
130598|code|ADD             R1, SP, #0x30+var_24|3-169
130600|code|MOV             R8, R0|128-70
130602|code|MOV             R3, R4|35-70
130604|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
130606|code|LDR             R3, [R4]|35-104
130608|code|STR             R3, [SP,#0x30+var_1C]|5-147
130610|code|BL              getDataOperand|255-247-9-254
130614|code|CBZ             R0, loc_1FE4C|72-177
130616|code|LDR             R2, [SP,#0x30+var_24]|3-154
130618|code|MOV             R0, R8|64-70
130620|code|LDR             R3, [SP,#0x30+var_20]|4-155
130622|code|MOV             R1, R7|57-70
130624|code|STR             R6, [SP,#0x30+var_30]|0-150
130626|code|BL              parseDataString|255-247-59-254
130630|code|ADDS            R0, #0|0-48
130632|code|IT NE|24-191
130634|code|MOVNE           R0, #1|1-32
130636|code|LDR             R2, [SP,#0x30+var_1C]|5-154
130638|code|LDR             R3, [R4]|35-104
130640|code|CMP             R2, R3|154-66
130642|code|BNE             loc_1FE5A|2-209
130644|code|ADD             SP, SP, #0x18|6-176
130646|code|POP.W           {R4-R8,PC}|189-232-240-129
130650|code|BLX             __stack_chk_fail|246-247-238-237
130654|data|ALIGN 0x10|0-191
130656|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1FE26|122-70-1-0
130660|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
130664|code|CMP             R1, #0xFF|255-41
130666|code|PUSH            {R3,LR}|8-181
130668|code|MOV             R3, R1|11-70
130670|code|BLS             loc_1FE9A|20-217
130672|code|CMP.W           R1, #0x10000|177-245-128-63
130676|code|MOV.W           R1, #1|79-240-1-1
130680|code|BCC             loc_1FE8A|7-211
130682|code|LDR             R2, =(aU08x - 0x1FE80); "\\U%08X"|12-74
130684|code|ADD             R2, PC; "\\U%08X"|122-68
130686|code|BLX             __fprintf_chk|246-247-188-236
130690|code|ADDS            R0, #1|1-48
130692|code|IT NE|24-191
130694|code|MOVNE           R0, #1|1-32
130696|code|POP             {R3,PC}|8-189
130698|code|LDR             R2, =(aU04x - 0x1FE90); "\\u%04X"|9-74
130700|code|ADD             R2, PC; "\\u%04X"|122-68
130702|code|BLX             __fprintf_chk|246-247-180-236
130706|code|ADDS            R0, #1|1-48
130708|code|IT NE|24-191
130710|code|MOVNE           R0, #1|1-32
130712|code|POP             {R3,PC}|8-189
130714|code|LDR             R2, =(aX02x - 0x1FEA2); "\\x%02X"|6-74
130716|code|MOVS            R1, #1|1-33
130718|code|ADD             R2, PC; "\\x%02X"|122-68
130720|code|BLX             __fprintf_chk|246-247-170-236
130724|code|ADDS            R0, #1|1-48
130726|code|IT NE|24-191
130728|code|MOVNE           R0, #1|1-32
130730|code|POP             {R3,PC}|8-189
130732|data|DCD aU08x - 0x1FE80; "\\U%08X"|224-58-0-0
130736|data|DCD aU04x - 0x1FE90; "\\u%04X"|200-58-0-0
130740|data|DCD aX02x - 0x1FEA2; "\\x%02X"|174-58-0-0
130744|code|CMP             R1, #0x5C ; '\'|92-41
130746|code|PUSH            {R3-R5,LR}|56-181
130748|code|MOV             R4, R1|12-70
130750|code|MOV             R5, R0|5-70
130752|code|BHI             loc_1FECA|3-216
130754|code|LDR             R3, =(unk_237D8 - 0x1FEC8)|16-75
130756|code|ADD             R3, PC; unk_237D8|123-68
130758|code|LDRB            R3, [R3,R1]|91-92
130760|code|CBNZ            R3, loc_1FEF2|155-185
130762|code|MOV             R0, R4; wc|32-70
130764|code|BLX             iswspace|246-247-142-235
130768|code|CBNZ            R0, loc_1FEDA|24-185
130770|code|MOV             R0, R4; wc|32-70
130772|code|BLX             iswcntrl|246-247-216-239
130776|code|CBZ             R0, loc_1FEE6|40-177
130778|code|MOV             R0, R5|40-70
130780|code|MOV             R1, R4|33-70
130782|code|POP.W           {R3-R5,LR}|189-232-56-64
130786|code|B.W             writeHexadecimalCharacter|255-247-193-191
130790|code|MOV             R0, R5|40-70
130792|code|MOV             R1, R4|33-70
130794|code|POP.W           {R3-R5,LR}|189-232-56-64
130798|code|B.W             writeUtf8Character|1-240-127-184
130802|code|LDR             R2, =(aC - 0x1FEFA); "\\%c"|5-74
130804|code|MOVS            R1, #1|1-33
130806|code|ADD             R2, PC; "\\%c"|122-68
130808|code|BLX             __fprintf_chk|246-247-126-236
130812|code|ADDS            R0, #1|1-48
130814|code|IT NE|24-191
130816|code|MOVNE           R0, #1|1-32
130818|code|POP             {R3-R5,PC}|56-189
130820|data|DCD unk_237D8 - 0x1FEC8|16-57-0-0
130824|data|DCD aC - 0x1FEFA; "\\%c"|110-58-0-0
130828|code|PUSH            {R4-R6,LR}|112-181
130830|code|ADD.W           R5, R1, R2,LSL#2|1-235-130-5
130834|code|CMP             R1, R5|169-66
130836|code|MOV             R4, R1|12-70
130838|code|MOV             R6, R0|6-70
130840|code|BCC             loc_1FF20|2-211
130842|code|B               loc_1FF30|9-224
130844|code|CMP             R5, R4|165-66
130846|code|BLS             loc_1FF30|7-217
130848|code|MOV             R0, R6|48-70
130850|code|LDR.W           R1, [R4],#4|84-248-4-27
130854|code|BL              writeEscapedCharacter|255-247-199-255
130858|code|CMP             R0, #0|0-40
130860|code|BNE             loc_1FF1C|246-209
130862|code|POP             {R4-R6,PC}|112-189
130864|code|MOVS            R0, #1|1-32
130866|code|POP             {R4-R6,PC}|112-189
130868|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1FF3E)|24-75
130870|code|PUSH.W          {R4-R8,LR}|45-233-240-65
130874|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
130876|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|23-76
130878|code|SUB             SP, SP, #0x10|132-176
130880|code|LDR             R2, =(aDotNumber - 0x1FF4E); "dot number"|23-74
130882|code|MOV             R6, R1|14-70
130884|code|ADD             R1, SP, #0x28+var_24|1-169
130886|code|MOV             R7, R0|7-70
130888|code|LDR             R5, [R3,R4]; __stack_chk_guard|29-89
130890|code|ADD             R2, PC; "dot number"|122-68
130892|code|LDR             R3, [R5]|43-104
130894|code|STR             R3, [SP,#0x28+var_1C]|3-147
130896|code|BL              getDataOperand|255-247-122-253
130900|code|MOV             R4, R0|4-70
130902|code|CBNZ            R0, loc_1FF68|56-185
130904|code|LDR             R2, [SP,#0x28+var_1C]|3-154
130906|code|MOV             R0, R4|32-70
130908|code|LDR             R3, [R5]|43-104
130910|code|CMP             R2, R3|154-66
130912|code|BNE             loc_1FF94|24-209
130914|code|ADD             SP, SP, #0x10|4-176
130916|code|POP.W           {R4-R8,PC}|189-232-240-129
130920|code|LDR             R4, [SP,#0x28+var_20]|2-156
130922|code|LDR.W           R8, [SP,#0x28+var_24]|221-248-4-128
130926|code|CMP             R4, #1|1-44
130928|code|BEQ             loc_1FF84|8-208
130930|code|LDR             R1, =(aInvalidBraille - 0x1FF7E); "invalid braille dot number: %.*ls"|12-73
130932|code|MOV             R2, R4|34-70
130934|code|MOV             R0, R7|56-70
130936|code|MOV             R3, R8|67-70
130938|code|ADD             R1, PC; "invalid braille dot number: %.*ls"|121-68
130940|code|MOVS            R4, #0|0-36
130942|code|BL              reportDataError|255-247-97-251
130946|code|B               loc_1FF58|233-231
130948|code|MOV             R1, R6|49-70
130950|code|LDR.W           R0, [R8]; c|216-248-0-0
130954|code|BL              brlDotNumberToIndex|255-247-49-251
130958|code|CMP             R0, #0|0-40
130960|code|BEQ             loc_1FF72|239-208
130962|code|B               loc_1FF58|225-231
130964|code|BLX             __stack_chk_fail|246-247-80-237
130968|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1FF3E|98-69-1-0
130972|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
130976|data|DCD aDotNumber - 0x1FF4E; "dot number"|30-58-0-0
130980|data|DCD aInvalidBraille - 0x1FF7E; "invalid braille dot number: %.*ls"|250-57-0-0
130984|code|PUSH.W          {R4-R10,LR}|45-233-240-71
130988|code|SUBS.W          R12, R3, #0|179-241-0-12
130992|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1FFBE)|70-76
130994|code|SUB             SP, SP, #8|130-176
130996|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|70-77
130998|code|MOV.W           LR, #0|79-240-0-14
131002|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
131004|code|IT GT|200-191
131006|code|MOVGT           R6, LR|118-70
131008|code|LDR.W           R8, [R4,R5]; __stack_chk_guard|84-248-5-128
131012|code|LDR.W           R4, [R8]|216-248-0-64
131016|code|STRB.W          LR, [R1]|129-248-0-224
131020|code|STR             R4, [SP,#0x28+var_24]|1-148
131022|code|IT GT|200-191
131024|code|MOVGT           R4, #1|1-36
131026|code|BLE             loc_200A2|102-221
131028|code|MOV             R9, R2|145-70
131030|code|ADD.W           R10, R4, #0xFFFFFFFF|4-241-255-58
131034|code|LDR.W           R3, [R2],#4|82-248-4-59
131038|code|SUBS.W          R5, LR, R10|190-235-10-5
131042|code|SUB.W           R7, R3, #0x2D ; '-'; switch 12 cases|163-241-45-7
131046|code|IT NE|24-191
131048|code|MOVNE           R5, #1|1-37
131050|code|STR             R3, [SP,#0x28+var_28]|0-147
131052|code|CMP             R7, #0xB|11-47
131054|code|BHI             def_1FFF0; jumptable 0001FFF0 default case, cases 46,47|56-216
131056|code|TBB.W           [PC,R7]; switch jump|223-232-7-240
131060|data|DCB 0x21; jump table for switch statement|33
131061|data|DCB 0x37|55
131062|data|DCB 0x37|55
131063|data|DCB 0x1E|30
131064|data|DCB 6|6
131065|data|DCB 0x4F|79
131066|data|DCB 0x4D|77
131067|data|DCB 0x4B|75
131068|data|DCB 0x49|73
131069|data|DCB 0x47|71
131070|data|DCB 0x45|69
131071|data|DCB 0x2F|47
131072|code|MOVS            R7, #1; jumptable 0001FFF0 case 49|1-39
131074|code|CMP             R6, #0|0-46
131076|code|ITE NE|20-191
131078|code|MOVNE           R5, #0|0-37
131080|code|ANDEQ.W         R5, R5, #1|5-240-1-5
131084|code|CBNZ            R5, def_1FFF0; jumptable 0001FFF0 default case, cases 46,47|77-187
131086|code|TST             R7, R6|55-66
131088|code|BNE             loc_20096|65-209
131090|code|ORRS            R6, R7|62-67
131092|code|MOV             R3, R4|35-70
131094|code|CMP             R12, R3|156-69
131096|code|ADD.W           R4, R4, #1|4-241-1-4
131100|code|BGT             loc_1FFD4|218-220
131102|code|CMP             LR, R3|158-69
131104|code|BEQ             loc_200A2|63-208
131106|code|LDRB            R3, [R1]|11-120
131108|code|MOVS            R0, #1|1-32
131110|code|ADDS            R2, R1, R3|202-24
131112|code|ADD             R3, R0|3-68
131114|code|STRB            R3, [R1]|11-112
131116|code|STRB            R6, [R2,#1]|86-112
131118|code|B               loc_2006E|30-224
131120|code|CBNZ            R5, def_1FFF0; jumptable 0001FFF0 case 48|189-185
131122|code|MOV             R3, R4|35-70
131124|code|B               loc_20016|239-231
131126|code|CMP             R5, #0; jumptable 0001FFF0 case 45|0-45
131128|code|BEQ             loc_200AE|57-208
131130|code|LDRB            R5, [R1]|13-120
131132|code|ADDS            R3, R5, #1|107-28
131134|code|ADD             R5, R1|13-68
131136|code|UXTB            R3, R3|219-178
131138|code|STRB            R3, [R1]|11-112
131140|code|CMP             R3, #0xFF|255-43
131142|code|STRB            R6, [R5,#1]|110-112
131144|code|BEQ             loc_200BE|57-208
131146|code|MOV             LR, R4|166-70
131148|code|MOV             R3, R4|35-70
131150|code|MOVS            R6, #0|0-38
131152|code|B               loc_20016|225-231
131154|code|CMP             R6, #0; jumptable 0001FFF0 case 56|0-46
131156|code|ITE NE|20-191
131158|code|MOVNE           R5, #0|0-37
131160|code|ANDEQ.W         R5, R5, #1|5-240-1-5
131164|code|MOVS            R7, #0x80|128-39
131166|code|CMP             R5, #0|0-45
131168|code|BEQ             loc_2000E|213-208
131170|code|LDR             R1, =(aInvalidDotNumb - 0x2006A); jumptable 0001FFF0 default case, cases 46,47|28-73
131172|code|MOV             R2, SP|106-70
131174|code|ADD             R1, PC; "invalid dot number: %.1ls"|121-68
131176|code|BL              reportDataError|255-247-236-250
131180|code|MOVS            R0, #0|0-32
131182|code|LDR             R2, [SP,#0x28+var_24]|1-154
131184|code|LDR.W           R3, [R8]|216-248-0-48
131188|code|CMP             R2, R3|154-66
131190|code|BNE             loc_200C8|39-209
131192|code|ADD             SP, SP, #8|2-176
131194|code|POP.W           {R4-R10,PC}|189-232-240-135
131198|code|MOVS            R7, #0x40 ; '@'; jumptable 0001FFF0 case 55|64-39
131200|code|B               loc_20002|191-231
131202|code|MOVS            R7, #0x20 ; ' '; jumptable 0001FFF0 case 54|32-39
131204|code|B               loc_20002|189-231
131206|code|MOVS            R7, #0x10; jumptable 0001FFF0 case 53|16-39
131208|code|B               loc_20002|187-231
131210|code|MOVS            R7, #8; jumptable 0001FFF0 case 52|8-39
131212|code|B               loc_20002|185-231
131214|code|MOVS            R7, #4; jumptable 0001FFF0 case 51|4-39
131216|code|B               loc_20002|183-231
131218|code|MOVS            R7, #2; jumptable 0001FFF0 case 50|2-39
131220|code|B               loc_20002|181-231
131222|code|LDR             R1, =(aDotSpecifiedMo - 0x2009E); "dot specified more than once: %.1ls"|16-73
131224|code|MOV             R2, SP|106-70
131226|code|ADD             R1, PC; "dot specified more than once: %.1ls"|121-68
131228|code|BL              reportDataError|255-247-210-250
131232|code|B               loc_2006C|228-231
131234|code|LDR             R1, =(aMissingCellSpe - 0x200A8); "missing cell specification"|14-73
131236|code|ADD             R1, PC; "missing cell specification"|121-68
131238|code|BL              reportDataError|255-247-205-250
131242|code|MOVS            R0, #0|0-32
131244|code|B               loc_2006E|223-231
131246|code|LDR             R1, =(aMissingCellSpe_0 - 0x200BA); "missing cell specification: %.*ls"|12-73
131248|code|RSB.W           R2, R10, R12|202-235-12-2
131252|code|MOV             R3, R9|75-70
131254|code|ADD             R1, PC; "missing cell specification: %.*ls"|121-68
131256|code|BL              reportDataError|255-247-196-250
131260|code|B               loc_2006C|214-231
131262|code|LDR             R1, =(aCellsOperandTo - 0x200C4); "cells operand too long"|9-73
131264|code|ADD             R1, PC; "cells operand too long"|121-68
131266|code|BL              reportDataError|255-247-191-250
131270|code|B               loc_2006C|209-231
131272|code|BLX             __stack_chk_fail|246-247-182-236
131276|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1FFBE|226-68-1-0
131280|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
131284|data|DCD aInvalidDotNumb - 0x2006A; "invalid dot number: %.1ls"|174-57-0-0
131288|data|DCD aDotSpecifiedMo - 0x2009E; "dot specified more than once: %.1ls"|26-57-0-0
131292|data|DCD aMissingCellSpe - 0x200A8; "missing cell specification"|244-56-0-0
131296|data|DCD aMissingCellSpe_0 - 0x200BA; "missing cell specification: %.*ls"|34-57-0-0
131300|data|DCD aCellsOperandTo - 0x200C4; "cells operand too long"|60-57-0-0
131304|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x200F0)|15-75
131306|code|PUSH            {R4-R6,LR}|112-181
131308|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
131310|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|15-76
131312|code|SUB             SP, SP, #0x10|132-176
131314|code|MOV             R5, R1|13-70
131316|code|ADD             R1, SP, #0x20+var_1C|1-169
131318|code|MOV             R6, R0|6-70
131320|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
131322|code|LDR             R3, [R4]|35-104
131324|code|STR             R3, [SP,#0x20+var_14]|3-147
131326|code|BL              getDataOperand|255-247-163-252
131330|code|CBZ             R0, loc_20116|64-177
131332|code|MOV             R0, R6|48-70
131334|code|MOV             R1, R5|41-70
131336|code|LDR             R2, [SP,#0x20+var_1C]|1-154
131338|code|LDR             R3, [SP,#0x20+var_18]|2-155
131340|code|BL              parseCellsOperand|255-247-76-255
131344|code|ADDS            R0, #0|0-48
131346|code|IT NE|24-191
131348|code|MOVNE           R0, #1|1-32
131350|code|LDR             R2, [SP,#0x20+var_14]|3-154
131352|code|LDR             R3, [R4]|35-104
131354|code|CMP             R2, R3|154-66
131356|code|BNE             loc_20122|1-209
131358|code|ADD             SP, SP, #0x10|4-176
131360|code|POP             {R4-R6,PC}|112-189
131362|code|BLX             __stack_chk_fail|246-247-138-236
131366|data|ALIGN 4|0-191
131368|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x200F0|176-67-1-0
131372|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
131376|code|PUSH            {R3-R7,LR}|248-181
131378|code|MOV             R6, R0|6-70
131380|code|LDR             R7, =(aU - 0x2013E); "%u"|12-79
131382|code|MOV             R5, R1|13-70
131384|code|MOVS            R4, #1|1-36
131386|code|ADD             R7, PC; "%u"|127-68
131388|code|B               loc_20144|2-224
131390|code|ADDS            R4, #1|1-52
131392|code|CMP             R4, #9|9-44
131394|code|BEQ             loc_20162|14-208
131396|code|SUBS            R3, R4, #1|99-30
131398|code|ASR.W           R3, R5, R3|69-250-3-243
131402|code|LSLS            R3, R3, #0x1F|219-7
131404|code|BPL             loc_2013E|247-213
131406|code|MOV             R0, R6|48-70
131408|code|MOVS            R1, #1|1-33
131410|code|MOV             R2, R7|58-70
131412|code|MOV             R3, R4|35-70
131414|code|BLX             __fprintf_chk|246-247-80-235
131418|code|ADDS            R0, #1|1-48
131420|code|BNE             loc_2013E|239-209
131422|code|MOVS            R0, #0|0-32
131424|code|POP             {R3-R7,PC}|248-189
131426|code|MOVS            R0, #1|1-32
131428|code|POP             {R3-R7,PC}|248-189
131430|data|ALIGN 4|0-191
131432|data|DCD aU - 0x2013E; "%u"|246-56-0-0
131436|code|CBZ             R1, loc_20172|9-177
131438|code|B.W             writeDots|255-247-223-191
131442|code|MOV             R1, R0; stream|1-70
131444|code|MOVS            R0, #0x30 ; '0'; c|48-32
131446|code|PUSH            {R3,LR}|8-181
131448|code|BLX             fputc|246-247-50-237
131452|code|ADDS            R0, #1|1-48
131454|code|IT NE|24-191
131456|code|MOVNE           R0, #1|1-32
131458|code|POP             {R3,PC}|8-189
131460|code|PUSH            {R3-R7,LR}|248-181
131462|code|ADDS            R7, R1, R2|143-24
131464|code|CMP             R1, R7|185-66
131466|code|BCS             loc_201B8|21-210
131468|code|MOV             R5, R0|5-70
131470|code|MOV             R6, R1|14-70
131472|code|MOV             R4, R1|12-70
131474|code|LDRB.W          R1, [R4],#1|20-248-1-27
131478|code|MOV             R0, R5; stream|40-70
131480|code|BL              writeDotsCell|255-247-232-255
131484|code|MOV             R1, R5; stream|41-70
131486|code|CBZ             R0, loc_201B4|72-177
131488|code|CMP             R4, R7|188-66
131490|code|MOV.W           R0, #0x2D ; '-'; c|79-240-45-0
131494|code|BEQ             loc_201B8|7-208
131496|code|CMP             R6, R4|166-66
131498|code|BEQ             loc_20192|242-208
131500|code|BLX             fputc|246-247-24-237
131504|code|ADDS            R0, #1|1-48
131506|code|BNE             loc_20192|238-209
131508|code|MOVS            R0, #0|0-32
131510|code|POP             {R3-R7,PC}|248-189
131512|code|MOVS            R0, #1|1-32
131514|code|POP             {R3-R7,PC}|248-189
131516|code|ORR.W           R1, R1, #0x2800|65-244-32-81
131520|code|B.W             writeUtf8Character|0-240-22-191
131524|code|PUSH            {R4-R6,LR}|112-181
131526|code|ADDS            R5, R1, R2|141-24
131528|code|CMP             R1, R5|169-66
131530|code|MOV             R4, R1|12-70
131532|code|MOV             R6, R0|6-70
131534|code|BCC             loc_201D6|2-211
131536|code|B               loc_201E6|9-224
131538|code|CMP             R4, R5|172-66
131540|code|BEQ             loc_201E6|7-208
131542|code|MOV             R0, R6|48-70
131544|code|LDRB.W          R1, [R4],#1|20-248-1-27
131548|code|BL              writeUtf8Cell|255-247-238-255
131552|code|CMP             R0, #0|0-40
131554|code|BNE             loc_201D2|246-209
131556|code|POP             {R4-R6,PC}|112-189
131558|code|MOVS            R0, #1|1-32
131560|code|POP             {R4-R6,PC}|112-189
131562|data|ALIGN 4|0-191
131564|code|PUSH.W          {R4-R9,LR}|45-233-240-67
131568|code|MOV             R8, R3|152-70
131570|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x201FE)|37-77
131572|code|SUB             SP, SP, #0x1C|135-176
131574|code|LDR             R6, =(__stack_chk_guard_ptr - 0x344A0)|37-78
131576|code|MOV             R4, R1|12-70
131578|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
131580|code|ADD             R1, SP, #0x38+var_2C|3-169
131582|code|MOV             R7, R0|7-70
131584|code|MOV             R9, R2|145-70
131586|code|LDR             R5, [R5,R6]; __stack_chk_guard|173-89
131588|code|LDR             R3, [R5]|43-104
131590|code|STR             R3, [SP,#0x38+var_24]|5-147
131592|code|BL              getDataOperand|255-247-30-252
131596|code|CBZ             R0, loc_20250|0-179
131598|code|LDR             R0, [R4]|32-104
131600|code|CBNZ            R0, loc_2021C|32-185
131602|code|B               loc_2027A|50-224
131604|code|LDR.W           R0, [R4,#0xC]!|84-248-12-15
131608|code|CMP             R0, #0|0-40
131610|code|BEQ             loc_2027A|46-208
131612|code|LDR             R1, [SP,#0x38+var_2C]|3-153
131614|code|LDR             R2, [SP,#0x38+var_28]|4-154
131616|code|BL              isKeyword|255-247-124-250
131620|code|CMP             R0, #0|0-40
131622|code|BEQ             loc_20214|245-208
131624|code|LDR             R3, [R4]|35-104
131626|code|CBZ             R3, loc_2027A|51-179
131628|code|LDRB            R3, [R4,#8]|35-122
131630|code|LSLS            R3, R3, #0x1F|219-7
131632|code|BPL             loc_20260|22-213
131634|code|LDR             R3, [R4,#4]|99-104
131636|code|CBZ             R3, loc_2023E|27-177
131638|code|MOV             R0, R7|56-70
131640|code|MOV             R1, R8|65-70
131642|code|BLX             R3|152-71
131644|code|B               loc_20252|9-224
131646|code|LDR             R4, [SP,#0x38+var_2C]|3-156
131648|code|MOV             R0, R7|56-70
131650|code|LDR             R1, =(unk_23A38 - 0x2024C)|19-73
131652|code|MOV             R2, R9|74-70
131654|code|LDR             R3, [SP,#0x38+var_28]|4-155
131656|code|ADD             R1, PC; unk_23A38|121-68
131658|code|STR             R4, [SP,#0x38+var_38]|0-148
131660|code|BL              reportDataError|255-247-250-249
131664|code|MOVS            R0, #1|1-32
131666|code|LDR             R2, [SP,#0x38+var_24]|5-154
131668|code|LDR             R3, [R5]|43-104
131670|code|CMP             R2, R3|154-66
131672|code|BNE             loc_20284|20-209
131674|code|ADD             SP, SP, #0x1C|7-176
131676|code|POP.W           {R4-R9,PC}|189-232-240-131
131680|code|LDR             R0, [R7,#0x28]|184-106
131682|code|BL              getStackHead|254-247-93-248
131686|code|CMP             R0, #0|0-40
131688|code|BEQ             loc_20232|227-208
131690|code|BL              getElementItem|253-247-231-255
131694|code|LDRB            R3, [R0]|3-120
131696|code|AND.W           R3, R3, #3|3-240-3-3
131700|code|CMP             R3, #3|3-43
131702|code|BNE             loc_20250|235-209
131704|code|B               loc_20232|219-231
131706|code|MOV             R0, R7|56-70
131708|code|LDR             R1, [SP,#0x38+var_28]|4-153
131710|code|BL              ungetDataCharacters|255-247-205-251
131714|code|B               loc_2022C|211-231
131716|code|BLX             __stack_chk_fail|246-247-216-235
131720|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x201FE|162-66-1-0
131724|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
131728|data|DCD unk_23A38 - 0x2024C|236-55-0-0
131732|code|PUSH.W          {R4-R9,LR}|45-233-240-67
131736|code|SUBW            SP, SP, #0x414|173-242-20-77
131740|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x202A8)|58-76
131742|code|ADD             R6, SP, #0x430+var_424|3-174
131744|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|58-77
131746|code|MOV             R8, R1|136-70
131748|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
131750|code|MOV             R7, R2|23-70
131752|code|MOV             R1, R6|49-70
131754|code|MOVS            R2, #1|1-34
131756|code|LDR             R5, [R4,R5]; __stack_chk_guard|101-89
131758|code|MOV             R9, R0|129-70
131760|code|LDR             R4, [R5]|44-104
131762|code|STR.W           R4, [SP,#0x430+var_24]|205-248-12-68
131766|code|BL              getDataString|255-247-173-253
131770|code|CBNZ            R0, loc_202D0|72-185
131772|code|MOVS            R0, #1|1-32
131774|code|LDR.W           R2, [SP,#0x430+var_24]|221-248-12-36
131778|code|LDR             R3, [R5]|43-104
131780|code|CMP             R2, R3|154-66
131782|code|BNE             loc_20384|93-209
131784|code|ADDW            SP, SP, #0x414|13-242-20-77
131788|code|POP.W           {R4-R9,PC}|189-232-240-131
131792|code|MOVS            R0, #4; size|4-32
131794|code|BLX             malloc|246-247-158-236
131798|code|MOV             R4, R0|4-70
131800|code|CMP             R0, #0|0-40
131802|code|BEQ             loc_20374|75-208
131804|code|LDRB            R6, [R6]|54-120
131806|code|ADD             R3, SP, #0x430+var_42C|1-171
131808|code|MOV             R0, R9|72-70
131810|code|LDR.W           R2, [R9,#0x24]|217-248-36-32
131814|code|MOV             R1, R3|25-70
131816|code|MOV.W           LR, #0|79-240-0-14
131820|code|STR             R6, [SP,#0x430+var_428]|2-150
131822|code|MOV.W           R3, #0|79-240-0-3
131826|code|STR.W           LR, [R4]|196-248-0-224
131830|code|BFI.W           R3, LR, #2, #1|110-243-130-3
131834|code|ADD             R6, SP, #0x430+var_420|4-174
131836|code|STRB            R3, [R4]|35-112
131838|code|STR             R6, [SP,#0x430+var_42C]|1-150
131840|code|BLX             R8|192-71
131842|code|LDRB            R3, [R4]|35-120
131844|code|BFI.W           R3, R0, #1, #1|96-243-65-3
131848|code|STRB            R3, [R4]|35-112
131850|code|CBNZ            R7, loc_2034E|7-187
131852|code|LDR.W           R0, [R9,#0x28]|217-248-40-0
131856|code|BL              getStackHead|254-247-6-248
131860|code|CBZ             R0, loc_2036A|72-179
131862|code|BL              getElementItem|253-247-145-255
131866|code|LDRB            R2, [R4]|34-120
131868|code|LDRB            R3, [R0]|3-120
131870|code|AND.W           R3, R3, #3|3-240-3-3
131874|code|SUB.W           R3, R3, #3|163-241-3-3
131878|code|CLZ.W           R3, R3|179-250-131-243
131882|code|LSRS            R3, R3, #5|91-9
131884|code|BFI.W           R2, R3, #0, #1|99-243-0-2
131888|code|STRB            R2, [R4]|34-112
131890|code|MOV             R1, R4|33-70
131892|code|LDR.W           R0, [R9,#0x28]|217-248-40-0
131896|code|BL              enqueueItem|254-247-118-248
131900|code|MOV             R1, R0|1-70
131902|code|CBZ             R0, loc_2037C|232-177
131904|code|MOV             R0, R9|72-70
131906|code|BL              sub_1F9C0|255-247-61-251
131910|code|ADDS            R0, #0|0-48
131912|code|IT NE|24-191
131914|code|MOVNE           R0, #1|1-32
131916|code|B               loc_202BE|183-231
131918|code|UXTB            R3, R3|219-178
131920|code|LDR.W           R0, [R9,#0x28]|217-248-40-0
131924|code|EOR.W           R2, R3, #2|131-240-2-2
131928|code|UBFX.W          R2, R2, #1, #1|194-243-64-2
131932|code|BFI.W           R3, R2, #1, #1|98-243-65-3
131936|code|STRB            R3, [R4]|35-112
131938|code|BL              getStackHead|253-247-221-255
131942|code|CMP             R0, #0|0-40
131944|code|BNE             loc_20316|213-209
131946|code|LDRB            R3, [R4]|35-120
131948|code|ORR.W           R3, R3, #1|67-240-1-3
131952|code|STRB            R3, [R4]|35-112
131954|code|B               loc_20332|222-231
131956|code|BL              logMallocError|250-247-100-248
131960|code|MOVS            R0, #0|0-32
131962|code|B               loc_202BE|160-231
131964|code|MOV             R0, R4; ptr|32-70
131966|code|BLX             free|246-247-130-233
131970|code|B               loc_20378|249-231
131972|code|BLX             __stack_chk_fail|246-247-88-235
131976|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x202A8|248-65-1-0
131980|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
131984|code|PUSH            {LR}|0-181
131986|code|SUB             SP, SP, #0xC|131-176
131988|code|LDR             R3, =(aVariableName - 0x203A0); "variable name"|5-75
131990|code|MOVS            R2, #0|0-34
131992|code|STR             R1, [SP,#0x10+var_10]|0-145
131994|code|LDR             R1, =(sub_1F5E0+1 - 0x203A2)|5-73
131996|code|ADD             R3, PC; "variable name"|123-68
131998|code|ADD             R1, PC; sub_1F5E0|121-68
132000|code|BL              processConditionOperands|255-247-120-255
132004|code|ADD             SP, SP, #0xC|3-176
132006|code|POP.W           {PC}|93-248-4-251
132010|data|ALIGN 4|0-191
132012|data|DCD aVariableName - 0x203A0; "variable name"|172-54-0-0
132016|data|DCD sub_1F5E0+1 - 0x203A2|63-242-255-255
132020|code|PUSH            {LR}|0-181
132022|code|SUB             SP, SP, #0xC|131-176
132024|code|LDR             R3, =(aVariableName - 0x203C4); "variable name"|5-75
132026|code|MOVS            R2, #1|1-34
132028|code|STR             R1, [SP,#0x10+var_10]|0-145
132030|code|LDR             R1, =(sub_1F5E0+1 - 0x203C6)|5-73
132032|code|ADD             R3, PC; "variable name"|123-68
132034|code|ADD             R1, PC; sub_1F5E0|121-68
132036|code|BL              processConditionOperands|255-247-102-255
132040|code|ADD             SP, SP, #0xC|3-176
132042|code|POP.W           {PC}|93-248-4-251
132046|data|ALIGN 0x10|0-191
132048|data|DCD aVariableName - 0x203C4; "variable name"|136-54-0-0
132052|data|DCD sub_1F5E0+1 - 0x203C6|27-242-255-255
132056|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x203E0)|26-75
132058|code|PUSH            {R4-R7,LR}|240-181
132060|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
132062|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|26-76
132064|code|SUBW            SP, SP, #0x414|173-242-20-77
132068|code|ADD             R5, SP, #0x428+var_424|1-173
132070|code|LDR             R2, =(aVariableName - 0x203F2); "variable name"|25-74
132072|code|MOV             R6, R0|6-70
132074|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
132076|code|MOV             R1, R5|41-70
132078|code|ADD             R2, PC; "variable name"|122-68
132080|code|LDR             R3, [R4]|35-104
132082|code|STR.W           R3, [SP,#0x428+var_1C]|205-248-12-52
132086|code|BL              getDataOperand|255-247-39-251
132090|code|CBNZ            R0, loc_2040E|64-185
132092|code|LDR.W           R2, [SP,#0x428+var_1C]|221-248-12-36
132096|code|MOVS            R0, #1|1-32
132098|code|LDR             R3, [R4]|35-104
132100|code|CMP             R2, R3|154-66
132102|code|BNE             loc_20440|27-209
132104|code|ADDW            SP, SP, #0x414|13-242-20-77
132108|code|POP             {R4-R7,PC}|240-189
132110|code|ADD             R7, SP, #0x428+var_41C|3-175
132112|code|MOVS            R2, #0|0-34
132114|code|MOV             R3, R2|19-70
132116|code|MOV             R0, R6|48-70
132118|code|MOV             R1, R7|57-70
132120|code|BL              getDataString|255-247-252-252
132124|code|CBZ             R0, loc_2043C|112-177
132126|code|MOV             R1, R5|41-70
132128|code|LDR             R0, [R6,#0x2C]|240-106
132130|code|MOVS            R2, #1|1-34
132132|code|BL              sub_1F4BC|255-247-74-248
132136|code|MOV             R1, R0|1-70
132138|code|CMP             R0, #0|0-40
132140|code|BEQ             loc_203FC|230-208
132142|code|LDRB            R3, [R7]|59-120
132144|code|ADDS            R1, #0xC|12-49
132146|code|ADD             R2, SP, #0x428+var_418|4-170
132148|code|ADDS            R0, #8|8-48
132150|code|BL              sub_1F57C|255-247-161-248
132154|code|B               loc_203FC|223-231
132156|code|STRB            R0, [R7]|56-112
132158|code|B               loc_2041E|238-231
132160|code|BLX             __stack_chk_fail|246-247-250-234
132164|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x203E0|192-64-1-0
132168|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
132172|data|DCD aVariableName - 0x203F2; "variable name"|90-54-0-0
132176|code|PUSH            {R3-R5,LR}|56-181
132178|code|MOV             R4, R0|4-70
132180|code|LDR             R0, [R0,#0x28]|128-106
132182|code|BL              getStackHead|253-247-99-255
132186|code|CBZ             R0, loc_2049A|240-177
132188|code|MOV             R5, R0|5-70
132190|code|BL              getElementItem|253-247-237-254
132194|code|LDRB            R3, [R0]|3-120
132196|code|MOV             R2, R0|2-70
132198|code|LSLS            R1, R3, #0x1D|89-7
132200|code|BMI             loc_2048C|16-212
132202|code|ORR.W           R3, R3, #4|67-240-4-3
132206|code|MOV             R0, R4|32-70
132208|code|EOR.W           R4, R3, #2|131-240-2-4
132212|code|MOV             R1, R5|41-70
132214|code|UBFX.W          R4, R4, #1, #1|196-243-64-4
132218|code|BFI.W           R3, R4, #1, #1|100-243-65-3
132222|code|STRB            R3, [R2]|19-112
132224|code|BL              sub_1F9C0|255-247-158-250
132228|code|ADDS            R0, #0|0-48
132230|code|IT NE|24-191
132232|code|MOVNE           R0, #1|1-32
132234|code|POP             {R3-R5,PC}|56-189
132236|code|LDR             R1, =(aAlreadyInElse - 0x20494); "already in else"|6-73
132238|code|MOV             R0, R4|32-70
132240|code|ADD             R1, PC; "already in else"|121-68
132242|code|BL              reportDataError|255-247-215-248
132246|code|MOVS            R0, #1|1-32
132248|code|POP             {R3-R5,PC}|56-189
132250|code|LDR             R1, =(aNoOutstandingC - 0x204A2); "no outstanding condition"|4-73
132252|code|MOV             R0, R4|32-70
132254|code|ADD             R1, PC; "no outstanding condition"|121-68
132256|code|BL              reportDataError|255-247-208-248
132260|code|MOVS            R0, #1|1-32
132262|code|POP             {R3-R5,PC}|56-189
132264|data|DCD aAlreadyInElse - 0x20494; "already in else"|228-53-0-0
132268|data|DCD aNoOutstandingC - 0x204A2; "no outstanding condition"|186-53-0-0
132272|code|PUSH            {R3-R5,LR}|56-181
132274|code|MOV             R5, R0|5-70
132276|code|LDR             R0, [R0,#0x28]|128-106
132278|code|BL              getStackHead|253-247-51-255
132282|code|CBZ             R0, loc_204DC|120-177
132284|code|MOV             R4, R0|4-70
132286|code|BL              getElementIdentifier|253-247-187-254
132290|code|MOV             R5, R0|5-70
132292|code|MOV             R0, R4|32-70
132294|code|BL              getElementIdentifier|253-247-183-254
132298|code|CMP             R0, R5|168-66
132300|code|BEQ             loc_204D2|1-208
132302|code|MOVS            R0, #1|1-32
132304|code|POP             {R3-R5,PC}|56-189
132306|code|MOV             R0, R4|32-70
132308|code|BL              deleteElement|253-247-116-254
132312|code|MOVS            R0, #1|1-32
132314|code|POP             {R3-R5,PC}|56-189
132316|code|LDR             R1, =(aNoOutstandingC - 0x204E4); "no outstanding condition"|2-73
132318|code|MOV             R0, R5|40-70
132320|code|ADD             R1, PC; "no outstanding condition"|121-68
132322|code|BL              reportDataError|255-247-175-248
132326|code|B               loc_204CE|242-231
132328|data|DCD aNoOutstandingC - 0x204E4; "no outstanding condition"|120-53-0-0
132332|code|PUSH            {R4}|16-180
132334|code|MOV             R4, R1|12-70
132336|code|MOV             R3, R2|19-70
132338|code|MOV             R1, R0|1-70
132340|code|MOV             R2, R4|34-70
132342|code|MOVS            R0, #0|0-32
132344|code|POP.W           {R4}|93-248-4-75
132348|code|B.W             sub_1F3A8|254-247-84-191
132352|code|PUSH.W          {R4-R10,LR}|45-233-240-71
132356|code|MOV             R7, R1|15-70
132358|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x20512)|64-76
132360|code|MOV             R9, R3|153-70
132362|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|64-77
132364|code|SUB             SP, SP, #0xA0|168-176
132366|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
132368|code|LDR             R1, =(aIncludingDataF - 0x2051E); "including data file: %s"|63-73
132370|code|MOV             R6, R0|6-70
132372|code|MOVS            R0, #7|7-32
132374|code|LDR.W           R8, [R4,R5]; __stack_chk_guard|84-248-5-128
132378|code|ADD             R1, PC; "including data file: %s"|121-68
132380|code|MOV             R10, R2|146-70
132382|code|LDR             R5, [SP,#0xC0+arg_0]|48-157
132384|code|LDR.W           R3, [R8]|216-248-0-48
132388|code|STR             R3, [SP,#0xC0+var_24]|39-147
132390|code|BL              logMessage|249-247-255-254
132394|code|CMP             R6, #0|0-46
132396|code|BEQ             loc_205EC|94-208
132398|code|LDR             R4, [R6,#0x2C]|244-106
132400|code|CMP             R4, #0|0-44
132402|code|BEQ             loc_205D0|77-208
132404|code|MOV             R0, R7; stream|56-70
132406|code|MOVS            R2, #0|0-34
132408|code|STR.W           R10, [SP,#0xC0+var_B8]|205-248-8-160
132412|code|STR             R2, [SP,#0xC0+var_B0]|4-146
132414|code|STR             R2, [SP,#0xC0+var_AC]|5-146
132416|code|STR             R2, [SP,#0xC0+var_A8]|6-146
132418|code|STR             R2, [SP,#0xC0+var_A4]|7-146
132420|code|STR             R2, [SP,#0xC0+var_A0]|8-146
132422|code|STR             R2, [SP,#0xC0+var_9C]|9-146
132424|code|STR             R2, [SP,#0xC0+var_90]|12-146
132426|code|STR             R2, [SP,#0xC0+var_8C]|13-146
132428|code|STR             R2, [SP,#0xC0+var_88]|14-146
132430|code|STR             R2, [SP,#0xC0+var_84]|15-146
132432|code|STR             R6, [SP,#0xC0+var_B4]|3-150
132434|code|STR.W           R9, [SP,#0xC0+var_98]|205-248-40-144
132438|code|STR             R5, [SP,#0xC0+var_94]|11-149
132440|code|BLX             fileno|246-247-78-234
132444|code|ADD             R2, SP, #0xC0+stat_buf; stat_buf|16-170
132446|code|MOV             R1, R0; fildes|1-70
132448|code|MOVS            R0, #3; ver|3-32
132450|code|BLX             __fxstat|246-247-44-235
132454|code|ADDS            R0, #1|1-48
132456|code|ITTT NE|30-191
132458|code|LDRDNE.W        R0, R1, [SP,#0xC0+stat_buf]|221-233-16-1
132462|code|LDRNE           R3, [SP,#0xC0+stat_buf.st_ino]|19-155
132464|code|STRDNE.W        R0, R1, [SP,#0xC0+var_A8]|205-233-6-1
132468|code|MOV.W           R1, #0|79-240-0-1
132472|code|LDR             R0, =(loc_1F328+1 - 0x20582)|38-72
132474|code|IT NE|24-191
132476|code|STRNE           R3, [SP,#0xC0+var_A0]|8-147
132478|code|ADD             R0, PC; loc_1F328|120-68
132480|code|BL              newQueue|253-247-94-254
132484|code|STR             R0, [SP,#0xC0+var_90]|12-144
132486|code|CBZ             R0, loc_205E2|96-179
132488|code|LDR             R0, =(sub_1F308+1 - 0x20590)|35-72
132490|code|MOVS            R1, #0|0-33
132492|code|ADD             R0, PC; sub_1F308|120-68
132494|code|BL              newQueue|253-247-87-254
132498|code|MOV             R5, R0|5-70
132500|code|CBZ             R0, loc_205E6|56-179
132502|code|MOV             R1, R4|33-70
132504|code|ADD             R6, SP, #0xC0+var_B8|2-174
132506|code|BL              setQueueData|253-247-187-254
132510|code|LDR             R1, =(loc_1F944+1 - 0x205A8)|31-73
132512|code|MOV             R0, R7|56-70
132514|code|MOV             R2, R6|50-70
132516|code|ADD             R1, PC; loc_1F944|121-68
132518|code|STR             R5, [SP,#0xC0+var_8C]|13-149
132520|code|BL              processLines|250-247-198-253
132524|code|MOVS            R4, R0|4-28
132526|code|LDR             R0, [SP,#0xC0+var_90]|12-152
132528|code|IT NE|24-191
132530|code|MOVNE           R4, #1|1-36
132532|code|BL              getStackHead|253-247-180-254
132536|code|CBZ             R0, loc_205C4|32-177
132538|code|LDR             R1, =(aOutstandingCon - 0x205C2); "outstanding condition at end of file"|25-73
132540|code|MOV             R0, R6|48-70
132542|code|ADD             R1, PC; "outstanding condition at end of file"|121-68
132544|code|BL              reportDataError|255-247-64-248
132548|code|LDR             R0, [SP,#0xC0+var_8C]|13-152
132550|code|BL              deallocateQueue|253-247-109-254
132554|code|LDR             R0, [SP,#0xC0+var_90]|12-152
132556|code|BL              deallocateQueue|253-247-106-254
132560|code|LDR             R2, [SP,#0xC0+var_24]|39-154
132562|code|MOV             R0, R4|32-70
132564|code|LDR.W           R3, [R8]|216-248-0-48
132568|code|CMP             R2, R3|154-66
132570|code|BNE             loc_20604|19-209
132572|code|ADD             SP, SP, #0xA0|40-176
132574|code|POP.W           {R4-R10,PC}|189-232-240-135
132578|code|MOV             R4, R0|4-70
132580|code|B               loc_205D0|244-231
132582|code|STR             R0, [SP,#0xC0+var_8C]|13-144
132584|code|MOV             R4, R0|4-70
132586|code|B               loc_205CA|238-231
132588|code|LDR             R0, =(unk_388D0 - 0x205F8)|13-72
132590|code|MOVS            R2, #1|1-34
132592|code|LDR             R1, =(aGlobalDataVari - 0x205FC); "global-data-variables"|13-73
132594|code|LDR             R3, =(sub_1F2E8+1 - 0x205FE)|14-75
132596|code|ADD             R0, PC; unk_388D0|120-68
132598|code|STR             R6, [SP,#0xC0+var_C0]|0-150
132600|code|ADD             R1, PC; "global-data-variables"|121-68
132602|code|ADD             R3, PC; sub_1F2E8|123-68
132604|code|BL              getProgramQueue|253-247-104-254
132608|code|MOV             R4, R0|4-70
132610|code|B               loc_20530|149-231
132612|code|BLX             __stack_chk_fail|246-247-24-234
132616|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x20512|142-63-1-0
132620|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
132624|data|DCD aIncludingDataF - 0x2051E; "including data file: %s"|106-53-0-0
132628|data|DCD loc_1F328+1 - 0x20582|167-237-255-255
132632|data|DCD sub_1F308+1 - 0x20590|121-237-255-255
132636|data|DCD loc_1F944+1 - 0x205A8|157-243-255-255
132640|data|DCD aOutstandingCon - 0x205C2; "outstanding condition at end of file"|222-52-0-0
132644|data|DCD unk_388D0 - 0x205F8|216-130-1-0
132648|data|DCD aGlobalDataVari - 0x205FC; "global-data-variables"|128-50-0-0
132652|data|DCD sub_1F2E8+1 - 0x205FE|235-236-255-255
132656|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2063A)|56-75
132658|code|PUSH.W          {R4-R11,LR}|45-233-240-79
132662|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
132664|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|55-77
132666|code|SUB             SP, SP, #0x24|137-176
132668|code|ADD             R7, SP, #0x18|6-175
132670|code|MOV             R4, R0|4-70
132672|code|MOV             R0, R1|8-70
132674|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
132676|code|MOV             R1, R2|17-70
132678|code|MOV             R2, R7|58-70
132680|code|LDR             R6, [R4]|38-104
132682|code|LDR             R3, [R5]|43-104
132684|code|STR             R3, [R7,#0xC+var_8]|123-96
132686|code|BL              makeUtf8FromWchars|0-240-185-251
132690|code|MOV             R8, R0|128-70
132692|code|CMP             R0, #0|0-40
132694|code|BEQ             loc_20708|87-208
132696|code|BL              isAbsolutePath|250-247-178-248
132700|code|MOV             R10, R0|130-70
132702|code|CMP             R0, #0|0-40
132704|code|BEQ             loc_206EC|68-208
132706|code|MOV.W           R10, #0|79-240-0-10
132710|code|MOV             R1, R10|81-70
132712|code|LDR             R0, [R7,#0xC+var_C]|56-104
132714|code|MOVS            R2, #1|1-34
132716|code|MOV             R9, SP|233-70
132718|code|LDR.W           LR, =(aSS_3 - 0x20680); "%.*s%.*s"|223-248-172-224
132722|code|ADD.W           R12, R0, R2|0-235-2-12
132726|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
132730|code|ADD             R1, R12|97-68
132732|code|ADD             LR, PC; "%.*s%.*s"|254-68
132734|code|ADD.W           R12, R1, #7|1-241-7-12
132738|code|BIC.W           R12, R12, #7|44-240-7-12
132742|code|SUB.W           SP, SP, R12|173-235-12-13
132746|code|ADD.W           R11, SP, #0x24+var_C|13-241-24-11
132750|code|STR             R0, [SP,#0x24+var_18]|3-144
132752|code|STR.W           R10, [SP,#0x24+var_20]|205-248-4-160
132756|code|MOV             R0, R11|88-70
132758|code|STR.W           LR, [SP,#0x24+var_24]|205-248-0-224
132762|code|STR             R6, [SP,#0x24+var_1C]|2-150
132764|code|STR.W           R8, [SP,#0x24+var_14]|205-248-16-128
132768|code|BLX             __snprintf_chk|246-247-196-234
132772|code|LDR             R2, =(aInvalidUnicode+0x18 - 0x206AE); "r"|30-74
132774|code|MOV             R0, R4|32-70
132776|code|MOV             R1, R11|89-70
132778|code|ADD             R2, PC; "r"|122-68
132780|code|MOVS            R3, #0|0-35
132782|code|BL              sub_1F3A8|254-247-123-254
132786|code|MOV             R10, R0|130-70
132788|code|CBZ             R0, loc_20704|48-179
132790|code|LDR             R6, [R4,#0x24]|102-106
132792|code|MOV             R0, R4|32-70
132794|code|LDR             R3, [R4,#0x20]|35-106
132796|code|MOV             R2, R11|90-70
132798|code|MOV             R1, R10|81-70
132800|code|STR             R6, [SP,#0x24+var_24]|0-150
132802|code|BL              processDataStream|255-247-29-255
132806|code|MOVS            R4, R0|4-28
132808|code|MOV             R0, R10; stream|80-70
132810|code|IT NE|24-191
132812|code|MOVNE           R4, #1|1-36
132814|code|BLX             fclose|246-247-212-234
132818|code|MOV             R0, R8; ptr|64-70
132820|code|MOV             SP, R9|205-70
132822|code|BLX             free|245-247-214-239
132826|code|LDR             R2, [R7,#0xC+var_8]|122-104
132828|code|MOV             R0, R4|32-70
132830|code|LDR             R3, [R5]|43-104
132832|code|CMP             R2, R3|154-66
132834|code|BNE             loc_20710|21-209
132836|code|ADDS            R7, #0xC|12-55
132838|code|MOV             SP, R7|189-70
132840|code|POP.W           {R4-R11,PC}|189-232-240-143
132844|code|MOVS            R1, #0x2F ; '/'; c|47-33
132846|code|MOV             R0, R6; s|48-70
132848|code|BLX             strrchr|246-247-110-235
132852|code|MOV             R1, R10|81-70
132854|code|CMP             R0, #0|0-40
132856|code|BEQ             loc_20668|182-208
132858|code|SUBS            R0, R0, R6|128-27
132860|code|ADD.W           R10, R0, #1|0-241-1-10
132864|code|MOV             R1, R10|81-70
132866|code|B               loc_20668|177-231
132868|code|MOV             R4, R0|4-70
132870|code|B               loc_206D2|228-231
132872|code|BL              logMallocError|249-247-154-254
132876|code|MOV             R4, R8|68-70
132878|code|B               loc_206DA|228-231
132880|code|BLX             __stack_chk_fail|246-247-146-233
132884|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2063A|102-62-1-0
132888|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
132892|data|DCD aSS_3 - 0x20680; "%.*s%.*s"|72-52-0-0
132896|data|DCD aInvalidUnicode+0x18 - 0x206AE; "r"|178-52-0-0
132900|code|PUSH            {R4-R7,LR}|240-181
132902|code|SUBW            SP, SP, #0x40C|173-242-12-77
132906|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x20736)|18-76
132908|code|ADD             R6, SP, #0x420+var_41C|1-174
132910|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|18-77
132912|code|MOVS            R2, #0|0-34
132914|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
132916|code|LDR             R3, =(aIncludeFilePat - 0x20740); "include file path"|17-75
132918|code|MOV             R1, R6|49-70
132920|code|MOV             R7, R0|7-70
132922|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
132924|code|ADD             R3, PC; "include file path"|123-68
132926|code|LDR             R5, [R4]|37-104
132928|code|STR.W           R5, [SP,#0x420+var_1C]|205-248-4-84
132932|code|BL              getDataString|255-247-102-251
132936|code|CBNZ            R0, loc_2075C|64-185
132938|code|MOVS            R0, #1|1-32
132940|code|LDR.W           R2, [SP,#0x420+var_1C]|221-248-4-36
132944|code|LDR             R3, [R4]|35-104
132946|code|CMP             R2, R3|154-66
132948|code|BNE             loc_2076E|11-209
132950|code|ADDW            SP, SP, #0x40C|13-242-12-77
132954|code|POP             {R4-R7,PC}|240-189
132956|code|MOV             R0, R7|56-70
132958|code|LDRB            R2, [R6]|50-120
132960|code|ADD             R1, SP, #0x420+var_418|2-169
132962|code|BL              includeDataFile|255-247-101-255
132966|code|ADDS            R0, #0|0-48
132968|code|IT NE|24-191
132970|code|MOVNE           R0, #1|1-32
132972|code|B               loc_2074C|238-231
132974|code|BLX             __stack_chk_fail|246-247-100-233
132978|data|ALIGN 4|0-191
132980|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x20736|106-61-1-0
132984|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
132988|data|DCD aIncludeFilePat - 0x20740; "include file path"|148-51-0-0
132992|code|PUSH            {R4-R7,LR}|240-181
132994|code|MOV             R5, R1|13-70
132996|code|LDR             R1, =(aInvalidUnicode+0x18 - 0x20790); "r"|14-73
132998|code|SUB             SP, SP, #0xC|131-176
133000|code|MOV             R7, R2|23-70
133002|code|MOVS            R2, #0|0-34
133004|code|ADD             R1, PC; "r"|121-68
133006|code|MOV             R6, R0|6-70
133008|code|BL              openDataFile|255-247-172-254
133012|code|MOV             R4, R0|4-70
133014|code|CBZ             R0, loc_207B8|120-177
133016|code|MOV             R3, R5|43-70
133018|code|MOV             R2, R6|50-70
133020|code|MOV             R1, R4|33-70
133022|code|STR             R7, [SP,#0x20+var_20]|0-151
133024|code|MOVS            R0, #0|0-32
133026|code|BL              processDataStream|255-247-173-254
133030|code|MOVS            R5, R0|5-28
133032|code|MOV             R0, R4; stream|32-70
133034|code|IT NE|24-191
133036|code|MOVNE           R5, #1|1-37
133038|code|BLX             fclose|246-247-100-234
133042|code|MOV             R0, R5|40-70
133044|code|ADD             SP, SP, #0xC|3-176
133046|code|POP             {R4-R7,PC}|240-189
133048|code|MOV             R5, R0|5-70
133050|code|MOV             R0, R5|40-70
133052|code|ADD             SP, SP, #0xC|3-176
133054|code|POP             {R4-R7,PC}|240-189
133056|data|DCD aInvalidUnicode+0x18 - 0x20790; "r"|208-51-0-0
133060|code|PUSH            {R4-R7,LR}|240-181
133062|code|SUB             SP, SP, #0x44|145-176
133064|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x207D4)|18-77
133066|code|ADD             R6, SP, #0x58+var_3C|7-174
133068|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|18-74
133070|code|MOVS            R4, #0|0-36
133072|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
133074|code|MOV             R3, R4|35-70
133076|code|MOV.W           LR, #0x10|79-240-16-14
133080|code|MOVS            R1, #1|1-33
133082|code|LDR             R7, [R5,R2]; __stack_chk_guard|175-88
133084|code|MOVS            R2, #2|2-34
133086|code|STR             R6, [SP,#0x58+var_58]|0-150
133088|code|ADD             R5, SP, #0x58+var_40|6-173
133090|code|STRH.W          R0, [SP,#0x58+var_44]|173-248-20-0
133094|code|ADD             R0, SP, #0x58+var_44|5-168
133096|code|LDR             R6, [R7]|62-104
133098|code|STR.W           LR, [SP,#0x58+var_54]|205-248-4-224
133102|code|STR             R5, [SP,#0x58+var_50]|2-149
133104|code|STR             R6, [SP,#0x58+var_1C]|15-150
133106|code|STR             R4, [SP,#0x58+var_40]|6-148
133108|code|BLX             unorm_normalize_52|246-247-6-234
133112|code|LDR             R3, [SP,#0x58+var_40]|6-155
133114|code|LDR             R2, [SP,#0x58+var_1C]|15-154
133116|code|CMP             R3, R4|163-66
133118|code|LDR             R3, [R7]|59-104
133120|code|ITE LE|212-191
133122|code|LDRHLE.W        R0, [SP,#0x58+var_3C]|189-248-28-0
133126|code|MOVGT           R0, R4|32-70
133128|code|CMP             R2, R3|154-66
133130|code|BNE             loc_20810|1-209
133132|code|ADD             SP, SP, #0x44 ; 'D'|17-176
133134|code|POP             {R4-R7,PC}|240-189
133136|code|BLX             __stack_chk_fail|246-247-18-233
133140|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x207D4|204-60-1-0
133144|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
133148|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x2082A)|32-74
133150|code|PUSH            {R4-R7,LR}|240-181
133152|code|SUB             SP, SP, #0x3C|143-176
133154|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|32-75
133156|code|ADD             R7, SP, #8|2-175
133158|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
133160|code|LDR             R5, =(dword_388D4 - 0x20832)|31-77
133162|code|STR             R0, [R7,#0x34+var_30]|120-96
133164|code|LDR             R4, [R2,R3]; __stack_chk_guard|212-88
133166|code|ADD             R5, PC; dword_388D4|125-68
133168|code|LDR             R0, [R5]|40-104
133170|code|LDR             R3, [R4]|35-104
133172|code|STR             R3, [R7,#0x34+var_8]|251-98
133174|code|CBZ             R0, loc_20888|56-179
133176|code|ADDS            R3, R0, #1|67-28
133178|code|IT EQ|8-191
133180|code|MOVEQ           R0, #0; cd|0-32
133182|code|BEQ             loc_2087A|28-208
133184|code|MOVS            R2, #4|4-34
133186|code|ADD.W           R5, R7, #0x1C|7-241-28-5
133190|code|ADDS            R3, R7, R2|187-24
133192|code|STR             R2, [R7,#0x34+var_24]|58-97
133194|code|STR             R3, [R7,#0x34+var_28]|251-96
133196|code|ADD.W           R1, R7, #0xC; inbuf|7-241-12-1
133200|code|STR             R5, [R7,#0x34+var_1C]|189-97
133202|code|MOVS            R3, #0x10|16-35
133204|code|ADD.W           R2, R7, #0x10; inbytesleft|7-241-16-2
133208|code|STR             R3, [R7,#0x34+var_20]|123-97
133210|code|ADD.W           R3, R7, #0x14|7-241-20-3
133214|code|STR             R3, [SP,#0x3C+outbytesleft]; outbytesleft|0-147
133216|code|ADD.W           R3, R7, #0x18; outbuf|7-241-24-3
133220|code|MOV             R6, SP|110-70
133222|code|BLX             iconv|246-247-114-234
133226|code|ADDS            R0, #1|1-48
133228|code|BEQ             loc_20876|3-208
133230|code|LDR             R3, [R7,#0x34+var_1C]|187-105
133232|code|SUBS            R3, R3, R5|91-27
133234|code|CMP             R3, #1|1-43
133236|code|BEQ             loc_20898|16-208
133238|code|MOVS            R0, #0|0-32
133240|code|MOV             SP, R6|181-70
133242|code|LDR             R2, [R7,#0x34+var_8]|250-106
133244|code|LDR             R3, [R4]|35-104
133246|code|CMP             R2, R3|154-66
133248|code|BNE             loc_2089C|12-209
133250|code|ADDS            R7, #0x34 ; '4'|52-55
133252|code|MOV             SP, R7|189-70
133254|code|POP             {R4-R7,PC}|240-189
133256|code|LDR             R0, =(aAsciiTranslit - 0x20890); "ASCII//TRANSLIT"|8-72
133258|code|LDR             R1, =(aWcharT - 0x20892); "WCHAR_T"|9-73
133260|code|ADD             R0, PC; "ASCII//TRANSLIT"|120-68
133262|code|ADD             R1, PC; "WCHAR_T"|121-68
133264|code|BLX             iconv_open|246-247-50-234
133268|code|STR             R0, [R5]|40-96
133270|code|B               loc_20838|207-231
133272|code|LDRB            R0, [R7,#0x34+var_18]|56-127
133274|code|B               loc_2087A|238-231
133276|code|BLX             __stack_chk_fail|246-247-204-232
133280|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2082A|118-60-1-0
133284|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
133288|data|DCD dword_388D4 - 0x20832|162-128-1-0
133292|data|DCD aAsciiTranslit - 0x20890; "ASCII//TRANSLIT"|88-50-0-0
133296|data|DCD aWcharT - 0x20892; "WCHAR_T"|102-50-0-0
133300|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x208BC)|15-75
133302|code|PUSH            {R4-R6,LR}|112-181
133304|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
133306|code|LDR             R5, =(__stack_chk_guard_ptr - 0x344A0)|15-77
133308|code|SUB             SP, SP, #8|130-176
133310|code|ADD             R2, SP, #0x18+var_10|2-170
133312|code|MOVS            R4, #0|0-36
133314|code|MOV             R6, R0|6-70
133316|code|MOVS            R0, #2|2-32
133318|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
133320|code|STR.W           R4, [R2,#-8]!|66-248-8-77
133324|code|LDR             R3, [R5]|43-104
133326|code|STR             R3, [SP,#0x18+var_14]|1-147
133328|code|BLX             u_charFromName_52|246-247-122-233
133332|code|LDR             R3, [SP,#0x18+var_18]|0-155
133334|code|LDR             R2, [SP,#0x18+var_14]|1-154
133336|code|CMP             R3, R4|163-66
133338|code|LDR             R3, [R5]|43-104
133340|code|ITTT LE|222-191
133342|code|MOVLE           R4, #1|1-36
133344|code|UXTHLE          R0, R0|128-178
133346|code|STRLE           R0, [R6]|48-96
133348|code|CMP             R2, R3|154-66
133350|code|MOV             R0, R4|32-70
133352|code|BNE             loc_208EE|1-209
133354|code|ADD             SP, SP, #8|2-176
133356|code|POP             {R4-R6,PC}|112-189
133358|code|BLX             __stack_chk_fail|246-247-164-232
133362|data|ALIGN 4|0-191
133364|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x208BC|228-59-1-0
133368|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
133372|code|PUSH            {R3-R5,LR}|56-181
133374|code|MOVW            R1, #0x1005|65-242-5-1
133378|code|MOV             R4, R0|4-70
133380|code|BLX             u_getIntPropertyValue_52|245-247-2-239
133384|code|MOVW            R1, #0x1004|65-242-4-1
133388|code|MOV             R5, R0|5-70
133390|code|MOV             R0, R4|32-70
133392|code|BLX             u_getIntPropertyValue_52|245-247-252-238
133396|code|CBZ             R4, loc_20950|228-177
133398|code|CMP             R5, #0xF|15-45
133400|code|BEQ             loc_20982|51-208
133402|code|SUBS            R3, R5, #6|171-31
133404|code|CMP             R3, #1|1-43
133406|code|BLS             loc_20958|27-217
133408|code|SUB.W           R3, R4, #0x1160|164-245-139-83
133412|code|CMP             R3, #0x9F|159-43
133414|code|BLS             loc_20954|21-217
133416|code|CMP             R4, #0xAD|173-44
133418|code|BEQ             loc_2095C|23-208
133420|code|CMP             R5, #0x10|16-45
133422|code|BEQ             loc_20958|19-208
133424|code|CMP             R0, #3|3-40
133426|code|BEQ             loc_2097E|36-208
133428|code|CMP             R0, #2|2-40
133430|code|BEQ             loc_2095C|17-208
133432|code|CMP             R0, #5|5-40
133434|code|BEQ             loc_2097E|32-208
133436|code|CMP             R0, #4|4-40
133438|code|BEQ             loc_2095C|13-208
133440|code|CMP             R0, #1|1-40
133442|code|BEQ             loc_20960|13-208
133444|code|CMP             R5, #0|0-45
133446|code|ITE EQ|12-191
133448|code|MOVEQ.W         R0, #0xFFFFFFFF|79-240-255-48
133452|code|MOVNE           R0, #1|1-32
133454|code|POP             {R3-R5,PC}|56-189
133456|code|MOV             R0, R4|32-70
133458|code|POP             {R3-R5,PC}|56-189
133460|code|CMP             R5, #5|5-45
133462|code|BNE             loc_2092C|233-209
133464|code|MOVS            R0, #0|0-32
133466|code|POP             {R3-R5,PC}|56-189
133468|code|MOVS            R0, #1|1-32
133470|code|POP             {R3-R5,PC}|56-189
133472|code|SUB.W           R3, R4, #0x4E00|164-245-156-67
133476|code|CMP.W           R3, #0x5200|179-245-164-79
133480|code|BCC             loc_2097E|9-211
133482|code|SUB.W           R3, R4, #0x3400|164-245-80-83
133486|code|CMP.W           R3, #0x19C0|179-245-206-95
133490|code|BCC             loc_2097E|4-211
133492|code|SUB.W           R4, R4, #0xF900|164-245-121-68
133496|code|CMP.W           R4, #0x200|180-245-0-127
133500|code|BCS             loc_20944|226-210
133502|code|MOVS            R0, #2|2-32
133504|code|POP             {R3-R5,PC}|56-189
133506|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
133510|code|POP             {R3-R5,PC}|56-189
133512|code|PUSH.W          {R4-R8,LR}|45-233-240-65
133516|code|MOV             R4, R0|4-70
133518|code|LDR             R6, =(off_34354 - 0x20998)|11-78
133520|code|MOV             R8, R1|136-70
133522|code|MOV             R7, R2|23-70
133524|code|ADD             R6, PC; off_34354|126-68
133526|code|B               loc_209A8|7-224
133528|code|LDR.W           R3, [R6],#4|86-248-4-59
133532|code|MOV             R0, R4|32-70
133534|code|CBZ             R3, loc_209B6|83-177
133536|code|BLX             R3; getBaseCharacter|152-71
133538|code|CMP             R0, #0|0-40
133540|code|IT NE|24-191
133542|code|MOVNE           R4, R0|4-70
133544|code|MOV             R0, R4|32-70
133546|code|MOV             R1, R7|57-70
133548|code|BLX             R8|192-71
133550|code|MOV             R5, R0|5-70
133552|code|CMP             R0, #0|0-40
133554|code|BEQ             loc_20998|241-208
133556|code|MOVS            R5, #1|1-37
133558|code|MOV             R0, R5|40-70
133560|code|POP.W           {R4-R8,PC}|189-232-240-129
133564|data|DCD off_34354 - 0x20998|188-57-1-0
133568|code|PUSH            {R4,LR}|16-181
133570|code|MOVS            R0, #0x20 ; ' '; size|32-32
133572|code|BLX             malloc|246-247-36-233
133576|code|MOV             R4, R0|4-70
133578|code|CBZ             R0, loc_209E2|80-177
133580|code|MOVS            R1, #0; attr|0-33
133582|code|BLX             pthread_rwlock_init|246-247-154-233
133586|code|CBNZ            R0, loc_209D8|8-185
133588|code|MOV             R0, R4|32-70
133590|code|POP             {R4,PC}|16-189
133592|code|MOV             R0, R4; ptr|32-70
133594|code|BLX             free|245-247-84-238
133598|code|MOVS            R0, #0|0-32
133600|code|POP             {R4,PC}|16-189
133602|code|BL              logMallocError|249-247-45-253
133606|code|MOV             R0, R4|32-70
133608|code|POP             {R4,PC}|16-189
133610|data|ALIGN 4|0-191
133612|code|PUSH            {R4,LR}|16-181
133614|code|MOV             R4, R0|4-70
133616|code|BLX             pthread_rwlock_destroy|245-247-22-238
133620|code|MOV             R0, R4; ptr|32-70
133622|code|POP.W           {R4,LR}|189-232-16-64
133626|code|B.W             j_free|245-247-65-190
133630|data|ALIGN 0x10|0-191
133632|code|PUSH            {R3,LR}|8-181
133634|code|LSLS            R3, R1, #0x1F|203-7
133636|code|BPL             loc_20A16|7-213
133638|code|LSLS            R2, R1, #0x1E|138-7
133640|code|BPL             loc_20A22|11-213
133642|code|BLX             pthread_rwlock_trywrlock|246-247-106-233
133646|code|CLZ.W           R0, R0|176-250-128-240
133650|code|LSRS            R0, R0, #5; rwlock|64-9
133652|code|POP             {R3,PC}|8-189
133654|code|LSLS            R3, R1, #0x1E|139-7
133656|code|BMI             loc_20A2A|7-212
133658|code|BLX             pthread_rwlock_rdlock|245-247-50-239
133662|code|MOVS            R0, #1; rwlock|1-32
133664|code|POP             {R3,PC}|8-189
133666|code|BLX             pthread_rwlock_wrlock|246-247-4-232
133670|code|MOVS            R0, #1; rwlock|1-32
133672|code|POP             {R3,PC}|8-189
133674|code|BLX             pthread_rwlock_tryrdlock|246-247-12-232
133678|code|CLZ.W           R0, R0|176-250-128-240
133682|code|LSRS            R0, R0, #5|64-9
133684|code|POP             {R3,PC}|8-189
133686|data|ALIGN 4|0-191
133688|code|B.W             j_pthread_rwlock_unlock|245-247-228-191
133692|code|PUSH            {R4,LR}|16-181
133694|code|MOV             R4, R0|4-70
133696|code|LDR             R0, =(unk_388D8 - 0x20A46)|7-72
133698|code|ADD             R0, PC; unk_388D8 ; mutex|120-68
133700|code|BLX             pthread_mutex_lock|245-247-180-237
133704|code|LDR             R3, [R4]|35-104
133706|code|CBZ             R3, loc_20A58|43-177
133708|code|LDR             R0, =(unk_388D8 - 0x20A52)|5-72
133710|code|ADD             R0, PC; unk_388D8 ; mutex|120-68
133712|code|BLX             pthread_mutex_unlock|246-247-20-234
133716|code|LDR             R0, [R4]|32-104
133718|code|POP             {R4,PC}|16-189
133720|code|BL              newLockDescriptor|255-247-178-255
133724|code|STR             R0, [R4]|32-96
133726|code|B               loc_20A4C|245-231
133728|data|DCD unk_388D8 - 0x20A46|146-126-1-0
133732|data|DCD unk_388D8 - 0x20A52|134-126-1-0
133736|code|MOVS            R0, #0; category|0-32
133738|code|PUSH            {R4,LR}|16-181
133740|code|MOV             R1, R0; locale|1-70
133742|code|BLX             setlocale|246-247-130-232
133746|code|MOV             R4, R0|4-70
133748|code|CBZ             R0, loc_20A7E|24-177
133750|code|BLX             __strdup|245-247-22-239
133754|code|MOV             R4, R0|4-70
133756|code|CBZ             R0, loc_20A82|8-177
133758|code|MOV             R0, R4|32-70
133760|code|POP             {R4,PC}|16-189
133762|code|BL              logMallocError|249-247-221-252
133766|code|B               loc_20A7E|250-231
133768|code|PUSH            {R3,LR}|8-181
133770|code|LDRB            R3, [R0]|3-120
133772|code|CMP             R3, #0x43 ; 'C'|67-43
133774|code|BNE             loc_20A98|3-209
133776|code|LDRB            R3, [R0,#1]|67-120
133778|code|CBNZ            R3, loc_20A98|11-185
133780|code|MOVS            R0, #1; s1|1-32
133782|code|POP             {R3,PC}|8-189
133784|code|LDR             R1, =(aPosix - 0x20A9E); "POSIX"|3-73
133786|code|ADD             R1, PC; "POSIX"|121-68
133788|code|BLX             strcmp|246-247-74-233
133792|code|CLZ.W           R0, R0|176-250-128-240
133796|code|LSRS            R0, R0, #5|64-9
133798|code|POP             {R3,PC}|8-189
133800|data|DCD aPosix - 0x20A9E; "POSIX"|110-48-0-0
133804|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x20ABA)|41-75
133806|code|PUSH.W          {R4-R11,LR}|45-233-240-79
133810|code|MOV             R6, R1|14-70
133812|code|LDR             R1, =(__stack_chk_guard_ptr - 0x344A0)|40-73
133814|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
133816|code|SUB             SP, SP, #0x14|133-176
133818|code|MOV             R7, R0|7-70
133820|code|MOV             R0, R6; s|48-70
133822|code|MOV             R8, R2|144-70
133824|code|LDR.W           R10, [R3,R1]; __stack_chk_guard|83-248-1-160
133828|code|ADD.W           R9, SP, #0x38+var_34|13-241-4-9
133832|code|MOVS            R4, #0|0-36
133834|code|MOV             R11, SP|235-70
133836|code|LDR.W           R3, [R10]|218-248-0-48
133840|code|STR             R3, [SP,#0x38+var_2C]|3-147
133842|code|BLX             strlen|246-247-166-232
133846|code|STR.W           R4, [R9,#4]|201-248-4-64
133850|code|STR             R4, [SP,#0x38+var_34]|1-148
133852|code|MOV             R5, R0|5-70
133854|code|CBZ             R0, loc_20B2E|48-179
133856|code|MOV             R0, R11; pwc|88-70
133858|code|MOV             R1, R6; s|49-70
133860|code|MOV             R2, R5; n|42-70
133862|code|MOV             R3, R9; p|75-70
133864|code|BLX             mbrtowc|245-247-148-237
133868|code|CMP             R0, #0|0-40
133870|code|BLE             loc_20B44|41-221
133872|code|LDR             R3, [SP,#0x38+var_38]|0-155
133874|code|CBZ             R3, loc_20B08|75-177
133876|code|CBZ             R7, loc_20AFE|31-177
133878|code|CMP             R4, R8|68-69
133880|code|BEQ             loc_20B3C|32-208
133882|code|STR.W           R3, [R7,R4,LSL#2]|71-248-36-48
133886|code|SUBS            R5, R5, R0|45-26
133888|code|ADD             R6, R0|6-68
133890|code|ADD.W           R4, R4, #1|4-241-1-4
133894|code|BNE             loc_20AE0|235-209
133896|code|CMP             R7, #0|0-47
133898|code|IT NE|24-191
133900|code|CMPNE           R8, R4|160-69
133902|code|MOV             R0, R4|32-70
133904|code|ITE HI|140-191
133906|code|MOVHI           R3, #1|1-35
133908|code|MOVLS           R3, #0|0-35
133910|code|CBZ             R3, loc_20B1E|19-177
133912|code|MOVS            R3, #0|0-35
133914|code|STR.W           R3, [R7,R0,LSL#2]|71-248-32-48
133918|code|LDR             R2, [SP,#0x38+var_2C]|3-154
133920|code|LDR.W           R3, [R10]|218-248-0-48
133924|code|CMP             R2, R3|154-66
133926|code|BNE             loc_20B40|11-209
133928|code|ADD             SP, SP, #0x14|5-176
133930|code|POP.W           {R4-R11,PC}|189-232-240-143
133934|code|CMP             R7, R4|167-66
133936|code|IT NE|24-191
133938|code|CMPNE           R8, R4|160-69
133940|code|ITE NE|20-191
133942|code|MOVNE           R3, #1|1-35
133944|code|MOVEQ           R3, #0|0-35
133946|code|B               loc_20B16|236-231
133948|code|MOV             R0, R4|32-70
133950|code|B               loc_20B1E|238-231
133952|code|BLX             __stack_chk_fail|245-247-122-239
133956|code|CMP             R7, #0|0-47
133958|code|IT NE|24-191
133960|code|CMPNE           R8, R4|160-69
133962|code|MOV             R0, R4|32-70
133964|code|ITE HI|140-191
133966|code|MOVHI           R3, #1|1-35
133968|code|MOVLS           R3, #0|0-35
133970|code|B               loc_20B16|224-231
133972|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x20ABA|230-57-1-0
133976|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
133980|code|MOV             R1, R0|1-70
133982|code|MOVS            R0, #0|0-32
133984|code|MOV             R2, R0|2-70
133986|code|B.W             convertTextToWchars|255-247-163-191
133990|data|ALIGN 4|0-191
133992|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x20B72)|36-75
133994|code|MOV             R12, R1|140-70
133996|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|36-74
133998|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
134000|code|PUSH.W          {R4-R8,LR}|45-233-240-65
134004|code|SUB             SP, SP, #0x10|132-176
134006|code|LDR.W           R8, [R3,R2]; __stack_chk_guard|83-248-2-128
134010|code|MOV             R5, R0|5-70
134012|code|LDR.W           R3, [R8]|216-248-0-48
134016|code|STR             R3, [SP,#0x28+var_1C]|3-147
134018|code|BICS.W          R3, R0, #0x7F|48-240-127-3
134022|code|ITT EQ|4-191
134024|code|STRBEQ          R0, [R1]|8-112
134026|code|MOVEQ           R7, #1|1-39
134028|code|BEQ             loc_20BE0|40-208
134030|code|ADD             R7, SP, #0x28+var_1C|3-175
134032|code|MOV             R6, R7|62-70
134034|code|AND.W           R3, R5, #0x3F|5-240-63-3
134038|code|LSRS            R5, R5, #6|173-9
134040|code|ORR.W           R3, R3, #0x80|67-240-128-3
134044|code|STRB.W          R3, [R6,#-1]!|6-248-1-61
134048|code|BNE             loc_20B92|247-209
134050|code|SUBS            R7, R7, R6|191-27
134052|code|MOVS            R2, #1|1-34
134054|code|RSB.W           R0, R7, #7|199-241-7-0
134058|code|AND.W           R1, R3, #0x3F|3-240-63-1
134062|code|LSLS            R2, R0|130-64
134064|code|MOV             R0, R6|48-70
134066|code|CMP             R1, R2|145-66
134068|code|ITTET GE|165-191
134070|code|STRBGE.W        R5, [R0,#-1]|0-248-1-92
134074|code|ADDGE           R7, #1|1-55
134076|code|UXTBLT          R4, R3|220-178
134078|code|ADDGE.W         R6, R6, #0xFFFFFFFF|6-241-255-54
134082|code|RSB.W           R2, R7, #8|199-241-8-2
134086|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
134090|code|IT GE|168-191
134092|code|MOVGE           R4, R5|44-70
134094|code|LSLS            R3, R2|147-64
134096|code|MOV             R0, R12; dest|96-70
134098|code|ORRS            R3, R4|35-67
134100|code|MOV             R1, R6; src|49-70
134102|code|MOV             R2, R7; n|58-70
134104|code|STRB            R3, [R6]|51-112
134106|code|BLX             memcpy|246-247-14-232
134110|code|MOV             R12, R0|132-70
134112|code|MOVS            R3, #0|0-35
134114|code|LDR             R2, [SP,#0x28+var_1C]|3-154
134116|code|STRB.W          R3, [R12,R7]|12-248-7-48
134120|code|MOV             R0, R7|56-70
134122|code|LDR.W           R3, [R8]|216-248-0-48
134126|code|CMP             R2, R3|154-66
134128|code|BNE             loc_20BF8|2-209
134130|code|ADD             SP, SP, #0x10|4-176
134132|code|POP.W           {R4-R8,PC}|189-232-240-129
134136|code|BLX             __stack_chk_fail|245-247-30-239
134140|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x20B72|46-57-1-0
134144|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
134148|code|PUSH            {R4-R7,LR}|240-181
134150|code|MOV.W           R12, #1|79-240-1-12
134154|code|LDR             R6, [R1]|14-104
134156|code|MOV.W           LR, #0|79-240-0-14
134160|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
134164|code|CBZ             R6, loc_20C46|190-177
134166|code|LDR             R7, [R0]|7-104
134168|code|SUBS            R2, R6, #1|114-30
134170|code|ADDS            R5, R7, #1|125-28
134172|code|STR             R5, [R0]|5-96
134174|code|LDRB            R3, [R7]|59-120
134176|code|STR             R2, [R1]|10-96
134178|code|TST.W           R3, #0x80|19-240-128-15
134182|code|BEQ             loc_20C9A|56-208
134184|code|TST.W           R3, #0x40|19-240-64-15
134188|code|BNE             loc_20C4A|13-209
134190|code|ADDS            R6, R4, #1|102-28
134192|code|BEQ             loc_20CDC|84-208
134194|code|SUBS.W          LR, LR, #1|190-241-1-14
134198|code|AND.W           R3, R3, #0x3F|3-240-63-3
134202|code|ORR.W           R4, R3, R4,LSL#6|67-234-132-20
134206|code|BEQ             loc_20CA0|47-208
134208|code|MOV             R6, R2|22-70
134210|code|CMP             R6, #0|0-46
134212|code|BNE             loc_20C16|231-209
134214|code|MOV             R0, R4|32-70
134216|code|POP             {R4-R7,PC}|240-189
134218|code|TST.W           R3, #0x20|19-240-32-15
134222|code|BEQ             loc_20C7C|21-208
134224|code|TST.W           R3, #0x10|19-240-16-15
134228|code|BEQ             loc_20C8E|27-208
134230|code|TST.W           R3, #8|19-240-8-15
134234|code|BEQ             loc_20C94|27-208
134236|code|TST.W           R3, #4|19-240-4-15
134240|code|IT EQ|8-191
134242|code|MOVEQ.W         LR, #4|79-240-4-14
134246|code|BNE             loc_20CD2|52-209
134248|code|ADDS            R4, #1|1-52
134250|code|BNE             loc_20C84|11-209
134252|code|RSB.W           R4, LR, #6|206-241-6-4
134256|code|MOV             R6, R2|22-70
134258|code|LSL.W           R4, R12, R4|12-250-4-244
134262|code|SUBS            R4, #1|1-60
134264|code|ANDS            R4, R3|28-64
134266|code|B               loc_20C42|226-231
134268|code|ADDS            R4, #1|1-52
134270|code|MOV.W           LR, #1|79-240-1-14
134274|code|BEQ             loc_20C6C|243-208
134276|code|STR             R7, [R0]|7-96
134278|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
134282|code|STR             R6, [R1]|14-96
134284|code|POP             {R4-R7,PC}|240-189
134286|code|MOV.W           LR, #2|79-240-2-14
134290|code|B               loc_20C68|233-231
134292|code|MOV.W           LR, #3|79-240-3-14
134296|code|B               loc_20C68|230-231
134298|code|ADDS            R4, #1|1-52
134300|code|BNE             loc_20C84|242-209
134302|code|MOV             R4, R3|28-70
134304|code|CMP             R2, #0|0-42
134306|code|BEQ             loc_20C46|208-208
134308|code|LDRB            R3, [R5]|43-120
134310|code|AND.W           R3, R3, #0xC0|3-240-192-3
134314|code|CMP             R3, #0x80|128-43
134316|code|BNE             loc_20C46|203-209
134318|code|SUBS            R2, #1|1-58
134320|code|ADDS            R3, R5, #1|107-28
134322|code|B               loc_20CC0|5-224
134324|code|LDRB            R4, [R4]|36-120
134326|code|SUBS            R2, #1|1-58
134328|code|AND.W           R4, R4, #0xC0|4-240-192-4
134332|code|CMP             R4, #0x80|128-44
134334|code|BNE             loc_20CCC|5-209
134336|code|STR             R3, [R0]|3-96
134338|code|MOV             R4, R3|28-70
134340|code|STR             R2, [R1]|10-96
134342|code|ADDS            R3, #1|1-51
134344|code|CMP             R2, #0|0-42
134346|code|BNE             loc_20CB4|243-209
134348|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
134352|code|POP             {R4-R7,PC}|240-189
134354|code|TST.W           R3, #2|19-240-2-15
134358|code|BEQ             loc_20CE6|6-208
134360|code|ADDS            R4, #1|1-52
134362|code|BNE             loc_20C84|211-209
134364|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
134368|code|CMP             R2, #0|0-42
134370|code|BNE             loc_20CA4|223-209
134372|code|B               loc_20CCC|242-231
134374|code|MOV.W           LR, #5|79-240-5-14
134378|code|B               loc_20C68|189-231
134380|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x20CF8)|20-74
134382|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|21-75
134384|code|PUSH.W          {R4-R8,LR}|45-233-240-65
134388|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
134390|code|SUB             SP, SP, #0x10|132-176
134392|code|STR             R0, [SP,#0x10+var_C]|1-144
134394|code|LDR.W           R8, [R2,R3]; __stack_chk_guard|82-248-3-128
134398|code|LDRB            R4, [R0]|4-120
134400|code|LDR.W           R3, [R8]|216-248-0-48
134404|code|STR             R3, [SP,#0x10+var_4]|3-147
134406|code|CBZ             R4, loc_20D28|124-177
134408|code|ADD             R7, SP, #4|1-175
134410|code|ADD             R6, SP, #0x10+var_8|2-174
134412|code|MOVS            R4, #0|0-36
134414|code|MOVS            R5, #7|7-37
134416|code|B               loc_20D1A|3-224
134418|code|LDR             R3, [SP,#0x10+var_C]|1-155
134420|code|ADDS            R4, #1|1-52
134422|code|LDRB            R3, [R3]|27-120
134424|code|CBZ             R3, loc_20D28|51-177
134426|code|MOV             R0, R7|56-70
134428|code|MOV             R1, R6|49-70
134430|code|STR             R5, [SP,#0x10+var_8]|2-149
134432|code|BL              convertUtf8ToWchar|255-247-112-255
134436|code|ADDS            R0, #1|1-48
134438|code|BNE             loc_20D12|244-209
134440|code|LDR             R2, [SP,#0x10+var_4]|3-154
134442|code|MOV             R0, R4|32-70
134444|code|LDR.W           R3, [R8]|216-248-0-48
134448|code|CMP             R2, R3|154-66
134450|code|BNE             loc_20D3A|2-209
134452|code|ADD             SP, SP, #0x10|4-176
134454|code|POP.W           {R4-R8,PC}|189-232-240-129
134458|code|BLX             __stack_chk_fail|245-247-126-238
134462|data|ALIGN 0x10|0-191
134464|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x20CF8|168-55-1-0
134468|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
134472|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x20D56)|28-75
134474|code|PUSH.W          {R4-R9,LR}|45-233-240-67
134478|code|MOV             R5, R0|5-70
134480|code|LDR             R0, =(__stack_chk_guard_ptr - 0x344A0)|27-72
134482|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
134484|code|MOV             R6, R1|14-70
134486|code|LDR             R1, [R5]|41-104
134488|code|MOV             R4, R2|20-70
134490|code|SUB             SP, SP, #0xC|131-176
134492|code|LDR.W           R9, [R3,R0]; __stack_chk_guard|83-248-0-144
134496|code|LDRB            R3, [R1]|11-120
134498|code|LDR.W           R2, [R9]|217-248-0-32
134502|code|CMP             R3, #0|0-43
134504|code|IT NE|24-191
134506|code|CMPNE           R4, #1|1-44
134508|code|STR             R2, [SP,#0x28+var_24]|1-146
134510|code|BLS             loc_20DB0|31-217
134512|code|MOV             R8, SP|232-70
134514|code|MOVS            R7, #7|7-39
134516|code|B               loc_20D8C|10-224
134518|code|MOV             R1, R3|25-70
134520|code|ADDS            R3, #4|4-51
134522|code|STR             R3, [R6]|51-96
134524|code|SUBS            R4, #1|1-60
134526|code|LDR             R2, [R5]|42-104
134528|code|STR             R0, [R1]|8-96
134530|code|LDRB            R2, [R2]|18-120
134532|code|CMP             R2, #0|0-42
134534|code|IT NE|24-191
134536|code|CMPNE           R4, #1|1-44
134538|code|BLS             loc_20D9C|7-217
134540|code|MOV             R0, R5|40-70
134542|code|MOV             R1, R8|65-70
134544|code|STR             R7, [SP,#0x28+var_28]|0-151
134546|code|BL              convertUtf8ToWchar|255-247-55-255
134550|code|LDR             R3, [R6]|51-104
134552|code|ADDS            R2, R0, #1|66-28
134554|code|BNE             loc_20D76|236-209
134556|code|MOVS            R2, #0|0-34
134558|code|STR             R2, [R3]|26-96
134560|code|LDR             R2, [SP,#0x28+var_24]|1-154
134562|code|LDR.W           R3, [R9]|217-248-0-48
134566|code|CMP             R2, R3|154-66
134568|code|BNE             loc_20DB8|6-209
134570|code|ADD             SP, SP, #0xC|3-176
134572|code|POP.W           {R4-R9,PC}|189-232-240-131
134576|code|CMP             R4, #0|0-44
134578|code|BEQ             loc_20DA0|245-208
134580|code|LDR             R3, [R6]|51-104
134582|code|B               loc_20D9C|241-231
134584|code|BLX             __stack_chk_fail|245-247-62-238
134588|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x20D56|74-55-1-0
134592|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
134596|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x20DD2)|39-75
134598|code|PUSH.W          {R4-R11,LR}|45-233-240-79
134602|code|MOV             R6, R1|14-70
134604|code|LDR             R1, =(__stack_chk_guard_ptr - 0x344A0)|38-73
134606|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
134608|code|SUB             SP, SP, #0x1C|135-176
134610|code|RSB.W           R4, R6, R6,LSL#3|198-235-198-4
134614|code|MOV             R5, R0|5-70
134616|code|ADDS            R0, R4, #1; size|96-28
134618|code|LDR             R3, [R3,R1]; __stack_chk_guard|91-88
134620|code|MOV             R10, R2|146-70
134622|code|STR             R3, [SP,#0x40+var_3C]|1-147
134624|code|LDR             R3, [R3]|27-104
134626|code|STR             R3, [SP,#0x40+var_2C]|5-147
134628|code|BLX             malloc|245-247-20-239
134632|code|MOV             R8, R0|128-70
134634|code|CBZ             R0, loc_20E58|168-179
134636|code|CBZ             R6, loc_20E54|150-179
134638|code|SUBS            R5, #4|4-61
134640|code|ADD             R7, SP, #0x40+var_34|3-175
134642|code|MOV             R4, R0|4-70
134644|code|MOV.W           R9, #0|79-240-0-9
134648|code|MOV.W           R11, #0x20 ; ' '|79-240-32-11
134652|code|B               loc_20E0E|7-224
134654|code|ADD.W           R9, R9, #1|9-241-1-9
134658|code|STRB.W          R11, [R4]|132-248-0-176
134662|code|CMP             R9, R6|177-69
134664|code|ADD.W           R4, R4, #1|4-241-1-4
134668|code|BEQ             loc_20E30|16-208
134670|code|LDR.W           R0, [R5,#4]!|85-248-4-15
134674|code|MOV             R1, R7|57-70
134676|code|BL              convertWcharToUtf8|255-247-168-254
134680|code|MOV             R2, R0|2-70
134682|code|CMP             R0, #0|0-40
134684|code|BEQ             loc_20DFE|239-208
134686|code|MOV             R0, R4|32-70
134688|code|MOV             R1, R7|57-70
134690|code|BLX             mempcpy|245-247-82-239
134694|code|ADD.W           R9, R9, #1|9-241-1-9
134698|code|CMP             R9, R6|177-69
134700|code|MOV             R4, R0|4-70
134702|code|BNE             loc_20E0E|238-209
134704|code|MOVS            R3, #0|0-35
134706|code|STRB            R3, [R4]|35-112
134708|code|CMP.W           R10, #0|186-241-0-15
134712|code|BEQ             loc_20E42|3-208
134714|code|RSB.W           R4, R8, R4|200-235-4-4
134718|code|STR.W           R4, [R10]|202-248-0-64
134722|code|LDR             R3, [SP,#0x40+var_3C]|1-155
134724|code|MOV             R0, R8|64-70
134726|code|LDR             R2, [SP,#0x40+var_2C]|5-154
134728|code|LDR             R3, [R3]|27-104
134730|code|CMP             R2, R3|154-66
134732|code|BNE             loc_20E5E|7-209
134734|code|ADD             SP, SP, #0x1C|7-176
134736|code|POP.W           {R4-R11,PC}|189-232-240-143
134740|code|MOV             R4, R0|4-70
134742|code|B               loc_20E30|235-231
134744|code|BL              logMallocError|249-247-242-250
134748|code|B               loc_20E42|241-231
134750|code|BLX             __stack_chk_fail|245-247-236-237
134754|data|ALIGN 4|0-191
134756|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x20DD2|206-54-1-0
134760|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
134764|code|PUSH            {R4,LR}|16-181
134766|code|MOV             R4, R1|12-70
134768|code|BL              convertCharToWchar|0-240-34-249
134772|code|ADDS            R3, R0, #1|67-28
134774|code|BEQ             loc_20E82|4-208
134776|code|MOV             R1, R4|33-70
134778|code|POP.W           {R4,LR}|189-232-16-64
134782|code|B.W             convertWcharToUtf8|255-247-115-190
134786|code|MOVS            R0, #0|0-32
134788|code|POP             {R4,PC}|16-189
134790|data|ALIGN 4|0-191
134792|code|PUSH            {R3,LR}|8-181
134794|code|BL              convertUtf8ToWchar|255-247-187-254
134798|code|ADDS            R3, R0, #1|67-28
134800|code|BEQ             locret_20E9A|3-208
134802|code|POP.W           {R3,LR}|189-232-8-64
134806|code|B.W             convertWcharToChar|0-240-83-185
134810|code|POP             {R3,PC}|8-189
134812|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x20EA4)|26-74
134814|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|27-75
134816|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
134818|code|PUSH            {R4-R7,LR}|240-181
134820|code|SUB             SP, SP, #0x2C|139-176
134822|code|LDR             R5, =(dword_388F0 - 0x20EAE)|26-77
134824|code|LDR             R4, [R2,R3]; __stack_chk_guard|212-88
134826|code|ADD             R5, PC; dword_388F0|125-68
134828|code|LDR             R3, [R4]|35-104
134830|code|LDR             R0, [R5]|40-104
134832|code|STR             R3, [SP,#0x40+var_1C]|9-147
134834|code|CBZ             R0, loc_20EC0|40-177
134836|code|LDR             R2, [SP,#0x40+var_1C]|9-154
134838|code|LDR             R3, [R4]|35-104
134840|code|CMP             R2, R3|154-66
134842|code|BNE             loc_20F02|34-209
134844|code|ADD             SP, SP, #0x2C ; ','|11-176
134846|code|POP             {R4-R7,PC}|240-189
134848|code|ADD             R6, SP, #0x40+var_2C|5-174
134850|code|LDR             R2, =(aUcsLuCe - 0x20ECE); "UCS-%lu%cE"|20-74
134852|code|MOVS            R1, #0x10|16-33
134854|code|MOV.W           LR, #4|79-240-4-14
134858|code|ADD             R2, PC; "UCS-%lu%cE"|122-68
134860|code|MOV             R3, R1|11-70
134862|code|STR             R2, [SP,#0x40+var_40]|0-146
134864|code|MOV             R0, R6|48-70
134866|code|STR.W           LR, [SP,#0x40+var_3C]|205-248-4-224
134870|code|MOVS            R2, #1|1-34
134872|code|MOVS            R7, #0x4C ; 'L'|76-39
134874|code|STR             R7, [SP,#0x40+var_38]|2-151
134876|code|BLX             __snprintf_chk|245-247-166-238
134880|code|MOV             R0, R6|48-70
134882|code|BLX             __strdup|245-247-224-236
134886|code|STR             R0, [R5]|40-96
134888|code|CBZ             R0, loc_20EFC|64-177
134890|code|LDR             R0, =(aWcharCharset - 0x20EF2); "wchar-charset"|11-72
134892|code|MOV             R1, R5|41-70
134894|code|ADD             R0, PC; "wchar-charset"|120-68
134896|code|BL              registerProgramMemory|247-247-204-251
134900|code|LDR             R3, =(dword_388F0 - 0x20EFA)|9-75
134902|code|ADD             R3, PC; dword_388F0|123-68
134904|code|LDR             R0, [R3]|24-104
134906|code|B               loc_20EB4|219-231
134908|code|BL              logMallocError|249-247-160-250
134912|code|B               loc_20EF4|248-231
134914|code|BLX             __stack_chk_fail|245-247-154-237
134918|data|ALIGN 4|0-191
134920|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x20EA4|252-53-1-0
134924|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
134928|data|DCD dword_388F0 - 0x20EAE|66-122-1-0
134932|data|DCD aUcsLuCe - 0x20ECE; "UCS-%lu%cE"|70-44-0-0
134936|data|DCD aWcharCharset - 0x20EF2; "wchar-charset"|46-44-0-0
134940|data|DCD dword_388F0 - 0x20EFA|246-121-1-0
134944|code|PUSH            {R3-R5,LR}|56-181
134946|code|MOV             R5, R0|5-70
134948|code|CBZ             R0, loc_20F70|32-179
134950|code|LDR             R3, =(dword_388F0 - 0x20F2C)|27-75
134952|code|ADD             R3, PC; dword_388F0|123-68
134954|code|LDR             R4, [R3,#(dword_388F4 - 0x388F0)]|92-104
134956|code|CBZ             R4, loc_20F38|36-177
134958|code|MOV             R0, R4; s1|32-70
134960|code|MOV             R1, R5; s2|41-70
134962|code|BLX             strcmp|245-247-0-239
134966|code|CBZ             R0, loc_20F60|152-177
134968|code|MOV             R0, R5|40-70
134970|code|BLX             __strdup|245-247-180-236
134974|code|MOV             R5, R0|5-70
134976|code|CBZ             R0, loc_20F8C|32-179
134978|code|BL              registerCharacterSet|0-240-91-249
134982|code|MOV             R4, R0|4-70
134984|code|CBZ             R0, loc_20F82|216-177
134986|code|LDR             R1, =(dword_388F0 - 0x20F50)|19-73
134988|code|ADD             R1, PC; dword_388F0|121-68
134990|code|LDR             R0, [R1,#(dword_388F4 - 0x388F0)]; ptr|72-104
134992|code|CBZ             R0, loc_20F64|64-177
134994|code|BLX             free|245-247-152-235
134998|code|LDR             R3, =(dword_388F0 - 0x20F5E)|17-75
135000|code|MOV             R0, R5|40-70
135002|code|ADD             R3, PC; dword_388F0|123-68
135004|code|STR             R5, [R3,#(dword_388F4 - 0x388F0)]|93-96
135006|code|POP             {R3-R5,PC}|56-189
135008|code|MOV             R0, R4|32-70
135010|code|POP             {R3-R5,PC}|56-189
135012|code|LDR             R0, =(aCurrentCharset - 0x20F6C); "current-charset"|14-72
135014|code|ADDS            R1, #4|4-49
135016|code|ADD             R0, PC; "current-charset"|120-68
135018|code|BL              registerProgramMemory|247-247-143-251
135022|code|B               loc_20F56|242-231
135024|code|LDR             R3, =(dword_388F0 - 0x20F76)|12-75
135026|code|ADD             R3, PC; dword_388F0|123-68
135028|code|LDR             R0, [R3,#(dword_388F4 - 0x388F0)]|88-104
135030|code|CMP             R0, #0|0-40
135032|code|BNE             locret_20F62|243-209
135034|code|BL              getLocaleCharset|0-240-37-249
135038|code|MOV             R5, R0|5-70
135040|code|B               loc_20F38|218-231
135042|code|MOV             R0, R5; ptr|40-70
135044|code|BLX             free|245-247-126-235
135048|code|MOV             R0, R4|32-70
135050|code|POP             {R3-R5,PC}|56-189
135052|code|BL              logMallocError|249-247-88-250
135056|code|MOV             R0, R5|40-70
135058|code|POP             {R3-R5,PC}|56-189
135060|data|DCD dword_388F0 - 0x20F2C|196-121-1-0
135064|data|DCD dword_388F0 - 0x20F50|160-121-1-0
135068|data|DCD dword_388F0 - 0x20F5E|146-121-1-0
135072|data|DCD aCurrentCharset - 0x20F6C; "current-charset"|196-43-0-0
135076|data|DCD dword_388F0 - 0x20F76|122-121-1-0
135080|code|MOVS            R0, #0; s2|0-32
135082|code|B.W             setCharset|255-247-185-191
135086|data|ALIGN 0x10|0-191
135088|code|LDR             R3, =(dword_388F0 - 0x20FB8)|7-75
135090|code|PUSH            {R4,LR}|16-181
135092|code|ADD             R3, PC; dword_388F0|123-68
135094|code|MOV             R4, R0|4-70
135096|code|MOV             R0, R3|24-70
135098|code|ADDS            R0, #8|8-48
135100|code|BL              getLockDescriptor|255-247-62-253
135104|code|CBZ             R0, locret_20FCC|32-177
135106|code|MOV             R1, R4|33-70
135108|code|POP.W           {R4,LR}|189-232-16-64
135112|code|B.W             obtainLock|255-247-26-189
135116|code|POP             {R4,PC}|16-189
135118|data|ALIGN 0x10|0-191
135120|data|DCD dword_388F0 - 0x20FB8|56-121-1-0
135124|code|LDR             R0, =(dword_388F0 - 0x20FDC)|5-72
135126|code|PUSH            {R3,LR}|8-181
135128|code|ADD             R0, PC; dword_388F0|120-68
135130|code|ADDS            R0, #8|8-48
135132|code|BL              getLockDescriptor|255-247-46-253
135136|code|CBZ             R0, locret_20FEA|24-177
135138|code|POP.W           {R3,LR}|189-232-8-64
135142|code|B.W             releaseLock|255-247-39-189
135146|code|POP             {R3,PC}|8-189
135148|data|DCD dword_388F0 - 0x20FDC|20-121-1-0
135152|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x20FF8)|24-74
135154|code|PUSH            {R4-R7,LR}|240-181
135156|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
135158|code|LDR             R4, =(__stack_chk_guard_ptr - 0x344A0)|24-76
135160|code|SUB             SP, SP, #0x1C|135-176
135162|code|ADD             R6, SP, #0x30+var_24|3-174
135164|code|MOV             R7, R0|7-70
135166|code|STR             R1, [SP,#0x30+var_2C]|1-145
135168|code|MOV             R0, R1|8-70
135170|code|LDR             R5, [R2,R4]; __stack_chk_guard|21-89
135172|code|MOV             R1, R6|49-70
135174|code|LDR             R3, [R5]|43-104
135176|code|STR             R3, [SP,#0x30+var_1C]|5-147
135178|code|BL              convertWcharToUtf8|255-247-173-253
135182|code|MOV             R4, R0|4-70
135184|code|CBZ             R0, loc_2103C|160-177
135186|code|MOV             R0, R6; ptr|48-70
135188|code|MOV             R3, R7; s|59-70
135190|code|MOVS            R1, #1; size|1-33
135192|code|MOV             R2, R4; n|34-70
135194|code|BLX             fwrite|245-247-232-237
135198|code|CMP             R0, R4|160-66
135200|code|IT EQ|8-191
135202|code|MOVEQ           R0, #1|1-32
135204|code|BEQ             loc_21030|4-208
135206|code|LDR             R0, =(aFwrite_0 - 0x2102C); "fwrite"|13-72
135208|code|ADD             R0, PC; "fwrite"|120-68
135210|code|BL              logSystemError|249-247-255-249
135214|code|MOVS            R0, #0|0-32
135216|code|LDR             R2, [SP,#0x30+var_1C]|5-154
135218|code|LDR             R3, [R5]|43-104
135220|code|CMP             R2, R3|154-66
135222|code|BNE             loc_2104E|10-209
135224|code|ADD             SP, SP, #0x1C|7-176
135226|code|POP             {R4-R7,PC}|240-189
135228|code|LDR             R1, =(aInvalidUnicode - 0x21048); "invalid Unicode character"|8-73
135230|code|MOVS            R0, #3|3-32
135232|code|ADD             R2, SP, #0x30+var_2C|1-170
135234|code|MOVS            R3, #4|4-35
135236|code|ADD             R1, PC; "invalid Unicode character"|121-68
135238|code|BL              logBytes|249-247-143-249
135242|code|MOV             R0, R4|32-70
135244|code|B               loc_21030|240-231
135246|code|BLX             __stack_chk_fail|245-247-244-236
135250|data|ALIGN 4|0-191
135252|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x20FF8|168-52-1-0
135256|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
135260|data|DCD aFwrite_0 - 0x2102C; "fwrite"|20-43-0-0
135264|data|DCD aInvalidUnicode - 0x21048; "invalid Unicode character"|0-43-0-0
135268|code|PUSH            {R4-R6,LR}|112-181
135270|code|ADD.W           R5, R1, R2,LSL#2|1-235-130-5
135274|code|CMP             R1, R5|169-66
135276|code|MOV             R4, R1|12-70
135278|code|MOV             R6, R0|6-70
135280|code|BCC             loc_21078|2-211
135282|code|B               loc_21088|9-224
135284|code|CMP             R5, R4|165-66
135286|code|BLS             loc_21088|7-217
135288|code|MOV             R0, R6|48-70
135290|code|LDR.W           R1, [R4],#4|84-248-4-27
135294|code|BL              writeUtf8Character|255-247-183-255
135298|code|CMP             R0, #0|0-40
135300|code|BNE             loc_21074|246-209
135302|code|POP             {R4-R6,PC}|112-189
135304|code|MOVS            R0, #1|1-32
135306|code|POP             {R4-R6,PC}|112-189
135308|code|PUSH            {R4-R6,LR}|112-181
135310|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
135314|code|LDR             R4, =(off_34280 - 0x21098)|8-76
135316|code|ADD             R4, PC; off_34280|124-68
135318|code|ADD.W           R5, R4, #8|4-241-8-5
135322|code|LDR.W           R3, [R4],#4|84-248-4-59
135326|code|LDR             R0, [R3]; cd|24-104
135328|code|ADDS            R3, R0, #1|67-28
135330|code|BEQ             loc_210AE|4-208
135332|code|BLX             iconv_close|245-247-114-237
135336|code|LDR.W           R3, [R4,#-4]|84-248-4-60
135340|code|STR             R6, [R3]|30-96
135342|code|CMP             R4, R5|172-66
135344|code|BCC             loc_2109A|243-211
135346|code|POP             {R4-R6,PC}|112-189
135348|data|DCD off_34280 - 0x21098|232-49-1-0
135352|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x210C2)|29-74
135354|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|30-75
135356|code|PUSH            {R4-R6,LR}|112-181
135358|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
135360|code|SUB             SP, SP, #0x28|138-176
135362|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
135366|code|STRB.W          R0, [SP,#0x38+var_29]|141-248-15-0
135370|code|LDR             R4, [R2,R3]; __stack_chk_guard|212-88
135372|code|LDR             R3, [R4]|35-104
135374|code|STR             R3, [SP,#0x38+var_14]|9-147
135376|code|BL              getCharset|255-247-106-255
135380|code|CBZ             R0, loc_21104|176-177
135382|code|LDR             R0, =(dword_34848 - 0x210E2)|24-72
135384|code|ADD             R3, SP, #0x38+var_18|8-171
135386|code|ADD             R1, SP, #0x38+inbuf; inbuf|4-169
135388|code|STR             R3, [SP,#0x38+outbytesleft]; outbytesleft|0-147
135390|code|ADD             R0, PC; dword_34848|120-68
135392|code|ADD             R3, SP, #0x38+outbuf; outbuf|7-171
135394|code|ADD             R2, SP, #0x38+inbytesleft; inbytesleft|5-170
135396|code|ADD.W           R5, SP, #0x38+var_29|13-241-15-5
135400|code|LDR             R0, [R0]; cd|0-104
135402|code|MOVS            R6, #1|1-38
135404|code|STR             R5, [SP,#0x38+inbuf]|4-149
135406|code|ADD             R5, SP, #0x38+var_20|6-173
135408|code|STR             R6, [SP,#0x38+inbytesleft]|5-150
135410|code|STR             R5, [SP,#0x38+outbuf]|7-149
135412|code|MOVS            R5, #4|4-37
135414|code|STR             R5, [SP,#0x38+var_18]|8-149
135416|code|BLX             iconv|245-247-40-238
135420|code|ADDS            R3, R0, #1|67-28
135422|code|MOV             R5, R0|5-70
135424|code|BEQ             loc_21112|7-208
135426|code|LDR             R5, [SP,#0x38+var_20]|6-157
135428|code|LDR             R2, [SP,#0x38+var_14]|9-154
135430|code|MOV             R0, R5|40-70
135432|code|LDR             R3, [R4]|35-104
135434|code|CMP             R2, R3|154-66
135436|code|BNE             loc_2112A|13-209
135438|code|ADD             SP, SP, #0x28 ; '('|10-176
135440|code|POP             {R4-R6,PC}|112-189
135442|code|BLX             __errno_location|245-247-34-238
135446|code|LDR             R0, [R0]; errnum|0-104
135448|code|BLX             strerror|245-247-16-235
135452|code|LDR             R1, =(aIconvCharWchar - 0x21122); "iconv (char -> wchar_t) error: %s"|7-73
135454|code|ADD             R1, PC; "iconv (char -> wchar_t) error: %s"|121-68
135456|code|MOV             R2, R0|2-70
135458|code|MOVS            R0, #7|7-32
135460|code|BL              logMessage|249-247-0-249
135464|code|B               loc_21104|236-231
135466|code|BLX             __stack_chk_fail|245-247-134-236
135470|data|ALIGN 0x10|0-191
135472|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x210C2|222-51-1-0
135476|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
135480|data|DCD dword_34848 - 0x210E2|102-55-1-0
135484|data|DCD aIconvCharWchar - 0x21122; "iconv (char -> wchar_t) error: %s"|66-42-0-0
135488|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x2114A)|29-74
135490|code|LDR             R3, =(__stack_chk_guard_ptr - 0x344A0)|30-75
135492|code|PUSH            {R4-R6,LR}|112-181
135494|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
135496|code|SUB             SP, SP, #0x28|138-176
135498|code|STR             R0, [SP,#0x38+var_2C]|3-144
135500|code|LDR             R5, [R2,R3]; __stack_chk_guard|213-88
135502|code|LDR             R3, [R5]|43-104
135504|code|STR             R3, [SP,#0x38+var_14]|9-147
135506|code|BL              getCharset|255-247-41-255
135510|code|CBZ             R0, loc_21194|232-177
135512|code|LDR             R0, =(dword_34848 - 0x21164)|25-72
135514|code|ADD             R3, SP, #0x38+var_18|8-171
135516|code|ADD             R1, SP, #0x38+inbuf; inbuf|5-169
135518|code|STR             R3, [SP,#0x38+outbytesleft]; outbytesleft|0-147
135520|code|ADD             R0, PC; dword_34848|120-68
135522|code|ADD             R3, SP, #0x38+outbuf; outbuf|7-171
135524|code|ADD             R2, SP, #0x38+inbytesleft; inbytesleft|6-170
135526|code|ADD             R4, SP, #0x38+var_2C|3-172
135528|code|LDR             R0, [R0,#(dword_3484C - 0x34848)]; cd|64-104
135530|code|MOVS            R6, #4|4-38
135532|code|STR             R4, [SP,#0x38+inbuf]|5-148
135534|code|ADD.W           R4, SP, #0x38+var_25|13-241-19-4
135538|code|STR             R6, [SP,#0x38+inbytesleft]|6-150
135540|code|STR             R4, [SP,#0x38+outbuf]|7-148
135542|code|MOVS            R4, #1|1-36
135544|code|STR             R4, [SP,#0x38+var_18]|8-148
135546|code|BLX             iconv|245-247-232-237
135550|code|ADDS            R3, R0, #1|67-28
135552|code|MOV             R4, R0|4-70
135554|code|BEQ             loc_2119A|10-208
135556|code|LDRB.W          R0, [SP,#0x38+var_25]|157-248-19-0
135560|code|LDR             R2, [SP,#0x38+var_14]|9-154
135562|code|LDR             R3, [R5]|43-104
135564|code|CMP             R2, R3|154-66
135566|code|BNE             loc_211B4|17-209
135568|code|ADD             SP, SP, #0x28 ; '('|10-176
135570|code|POP             {R4-R6,PC}|112-189
135572|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
135576|code|B               loc_21188|246-231
135578|code|BLX             __errno_location|245-247-222-237
135582|code|LDR             R0, [R0]; errnum|0-104
135584|code|BLX             strerror|245-247-204-234
135588|code|LDR             R1, =(aIconvWcharTUns - 0x211AA); "iconv (wchar_t -> unsigned char) error:"...|7-73
135590|code|ADD             R1, PC; "iconv (wchar_t -> unsigned char) error:"...|121-68
135592|code|MOV             R2, R0|2-70
135594|code|MOVS            R0, #7|7-32
135596|code|BL              logMessage|249-247-188-248
135600|code|MOV             R0, R4|32-70
135602|code|B               loc_21188|233-231
135604|code|BLX             __stack_chk_fail|245-247-64-236
135608|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2114A|86-51-1-0
135612|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
135616|data|DCD dword_34848 - 0x21164|228-54-1-0
135620|data|DCD aIconvWcharTUns - 0x211AA; "iconv (wchar_t -> unsigned char) error:"...|222-41-0-0
135624|code|LDR             R1, =(aWindow010lxCha+0x24 - 0x211D2); ""|9-73
135626|code|MOVS            R0, #6; category|6-32
135628|code|PUSH            {R4,LR}|16-181
135630|code|ADD             R1, PC; "" ; locale|121-68
135632|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x211D6)|8-76
135634|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
135636|code|BLX             setlocale|245-247-206-236
135640|code|CBZ             R0, loc_211E0|16-177
135642|code|BL              isPosixLocale|255-247-85-252
135646|code|CBZ             R0, loc_211E6|16-177
135648|code|LDR             R3, =(defaultCharset_ptr - 0x344A0)|5-75
135650|code|LDR             R0, [R4,R3]; defaultCharset_ptr ...|224-88
135652|code|POP             {R4,PC}|16-189
135654|code|MOVS            R0, #0xE; item|14-32
135656|code|POP.W           {R4,LR}|189-232-16-64
135660|code|B.W             j_nl_langinfo|245-247-214-186
135664|data|DCD aWindow010lxCha+0x24 - 0x211D2; ""|170-8-0-0
135668|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x211D6|202-50-1-0
135672|data|DCD defaultCharset_ptr - 0x344A0|112-3-0-0
135676|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x21204)|51-75
135678|code|LDR             R2, =(__stack_chk_guard_ptr - 0x344A0)|52-74
135680|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
135682|code|PUSH.W          {R4-R8,LR}|45-233-240-65
135686|code|SUB             SP, SP, #0x28|138-176
135688|code|LDR             R7, [R3,R2]; __stack_chk_guard|159-88
135690|code|MOV             R8, R0|128-70
135692|code|ADD             R6, SP, #0x40+var_3C|1-174
135694|code|ADD             R5, SP, #0x40+var_1C|9-173
135696|code|LDR             R3, [R7]|59-104
135698|code|MOV             R4, R6|52-70
135700|code|STR             R3, [SP,#0x40+var_1C]|9-147
135702|code|BL              getWcharCharset|255-247-65-254
135706|code|LDR             R3, =(dword_34848 - 0x21226)|46-75
135708|code|MOV             R1, R8; fromcode|65-70
135710|code|STR.W           R8, [SP,#0x40+var_38]|205-248-8-128
135714|code|ADD             R3, PC; dword_34848|123-68
135716|code|STR.W           R8, [SP,#0x40+var_24]|205-248-28-128
135720|code|ADD.W           LR, R3, #4|3-241-4-14
135724|code|STR             R3, [SP,#0x40+var_3C]|1-147
135726|code|STR.W           LR, [SP,#0x40+var_2C]|205-248-20-224
135730|code|MOV             R2, R0|2-70
135732|code|STR             R0, [SP,#0x40+var_34]|3-144
135734|code|STR             R2, [SP,#0x40+var_28]|6-146
135736|code|MOVS            R2, #0|0-34
135738|code|STR             R2, [SP,#0x40+var_30]|4-146
135740|code|STR             R2, [SP,#0x40+var_20]|8-146
135742|code|BLX             iconv_open|245-247-92-237
135746|code|STR             R0, [R4,#0xC]|224-96
135748|code|ADDS            R0, #1|1-48
135750|code|BEQ             loc_2125C|9-208
135752|code|ADDS            R4, #0x10|16-52
135754|code|CMP             R4, R5|172-66
135756|code|BCS             loc_21278|20-210
135758|code|LDR             R0, [R4,#8]; tocode|160-104
135760|code|LDR             R1, [R4,#4]; fromcode|97-104
135762|code|BLX             iconv_open|245-247-82-237
135766|code|STR             R0, [R4,#0xC]|224-96
135768|code|ADDS            R0, #1|1-48
135770|code|BNE             loc_21248|245-209
135772|code|LDR             R0, =(aIconvOpen_0 - 0x21262); "iconv_open"|30-72
135774|code|ADD             R0, PC; "iconv_open"|120-68
135776|code|BL              logSystemError|249-247-228-248
135780|code|CMP             R4, R6|180-66
135782|code|BLS             loc_21274|5-217
135784|code|SUBS            R4, #0x10|16-60
135786|code|LDR             R0, [R4,#0xC]; cd|224-104
135788|code|BLX             iconv_close|245-247-142-236
135792|code|CMP             R4, R6|180-66
135794|code|BHI             loc_21268|249-216
135796|code|MOVS            R0, #0|0-32
135798|code|B               loc_212AA|24-224
135800|code|CMP             R4, R6|180-66
135802|code|IT HI|136-191
135804|code|MOVHI.W         R8, #0|79-240-0-8
135808|code|BLS             loc_212A8|18-217
135810|code|LDR.W           R5, [R4,#-0x10]|84-248-16-92
135814|code|LDR             R0, [R5]; cd|40-104
135816|code|ADDS            R3, R0, #1|67-28
135818|code|IT EQ|8-191
135820|code|MOVEQ.W         R8, #1|79-240-1-8
135824|code|BEQ             loc_21296|1-208
135826|code|BLX             iconv_close|245-247-124-236
135830|code|LDR.W           R3, [R4,#-4]|84-248-4-60
135834|code|SUBS            R4, #0x10|16-60
135836|code|CMP             R6, R4|166-66
135838|code|STR             R3, [R5]|43-96
135840|code|BCC             loc_21282|239-211
135842|code|CMP.W           R8, #0|184-241-0-15
135846|code|BNE             loc_212B8|7-209
135848|code|MOVS            R0, #1|1-32
135850|code|LDR             R2, [SP,#0x40+var_1C]|9-154
135852|code|LDR             R3, [R7]|59-104
135854|code|CMP             R2, R3|154-66
135856|code|BNE             loc_212C8|10-209
135858|code|ADD             SP, SP, #0x28 ; '('|10-176
135860|code|POP.W           {R4-R8,PC}|189-232-240-129
135864|code|LDR             R0, =(aCharsetIconv - 0x212C2); "charset-iconv"|8-72
135866|code|MOVS            R2, #0|0-34
135868|code|LDR             R1, =(sub_2108C+1 - 0x212C4)|8-73
135870|code|ADD             R0, PC; "charset-iconv"|120-68
135872|code|ADD             R1, PC; sub_2108C|121-68
135874|code|BL              onProgramExit|247-247-191-249
135878|code|B               loc_212A8|239-231
135880|code|BLX             __stack_chk_fail|245-247-182-235
135884|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x21204|156-50-1-0
135888|data|DCD __stack_chk_guard_ptr - 0x344A0|20-3-0-0
135892|data|DCD dword_34848 - 0x21226|34-54-1-0
135896|data|DCD aIconvOpen_0 - 0x21262; "iconv_open"|82-41-0-0
135900|data|DCD aCharsetIconv - 0x212C2; "charset-iconv"|254-40-0-0
135904|data|DCD sub_2108C+1 - 0x212C4|201-253-255-255
135908|data|ALIGN 8|0-0-0-0
135912|code|CMP             R1, #0|0-41
135914|code|BEQ.W           loc_2156A|0-240-62-129
135918|code|EOR.W           R12, R0, R1|128-234-1-12
135922|code|IT MI|72-191
135924|code|NEGMI           R1, R1|73-66
135926|code|SUBS            R2, R1, #1|74-30
135928|code|BEQ.W           loc_2153A|0-240-31-129
135932|code|MOVS            R3, R0|3-0
135934|code|IT MI|72-191
135936|code|NEGMI           R3, R0|67-66
135938|code|CMP             R3, R1|139-66
135940|code|BLS.W           loc_21544|64-242-30-129
135944|code|TST             R1, R2|17-66
135946|code|BEQ.W           loc_21554|0-240-35-129
135950|code|CLZ.W           R2, R3|179-250-131-242
135954|code|CLZ.W           R0, R1|177-250-129-240
135958|code|SUB.W           R2, R0, R2|160-235-2-2
135962|code|RSB.W           R2, R2, #0x1F|194-241-31-2
135966|code|ADR             R0, loc_21330|4-160
135968|code|ADD.W           R2, R0, R2,LSL#4|0-235-2-18
135972|code|MOV.W           R0, #0|79-240-0-0
135976|code|MOV             PC, R2|151-70
135978|data|ALIGN 4|0-191
135980|code|NOP.W|175-243-0-128
135984|code|CMP.W           R3, R1,LSL#31|179-235-193-127
135988|code|NOP|0-191
135990|code|ADC.W           R0, R0, R0|64-235-0-0
135994|code|IT CS|40-191
135996|code|SUBCS.W         R3, R3, R1,LSL#31|163-235-193-115
136000|code|CMP.W           R3, R1,LSL#30|179-235-129-127
136004|code|NOP|0-191
136006|code|ADC.W           R0, R0, R0|64-235-0-0
136010|code|IT CS|40-191
136012|code|SUBCS.W         R3, R3, R1,LSL#30|163-235-129-115
136016|code|CMP.W           R3, R1,LSL#29|179-235-65-127
136020|code|NOP|0-191
136022|code|ADC.W           R0, R0, R0|64-235-0-0
136026|code|IT CS|40-191
136028|code|SUBCS.W         R3, R3, R1,LSL#29|163-235-65-115
136032|code|CMP.W           R3, R1,LSL#28|179-235-1-127
136036|code|NOP|0-191
136038|code|ADC.W           R0, R0, R0|64-235-0-0
136042|code|IT CS|40-191
136044|code|SUBCS.W         R3, R3, R1,LSL#28|163-235-1-115
136048|code|CMP.W           R3, R1,LSL#27|179-235-193-111
136052|code|NOP|0-191
136054|code|ADC.W           R0, R0, R0|64-235-0-0
136058|code|IT CS|40-191
136060|code|SUBCS.W         R3, R3, R1,LSL#27|163-235-193-99
136064|code|CMP.W           R3, R1,LSL#26|179-235-129-111
136068|code|NOP|0-191
136070|code|ADC.W           R0, R0, R0|64-235-0-0
136074|code|IT CS|40-191
136076|code|SUBCS.W         R3, R3, R1,LSL#26|163-235-129-99
136080|code|CMP.W           R3, R1,LSL#25|179-235-65-111
136084|code|NOP|0-191
136086|code|ADC.W           R0, R0, R0|64-235-0-0
136090|code|IT CS|40-191
136092|code|SUBCS.W         R3, R3, R1,LSL#25|163-235-65-99
136096|code|CMP.W           R3, R1,LSL#24|179-235-1-111
136100|code|NOP|0-191
136102|code|ADC.W           R0, R0, R0|64-235-0-0
136106|code|IT CS|40-191
136108|code|SUBCS.W         R3, R3, R1,LSL#24|163-235-1-99
136112|code|CMP.W           R3, R1,LSL#23|179-235-193-95
136116|code|NOP|0-191
136118|code|ADC.W           R0, R0, R0|64-235-0-0
136122|code|IT CS|40-191
136124|code|SUBCS.W         R3, R3, R1,LSL#23|163-235-193-83
136128|code|CMP.W           R3, R1,LSL#22|179-235-129-95
136132|code|NOP|0-191
136134|code|ADC.W           R0, R0, R0|64-235-0-0
136138|code|IT CS|40-191
136140|code|SUBCS.W         R3, R3, R1,LSL#22|163-235-129-83
136144|code|CMP.W           R3, R1,LSL#21|179-235-65-95
136148|code|NOP|0-191
136150|code|ADC.W           R0, R0, R0|64-235-0-0
136154|code|IT CS|40-191
136156|code|SUBCS.W         R3, R3, R1,LSL#21|163-235-65-83
136160|code|CMP.W           R3, R1,LSL#20|179-235-1-95
136164|code|NOP|0-191
136166|code|ADC.W           R0, R0, R0|64-235-0-0
136170|code|IT CS|40-191
136172|code|SUBCS.W         R3, R3, R1,LSL#20|163-235-1-83
136176|code|CMP.W           R3, R1,LSL#19|179-235-193-79
136180|code|NOP|0-191
136182|code|ADC.W           R0, R0, R0|64-235-0-0
136186|code|IT CS|40-191
136188|code|SUBCS.W         R3, R3, R1,LSL#19|163-235-193-67
136192|code|CMP.W           R3, R1,LSL#18|179-235-129-79
136196|code|NOP|0-191
136198|code|ADC.W           R0, R0, R0|64-235-0-0
136202|code|IT CS|40-191
136204|code|SUBCS.W         R3, R3, R1,LSL#18|163-235-129-67
136208|code|CMP.W           R3, R1,LSL#17|179-235-65-79
136212|code|NOP|0-191
136214|code|ADC.W           R0, R0, R0|64-235-0-0
136218|code|IT CS|40-191
136220|code|SUBCS.W         R3, R3, R1,LSL#17|163-235-65-67
136224|code|CMP.W           R3, R1,LSL#16|179-235-1-79
136228|code|NOP|0-191
136230|code|ADC.W           R0, R0, R0|64-235-0-0
136234|code|IT CS|40-191
136236|code|SUBCS.W         R3, R3, R1,LSL#16|163-235-1-67
136240|code|CMP.W           R3, R1,LSL#15|179-235-193-63
136244|code|NOP|0-191
136246|code|ADC.W           R0, R0, R0|64-235-0-0
136250|code|IT CS|40-191
136252|code|SUBCS.W         R3, R3, R1,LSL#15|163-235-193-51
136256|code|CMP.W           R3, R1,LSL#14|179-235-129-63
136260|code|NOP|0-191
136262|code|ADC.W           R0, R0, R0|64-235-0-0
136266|code|IT CS|40-191
136268|code|SUBCS.W         R3, R3, R1,LSL#14|163-235-129-51
136272|code|CMP.W           R3, R1,LSL#13|179-235-65-63
136276|code|NOP|0-191
136278|code|ADC.W           R0, R0, R0|64-235-0-0
136282|code|IT CS|40-191
136284|code|SUBCS.W         R3, R3, R1,LSL#13|163-235-65-51
136288|code|CMP.W           R3, R1,LSL#12|179-235-1-63
136292|code|NOP|0-191
136294|code|ADC.W           R0, R0, R0|64-235-0-0
136298|code|IT CS|40-191
136300|code|SUBCS.W         R3, R3, R1,LSL#12|163-235-1-51
136304|code|CMP.W           R3, R1,LSL#11|179-235-193-47
136308|code|NOP|0-191
136310|code|ADC.W           R0, R0, R0|64-235-0-0
136314|code|IT CS|40-191
136316|code|SUBCS.W         R3, R3, R1,LSL#11|163-235-193-35
136320|code|CMP.W           R3, R1,LSL#10|179-235-129-47
136324|code|NOP|0-191
136326|code|ADC.W           R0, R0, R0|64-235-0-0
136330|code|IT CS|40-191
136332|code|SUBCS.W         R3, R3, R1,LSL#10|163-235-129-35
136336|code|CMP.W           R3, R1,LSL#9|179-235-65-47
136340|code|NOP|0-191
136342|code|ADC.W           R0, R0, R0|64-235-0-0
136346|code|IT CS|40-191
136348|code|SUBCS.W         R3, R3, R1,LSL#9|163-235-65-35
136352|code|CMP.W           R3, R1,LSL#8|179-235-1-47
136356|code|NOP|0-191
136358|code|ADC.W           R0, R0, R0|64-235-0-0
136362|code|IT CS|40-191
136364|code|SUBCS.W         R3, R3, R1,LSL#8|163-235-1-35
136368|code|CMP.W           R3, R1,LSL#7|179-235-193-31
136372|code|NOP|0-191
136374|code|ADC.W           R0, R0, R0|64-235-0-0
136378|code|IT CS|40-191
136380|code|SUBCS.W         R3, R3, R1,LSL#7|163-235-193-19
136384|code|CMP.W           R3, R1,LSL#6|179-235-129-31
136388|code|NOP|0-191
136390|code|ADC.W           R0, R0, R0|64-235-0-0
136394|code|IT CS|40-191
136396|code|SUBCS.W         R3, R3, R1,LSL#6|163-235-129-19
136400|code|CMP.W           R3, R1,LSL#5|179-235-65-31
136404|code|NOP|0-191
136406|code|ADC.W           R0, R0, R0|64-235-0-0
136410|code|IT CS|40-191
136412|code|SUBCS.W         R3, R3, R1,LSL#5|163-235-65-19
136416|code|CMP.W           R3, R1,LSL#4|179-235-1-31
136420|code|NOP|0-191
136422|code|ADC.W           R0, R0, R0|64-235-0-0
136426|code|IT CS|40-191
136428|code|SUBCS.W         R3, R3, R1,LSL#4|163-235-1-19
136432|code|CMP.W           R3, R1,LSL#3|179-235-193-15
136436|code|NOP|0-191
136438|code|ADC.W           R0, R0, R0|64-235-0-0
136442|code|IT CS|40-191
136444|code|SUBCS.W         R3, R3, R1,LSL#3|163-235-193-3
136448|code|CMP.W           R3, R1,LSL#2|179-235-129-15
136452|code|NOP|0-191
136454|code|ADC.W           R0, R0, R0|64-235-0-0
136458|code|IT CS|40-191
136460|code|SUBCS.W         R3, R3, R1,LSL#2|163-235-129-3
136464|code|CMP.W           R3, R1,LSL#1|179-235-65-15
136468|code|NOP|0-191
136470|code|ADC.W           R0, R0, R0|64-235-0-0
136474|code|IT CS|40-191
136476|code|SUBCS.W         R3, R3, R1,LSL#1|163-235-65-3
136480|code|CMP.W           R3, R1|179-235-1-15
136484|code|NOP|0-191
136486|code|ADC.W           R0, R0, R0|64-235-0-0
136490|code|IT CS|40-191
136492|code|SUBCS.W         R3, R3, R1|163-235-1-3
136496|code|CMP.W           R12, #0|188-241-0-15
136500|code|IT MI|72-191
136502|code|NEGMI           R0, R0|64-66
136504|code|BX              LR|112-71
136506|code|TEQ.W           R12, R0|156-234-0-15
136510|code|IT MI|72-191
136512|code|NEGMI           R0, R0|64-66
136514|code|BX              LR|112-71
136516|code|IT CC|56-191
136518|code|MOVCC           R0, #0|0-32
136520|code|ITT EQ|4-191
136522|code|MOVEQ.W         R0, R12,ASR#31|79-234-236-112
136526|code|ORREQ.W         R0, R0, #1|64-240-1-0
136530|code|BX              LR|112-71
136532|code|CLZ.W           R2, R1|177-250-129-242
136536|code|RSB.W           R2, R2, #0x1F|194-241-31-2
136540|code|CMP.W           R12, #0|188-241-0-15
136544|code|LSR.W           R0, R3, R2|35-250-2-240
136548|code|IT MI|72-191
136550|code|NEGMI           R0, R0|64-66
136552|code|BX              LR|112-71
136554|code|CMP             R0, #0|0-40
136556|code|IT GT|200-191
136558|code|MOVGT           R0, #0x7FFFFFFF|111-240-0-64
136562|code|IT LT|184-191
136564|code|MOVLT.W         R0, #0x80000000|79-240-0-64
136568|code|B.W             loc_21598|0-240-14-184
136572|code|CMP             R1, #0|0-41
136574|code|BEQ             loc_2156A|244-208
136576|code|PUSH.W          {R0,R1,LR}|45-233-3-64
136580|code|BL              loc_212EE|255-247-179-254
136584|code|POP.W           {R1,R2,LR}|189-232-6-64
136588|code|MUL.W           R3, R2, R0|2-251-0-243
136592|code|SUB.W           R1, R1, R3|161-235-3-1
136596|code|BX              LR|112-71
136598|data|ALIGN 4|0-191
136600|code|PUSH            {R1,LR}|2-181
136602|code|MOV.W           R0, #8; sig|79-240-8-0
136606|code|BLX             raise|245-247-186-234
136610|code|POP             {R1,PC}|2-189
136612|code|PUSH.W          {R3-R9,LR}|45-233-248-67
136616|code|MOV             R7, R0|7-70
136618|code|LDR             R6, =(off_34004 - 0x215B6)|12-78
136620|code|MOV             R8, R1|136-70
136622|code|LDR             R5, =(off_34000 - 0x215BC)|12-77
136624|code|MOV             R9, R2|145-70
136626|code|ADD             R6, PC; off_34004|126-68
136628|code|BLX             .init_proc|244-247-224-239
136632|code|ADD             R5, PC; off_34000|125-68
136634|code|SUBS            R6, R6, R5|118-27
136636|code|ASRS            R6, R6, #2|182-16
136638|code|BEQ             locret_215D6|10-208
136640|code|SUBS            R5, #4|4-61
136642|code|MOVS            R4, #0|0-36
136644|code|ADDS            R4, #1|1-52
136646|code|LDR.W           R3, [R5,#4]!|85-248-4-63
136650|code|MOV             R0, R7|56-70
136652|code|MOV             R1, R8|65-70
136654|code|MOV             R2, R9|74-70
136656|code|BLX             R3|152-71
136658|code|CMP             R4, R6|180-66
136660|code|BNE             loc_215C4|246-209
136662|code|POP.W           {R3-R9,PC}|189-232-248-131
136666|data|ALIGN 4|0-191
136668|data|DCD off_34004 - 0x215B6|78-42-1-0
136672|data|DCD off_34000 - 0x215BC|68-42-1-0
136676|code|BX              LR|112-71
136678|data|ALIGN 4|0-191
136680|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x215F0)|5-75
136682|code|LDR             R2, =(off_347C8 - 0x344A0)|6-74
136684|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
136686|code|LDR             R3, [R3,R2]; dword_34828|155-88
136688|code|CBZ             R3, loc_215FA|27-177
136690|code|LDR             R2, [R3]; lpdso_handle|26-104
136692|code|MOVS            R1, #0; obj|0-33
136694|code|B.W             j___cxa_atexit|245-247-73-186
136698|code|MOV             R2, R3|26-70
136700|code|B               loc_215F4|250-231
136702|data|ALIGN 0x10|0-191
136704|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x215F0|176-46-1-0
136708|data|DCD off_347C8 - 0x344A0|40-3-0-0
136712|code|PUSH            {R3,LR}; _fini|8-64-45-233
136716|code|POP             {R3,PC}|8-128-189-232
212992|data|DCD sub_16FA0+1|161-111-1-0
212996|data|DCD sub_16F88+1|137-111-1-0
213000|data|DCD 0|0-0-0-0
213004|data|DCD off_34028; "brlapi"|40-64-3-0
213032|data|DCD aBrlapi; "brlapi"|128-27-2-0
213036|data|DCD aHostPort; "[host][:port]"|136-27-2-0
213200|data|DCD aIngio; "ingio"|20-34-2-0
213204|data|DCD aGenericInput; "Generic Input"|28-34-2-0
213208|data|DCD aGenericInput_0; "generic input"|44-34-2-0
213212|data|DCD aInpkts; "inpkts"|60-34-2-0
213216|data|DCD aInputPackets; "Input Packets"|68-34-2-0
213220|data|DCD aInputPacket; "input packet"|84-34-2-0
213224|data|DCD aOutpkts; "outpkts"|100-34-2-0
213228|data|DCD aOutputPackets; "Output Packets"|108-34-2-0
213232|data|DCD aOutputPacket; "output packet"|124-34-2-0
213236|data|DCD aBrlkeys; "brlkeys"|140-34-2-0
213240|data|DCD aBrailleKeyEven; "Braille Key Events"|148-34-2-0
213244|data|DCD aBrailleKey; "braille key"|168-34-2-0
213248|data|DCD aKbdkeys; "kbdkeys"|180-34-2-0
213252|data|DCD aKeyboardKeyEve; "Keyboard Key Events"|188-34-2-0
213256|data|DCD aKeyboardKey; "keyboard key"|208-34-2-0
213260|data|DCD aCsrtrk; "csrtrk"|224-34-2-0
213264|data|DCD aCursorTracking; "Cursor Tracking"|232-34-2-0
213268|data|DCD aCursorTracking_0; "cursor tracking"|248-34-2-0
213272|data|DCD aCsrrtg; "csrrtg"|8-35-2-0
213276|data|DCD aCursorRouting; "Cursor Routing"|16-35-2-0
213280|data|DCD aCursorRouting_0; "cursor routing"|32-35-2-0
213284|data|DCD aUpdate; "update"|48-35-2-0
213288|data|DCD aUpdateEvents; "Update Events"|56-35-2-0
213292|data|DCD aUpdate; "update"|48-35-2-0
213296|data|DCD aSpeech; "speech"|72-35-2-0
213300|data|DCD aSpeechEvents; "Speech Events"|80-35-2-0
213304|data|DCD aSpeech; "speech"|72-35-2-0
213308|data|DCD aAsync; "async"|96-35-2-0
213312|data|DCD aAsyncEvents; "Async Events"|104-35-2-0
213316|data|DCD aAsync; "async"|96-35-2-0
213320|data|DCD aServer; "server"|120-35-2-0
213324|data|DCD aServerEvents; "Server Events"|128-35-2-0
213328|data|DCD aServer; "server"|120-35-2-0
213332|data|DCD aSerial; "serial"|144-35-2-0
213336|data|DCD aSerialIO; "Serial I/O"|152-35-2-0
213340|data|DCD aSerial; "serial"|144-35-2-0
213344|data|DCD aUsb; "usb"|164-35-2-0
213348|data|DCD aUsbIO; "USB I/O"|168-35-2-0
213352|data|DCD aUsb_0; "USB"|176-35-2-0
213356|data|DCD aBluetooth; "bluetooth"|180-35-2-0
213360|data|DCD aBluetoothIO; "Bluetooth I/O"|192-35-2-0
213364|data|DCD aBluetooth_0; "Bluetooth"|208-35-2-0
213368|data|DCD aBrldrv; "brldrv"|220-35-2-0
213372|data|DCD aBrailleDriverE; "Braille Driver Events"|228-35-2-0
213376|data|DCD aBrailleDriver; "braille driver"|252-35-2-0
213380|data|DCD aSpkdrv; "spkdrv"|12-36-2-0
213384|data|DCD aSpeechDriverEv; "Speech Driver Events"|20-36-2-0
213388|data|DCD aSpeechDriver; "speech driver"|44-36-2-0
213392|data|DCD aScrdrv; "scrdrv"|60-36-2-0
213396|data|DCD aScreenDriverEv; "Screen Driver Events"|68-36-2-0
213400|data|DCD aScreenDriver; "screen driver"|92-36-2-0
213404|data|DCD aEmergency; "emergency"|108-36-2-0
213408|data|DCD aAlert; "alert"|120-36-2-0
213412|data|DCD aCritical; "critical"|128-36-2-0
213416|data|DCD aError; "error"|140-36-2-0
213420|data|DCD aWarning; "warning"|148-36-2-0
213424|data|DCD aNotice; "notice"|156-36-2-0
213428|data|DCD aInformation; "information"|164-36-2-0
213432|data|DCD aDebug; "debug"|176-36-2-0
213436|data|DCD aDtdevroot; "DTDEVROOT"|248-38-2-0
213440|data|DCD aUtdevroot; "UTDEVROOT"|180-39-2-0
213444|data|ALIGN 8|0-0-0-0
213448|data|DCD sub_1C658+1|89-198-1-0
213452|data|DCD aAlarmHandled; "alarm handled"|20-41-2-0
213456|data|DCD sub_1C644+1|69-198-1-0
213460|data|DCD aTaskPerformed; "task performed"|36-41-2-0
213464|data|DCD sub_1C638+1|57-198-1-0
213468|data|DCD aIOOperationHan; "I/O operation handled"|52-41-2-0
213480|data|DCD aInputTransferr; "input transferred"|192-41-2-0
213484|data|DCD sub_1CC28+1|41-204-1-0
213620|data|DCD aUinput; "uinput"|160-53-2-0
213624|data|DCD aInputUinput; "input/uinput"|164-54-2-0
213628|data|ALIGN 0x10|0-0-0-0
213632|data|DCD dword_34848|72-72-3-0
213636|data|DCD dword_3484C|76-72-3-0
213640|data|DCD aI; "i"|128-32-2-0
213644|data|DCD processIncludeOperands+1|37-7-2-0
213748|data|DCD aXt00; "xt00"|180-54-2-0
213752|data|DCD linuxKeyMap_xt00|84-51-2-0
213756|data|DCD 0x100|0-1-0-0
213760|data|DCD aXte0; "xtE0"|188-54-2-0
213764|data|DCD linuxKeyMap_xtE0|84-50-2-0
213844|data|DCD getBaseCharacter+1|197-7-2-0
213848|data|DCD getTransliteratedCharacter+1|29-8-2-0
213852|data|ALIGN 0x10|0-0-0-0
213856|data|Elf32_Dyn <1, <1>>; DT_NEEDED libbrlapi.so.0.6|1-0-0-0-1-0-0-0
213864|data|Elf32_Dyn <1, <0x140>>; DT_NEEDED libXtst.so.6|1-0-0-0-64-1-0-0
213872|data|Elf32_Dyn <1, <0x182>>; DT_NEEDED libXext.so.6|1-0-0-0-130-1-0-0
213880|data|Elf32_Dyn <1, <0x196>>; DT_NEEDED libX11.so.6|1-0-0-0-150-1-0-0
213888|data|Elf32_Dyn <1, <0x2AC>>; DT_NEEDED libicuuc.so.52|1-0-0-0-172-2-0-0
213896|data|Elf32_Dyn <1, <0x2F9>>; DT_NEEDED libicudata.so.52|1-0-0-0-249-2-0-0
213904|data|Elf32_Dyn <1, <0x30A>>; DT_NEEDED libbluetooth.so.3|1-0-0-0-10-3-0-0
213912|data|Elf32_Dyn <1, <0x31C>>; DT_NEEDED libdl.so.2|1-0-0-0-28-3-0-0
213920|data|Elf32_Dyn <1, <0x34B>>; DT_NEEDED libgpm.so.2|1-0-0-0-75-3-0-0
213928|data|Elf32_Dyn <1, <0x357>>; DT_NEEDED libpthread.so.0|1-0-0-0-87-3-0-0
213936|data|Elf32_Dyn <1, <0x55C>>; DT_NEEDED libc.so.6|1-0-0-0-92-5-0-0
213944|data|Elf32_Dyn <1, <0x965>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-101-9-0-0
213952|data|Elf32_Dyn <0xC, <0x16578>>; DT_INIT|12-0-0-0-120-101-1-0
213960|data|Elf32_Dyn <0xD, <0x21608>>; DT_FINI|13-0-0-0-8-22-2-0
213968|data|Elf32_Dyn <0x19, <0x34000>>; DT_INIT_ARRAY|25-0-0-0-0-64-3-0
213976|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
213984|data|Elf32_Dyn <0x1A, <0x34004>>; DT_FINI_ARRAY|26-0-0-0-4-64-3-0
213992|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
214000|data|Elf32_Dyn <0x6FFFFEF5, <0x10194>>; DT_GNU_HASH|245-254-255-111-148-1-1-0
214008|data|Elf32_Dyn <5, <0x13840>>; DT_STRTAB|5-0-0-0-64-56-1-0
214016|data|Elf32_Dyn <6, <0x11480>>; DT_SYMTAB|6-0-0-0-128-20-1-0
214024|data|Elf32_Dyn <0xA, <0x21DF>>; DT_STRSZ|10-0-0-0-223-33-0-0
214032|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
214040|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
214048|data|Elf32_Dyn <3, <0x344A0>>; DT_PLTGOT|3-0-0-0-160-68-3-0
214056|data|Elf32_Dyn <2, <0x5D8>>; DT_PLTRELSZ|2-0-0-0-216-5-0-0
214064|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
214072|data|Elf32_Dyn <0x17, <0x15FA0>>; DT_JMPREL|23-0-0-0-160-95-1-0
214080|data|Elf32_Dyn <0x11, <0x15F58>>; DT_REL|17-0-0-0-88-95-1-0
214088|data|Elf32_Dyn <0x12, <0x48>>; DT_RELSZ|18-0-0-0-72-0-0-0
214096|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
214104|data|Elf32_Dyn <0x6FFFFFFE, <0x15E98>>; DT_VERNEED|254-255-255-111-152-94-1-0
214112|data|Elf32_Dyn <0x6FFFFFFF, <4>>; DT_VERNEEDNUM|255-255-255-111-4-0-0-0
214120|data|Elf32_Dyn <0x6FFFFFF0, <0x15A20>>; DT_VERSYM|240-255-255-111-32-90-1-0
214128|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
214176|data|DCD stru_34360|96-67-3-0
214180|data|DCD 0|0-0-0-0
214184|data|DCD 0|0-0-0-0
214188|data|DCD __imp_signal|12-138-3-0
214192|data|DCD __imp_chdir|144-137-3-0
214196|data|DCD __imp_pthread_mutex_lock|80-138-3-0
214200|data|DCD __imp_localtime_r|112-138-3-0
214204|data|DCD __imp_wcslen|24-138-3-0
214208|data|DCD __imp_towlower|72-139-3-0
214212|data|DCD __imp_ftruncate|16-138-3-0
214216|data|DCD __imp_iswspace|212-137-3-0
214220|data|DCD __imp_getpid|220-139-3-0
214224|data|DCD __imp___memcpy_chk|236-138-3-0
214228|data|DCD __imp_mbrtowc|212-139-3-0
214232|data|DCD __imp_pthread_rwlock_destroy|64-138-3-0
214236|data|DCD __imp_dlerror|120-139-3-0
214240|data|DCD __imp_gettimeofday|200-138-3-0
214244|data|DCD __imp_brlapi_ignoreKeys|28-139-3-0
214248|data|DCD __imp_XTestQueryExtension|244-138-3-0
214252|data|DCD __imp_strcasecmp|148-138-3-0
214256|data|DCD __imp_fdopen|20-139-3-0
214260|data|DCD __imp_strtol|128-137-3-0
214264|data|DCD __imp_free|32-138-3-0
214268|data|DCD __imp_XGetWindowProperty|92-139-3-0
214272|data|DCD __imp_dladdr|216-139-3-0
214276|data|DCD __imp_XSetErrorHandler|132-137-3-0
214280|data|DCD __imp_brlapi_enterTtyModeWithPath|0-138-3-0
214284|data|DCD __imp_pthread_setname_np|136-139-3-0
214288|data|DCD __imp_qsort|148-139-3-0
214292|data|DCD __imp_strncmp|112-137-3-0
214296|data|DCD __imp___open_2|28-138-3-0
214300|data|DCD __imp_XQueryTree|80-137-3-0
214304|data|DCD __imp_XkbLibraryVersion|184-138-3-0
214308|data|DCD __imp_u_getIntPropertyValue_52|200-137-3-0
214312|data|DCD __imp_brlapi_readKey|64-137-3-0
214316|data|DCD __imp_brlapi_openConnection|232-138-3-0
214320|data|DCD __imp_exit|168-137-3-0
214324|data|DCD __imp_strerror|160-139-3-0
214328|data|DCD __imp___xmknod|168-139-3-0
214332|data|DCD __imp___vsnprintf_chk|176-137-3-0
214336|data|DCD __imp_dlclose|68-138-3-0
214340|data|DCD __imp_pthread_getname_np|140-139-3-0
214344|data|DCD __imp_feof|144-139-3-0
214348|data|DCD __imp_strtok|124-137-3-0
214352|data|DCD __imp_perror|220-138-3-0
214356|data|DCD __imp_nl_langinfo|4-138-3-0
214360|data|DCD __imp_wmemcpy|32-139-3-0
214364|data|DCD __imp_XKeysymToKeycode|192-138-3-0
214368|data|DCD __imp_sigfillset|64-139-3-0
214372|data|DCD __imp_XSelectInput|232-139-3-0
214376|data|DCD __imp_textdomain|80-139-3-0
214380|data|DCD __imp_readlink|44-138-3-0
214384|data|DCD __imp___fprintf_chk|180-137-3-0
214388|data|DCD __imp_brlapi_acceptKeys|76-139-3-0
214392|data|DCD __imp_strtoul|172-138-3-0
214396|data|DCD __imp_nanosleep|88-137-3-0
214400|data|DCD __imp_strftime|100-137-3-0
214404|data|DCD __imp_memset|84-138-3-0
214408|data|DCD __imp_pthread_self|240-138-3-0
214412|data|DCD __imp_closelog|172-137-3-0
214416|data|DCD __imp_recv|132-139-3-0
214420|data|DCD __imp_fcntl|204-138-3-0
214424|data|DCD __imp_pthread_sigmask|108-137-3-0
214428|data|DCD __imp_pthread_rwlock_rdlock|188-137-3-0
214432|data|DCD __imp_XInternAtom|208-137-3-0
214436|data|DCD __imp_snprintf|84-137-3-0
214440|data|DCD __imp___strdup|240-137-3-0
214444|data|DCD __imp_sigaddset|204-139-3-0
214448|data|DCD __imp_close|12-139-3-0
214452|data|DCD __imp_XkbLockModifiers|248-137-3-0
214456|data|DCD __imp_wmemcmp|120-138-3-0
214460|data|DCD __imp_fopen|164-138-3-0
214464|data|DCD __imp_read|252-138-3-0
214468|data|DCD __imp_wmemchr|148-137-3-0
214472|data|DCD __imp_abort|56-138-3-0
214476|data|DCD __imp_pthread_once|236-139-3-0
214480|data|DCD __imp_poll|8-138-3-0
214484|data|DCD __imp___ctype_toupper_loc|140-138-3-0
214488|data|DCD __imp_memmove|212-138-3-0
214492|data|DCD __imp_XkbQueryExtension|244-139-3-0
214496|data|DCD __imp_strpbrk|220-137-3-0
214500|data|DCD __imp_XPending|224-139-3-0
214504|data|DCD __imp_dlopen|100-139-3-0
214508|data|DCD __imp_brlapi_writeText|128-139-3-0
214512|data|DCD __imp___libc_current_sigrtmin|8-140-3-0
214516|data|DCD __imp_kill|176-139-3-0
214520|data|DCD __imp_ioctl|72-137-3-0
214524|data|DCD __imp_clock_gettime|84-139-3-0
214528|data|DCD __imp_realloc|228-139-3-0
214532|data|DCD __imp_strcpy|40-139-3-0
214536|data|DCD __imp_strtod|120-137-3-0
214540|data|DCD __imp_open|0-140-3-0
214544|data|DCD __imp_waitpid|140-137-3-0
214548|data|DCD __imp_pthread_getspecific|196-138-3-0
214552|data|DCD __imp_fileno|152-138-3-0
214556|data|DCD __imp_pthread_rwlock_unlock|52-138-3-0
214560|data|DCD __imp_XConnectionNumber|16-139-3-0
214564|data|DCD __imp___syslog_chk|124-139-3-0
214568|data|DCD __imp_pthread_rwlock_wrlock|160-137-3-0
214572|data|DCD __imp___stack_chk_fail|40-138-3-0
214576|data|DCD __imp_pthread_rwlock_tryrdlock|172-139-3-0
214580|data|DCD __imp_fork|192-139-3-0
214584|data|DCD __imp_access|24-140-3-0
214588|data|DCD __imp_sigdelset|88-139-3-0
214592|data|DCD __imp_dcgettext|248-139-3-0
214596|data|DCD __imp_mkdir|136-138-3-0
214600|data|DCD __imp___cxa_atexit|36-139-3-0
214604|data|DCD __imp_XRefreshKeyboardMapping|244-137-3-0
214608|data|DCD __imp_XTestFakeKeyEvent|116-137-3-0
214612|data|DCD __imp_XFree|224-137-3-0
214616|data|DCD __imp_strncasecmp|184-137-3-0
214620|data|DCD __imp_XkbLookupKeySym|112-139-3-0
214624|data|DCD __imp_brlapi_setFocus|208-139-3-0
214628|data|DCD __imp_pthread_key_create|96-139-3-0
214632|data|DCD __imp_getopt_long|224-138-3-0
214636|data|DCD __imp_select|188-138-3-0
214640|data|DCD __imp_lseek|180-139-3-0
214644|data|DCD __imp_raise|240-139-3-0
214648|data|DCD __imp___ctype_b_loc|252-139-3-0
214652|data|DCD __imp_brlapi_ignoreKeyRanges|28-140-3-0
214656|data|DCD __imp_bindtextdomain|196-139-3-0
214660|data|DCD __imp_sigaction|76-137-3-0
214664|data|DCD __imp_XOpenDisplay|92-137-3-0
214668|data|DCD __imp_calloc|156-138-3-0
214672|data|DCD __imp___vfprintf_chk|216-138-3-0
214676|data|DCD __imp_setlocale|24-139-3-0
214680|data|DCD __imp_ferror|4-139-3-0
214684|data|DCD __imp_iconv_close|228-138-3-0
214688|data|DCD __imp_XNextEvent|232-137-3-0
214692|data|DCD __imp_fgets|52-139-3-0
214696|data|DCD __imp_XGetErrorText|188-139-3-0
214700|data|DCD __imp___fxstat|132-138-3-0
214704|data|DCD __imp_u_charFromName_52|92-138-3-0
214708|data|DCD __imp_flockfile|72-138-3-0
214712|data|DCD __imp_fputc|184-139-3-0
214716|data|DCD __imp_fwrite|108-138-3-0
214720|data|DCD __imp_memcpy|56-139-3-0
214724|data|DCD __imp_unorm_normalize_52|100-138-3-0
214728|data|DCD __imp_malloc|116-138-3-0
214732|data|DCD __imp_strlen|116-139-3-0
214736|data|DCD __imp___snprintf_chk|152-137-3-0
214740|data|DCD __imp_ioperm|248-138-3-0
214744|data|DCD __imp_outb|48-138-3-0
214748|data|DCD __imp_XFlush|32-140-3-0
214752|data|DCD __imp_pthread_setspecific|192-137-3-0
214756|data|DCD __imp_getcwd|0-139-3-0
214760|data|DCD __imp_fclose|216-137-3-0
214764|data|DCD __imp_XDisplayName|208-138-3-0
214768|data|DCD __imp_write|164-139-3-0
214772|data|DCD __imp_inb|68-139-3-0
214776|data|DCD __imp___fdelt_chk|156-139-3-0
214780|data|DCD __imp_sigismember|12-140-3-0
214784|data|DCD __imp_mempcpy|104-137-3-0
214788|data|DCD __imp___xstat|108-139-3-0
214792|data|DCD __imp_pthread_rwlock_trywrlock|152-139-3-0
214796|data|DCD __imp___realpath_chk|20-138-3-0
214800|data|DCD __imp_iconv_open|204-137-3-0
214804|data|DCD __imp_pthread_rwlock_init|176-138-3-0
214808|data|DCD __imp___ctype_get_mb_cur_max|180-138-3-0
214812|data|DCD __imp__exit|96-137-3-0
214816|data|DCD __imp_pthread_create|20-140-3-0
214820|data|DCD __imp_strcmp|128-138-3-0
214824|data|DCD __imp_XGetInputFocus|60-138-3-0
214828|data|DCD __imp_iconv|68-137-3-0
214832|data|DCD __imp___errno_location|124-138-3-0
214836|data|DCD __imp_send|104-138-3-0
214840|data|DCD __imp_memchr|164-137-3-0
214844|data|DCD __imp_sscanf|96-138-3-0
214848|data|DCD __imp_fflush|168-138-3-0
214852|data|DCD __imp_memcmp|144-138-3-0
214856|data|DCD __imp___libc_current_sigrtmax|160-138-3-0
214860|data|DCD __imp_sigemptyset|44-139-3-0
214864|data|DCD __imp_brlapi_getDisplaySize|104-139-3-0
214868|data|DCD __imp_strrchr|60-139-3-0
214872|data|DCD __imp_funlockfile|36-140-3-0
214876|data|DCD __imp_mktime|236-137-3-0
214880|data|DCD __imp_openlog|36-138-3-0
214884|data|DCD __imp_fputs|200-139-3-0
214888|data|DCD __imp_getenv|252-137-3-0
214892|data|DCD __imp___libc_start_main|228-137-3-0
214896|data|DCD __imp_dlsym|8-139-3-0
214900|data|DCD __imp_execvp|48-139-3-0
214904|data|DCD __imp___gmon_start__|48-140-3-0
214908|data|DCD __imp_brlapi_perror|88-138-3-0
214912|data|DCD __imp_brlapi_enterTtyMode|76-138-3-0
214916|data|DCD __imp_sigprocmask|4-140-3-0
214920|data|DCD __imp_strchr|156-137-3-0
214924|data|DCD __imp_pthread_mutex_unlock|196-137-3-0
214928|data|DCD __imp_iswcntrl|136-137-3-0
214932|data|DCD __imp_pipe|16-140-3-0
214936|data|DCD logCategoryFlags|4-137-3-0
214940|data|DCD logLevelCount; "\b"|116-33-2-0
214944|data|DCD asyncAddSignalEntry+1|85-216-1-0
214948|data|DCD categoryLogLevel|48-72-3-0
214952|data|DCD stderrLogLevel|49-72-3-0
214956|data|DCD opterr|28-137-3-0
214960|data|DCD asyncHandleAddTaskEvent+1|117-203-1-0
214964|data|DCD __stack_chk_guard|32-137-3-0
214968|data|DCD __progname|36-137-3-0
214972|data|DCD optind|40-137-3-0
214976|data|DCD asyncMonitorEventPipe+1|217-213-1-0
214980|data|DCD logCategoryName_all; "all"|124-33-2-0
214984|data|DCD dword_34828|40-72-3-0
214988|data|DCD isHexadecimalDigit+1|161-242-1-0
214992|data|DCD optarg|44-137-3-0
214996|data|DCD logLevelNames|156-65-3-0
215000|data|DCD brlDotBits|56-56-2-0
215004|data|DCD stderr|48-137-3-0
215008|data|DCD optopt|52-137-3-0
215012|data|DCD linuxKeyMapDescriptors|244-66-3-0
215016|data|DCD endProgram+1|25-131-1-0
215020|data|DCD systemLogLevel|50-72-3-0
215024|data|DCD programName|252-136-3-0
215028|data|DCD prepareHostCommandStream+1|245-240-1-0
215032|data|DCD brlDotNumbers|64-56-2-0
215036|data|DCD isOctalDigit+1|213-242-1-0
215040|data|DCD createSignalSafeThread+1|205-223-1-0
215044|data|DCD programPath|0-137-3-0
215048|data|DCD asyncHandlePendingSignal+1|45-219-1-0
215052|data|DCD stdout|56-137-3-0
215056|data|DCD defaultCharset; "ISO-8859-1"|0-59-2-0
215060|data|DCD writableDirectory|168-136-3-0
215064|data|DCD __imp___gmon_start__|48-140-3-0
215068|data|DCD asyncHandleMonitoredSignal+1|249-220-1-0
215072|data|DCD asyncDeleteSignalEntry+1|101-216-1-0
215120|data|% 1; Alternative name is '__bss_start__'|255
215121|data|ALIGN 4|255-255-255
215124|data|% 4|255-255-255-255
215128|data|% 4|255-255-255-255
215132|data|% 4|255-255-255-255
231520|data|% 4|255-255-255-255
231524|data|% 4|255-255-255-255
231528|data|% 4|255-255-255-255
231532|data|% 4|255-255-255-255
231536|data|% 4|255-255-255-255
231540|data|% 4|255-255-255-255
231544|data|% 4|255-255-255-255
231548|data|% 4|255-255-255-255
231552|data|% 4|255-255-255-255
231556|data|% 4|255-255-255-255
231560|data|% 4|255-255-255-255
231564|data|% 4|255-255-255-255
231568|data|% 4|255-255-255-255
231572|data|% 4|255-255-255-255
231576|data|% 4|255-255-255-255
231580|data|% 4|255-255-255-255
231584|data|% 4|255-255-255-255
231588|data|% 4|255-255-255-255
231592|data|% 4|255-255-255-255
231596|data|% 4|255-255-255-255
231600|data|% 4|255-255-255-255
231604|data|% 4|255-255-255-255
231608|data|% 1|255
231609|data|ALIGN 0x10|255-255-255-255-255-255-255
231616|data|% 4|255-255-255-255
231620|data|% 4|255-255-255-255
231624|data|% 4|255-255-255-255
231628|data|% 1|255
231629|data|ALIGN 0x10|255-255-255
231636|data|% 4|255-255-255-255
231664|data|% 4|255-255-255-255
231668|data|% 4|255-255-255-255
231676|data|% 4|255-255-255-255
