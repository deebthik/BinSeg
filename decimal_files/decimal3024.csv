address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|145-26-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x3240; SHT file offset|64-50-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x2A14; File offset|20-42-0-0
60|data|DCD unk_2A14; Virtual address|20-42-0-0
64|data|DCD 0x2A14; Physical address|20-42-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x2A20; Size in file image|32-42-0-0
168|data|DCD 0x2A20; Size in memory image|32-42-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x2E04; File offset|4-46-0-0
188|data|DCD off_12E04; Virtual address|4-46-1-0
192|data|DCD 0x12E04; Physical address|4-46-1-0
196|data|DCD 0x314; Size in file image|20-3-0-0
200|data|DCD 0x318; Size in memory image|24-3-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x2E10; File offset|16-46-0-0
220|data|DCD stru_12E10; Virtual address|16-46-1-0
224|data|DCD 0x12E10; Physical address|16-46-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x2E04; File offset|4-46-0-0
316|data|DCD off_12E04; Virtual address|4-46-1-0
320|data|DCD 0x12E04; Physical address|4-46-1-0
324|data|DCD 0x1FC; Size in file image|252-1-0-0
328|data|DCD 0x1FC; Size in memory image|252-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x43, 0x7D, 0xB, 0x1C, 0xCD, 0x70, 0x98, 0x50, 0x79; Desc|67-125-11-28-205-112-152-80-121-111-180-143-129-219-8-63-38-217-219-149
436|data|DCD 3|3-0-0-0
440|data|DCD 0x35|53-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x35, 0x39, 0x3E|53-0-0-0-57-0-0-0-62-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_634 - byte_634, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_634 - byte_634, dword_12E0C, 0, 3, 0, 0x14>|0-0-0-0-12-46-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aCalloc - byte_634, dword_0, 0, 0x12, 0, 0>; "calloc"|52-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
596|data|Elf32_Sym <aSgSimpleInquir - byte_634, dword_0, 0, 0x12, 0, 0>; "sg_simple_inquiry"|155-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
612|data|Elf32_Sym <aSgSetBinaryMod - byte_634, dword_0, 0, 0x12, 0, 0>; "sg_set_binary_mode"|224-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
628|data|Elf32_Sym <aCxaFinalize - byte_634, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|185-2-0-0-0-0-0-0-0-0-0-0-34-0-0-0
644|data|Elf32_Sym <aItmDeregistert - byte_634, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|18-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
660|data|Elf32_Sym <aSetScsiPtDataO - byte_634, dword_0, 0, 0x12, 0, 0>; "set_scsi_pt_data_out"|148-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
676|data|Elf32_Sym <aRead - byte_634, dword_0, 0, 0x12, 0, 0>; "read"|90-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
692|data|Elf32_Sym <aFree - byte_634, dword_0, 0, 0x12, 0, 0>; "free"|218-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aConstructScsiP - byte_634, dword_0, 0, 0x12, 0, 0>; "construct_scsi_pt_obj"|133-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aStackChkGuard - byte_634, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|243-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
740|data|Elf32_Sym <aSgCmdsCloseDev - byte_634, dword_0, 0, 0x12, 0, 0>; "sg_cmds_close_device"|169-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aSleep - byte_634, dword_0, 0, 0x12, 0, 0>; "sleep"|179-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aOptind - byte_634, dword_0, 0, 0x11, 0, 0>; "optind"|10-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
788|data|Elf32_Sym <aStackChkFail - byte_634, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|29-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
804|data|Elf32_Sym <aPerror - byte_634, dword_0, 0, 0x12, 0, 0>; "perror"|17-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aStderr - byte_634, dword_0, 0, 0x11, 0, 0>; "stderr"|132-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
836|data|Elf32_Sym <aFwrite - byte_634, dword_0, 0, 0x12, 0, 0>; "fwrite"|166-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aDstrhexerr - byte_634, dword_0, 0, 0x12, 0, 0>; "dStrHexErr"|210-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aOpen64 - byte_634, dword_0, 0, 0x12, 0, 0>; "open64"|83-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aPuts - byte_634, dword_0, 0, 0x12, 0, 0>; "puts"|24-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aLibcStartMain - byte_634, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|200-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aGmonStart - byte_634, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|46-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
932|data|Elf32_Sym <aGetoptLong - byte_634, dword_0, 0, 0x12, 0, 0>; "getopt_long"|154-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aSgGetSenseProg - byte_634, dword_0, 0, 0x12, 0, 0>; "sg_get_sense_progress_fld"|122-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aDoScsiPt - byte_634, dword_0, 0, 0x12, 0, 0>; "do_scsi_pt"|111-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aErrnoLocation - byte_634, dword_0, 0, 0x12, 0, 0>; "__errno_location"|66-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
996|data|Elf32_Sym <aDestructScsiPt - byte_634, dword_0, 0, 0x12, 0, 0>; "destruct_scsi_pt_obj"|189-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1012|data|Elf32_Sym <aMemset - byte_634, dword_0, 0, 0x12, 0, 0>; "memset"|59-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1028|data|Elf32_Sym <aPrintfChk - byte_634, dword_0, 0, 0x12, 0, 0>; "__printf_chk"|253-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aSgWarningsStrm - byte_634, dword_0, 0, 0x11, 0, 0>; "sg_warnings_strm"|51-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1060|data|Elf32_Sym <aFprintfChk - byte_634, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|95-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1076|data|Elf32_Sym <aSgLlRequestSen - byte_634, dword_0, 0, 0x12, 0, 0>; "sg_ll_request_sense"|31-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1092|data|Elf32_Sym <aSetScsiPtSense - byte_634, dword_0, 0, 0x12, 0, 0>; "set_scsi_pt_sense"|243-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1108|data|Elf32_Sym <aFputc - byte_634, dword_0, 0, 0x12, 0, 0>; "fputc"|109-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1124|data|Elf32_Sym <aSafeStrerror - byte_634, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|210-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1140|data|Elf32_Sym <aJvRegisterclas - byte_634, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1156|data|Elf32_Sym <aGetScsiPtSense - byte_634, dword_0, 0, 0x12, 0, 0>; "get_scsi_pt_sense_len"|221-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1172|data|Elf32_Sym <aSgCmdsProcessR - byte_634, dword_0, 0, 0x12, 0, 0>; "sg_cmds_process_resp"|68-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1188|data|Elf32_Sym <aSgGetCategoryS - byte_634, dword_0, 0, 0x12, 0, 0>; "sg_get_category_sense_str"|5-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1204|data|Elf32_Sym <aSgGetNum - byte_634, dword_0, 0, 0x12, 0, 0>; "sg_get_num"|107-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1220|data|Elf32_Sym <aItmRegistertmc - byte_634, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1236|data|Elf32_Sym <aSgGetPdtStr - byte_634, dword_0, 0, 0x12, 0, 0>; "sg_get_pdt_str"|118-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1252|data|Elf32_Sym <aSgCmdsOpenDevi - byte_634, dword_0, 0, 0x12, 0, 0>; "sg_cmds_open_device"|190-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1268|data|Elf32_Sym <aOptarg - byte_634, dword_0, 0, 0x11, 0, 0>; "optarg"|125-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1284|data|Elf32_Sym <aXstat64 - byte_634, dword_0, 0, 0x12, 0, 0>; "__xstat64"|115-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1300|data|Elf32_Sym <aAbort - byte_634, dword_0, 0, 0x12, 0, 0>; "abort"|46-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1316|data|Elf32_Sym <aClose - byte_634, dword_0, 0, 0x12, 0, 0>; "close"|173-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1332|data|Elf32_Sym <aSnprintfChk - byte_634, dword_0, 0, 0x12, 0, 0>; "__snprintf_chk"|139-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1348|data|Elf32_Sym <aSgGetSenseInfo - byte_634, dword_0, 0, 0x12, 0, 0>; "sg_get_sense_info_fld"|89-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1364|data|Elf32_Sym <aSetScsiPtCdb - byte_634, dword_0, 0, 0x12, 0, 0>; "set_scsi_pt_cdb"|173-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1380|data|Elf32_Sym <aBssEnd+1 - byte_634, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|52-3-0-0-28-49-1-0-0-0-0-0-16-0-24-0
1396|data|Elf32_Sym <aEdata - byte_634, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|18-3-0-0-24-49-1-0-0-0-0-0-16-0-23-0
1412|data|Elf32_Sym <aDataStart - byte_634, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|5-3-0-0-0-48-1-0-0-0-0-0-16-0-23-0
1428|data|Elf32_Sym <aEnd_0 - byte_634, _end, 0, 0x10, 0, 0x18>; "_end"|71-3-0-0-28-49-1-0-0-0-0-0-16-0-24-0
1444|data|Elf32_Sym <aBssEnd - byte_634, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|51-3-0-0-28-49-1-0-0-0-0-0-16-0-24-0
1460|data|Elf32_Sym <aLibcCsuInit - byte_634, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|92-3-0-0-205-27-0-0-64-0-0-0-18-0-13-0
1476|data|Elf32_Sym <aBssStart - byte_634, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|25-3-0-0-24-49-1-0-0-0-0-0-16-0-24-0
1492|data|Elf32_Sym <aLibcStartMain+0xD - byte_634, main+1, 0xBB8, 0x12, 0, 0xD>; "main"|213-2-0-0-217-14-0-0-184-11-0-0-18-0-13-0
1508|data|Elf32_Sym <aLibcCsuInit+0xA - byte_634, .init_proc, 0, 0x12, 0, 0xB>; "_init"|102-3-0-0-192-12-0-0-0-0-0-0-18-0-11-0
1524|data|Elf32_Sym <aLibcCsuFini - byte_634, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|76-3-0-0-13-28-0-0-2-0-0-0-18-0-13-0
1540|data|Elf32_Sym <aBssStart_0 - byte_634, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|37-3-0-0-24-49-1-0-0-0-0-0-16-0-24-0
1556|data|Elf32_Sym <aLibcCsuFini+0xA - byte_634, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|86-3-0-0-16-28-0-0-0-0-0-0-18-0-14-0
1572|data|Elf32_Sym <aEnd - byte_634, _end, 0, 0x10, 0, 0x18>; "__end__"|63-3-0-0-28-49-1-0-0-0-0-0-16-0-24-0
1588|data|DCB 0|0
1589|data|DCB "libsgutils2.so.2",0|108-105-98-115-103-117-116-105-108-115-50-46-115-111-46-50-0
1606|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1634|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1649|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1669|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1695|data|DCB "sg_get_num",0|115-103-95-103-101-116-95-110-117-109-0
1706|data|DCB "sg_get_pdt_str",0|115-103-95-103-101-116-95-112-100-116-95-115-116-114-0
1721|data|DCB "construct_scsi_pt_obj",0|99-111-110-115-116-114-117-99-116-95-115-99-115-105-95-112-116-95-111-98-106-0
1743|data|DCB "sg_simple_inquiry",0|115-103-95-115-105-109-112-108-101-95-105-110-113-117-105-114-121-0
1761|data|DCB "set_scsi_pt_cdb",0|115-101-116-95-115-99-115-105-95-112-116-95-99-100-98-0
1777|data|DCB "destruct_scsi_pt_obj",0|100-101-115-116-114-117-99-116-95-115-99-115-105-95-112-116-95-111-98-106-0
1798|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
1812|data|DCB "sg_set_binary_mode",0|115-103-95-115-101-116-95-98-105-110-97-114-121-95-109-111-100-101-0
1831|data|DCB "set_scsi_pt_sense",0|115-101-116-95-115-99-115-105-95-112-116-95-115-101-110-115-101-0
1849|data|DCB "sg_get_category_sense_str",0|115-103-95-103-101-116-95-99-97-116-101-103-111-114-121-95-115-101-110-115-101-95-115-116-114-0
1875|data|DCB "sg_ll_request_sense",0|115-103-95-108-108-95-114-101-113-117-101-115-116-95-115-101-110-115-101-0
1895|data|DCB "sg_warnings_strm",0|115-103-95-119-97-114-110-105-110-103-115-95-115-116-114-109-0
1912|data|DCB "sg_cmds_process_resp",0|115-103-95-99-109-100-115-95-112-114-111-99-101-115-115-95-114-101-115-112-0
1933|data|DCB "sg_get_sense_info_fld",0|115-103-95-103-101-116-95-115-101-110-115-101-95-105-110-102-111-95-102-108-100-0
1955|data|DCB "do_scsi_pt",0|100-111-95-115-99-115-105-95-112-116-0
1966|data|DCB "sg_get_sense_progress_fld",0|115-103-95-103-101-116-95-115-101-110-115-101-95-112-114-111-103-114-101-115-115-95-102-108-100-0
1992|data|DCB "set_scsi_pt_data_out",0|115-101-116-95-115-99-115-105-95-112-116-95-100-97-116-97-95-111-117-116-0
2013|data|DCB "sg_cmds_close_device",0|115-103-95-99-109-100-115-95-99-108-111-115-101-95-100-101-118-105-99-101-0
2034|data|DCB "sg_cmds_open_device",0|115-103-95-99-109-100-115-95-111-112-101-110-95-100-101-118-105-99-101-0
2054|data|DCB "dStrHexErr",0|100-83-116-114-72-101-120-69-114-114-0
2065|data|DCB "get_scsi_pt_sense_len",0|103-101-116-95-115-99-115-105-95-112-116-95-115-101-110-115-101-95-108-101-110-0
2087|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
2097|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
2110|data|DCB "optind",0|111-112-116-105-110-100-0
2117|data|DCB "perror",0|112-101-114-114-111-114-0
2124|data|DCB "puts",0|112-117-116-115-0
2129|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
2146|data|DCB "abort",0|97-98-111-114-116-0
2152|data|DCB "calloc",0|99-97-108-108-111-99-0
2159|data|DCB "memset",0|109-101-109-115-101-116-0
2166|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
2183|data|DCB "open64",0|111-112-101-110-54-52-0
2190|data|DCB "read",0|114-101-97-100-0
2195|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
2209|data|DCB "fputc",0|102-112-117-116-99-0
2215|data|DCB "__xstat64",0|95-95-120-115-116-97-116-54-52-0
2225|data|DCB "optarg",0|111-112-116-97-114-103-0
2232|data|DCB "stderr",0|115-116-100-101-114-114-0
2239|data|DCB "__snprintf_chk",0|95-95-115-110-112-114-105-110-116-102-95-99-104-107-0
2254|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
2266|data|DCB "fwrite",0|102-119-114-105-116-101-0
2273|data|DCB "close",0|99-108-111-115-101-0
2279|data|DCB "sleep",0|115-108-101-101-112-0
2285|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
2300|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
2318|data|DCB "free",0|102-114-101-101-0
2323|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
2343|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
2361|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
2374|data|DCB "_edata",0|95-101-100-97-116-97-0
2381|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
2393|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
2407|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
2419|data|DCB "__end__",0|95-95-101-110-100-95-95-0
2427|data|DCB "_end",0|95-101-110-100-0
2432|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
2448|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
2464|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
2474|data|DCW 0|0-0
2476|data|DCW 0|0-0
2478|data|DCW 0|0-0
2480|data|DCW 2; calloc@@GLIBC_2.4|2-0
2482|data|DCW 0; local  symbol: sg_simple_inquiry|0-0
2484|data|DCW 0; local  symbol: sg_set_binary_mode|0-0
2486|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
2488|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
2490|data|DCW 0; local  symbol: set_scsi_pt_data_out|0-0
2492|data|DCW 2; read@@GLIBC_2.4|2-0
2494|data|DCW 2; free@@GLIBC_2.4|2-0
2496|data|DCW 0; local  symbol: construct_scsi_pt_obj|0-0
2498|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
2500|data|DCW 0; local  symbol: sg_cmds_close_device|0-0
2502|data|DCW 2; sleep@@GLIBC_2.4|2-0
2504|data|DCW 2; optind@@GLIBC_2.4|2-0
2506|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
2508|data|DCW 2; perror@@GLIBC_2.4|2-0
2510|data|DCW 2; stderr@@GLIBC_2.4|2-0
2512|data|DCW 2; fwrite@@GLIBC_2.4|2-0
2514|data|DCW 0; local  symbol: dStrHexErr|0-0
2516|data|DCW 2; open64@@GLIBC_2.4|2-0
2518|data|DCW 2; puts@@GLIBC_2.4|2-0
2520|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
2522|data|DCW 0; local  symbol: __gmon_start__|0-0
2524|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
2526|data|DCW 0; local  symbol: sg_get_sense_progress_fld|0-0
2528|data|DCW 0; local  symbol: do_scsi_pt|0-0
2530|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
2532|data|DCW 0; local  symbol: destruct_scsi_pt_obj|0-0
2534|data|DCW 2; memset@@GLIBC_2.4|2-0
2536|data|DCW 2; __printf_chk@@GLIBC_2.4|2-0
2538|data|DCW 0; local  symbol: sg_warnings_strm|0-0
2540|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
2542|data|DCW 0; local  symbol: sg_ll_request_sense|0-0
2544|data|DCW 0; local  symbol: set_scsi_pt_sense|0-0
2546|data|DCW 2; fputc@@GLIBC_2.4|2-0
2548|data|DCW 0; local  symbol: safe_strerror|0-0
2550|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
2552|data|DCW 0; local  symbol: get_scsi_pt_sense_len|0-0
2554|data|DCW 0; local  symbol: sg_cmds_process_resp|0-0
2556|data|DCW 0; local  symbol: sg_get_category_sense_str|0-0
2558|data|DCW 0; local  symbol: sg_get_num|0-0
2560|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
2562|data|DCW 0; local  symbol: sg_get_pdt_str|0-0
2564|data|DCW 0; local  symbol: sg_cmds_open_device|0-0
2566|data|DCW 2; optarg@@GLIBC_2.4|2-0
2568|data|DCW 2; __xstat64@@GLIBC_2.4|2-0
2570|data|DCW 2; abort@@GLIBC_2.4|2-0
2572|data|DCW 2; close@@GLIBC_2.4|2-0
2574|data|DCW 2; __snprintf_chk@@GLIBC_2.4|2-0
2576|data|DCW 0; local  symbol: sg_get_sense_info_fld|0-0
2578|data|DCW 0; local  symbol: set_scsi_pt_cdb|0-0
2580|data|DCW 1; global symbol: _bss_end__|1-0
2582|data|DCW 1; global symbol: _edata|1-0
2584|data|DCW 1; global symbol: __data_start|1-0
2586|data|DCW 1; global symbol: _end|1-0
2588|data|DCW 1; global symbol: __bss_end__|1-0
2590|data|DCW 1; global symbol: __libc_csu_init|1-0
2592|data|DCW 1; global symbol: __bss_start|1-0
2594|data|DCW 1; global symbol: main|1-0
2596|data|DCW 1; global symbol: _init|1-0
2598|data|DCW 1; global symbol: __libc_csu_fini|1-0
2600|data|DCW 1; global symbol: __bss_start__|1-0
2602|data|DCW 1; global symbol: _fini|1-0
2604|data|DCW 1; global symbol: __end__|1-0
2606|data|DCW 0|0-0
2608|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_634, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-223-2-0-0-16-0-0-0-32-0-0-0
2624|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_634, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-108-3-0-0-0-0-0-0
2640|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_634, 0x10, 0>; "libc.so.6"|1-0-1-0-243-1-0-0-16-0-0-0-0-0-0-0
2656|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_634, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-108-3-0-0-0-0-0-0
2672|data|Elf32_Rel <0x12E04, 0x17>; R_ARM_RELATIVE|4-46-1-0-23-0-0-0
2680|data|Elf32_Rel <0x12E08, 0x17>; R_ARM_RELATIVE|8-46-1-0-23-0-0-0
2688|data|Elf32_Rel <0x12FCC, 0x17>; R_ARM_RELATIVE|204-47-1-0-23-0-0-0
2696|data|Elf32_Rel <0x12FE8, 0x17>; R_ARM_RELATIVE|232-47-1-0-23-0-0-0
2704|data|Elf32_Rel <0x12FF0, 0x17>; R_ARM_RELATIVE|240-47-1-0-23-0-0-0
2712|data|Elf32_Rel <0x13004, 0x17>; R_ARM_RELATIVE|4-48-1-0-23-0-0-0
2720|data|Elf32_Rel <0x13008, 0x17>; R_ARM_RELATIVE|8-48-1-0-23-0-0-0
2728|data|Elf32_Rel <0x13018, 0x17>; R_ARM_RELATIVE|24-48-1-0-23-0-0-0
2736|data|Elf32_Rel <0x13028, 0x17>; R_ARM_RELATIVE|40-48-1-0-23-0-0-0
2744|data|Elf32_Rel <0x13038, 0x17>; R_ARM_RELATIVE|56-48-1-0-23-0-0-0
2752|data|Elf32_Rel <0x13048, 0x17>; R_ARM_RELATIVE|72-48-1-0-23-0-0-0
2760|data|Elf32_Rel <0x13058, 0x17>; R_ARM_RELATIVE|88-48-1-0-23-0-0-0
2768|data|Elf32_Rel <0x13068, 0x17>; R_ARM_RELATIVE|104-48-1-0-23-0-0-0
2776|data|Elf32_Rel <0x13078, 0x17>; R_ARM_RELATIVE|120-48-1-0-23-0-0-0
2784|data|Elf32_Rel <0x13088, 0x17>; R_ARM_RELATIVE|136-48-1-0-23-0-0-0
2792|data|Elf32_Rel <0x13098, 0x17>; R_ARM_RELATIVE|152-48-1-0-23-0-0-0
2800|data|Elf32_Rel <0x130A8, 0x17>; R_ARM_RELATIVE|168-48-1-0-23-0-0-0
2808|data|Elf32_Rel <0x130B8, 0x17>; R_ARM_RELATIVE|184-48-1-0-23-0-0-0
2816|data|Elf32_Rel <0x130C8, 0x17>; R_ARM_RELATIVE|200-48-1-0-23-0-0-0
2824|data|Elf32_Rel <0x130D8, 0x17>; R_ARM_RELATIVE|216-48-1-0-23-0-0-0
2832|data|Elf32_Rel <0x130E8, 0x17>; R_ARM_RELATIVE|232-48-1-0-23-0-0-0
2840|data|Elf32_Rel <0x130F8, 0x17>; R_ARM_RELATIVE|248-48-1-0-23-0-0-0
2848|data|Elf32_Rel <0x12FD0, 0x615>; R_ARM_GLOB_DAT __cxa_finalize|208-47-1-0-21-6-0-0
2856|data|Elf32_Rel <0x12FD4, 0x715>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|212-47-1-0-21-7-0-0
2864|data|Elf32_Rel <0x12FD8, 0xC15>; R_ARM_GLOB_DAT __stack_chk_guard|216-47-1-0-21-12-0-0
2872|data|Elf32_Rel <0x12FDC, 0xF15>; R_ARM_GLOB_DAT optind|220-47-1-0-21-15-0-0
2880|data|Elf32_Rel <0x12FE0, 0x1215>; R_ARM_GLOB_DAT stderr|224-47-1-0-21-18-0-0
2888|data|Elf32_Rel <0x12FE4, 0x1815>; R_ARM_GLOB_DAT __gmon_start__|228-47-1-0-21-24-0-0
2896|data|Elf32_Rel <0x12FEC, 0x2015>; R_ARM_GLOB_DAT sg_warnings_strm|236-47-1-0-21-32-0-0
2904|data|Elf32_Rel <0x12FF4, 0x2615>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-47-1-0-21-38-0-0
2912|data|Elf32_Rel <0x12FF8, 0x2B15>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-47-1-0-21-43-0-0
2920|data|Elf32_Rel <0x12FFC, 0x2E15>; R_ARM_GLOB_DAT optarg|252-47-1-0-21-46-0-0
2928|data|Elf32_Rel <0x12F24, 0x316>; R_ARM_JUMP_SLOT calloc|36-47-1-0-22-3-0-0
2936|data|Elf32_Rel <0x12F28, 0x416>; R_ARM_JUMP_SLOT sg_simple_inquiry|40-47-1-0-22-4-0-0
2944|data|Elf32_Rel <0x12F2C, 0x516>; R_ARM_JUMP_SLOT sg_set_binary_mode|44-47-1-0-22-5-0-0
2952|data|Elf32_Rel <0x12F30, 0x616>; R_ARM_JUMP_SLOT __cxa_finalize|48-47-1-0-22-6-0-0
2960|data|Elf32_Rel <0x12F34, 0x816>; R_ARM_JUMP_SLOT set_scsi_pt_data_out|52-47-1-0-22-8-0-0
2968|data|Elf32_Rel <0x12F38, 0x916>; R_ARM_JUMP_SLOT read|56-47-1-0-22-9-0-0
2976|data|Elf32_Rel <0x12F3C, 0xA16>; R_ARM_JUMP_SLOT free|60-47-1-0-22-10-0-0
2984|data|Elf32_Rel <0x12F40, 0xB16>; R_ARM_JUMP_SLOT construct_scsi_pt_obj|64-47-1-0-22-11-0-0
2992|data|Elf32_Rel <0x12F44, 0xD16>; R_ARM_JUMP_SLOT sg_cmds_close_device|68-47-1-0-22-13-0-0
3000|data|Elf32_Rel <0x12F48, 0xE16>; R_ARM_JUMP_SLOT sleep|72-47-1-0-22-14-0-0
3008|data|Elf32_Rel <0x12F4C, 0x1016>; R_ARM_JUMP_SLOT __stack_chk_fail|76-47-1-0-22-16-0-0
3016|data|Elf32_Rel <0x12F50, 0x1116>; R_ARM_JUMP_SLOT perror|80-47-1-0-22-17-0-0
3024|data|Elf32_Rel <0x12F54, 0x1316>; R_ARM_JUMP_SLOT fwrite|84-47-1-0-22-19-0-0
3032|data|Elf32_Rel <0x12F58, 0x1416>; R_ARM_JUMP_SLOT dStrHexErr|88-47-1-0-22-20-0-0
3040|data|Elf32_Rel <0x12F5C, 0x1516>; R_ARM_JUMP_SLOT open64|92-47-1-0-22-21-0-0
3048|data|Elf32_Rel <0x12F60, 0x1616>; R_ARM_JUMP_SLOT puts|96-47-1-0-22-22-0-0
3056|data|Elf32_Rel <0x12F64, 0x1716>; R_ARM_JUMP_SLOT __libc_start_main|100-47-1-0-22-23-0-0
3064|data|Elf32_Rel <0x12F68, 0x1816>; R_ARM_JUMP_SLOT __gmon_start__|104-47-1-0-22-24-0-0
3072|data|Elf32_Rel <0x12F6C, 0x1916>; R_ARM_JUMP_SLOT getopt_long|108-47-1-0-22-25-0-0
3080|data|Elf32_Rel <0x12F70, 0x1A16>; R_ARM_JUMP_SLOT sg_get_sense_progress_fld|112-47-1-0-22-26-0-0
3088|data|Elf32_Rel <0x12F74, 0x1B16>; R_ARM_JUMP_SLOT do_scsi_pt|116-47-1-0-22-27-0-0
3096|data|Elf32_Rel <0x12F78, 0x1C16>; R_ARM_JUMP_SLOT __errno_location|120-47-1-0-22-28-0-0
3104|data|Elf32_Rel <0x12F7C, 0x1D16>; R_ARM_JUMP_SLOT destruct_scsi_pt_obj|124-47-1-0-22-29-0-0
3112|data|Elf32_Rel <0x12F80, 0x1E16>; R_ARM_JUMP_SLOT memset|128-47-1-0-22-30-0-0
3120|data|Elf32_Rel <0x12F84, 0x1F16>; R_ARM_JUMP_SLOT __printf_chk|132-47-1-0-22-31-0-0
3128|data|Elf32_Rel <0x12F88, 0x2116>; R_ARM_JUMP_SLOT __fprintf_chk|136-47-1-0-22-33-0-0
3136|data|Elf32_Rel <0x12F8C, 0x2216>; R_ARM_JUMP_SLOT sg_ll_request_sense|140-47-1-0-22-34-0-0
3144|data|Elf32_Rel <0x12F90, 0x2316>; R_ARM_JUMP_SLOT set_scsi_pt_sense|144-47-1-0-22-35-0-0
3152|data|Elf32_Rel <0x12F94, 0x2416>; R_ARM_JUMP_SLOT fputc|148-47-1-0-22-36-0-0
3160|data|Elf32_Rel <0x12F98, 0x2516>; R_ARM_JUMP_SLOT safe_strerror|152-47-1-0-22-37-0-0
3168|data|Elf32_Rel <0x12F9C, 0x2716>; R_ARM_JUMP_SLOT get_scsi_pt_sense_len|156-47-1-0-22-39-0-0
3176|data|Elf32_Rel <0x12FA0, 0x2816>; R_ARM_JUMP_SLOT sg_cmds_process_resp|160-47-1-0-22-40-0-0
3184|data|Elf32_Rel <0x12FA4, 0x2916>; R_ARM_JUMP_SLOT sg_get_category_sense_str|164-47-1-0-22-41-0-0
3192|data|Elf32_Rel <0x12FA8, 0x2A16>; R_ARM_JUMP_SLOT sg_get_num|168-47-1-0-22-42-0-0
3200|data|Elf32_Rel <0x12FAC, 0x2C16>; R_ARM_JUMP_SLOT sg_get_pdt_str|172-47-1-0-22-44-0-0
3208|data|Elf32_Rel <0x12FB0, 0x2D16>; R_ARM_JUMP_SLOT sg_cmds_open_device|176-47-1-0-22-45-0-0
3216|data|Elf32_Rel <0x12FB4, 0x2F16>; R_ARM_JUMP_SLOT __xstat64|180-47-1-0-22-47-0-0
3224|data|Elf32_Rel <0x12FB8, 0x3016>; R_ARM_JUMP_SLOT abort|184-47-1-0-22-48-0-0
3232|data|Elf32_Rel <0x12FBC, 0x3116>; R_ARM_JUMP_SLOT close|188-47-1-0-22-49-0-0
3240|data|Elf32_Rel <0x12FC0, 0x3216>; R_ARM_JUMP_SLOT __snprintf_chk|192-47-1-0-22-50-0-0
3248|data|Elf32_Rel <0x12FC4, 0x3316>; R_ARM_JUMP_SLOT sg_get_sense_info_fld|196-47-1-0-22-51-0-0
3256|data|Elf32_Rel <0x12FC8, 0x3416>; R_ARM_JUMP_SLOT set_scsi_pt_cdb|200-47-1-0-22-52-0-0
3264|code|PUSH            {R3,LR}; _init|8-64-45-233
3268|code|BL              sub_1AD8|131-3-0-235
3272|code|POP             {R3,PC}|8-128-189-232
3276|code|PUSH            {LR}|4-224-45-229
3280|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0xCDC)|4-224-159-229
3284|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
3288|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
3292|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xCDC|60-34-1-0
3296|code|ADR             R12, 0xCE8|0-198-143-226
3300|code|ADD             R12, R12, #0x12000|18-202-140-226
3304|code|LDR             PC, [R12,#(calloc_ptr - 0x12CE8)]!; __imp_calloc|60-242-188-229
3308|code|ADR             R12, 0xCF4|0-198-143-226
3312|code|ADD             R12, R12, #0x12000|18-202-140-226
3316|code|LDR             PC, [R12,#(sg_simple_inquiry_ptr - 0x12CF4)]!; __imp_sg_simple_inquiry|52-242-188-229
3320|code|ADR             R12, 0xD00|0-198-143-226
3324|code|ADD             R12, R12, #0x12000|18-202-140-226
3328|code|LDR             PC, [R12,#(sg_set_binary_mode_ptr - 0x12D00)]!; __imp_sg_set_binary_mode|44-242-188-229
3332|code|ADR             R12, 0xD0C|0-198-143-226
3336|code|ADD             R12, R12, #0x12000|18-202-140-226
3340|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x12D0C)]!; __imp___cxa_finalize|36-242-188-229
3344|code|ADR             R12, 0xD18|0-198-143-226
3348|code|ADD             R12, R12, #0x12000|18-202-140-226
3352|code|LDR             PC, [R12,#(set_scsi_pt_data_out_ptr - 0x12D18)]!; __imp_set_scsi_pt_data_out|28-242-188-229
3356|code|ADR             R12, 0xD24|0-198-143-226
3360|code|ADD             R12, R12, #0x12000|18-202-140-226
3364|code|LDR             PC, [R12,#(read_ptr - 0x12D24)]!; __imp_read|20-242-188-229
3368|code|ADR             R12, 0xD30|0-198-143-226
3372|code|ADD             R12, R12, #0x12000|18-202-140-226
3376|code|LDR             PC, [R12,#(free_ptr - 0x12D30)]!; __imp_free|12-242-188-229
3380|code|ADR             R12, 0xD3C|0-198-143-226
3384|code|ADD             R12, R12, #0x12000|18-202-140-226
3388|code|LDR             PC, [R12,#(construct_scsi_pt_obj_ptr - 0x12D3C)]!; __imp_construct_scsi_pt_obj|4-242-188-229
3392|code|ADR             R12, 0xD48|0-198-143-226
3396|code|ADD             R12, R12, #0x12000|18-202-140-226
3400|code|LDR             PC, [R12,#(sg_cmds_close_device_ptr - 0x12D48)]!; __imp_sg_cmds_close_device|252-241-188-229
3404|code|ADR             R12, 0xD54|0-198-143-226
3408|code|ADD             R12, R12, #0x12000|18-202-140-226
3412|code|LDR             PC, [R12,#(sleep_ptr - 0x12D54)]!; __imp_sleep|244-241-188-229
3416|code|ADR             R12, 0xD60|0-198-143-226
3420|code|ADD             R12, R12, #0x12000|18-202-140-226
3424|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x12D60)]!; __imp___stack_chk_fail|236-241-188-229
3428|code|ADR             R12, 0xD6C|0-198-143-226
3432|code|ADD             R12, R12, #0x12000|18-202-140-226
3436|code|LDR             PC, [R12,#(perror_ptr - 0x12D6C)]!; __imp_perror|228-241-188-229
3440|code|ADR             R12, 0xD78|0-198-143-226
3444|code|ADD             R12, R12, #0x12000|18-202-140-226
3448|code|LDR             PC, [R12,#(fwrite_ptr - 0x12D78)]!; __imp_fwrite|220-241-188-229
3452|code|ADR             R12, 0xD84|0-198-143-226
3456|code|ADD             R12, R12, #0x12000|18-202-140-226
3460|code|LDR             PC, [R12,#(dStrHexErr_ptr - 0x12D84)]!; __imp_dStrHexErr|212-241-188-229
3464|code|ADR             R12, 0xD90|0-198-143-226
3468|code|ADD             R12, R12, #0x12000|18-202-140-226
3472|code|LDR             PC, [R12,#(open64_ptr - 0x12D90)]!; __imp_open64|204-241-188-229
3476|code|ADR             R12, 0xD9C|0-198-143-226
3480|code|ADD             R12, R12, #0x12000|18-202-140-226
3484|code|LDR             PC, [R12,#(puts_ptr - 0x12D9C)]!; __imp_puts|196-241-188-229
3488|code|ADR             R12, 0xDA8|0-198-143-226
3492|code|ADD             R12, R12, #0x12000|18-202-140-226
3496|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x12DA8)]!; __imp___libc_start_main|188-241-188-229
3500|code|ADR             R12, 0xDB4|0-198-143-226
3504|code|ADD             R12, R12, #0x12000|18-202-140-226
3508|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x12DB4)]!; __imp___gmon_start__|180-241-188-229
3512|code|ADR             R12, 0xDC0|0-198-143-226
3516|code|ADD             R12, R12, #0x12000|18-202-140-226
3520|code|LDR             PC, [R12,#(getopt_long_ptr - 0x12DC0)]!; __imp_getopt_long|172-241-188-229
3524|code|ADR             R12, 0xDCC|0-198-143-226
3528|code|ADD             R12, R12, #0x12000|18-202-140-226
3532|code|LDR             PC, [R12,#(sg_get_sense_progress_fld_ptr - 0x12DCC)]!; __imp_sg_get_sense_progress_fld|164-241-188-229
3536|code|ADR             R12, 0xDD8|0-198-143-226
3540|code|ADD             R12, R12, #0x12000|18-202-140-226
3544|code|LDR             PC, [R12,#(do_scsi_pt_ptr - 0x12DD8)]!; __imp_do_scsi_pt|156-241-188-229
3548|code|ADR             R12, 0xDE4|0-198-143-226
3552|code|ADD             R12, R12, #0x12000|18-202-140-226
3556|code|LDR             PC, [R12,#(__errno_location_ptr - 0x12DE4)]!; __imp___errno_location|148-241-188-229
3560|code|ADR             R12, 0xDF0|0-198-143-226
3564|code|ADD             R12, R12, #0x12000|18-202-140-226
3568|code|LDR             PC, [R12,#(destruct_scsi_pt_obj_ptr - 0x12DF0)]!; __imp_destruct_scsi_pt_obj|140-241-188-229
3572|code|ADR             R12, 0xDFC|0-198-143-226
3576|code|ADD             R12, R12, #0x12000|18-202-140-226
3580|code|LDR             PC, [R12,#(memset_ptr - 0x12DFC)]!; __imp_memset|132-241-188-229
3584|code|ADRL            R12, 0x12E08|0-198-143-226-18-202-140-226
3592|code|LDR             PC, [R12,#(__printf_chk_ptr - 0x12E08)]!; __imp___printf_chk|124-241-188-229
3596|code|ADRL            R12, 0x12E14|0-198-143-226-18-202-140-226
3604|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x12E14)]!; __imp___fprintf_chk|116-241-188-229
3608|code|ADRL            R12, 0x12E20|0-198-143-226-18-202-140-226
3616|code|LDR             PC, [R12,#(sg_ll_request_sense_ptr - 0x12E20)]!; __imp_sg_ll_request_sense|108-241-188-229
3620|code|ADRL            R12, 0x12E2C|0-198-143-226-18-202-140-226
3628|code|LDR             PC, [R12,#(set_scsi_pt_sense_ptr - 0x12E2C)]!; __imp_set_scsi_pt_sense|100-241-188-229
3632|code|ADRL            R12, 0x12E38|0-198-143-226-18-202-140-226
3640|code|LDR             PC, [R12,#(fputc_ptr - 0x12E38)]!; __imp_fputc|92-241-188-229
3644|code|ADRL            R12, 0x12E44|0-198-143-226-18-202-140-226
3652|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x12E44)]!; __imp_safe_strerror|84-241-188-229
3656|code|ADRL            R12, 0x12E50|0-198-143-226-18-202-140-226
3664|code|LDR             PC, [R12,#(get_scsi_pt_sense_len_ptr - 0x12E50)]!; __imp_get_scsi_pt_sense_len|76-241-188-229
3668|code|ADRL            R12, 0x12E5C|0-198-143-226-18-202-140-226
3676|code|LDR             PC, [R12,#(sg_cmds_process_resp_ptr - 0x12E5C)]!; __imp_sg_cmds_process_resp|68-241-188-229
3680|code|ADRL            R12, 0x12E68|0-198-143-226-18-202-140-226
3688|code|LDR             PC, [R12,#(sg_get_category_sense_str_ptr - 0x12E68)]!; __imp_sg_get_category_sense_str|60-241-188-229
3692|code|ADRL            R12, 0x12E74|0-198-143-226-18-202-140-226
3700|code|LDR             PC, [R12,#(sg_get_num_ptr - 0x12E74)]!; __imp_sg_get_num|52-241-188-229
3704|code|ADRL            R12, 0x12E80|0-198-143-226-18-202-140-226
3712|code|LDR             PC, [R12,#(sg_get_pdt_str_ptr - 0x12E80)]!; __imp_sg_get_pdt_str|44-241-188-229
3716|code|ADRL            R12, 0x12E8C|0-198-143-226-18-202-140-226
3724|code|LDR             PC, [R12,#(sg_cmds_open_device_ptr - 0x12E8C)]!; __imp_sg_cmds_open_device|36-241-188-229
3728|code|ADRL            R12, 0x12E98|0-198-143-226-18-202-140-226
3736|code|LDR             PC, [R12,#(__xstat64_ptr - 0x12E98)]!; __imp___xstat64|28-241-188-229
3740|code|ADRL            R12, 0x12EA4|0-198-143-226-18-202-140-226
3748|code|LDR             PC, [R12,#(abort_ptr - 0x12EA4)]!; __imp_abort|20-241-188-229
3752|code|ADRL            R12, 0x12EB0|0-198-143-226-18-202-140-226
3760|code|LDR             PC, [R12,#(close_ptr - 0x12EB0)]!; __imp_close|12-241-188-229
3764|code|ADRL            R12, 0x12EBC|0-198-143-226-18-202-140-226
3772|code|LDR             PC, [R12,#(__snprintf_chk_ptr - 0x12EBC)]!; __imp___snprintf_chk|4-241-188-229
3776|code|ADRL            R12, 0x12EC8|0-198-143-226-18-202-140-226
3784|code|LDR             PC, [R12,#(sg_get_sense_info_fld_ptr - 0x12EC8)]!; __imp_sg_get_sense_info_fld|252-240-188-229
3788|code|ADRL            R12, 0x12ED4|0-198-143-226-18-202-140-226
3796|code|LDR             PC, [R12,#(set_scsi_pt_cdb_ptr - 0x12ED4)]!; __imp_set_scsi_pt_cdb|244-240-188-229
3800|code|PUSH.W          {R4-R11,LR}|45-233-240-79
3804|code|MOV             R6, R1|14-70
3806|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0xEF0)|223-248-192-170
3810|code|SUB.W           SP, SP, #0x37C|173-245-95-125
3814|code|LDR.W           R5, =(__stack_chk_guard_ptr - 0x12F18)|223-248-188-90
3818|code|MOVS            R2, #0|0-34
3820|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
3822|code|LDR.W           R9, =(aAbcCefhiIopQtV - 0xF02); "ABc:CeFhi:IOp:QT:vVw"|223-248-184-154
3826|code|LDR.W           R8, =(off_13008 - 0xF04); "ause"|223-248-184-138
3830|code|ADD.W           R11, SP, #0x68|13-241-104-11
3834|code|LDR.W           R5, [R10,R5]; __stack_chk_guard|90-248-5-80
3838|code|ADD             R9, PC; "ABc:CeFhi:IOp:QT:vVw"|249-68
3840|code|ADD             R8, PC; off_13008|248-68
3842|code|ADD             R4, SP, #0x37C+var_2DC|40-172
3844|code|STR.W           R2, [R11,#0x314+var_314]|203-248-0-32
3848|code|MOV             R7, R5|47-70
3850|code|STR             R5, [SP,#0x37C+var_368]|5-149
3852|code|LDR             R1, [R7]|57-104
3854|code|MOV             R7, R2|23-70
3856|code|MOV             R5, R0|5-70
3858|code|STR             R2, [SP,#0x37C+var_310]|27-146
3860|code|MOVS            R0, #1|1-32
3862|code|STR             R2, [SP,#0x37C+var_308]|29-146
3864|code|STR.W           R0, [R11,#0x314+var_30C]|203-248-8-0
3868|code|STR             R2, [SP,#0x37C+var_304]|30-146
3870|code|STR             R1, [SP,#0x37C+var_8]|221-145
3872|code|STR             R2, [SP,#0x37C+var_300]|31-146
3874|code|STR             R2, [SP,#0x37C+var_2FC]|32-146
3876|code|STR             R2, [SP,#0x37C+var_2F8]|33-146
3878|code|STR             R2, [SP,#0x37C+var_2F4]|34-146
3880|code|STR             R2, [SP,#0x37C+var_2F0]|35-146
3882|code|STR             R2, [SP,#0x37C+var_2EC]|36-146
3884|code|STR             R2, [SP,#0x37C+verbose]|37-146
3886|code|STR             R2, [SP,#0x37C+var_2E4]|38-146
3888|code|STR             R2, [SP,#0x37C+var_2E0]|39-146
3890|code|STR             R4, [SP,#0x37C+longind]; longind|0-148
3892|code|MOV             R2, R9; shortopts|74-70
3894|code|MOV             R0, R5; argc|40-70
3896|code|MOV             R1, R6; argv|49-70
3898|code|MOV             R3, R8; longopts|67-70
3900|code|STR             R7, [R4]|39-96
3902|code|BLX             getopt_long|255-247-60-239
3906|code|ADDS            R2, R0, #1|66-28
3908|code|BEQ.W           loc_1136|0-240-247-128
3912|code|SUB.W           R3, R0, #0x3F ; '?'; switch 57 cases|160-241-63-3
3916|code|CMP             R3, #0x38|56-43
3918|code|BHI.W           def_F52; jumptable 00000F52 default case, cases 64,68,69,71,72,74-78,80,82,83,85,87-98,100,102,103,106-111,113-117|0-242-219-128
3922|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
3926|data|DCB 0xCA; jump table for switch statement|202
3927|data|DCB 0xD9|217
3928|data|DCB 0xC4|196
3929|data|DCB 0xBE|190
3930|data|DCB 0xB8|184
3931|data|DCB 0xD9|217
3932|data|DCB 0xD9|217
3933|data|DCB 0xB2|178
3934|data|DCB 0xD9|217
3935|data|DCB 0xD9|217
3936|data|DCB 0xAC|172
3937|data|DCB 0xD9|217
3938|data|DCB 0xD9|217
3939|data|DCB 0xD9|217
3940|data|DCB 0xD9|217
3941|data|DCB 0xD9|217
3942|data|DCB 0xA6|166
3943|data|DCB 0xD9|217
3944|data|DCB 0xA0|160
3945|data|DCB 0xD9|217
3946|data|DCB 0xD9|217
3947|data|DCB 0x86|134
3948|data|DCB 0xD9|217
3949|data|DCB 0x6D|109
3950|data|DCB 0xD9|217
3951|data|DCB 0xD9|217
3952|data|DCB 0xD9|217
3953|data|DCB 0xD9|217
3954|data|DCB 0xD9|217
3955|data|DCB 0xD9|217
3956|data|DCB 0xD9|217
3957|data|DCB 0xD9|217
3958|data|DCB 0xD9|217
3959|data|DCB 0xD9|217
3960|data|DCB 0xD9|217
3961|data|DCB 0xD9|217
3962|data|DCB 0x53|83
3963|data|DCB 0xD9|217
3964|data|DCB 0x4D|77
3965|data|DCB 0xD9|217
3966|data|DCB 0xD9|217
3967|data|DCB 0xCA|202
3968|data|DCB 0x31|49
3969|data|DCB 0xD9|217
3970|data|DCB 0xD9|217
3971|data|DCB 0xD9|217
3972|data|DCB 0xD9|217
3973|data|DCB 0xD9|217
3974|data|DCB 0xD9|217
3975|data|DCB 0x29|41
3976|data|DCB 0xD9|217
3977|data|DCB 0xD9|217
3978|data|DCB 0xD9|217
3979|data|DCB 0xD9|217
3980|data|DCB 0xD9|217
3981|data|DCB 0x23|35
3982|data|DCB 0x1D|29
3983|data|ALIGN 2|0
3984|code|LDR.W           R3, [R11,#0x314+var_2E4]; jumptable 00000F52 case 119|219-248-48-48
3988|code|ADDS            R3, #1|1-51
3990|code|STR.W           R3, [R11,#0x314+var_2E4]|203-248-48-48
3994|code|B               loc_F32|202-231
3996|code|LDR.W           R3, [R11,#0x314+verbose]; jumptable 00000F52 case 118|219-248-44-48
4000|code|ADDS            R3, #1|1-51
4002|code|STR.W           R3, [R11,#0x314+verbose]|203-248-44-48
4006|code|B               loc_F32|196-231
4008|code|LDR.W           R3, =(optarg_ptr - 0x12F18); jumptable 00000F52 case 112|223-248-4-58
4012|code|LDR.W           R3, [R10,R3]; optarg|90-248-3-48
4016|code|LDR             R3, [R3]|27-104
4018|code|STR.W           R3, [R11,#0x314+var_2E0]|203-248-52-48
4022|code|B               loc_F32|188-231
4024|code|LDR.W           R3, =(optarg_ptr - 0x12F18); jumptable 00000F52 case 105|223-248-244-57
4028|code|LDR.W           R3, [R10,R3]; optarg|90-248-3-48
4032|code|LDR             R0, [R3]; buf|24-104
4034|code|BLX             sg_get_num|255-247-84-239
4038|code|MOVW            R3, #0xFFFE|79-246-254-115
4042|code|SUBS            R2, R0, #1|66-30
4044|code|STR.W           R0, [R11,#0x314+var_2F8]|203-248-28-0
4048|code|CMP             R2, R3|154-66
4050|code|BLS             loc_F32|174-217
4052|code|LDR.W           R3, =(stderr_ptr - 0x12F18)|223-248-220-57
4056|code|MOVS            R1, #1; size|1-33
4058|code|LDR.W           R0, =(aBadArgumentToI - 0xFE8); "bad argument to '--ipl', expect 1 to 65"...|223-248-220-9
4062|code|MOVS            R2, #0x2B ; '+'; n|43-34
4064|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
4068|code|ADD             R0, PC; "bad argument to '--ipl', expect 1 to 65"...|120-68
4070|code|LDR             R3, [R3]; s|27-104
4072|code|BLX             fwrite|255-247-194-238
4076|code|MOVS            R0, #1|1-32
4078|code|B               loc_104E|46-224
4080|code|LDR.W           R3, [R11,#0x314+var_304]; jumptable 00000F52 case 101|219-248-16-48
4084|code|ADDS            R3, #1|1-51
4086|code|STR.W           R3, [R11,#0x314+var_304]|203-248-16-48
4090|code|B               loc_F32|154-231
4092|code|LDR.W           R3, =(optarg_ptr - 0x12F18); jumptable 00000F52 case 99|223-248-176-57
4096|code|LDR.W           R3, [R10,R3]; optarg|90-248-3-48
4100|code|LDR             R0, [R3]; buf|24-104
4102|code|BLX             sg_get_num|255-247-50-239
4106|code|SUBS            R3, R0, #1|67-30
4108|code|STR.W           R0, [R11,#0x314+var_30C]|203-248-8-0
4112|code|CMP             R3, #0x1E|30-43
4114|code|BLS             loc_F32|142-217
4116|code|LDR.W           R3, =(stderr_ptr - 0x12F18)|223-248-156-57
4120|code|MOVS            R1, #1; size|1-33
4122|code|LDR.W           R0, =(aBadArgumentToC - 0x1028); "bad argument to '--count', expect 1 to "...|223-248-160-9
4126|code|MOVS            R2, #0x2A ; '*'; n|42-34
4128|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
4132|code|ADD             R0, PC; "bad argument to '--count', expect 1 to "...|120-68
4134|code|LDR             R3, [R3]; s|27-104
4136|code|BLX             fwrite|255-247-162-238
4140|code|MOVS            R0, #1|1-32
4142|code|B               loc_104E|14-224
4144|code|LDR.W           R0, =(stderr_ptr - 0x12F18); jumptable 00000F52 case 86|223-248-128-9
4148|code|MOVS            R1, #1|1-33
4150|code|LDR.W           R2, =(aSgSanitizeVers - 0x1046); "sg_sanitize: version: %s\n"|223-248-136-41
4154|code|LDR.W           R3, =(a09420140516 - 0x1048); "0.94 20140516"|223-248-136-57
4158|code|LDR.W           R0, [R10,R0]; stderr|90-248-0-0
4162|code|ADD             R2, PC; "sg_sanitize: version: %s\n"|122-68
4164|code|ADD             R3, PC; "0.94 20140516"|123-68
4166|code|LDR             R0, [R0]|0-104
4168|code|BLX             __fprintf_chk|255-247-224-238
4172|code|MOVS            R0, #0|0-32
4174|code|LDR             R3, [SP,#0x37C+var_368]|5-155
4176|code|LDR             R2, [SP,#0x37C+var_8]|221-154
4178|code|LDR             R3, [R3]|27-104
4180|code|CMP             R2, R3|154-66
4182|code|BNE.W           loc_1856|64-240-254-131
4186|code|ADD.W           SP, SP, #0x37C|13-245-95-125
4190|code|POP.W           {R4-R11,PC}|189-232-240-143
4194|code|LDR.W           R3, =(optarg_ptr - 0x12F18); jumptable 00000F52 case 84|223-248-76-57
4198|code|LDR.W           R3, [R10,R3]; optarg|90-248-3-48
4202|code|LDR             R0, [R3]; buf|24-104
4204|code|BLX             sg_get_num|255-247-254-238
4208|code|CMP             R0, #3|3-40
4210|code|STR.W           R0, [R11,#0x314+var_2F0]|203-248-36-0
4214|code|BLS.W           loc_F32|127-246-92-175
4218|code|LDR.W           R3, =(stderr_ptr - 0x12F18)|223-248-56-57
4222|code|MOVS            R1, #1; size|1-33
4224|code|LDR.W           R0, =(aBadArgumentToT - 0x108E); "bad argument to '--test', expect 0 to 3"...|223-248-68-9
4228|code|MOVS            R2, #0x28 ; '('; n|40-34
4230|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
4234|code|ADD             R0, PC; "bad argument to '--test', expect 0 to 3"...|120-68
4236|code|LDR             R3, [R3]; s|27-104
4238|code|BLX             fwrite|255-247-112-238
4242|code|MOVS            R0, #1|1-32
4244|code|B               loc_104E|219-231
4246|code|LDR.W           R3, [R11,#0x314+var_2EC]; jumptable 00000F52 case 81|219-248-40-48
4250|code|ADDS            R3, #1|1-51
4252|code|STR.W           R3, [R11,#0x314+var_2EC]|203-248-40-48
4256|code|B               loc_F32|71-231
4258|code|LDR.W           R3, [R11,#0x314+var_2F4]; jumptable 00000F52 case 79|219-248-32-48
4262|code|ADDS            R3, #1|1-51
4264|code|STR.W           R3, [R11,#0x314+var_2F4]|203-248-32-48
4268|code|B               loc_F32|65-231
4270|code|LDR.W           R3, [R11,#0x314+var_2FC]; jumptable 00000F52 case 73|219-248-24-48
4274|code|ADDS            R3, #1|1-51
4276|code|STR.W           R3, [R11,#0x314+var_2FC]|203-248-24-48
4280|code|B               loc_F32|59-231
4282|code|LDR.W           R3, [R11,#0x314+var_300]; jumptable 00000F52 case 70|219-248-20-48
4286|code|ADDS            R3, #1|1-51
4288|code|STR.W           R3, [R11,#0x314+var_300]|203-248-20-48
4292|code|B               loc_F32|53-231
4294|code|LDR.W           R3, [R11,#0x314+var_308]; jumptable 00000F52 case 67|219-248-12-48
4298|code|ADDS            R3, #1|1-51
4300|code|STR.W           R3, [R11,#0x314+var_308]|203-248-12-48
4304|code|B               loc_F32|47-231
4306|code|LDR.W           R3, [R11,#0x314+var_310]; jumptable 00000F52 case 66|219-248-4-48
4310|code|ADDS            R3, #1|1-51
4312|code|STR.W           R3, [R11,#0x314+var_310]|203-248-4-48
4316|code|B               loc_F32|41-231
4318|code|LDR.W           R3, [R11,#0x314+var_314]; jumptable 00000F52 case 65|219-248-0-48
4322|code|ADDS            R3, #1|1-51
4324|code|STR.W           R3, [R11,#0x314+var_314]|203-248-0-48
4328|code|B               loc_F32|35-231
4330|code|LDR.W           R3, =(stderr_ptr - 0x12F18); jumptable 00000F52 cases 63,104|223-248-200-56
4334|code|MOVS            R1, #1; size|1-33
4336|code|LDR.W           R0, =(aUsageSgSanitiz - 0x1100); "Usage: sg_sanitize [--ause] [--block] ["...|223-248-216-8
4340|code|MOV.W           R2, #0x6E8; n|79-244-221-98
4344|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
4348|code|ADD             R0, PC; "Usage: sg_sanitize [--ause] [--block] ["...|120-68
4350|code|LDR             R3, [R3]; s|27-104
4352|code|BLX             fwrite|255-247-54-238
4356|code|MOVS            R0, #0|0-32
4358|code|B               loc_104E|162-231
4360|code|LDR.W           R4, =(stderr_ptr - 0x12F18); jumptable 00000F52 default case, cases 64,68,69,71,72,74-78,80,82,83,85,87-98,100,102,103,106-111,113-117|223-248-168-72
4364|code|MOV             R3, R0|3-70
4366|code|LDR.W           R2, =(aUnrecognisedOp - 0x111C); "unrecognised option code 0x%x ??\n"|223-248-192-40
4370|code|MOVS            R1, #1|1-33
4372|code|LDR.W           R4, [R10,R4]; stderr|90-248-4-64
4376|code|ADD             R2, PC; "unrecognised option code 0x%x ??\n"|122-68
4378|code|LDR             R0, [R4]|32-104
4380|code|BLX             __fprintf_chk|255-247-118-238
4384|code|LDR.W           R0, =(aUsageSgSanitiz - 0x112C); "Usage: sg_sanitize [--ause] [--block] ["...|223-248-176-8
4388|code|LDR             R3, [R4]; s|35-104
4390|code|MOVS            R1, #1; size|1-33
4392|code|ADD             R0, PC; "Usage: sg_sanitize [--ause] [--block] ["...|120-68
4394|code|MOV.W           R2, #0x6E8; n|79-244-221-98
4398|code|BLX             fwrite|255-247-32-238
4402|code|MOVS            R0, #1|1-32
4404|code|B               loc_104E|139-231
4406|code|LDR.W           R3, =(optind_ptr - 0x12F18)|223-248-160-56
4410|code|LDR.W           R7, [R10,R3]; optind|90-248-3-112
4414|code|LDR             R3, [R7]|59-104
4416|code|CMP             R5, R3|157-66
4418|code|BGT             loc_1172|22-220
4420|code|LDR.W           R3, =(stderr_ptr - 0x12F18)|223-248-108-56
4424|code|MOVS            R1, #1; size|1-33
4426|code|LDR.W           R0, =(aMissingDeviceN - 0x1158); "missing device name!\n"|223-248-144-8
4430|code|MOVS            R2, #0x15; n|21-34
4432|code|LDR.W           R4, [R10,R3]; stderr|90-248-3-64
4436|code|ADD             R0, PC; "missing device name!\n"|120-68
4438|code|LDR             R3, [R4]; s|35-104
4440|code|BLX             fwrite|255-247-10-238
4444|code|LDR.W           R0, =(aUsageSgSanitiz - 0x1168); "Usage: sg_sanitize [--ause] [--block] ["...|223-248-128-8
4448|code|LDR             R3, [R4]; s|35-104
4450|code|MOVS            R1, #1; size|1-33
4452|code|ADD             R0, PC; "Usage: sg_sanitize [--ause] [--block] ["...|120-68
4454|code|MOV.W           R2, #0x6E8; n|79-244-221-98
4458|code|BLX             fwrite|255-247-2-238
4462|code|MOVS            R0, #1|1-32
4464|code|B               loc_104E|109-231
4466|code|ADDS            R2, R3, #1|90-28
4468|code|LDR.W           R8, [R6,R3,LSL#2]|86-248-35-128
4472|code|CMP             R5, R2|149-66
4474|code|STR             R2, [R7]|58-96
4476|code|BGT             loc_123E|95-220
4478|code|CMP.W           R8, #0|184-241-0-15
4482|code|BEQ             loc_1144|223-208
4484|code|LDR.W           R3, [R11,#0x314+var_308]|219-248-12-48
4488|code|LDR.W           R2, [R11,#0x314+var_310]|219-248-4-32
4492|code|ADDS            R3, #0|0-51
4494|code|LDR.W           R7, [R11,#0x314+var_300]|219-248-20-112
4498|code|LDR.W           R5, [R11,#0x314+var_2F4]|219-248-32-80
4502|code|IT NE|24-191
4504|code|MOVNE           R3, #1|1-35
4506|code|CMP             R2, #0|0-42
4508|code|IT NE|24-191
4510|code|ADDNE           R3, #1|1-51
4512|code|CMP             R7, #0|0-47
4514|code|ITE EQ|12-191
4516|code|MOVEQ           R0, R3|24-70
4518|code|ADDNE           R0, R3, #1|88-28
4520|code|ADDS            R5, #0|0-53
4522|code|LDR.W           R6, [R11,#0x314+verbose]|219-248-44-96
4526|code|IT NE|24-191
4528|code|MOVNE           R5, #1|1-37
4530|code|ADDS            R7, R0, R5|71-25
4532|code|CMP             R7, #1|1-47
4534|code|BNE             loc_1284|101-209
4536|code|CMP             R5, #0|0-45
4538|code|BEQ.W           loc_1316|0-240-172-128
4542|code|LDR.W           R9, [R11,#0x314+var_2E0]|219-248-52-144
4546|code|CMP.W           R9, #0|185-241-0-15
4550|code|BEQ.W           loc_1734|0-240-181-130
4554|code|LDRB.W          R3, [R9]|153-248-0-48
4558|code|CMP             R3, #0x2D ; '-'|45-43
4560|code|BNE             loc_12C6|121-209
4562|code|LDRB.W          R7, [R9,#1]|153-248-1-112
4566|code|CLZ.W           R7, R7|183-250-135-247
4570|code|LSRS            R7, R7, #5|127-9
4572|code|CMP             R7, #0|0-47
4574|code|BEQ             loc_12C8|115-208
4576|code|LDR.W           R3, [R11,#0x314+var_2F8]|219-248-28-48
4580|code|CMP             R3, #0|0-43
4582|code|BLE.W           loc_165E|64-243-58-130
4586|code|MOV             R0, R8; device_name|64-70
4588|code|MOVS            R1, #0; read_only|0-33
4590|code|MOV             R2, R6; verbose|50-70
4592|code|BLX             sg_cmds_open_device|255-247-72-238
4596|code|SUBS            R3, R0, #0|3-30
4598|code|STR             R3, [SP,#0x37C+device_fd]|6-147
4600|code|BLT             loc_12A0|82-219
4602|code|ADD             R4, SP, #0x37C+inq_data|16-172
4604|code|MOVS            R2, #1; noisy|1-34
4606|code|MOV             R3, R6; verbose|51-70
4608|code|MOV             R1, R4; inq_data|33-70
4610|code|BLX             sg_simple_inquiry|255-247-116-237
4614|code|MOV             R9, R0|129-70
4616|code|CMP             R0, #0|0-40
4618|code|BEQ.W           loc_131A|0-240-134-128
4622|code|LDR.W           R0, =(stderr_ptr - 0x12F18)|223-248-164-7
4626|code|MOV             R3, R8|67-70
4628|code|LDR.W           R2, =(aSDoesnTRespond - 0x1224); "%s doesn't respond to a SCSI INQUIRY\n"|223-248-204-39
4632|code|MOVS            R1, #1|1-33
4634|code|MOVS            R5, #0x63 ; 'c'|99-37
4636|code|LDR.W           R4, [R10,R0]; stderr|90-248-0-64
4640|code|ADD             R2, PC; "%s doesn't respond to a SCSI INQUIRY\n"|122-68
4642|code|LDR             R0, [R4]|32-104
4644|code|BLX             __fprintf_chk|255-247-242-237
4648|code|LDR             R0, [SP,#0x37C+device_fd]; device_fd|6-152
4650|code|BLX             sg_cmds_close_device|255-247-138-237
4654|code|CMP             R0, #0|0-40
4656|code|BLT.W           loc_188A|192-242-43-131
4660|code|CMP             R5, #0|0-45
4662|code|ITE GE|172-191
4664|code|MOVGE           R0, R5|40-70
4666|code|MOVLT           R0, #0x63 ; 'c'|99-32
4668|code|B               loc_104E|7-231
4670|code|LDR.W           R3, =(stderr_ptr - 0x12F18)|223-248-116-55
4674|code|MOV             R9, R7|185-70
4676|code|LDR.W           R8, =(aUnexpectedExtr - 0x1250); "Unexpected extra argument: %s\n"|223-248-160-135
4680|code|LDR.W           R4, [R10,R3]; stderr|90-248-3-64
4684|code|ADD             R8, PC; "Unexpected extra argument: %s\n"|248-68
4686|code|B               loc_1268|11-224
4688|code|LDR.W           R3, [R6,R3,LSL#2]|86-248-35-48
4692|code|MOVS            R1, #1|1-33
4694|code|LDR             R0, [R4]|32-104
4696|code|MOV             R2, R8|66-70
4698|code|BLX             __fprintf_chk|255-247-216-237
4702|code|LDR.W           R3, [R9]|217-248-0-48
4706|code|ADDS            R3, #1|1-51
4708|code|STR.W           R3, [R9]|201-248-0-48
4712|code|LDR             R3, [R7]|59-104
4714|code|CMP             R5, R3|157-66
4716|code|BGT             loc_1250|240-220
4718|code|LDR.W           R0, =(aUsageSgSanitiz - 0x127E); "Usage: sg_sanitize [--ause] [--block] ["...|223-248-124-7
4722|code|MOVS            R1, #1; size|1-33
4724|code|LDR             R3, [R4]; s|35-104
4726|code|MOV.W           R2, #0x6E8; n|79-244-221-98
4730|code|ADD             R0, PC; "Usage: sg_sanitize [--ause] [--block] ["...|120-68
4732|code|BLX             fwrite|255-247-120-237
4736|code|MOVS            R0, #1|1-32
4738|code|B               loc_104E|228-230
4740|code|LDR.W           R3, =(stderr_ptr - 0x12F18)|223-248-44-55
4744|code|MOVS            R1, #1; size|1-33
4746|code|LDR.W           R0, =(aOneAndOnlyOneO - 0x1298); "one and only one of '--block', '--crypt"...|223-248-100-7
4750|code|MOVS            R2, #0x4C ; 'L'; n|76-34
4752|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
4756|code|ADD             R0, PC; "one and only one of '--block', '--crypt"...|120-68
4758|code|LDR             R3, [R3]; s|27-104
4760|code|BLX             fwrite|255-247-106-237
4764|code|MOVS            R0, #1|1-32
4766|code|B               loc_104E|214-230
4768|code|LDR.W           R3, =(stderr_ptr - 0x12F18)|223-248-16-55
4772|code|NEGS            R0, R0; errnum|64-66
4774|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
4778|code|LDR             R4, [R3]|28-104
4780|code|BLX             safe_strerror|255-247-198-237
4784|code|LDR.W           R2, =(aSgSanitizeOpen - 0x12BC); "sg_sanitize: open error: %s: %s\n"|223-248-64-39
4788|code|MOV             R3, R8|67-70
4790|code|MOVS            R1, #1|1-33
4792|code|ADD             R2, PC; "sg_sanitize: open error: %s: %s\n"|122-68
4794|code|STR             R0, [SP,#0x37C+longind]|0-144
4796|code|MOV             R0, R4|32-70
4798|code|BLX             __fprintf_chk|255-247-166-237
4802|code|MOVS            R0, #0xF|15-32
4804|code|B               loc_104E|195-230
4806|code|MOVS            R7, #0|0-39
4808|code|MOVS            R1, #0; c|0-33
4810|code|MOVS            R2, #0x68 ; 'h'; n|104-34
4812|code|MOV             R0, R4; s|32-70
4814|code|BLX             memset|255-247-146-237
4818|code|MOVS            R0, #3|3-32
4820|code|MOV             R1, R9|73-70
4822|code|MOV             R2, R4|34-70
4824|code|BLX             __xstat64|255-247-218-237
4828|code|CMP             R0, #0|0-40
4830|code|BLT.W           loc_1686|192-242-210-129
4834|code|LDR.W           R3, [R11,#0x314+var_2F8]|219-248-28-48
4838|code|CMP             R3, #0|0-43
4840|code|BGT.W           loc_11EA|63-247-127-175
4844|code|LDR             R3, [R4,#0x30]|35-107
4846|code|CMP.W           R3, #0x10000|179-245-128-63
4850|code|STR.W           R3, [R11,#0x314+var_2F8]|203-248-28-48
4854|code|BLT.W           loc_11E0|255-246-115-175
4858|code|LDR.W           R3, =(stderr_ptr - 0x12F18)|223-248-184-54
4862|code|MOVS            R1, #1; size|1-33
4864|code|LDR.W           R0, =(aPatternFileLen - 0x130E); "pattern file length exceeds 65535 bytes"...|223-248-244-6
4868|code|MOVS            R2, #0x41 ; 'A'; n|65-34
4870|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
4874|code|ADD             R0, PC; "pattern file length exceeds 65535 bytes"...|120-68
4876|code|LDR             R3, [R3]; s|27-104
4878|code|BLX             fwrite|255-247-48-237
4882|code|MOVS            R0, #0xF|15-32
4884|code|B               loc_104E|155-230
4886|code|MOV             R7, R5|47-70
4888|code|B               loc_11EA|103-231
4890|code|LDRB            R0, [R4,#1]; pdt|96-120
4892|code|MOVS            R1, #0x20 ; ' '; buff_len|32-33
4894|code|ADD             R2, SP, #0x37C+buff; buff|66-170
4896|code|BLX             sg_get_pdt_str|255-247-170-237
4900|code|LDRB            R4, [R4,#1]|100-120
4902|code|LDR.W           R1, =(a8s16s4sPeriphe - 0x1336); "    %.8s  %.16s  %.4s   peripheral_type"...|223-248-212-22
4906|code|ADD.W           R3, SP, #0x37C+inq_data.revision|13-241-98-3
4910|code|ADD             R2, SP, #0x37C+inq_data.vendor|18-170
4912|code|STR             R3, [SP,#0x37C+longind]|0-147
4914|code|ADD             R1, PC; "    %.8s  %.16s  %.4s   peripheral_type"...|121-68
4916|code|STR             R4, [SP,#0x37C+var_374]|2-148
4918|code|ADD.W           R3, SP, #0x37C+inq_data.product|13-241-81-3
4922|code|STR             R0, [SP,#0x37C+var_378]|1-144
4924|code|MOVS            R0, #1|1-32
4926|code|BLX             __printf_chk|255-247-96-237
4930|code|CMP             R5, #0|0-45
4932|code|BNE.W           loc_1590|64-240-36-129
4936|code|STR             R5, [SP,#0x37C+dxferp]|7-149
4938|code|STR             R5, [SP,#0x37C+dxfer_len]|8-149
4940|code|LDR.W           R3, [R11,#0x314+var_2EC]|219-248-40-48
4944|code|CBNZ            R3, loc_135C|35-185
4946|code|LDR.W           R3, [R11,#0x314+var_300]|219-248-20-48
4950|code|CMP             R3, #0|0-43
4952|code|BEQ.W           loc_16D0|0-240-186-129
4956|code|LDR.W           R3, [R11,#0x314+var_304]|219-248-16-48
4960|code|STR             R3, [SP,#0x37C+var_358]|9-147
4962|code|CMP             R3, #0|0-43
4964|code|BNE.W           loc_1570|64-240-4-129
4968|code|LDR.W           R3, [R11,#0x314+var_2E4]|219-248-48-48
4972|code|CMP             R3, #0|0-43
4974|code|BNE.W           loc_1570|64-240-255-128
4978|code|MOV.W           R9, #1|79-240-1-9
4982|code|ADD             R7, SP, #0x37C+s|94-175
4984|code|MOVS            R2, #0xA; n|10-34
4986|code|MOVS            R1, #0; c|0-33
4988|code|MOV             R0, R7; s|56-70
4990|code|BLX             memset|255-247-58-237
4994|code|LDR.W           R3, [R11,#0x314+var_2F4]|219-248-32-48
4998|code|MOVS            R2, #0x48 ; 'H'|72-34
5000|code|STRB            R2, [R7]|58-112
5002|code|CMP             R3, #0|0-43
5004|code|BEQ.W           loc_1582|0-240-249-128
5008|code|MOVS            R3, #1|1-35
5010|code|STRB            R3, [R7,#1]|123-112
5012|code|CMP.W           R9, #0|185-241-0-15
5016|code|BEQ             loc_13A2|3-208
5018|code|LDRB            R3, [R7,#1]|123-120
5020|code|ORN.W           R3, R3, #0x7F|99-240-127-3
5024|code|STRB            R3, [R7,#1]|123-112
5026|code|LDR.W           R3, [R11,#0x314+var_314]|219-248-0-48
5030|code|CBZ             R3, loc_13B0|27-177
5032|code|LDRB            R3, [R7,#1]|123-120
5034|code|ORR.W           R3, R3, #0x20|67-240-32-3
5038|code|STRB            R3, [R7,#1]|123-112
5040|code|LDR.W           R3, [R11,#0x314+verbose]|219-248-44-48
5044|code|LDR             R1, [SP,#0x37C+dxfer_len]|8-153
5046|code|MOV             R2, R3|26-70
5048|code|CMP             R2, #1|1-42
5050|code|STR             R3, [SP,#0x37C+ptr]|10-147
5052|code|MOV.W           R3, R1,ASR#8|79-234-33-35
5056|code|STRB            R1, [R7,#8]|57-114
5058|code|STRB            R3, [R7,#7]|251-113
5060|code|BLE             loc_1430|52-221
5062|code|LDR.W           R3, =(stderr_ptr - 0x12F18)|223-248-236-53
5066|code|MOVS            R1, #1; size|1-33
5068|code|LDR.W           R5, =(a02x - 0x13E2); "%02x "|223-248-48-86
5072|code|MOVS            R2, #0x12; n|18-34
5074|code|LDR.W           R0, =(aSanitizeCmd - 0x13E4); "    Sanitize cmd: "|223-248-48-6
5078|code|MOV.W           R8, #0|79-240-0-8
5082|code|LDR.W           R4, [R10,R3]; stderr|90-248-3-64
5086|code|ADD             R5, PC; "%02x "|125-68
5088|code|ADD             R0, PC; "    Sanitize cmd: "|120-68
5090|code|LDR             R3, [R4]; s|35-104
5092|code|BLX             fwrite|255-247-196-236
5096|code|STR             R4, [SP,#0x37C+var_350]|11-148
5098|code|MOVS            R1, #1|1-33
5100|code|LDRB.W          R3, [R7,R8]|23-248-8-48
5104|code|LDR             R0, [R4]|32-104
5106|code|ADD             R8, R1|136-68
5108|code|MOV             R2, R5|42-70
5110|code|BLX             __fprintf_chk|255-247-10-237
5114|code|CMP.W           R8, #0xA|184-241-10-15
5118|code|BNE             loc_13EA|244-209
5120|code|LDR             R4, [SP,#0x37C+var_350]|11-156
5122|code|MOV             R0, R8; c|64-70
5124|code|LDR             R1, [R4]; stream|33-104
5126|code|BLX             fputc|255-247-20-237
5130|code|LDR             R5, [SP,#0x37C+dxfer_len]|8-157
5132|code|CMP             R5, #0|0-45
5134|code|BLE             loc_1430|15-221
5136|code|LDR             R3, [SP,#0x37C+ptr]|10-155
5138|code|CMP             R3, #2|2-43
5140|code|BLE             loc_1430|12-221
5142|code|LDR.W           R0, =(aParameterListC - 0x1424); "    Parameter list contents:\n"|223-248-240-5
5146|code|MOVS            R1, #1; size|1-33
5148|code|MOVS            R2, #0x1D; n|29-34
5150|code|LDR             R3, [R4]; s|35-104
5152|code|ADD             R0, PC; "    Parameter list contents:\n"|120-68
5154|code|BLX             fwrite|255-247-166-236
5158|code|LDR             R0, [SP,#0x37C+dxferp]|7-152
5160|code|MOV             R1, R5|41-70
5162|code|MOVS            R2, #1|1-34
5164|code|BLX             dStrHexErr|255-247-166-236
5168|code|BLX             construct_scsi_pt_obj|255-247-128-236
5172|code|MOV             R4, R0|4-70
5174|code|CMP             R0, #0|0-40
5176|code|BEQ.W           loc_18D4|0-240-76-130
5180|code|ADD.W           R8, SP, #0x37C+var_108|13-245-29-120
5184|code|MOV             R1, R7; cdb|57-70
5186|code|MOVS            R2, #0xA; cdb_len|10-34
5188|code|ADD             R5, SP, #0x37C+var_348|13-173
5190|code|BLX             set_scsi_pt_cdb|255-247-66-237
5194|code|MOV             R1, R8; sense|65-70
5196|code|MOV             R0, R4; scsi_pt_obj|32-70
5198|code|MOVS            R2, #0x40 ; '@'; max_sense_len|64-34
5200|code|BLX             set_scsi_pt_sense|255-247-232-236
5204|code|MOV             R0, R4; scsi_pt_obj|32-70
5206|code|LDR             R1, [SP,#0x37C+dxferp]; dxferp|7-153
5208|code|LDR             R2, [SP,#0x37C+dxfer_len]; dxfer_len|8-154
5210|code|BLX             set_scsi_pt_data_out|255-247-90-236
5214|code|CMP.W           R9, #0|185-241-0-15
5218|code|MOVW            R2, #0xD2F0|77-242-240-34
5222|code|LDR             R1, [SP,#0x37C+device_fd]; fd|6-153
5224|code|IT NE|24-191
5226|code|MOVNE           R2, #0x14; timeout_secs|20-34
5228|code|LDR             R3, [SP,#0x37C+ptr]; verbose|10-155
5230|code|MOV             R0, R4; scsi_pt_obj|32-70
5232|code|STR             R5, [SP,#0x37C+dxfer_len]|8-149
5234|code|BLX             do_scsi_pt|255-247-174-236
5238|code|LDR             R3, [SP,#0x37C+ptr]|10-155
5240|code|LDR.W           R1, =(aSanitize - 0x1484); "Sanitize"|223-248-144-21
5244|code|STR             R5, [SP,#0x37C+var_370]|3-149
5246|code|STR             R3, [SP,#0x37C+var_374]|2-147
5248|code|ADD             R1, PC; "Sanitize"|121-68
5250|code|MOVS            R3, #1|1-35
5252|code|STR.W           R8, [SP,#0x37C+longind]; noisy|205-248-0-128
5256|code|STR             R3, [SP,#0x37C+var_378]; verbose|1-147
5258|code|MOVS            R3, #0|0-35
5260|code|MOV             R2, R0|2-70
5262|code|MOV             R0, R4|32-70
5264|code|BLX             sg_cmds_process_resp|255-247-224-236
5268|code|ADDS            R3, R0, #1|67-28
5270|code|MOV             R5, R0|5-70
5272|code|BEQ.W           loc_1634|0-240-204-128
5276|code|ADDS            R5, R0, #2|133-28
5278|code|BEQ.W           loc_16AC|0-240-5-129
5282|code|MOV             R0, R4; scsi_pt_obj|32-70
5284|code|BLX             destruct_scsi_pt_obj|255-247-160-236
5288|code|LDR             R3, [SP,#0x37C+var_358]|9-155
5290|code|CMP             R3, #0|0-43
5292|code|BNE             loc_157E|103-209
5294|code|LDR.W           R3, [R11,#0x314+var_2E4]|219-248-48-48
5298|code|CMP             R3, #0|0-43
5300|code|BNE             loc_157E|99-209
5302|code|LDR.W           R3, =(aProgressIndica - 0x14C6); "Progress indication: %d%% done\n"|223-248-88-53
5306|code|MOV.W           R9, #1|79-240-1-9
5310|code|LDR.W           R11, [SP,#0x37C+var_358]|221-248-36-176
5314|code|ADD             R3, PC; "Progress indication: %d%% done\n"|123-68
5316|code|STR             R3, [SP,#0x37C+dxfer_len]|8-147
5318|code|LDR.W           R3, =(aParameterDataI - 0x14CE); "Parameter data in hex\n"|223-248-76-53
5322|code|ADD             R3, PC; "Parameter data in hex\n"|123-68
5324|code|STR             R3, [SP,#0x37C+var_358]|9-147
5326|code|LDR.W           R3, =(aBadFieldInRequ - 0x14D6); "bad field in Request Sense cdb\n"|223-248-72-53
5330|code|ADD             R3, PC; "bad field in Request Sense cdb\n"|123-68
5332|code|STR             R3, [SP,#0x37C+ptr]|10-147
5334|code|LDR.W           R3, =(aDescriptorType - 0x14DE); "Descriptor type sense may not be suppor"...|223-248-68-53
5338|code|ADD             R3, PC; "Descriptor type sense may not be suppor"...|123-68
5340|code|STR             R3, [SP,#0x37C+var_350]|11-147
5342|code|MOVS            R0, #0x3C ; '<'; seconds|60-32
5344|code|MOVS            R4, #1|1-36
5346|code|BLX             sleep|255-247-52-236
5350|code|MOVS            R1, #0; c|0-33
5352|code|MOVS            R2, #0xFC; n|252-34
5354|code|MOV             R0, R7; s|56-70
5356|code|BLX             memset|255-247-130-236
5360|code|STMEA.W         SP, {R4,R6}|141-232-80-0
5364|code|LDR             R0, [SP,#0x37C+device_fd]; sg_fd|6-152
5366|code|MOV             R1, R9; desc|73-70
5368|code|MOV             R2, R7; resp|58-70
5370|code|MOVS            R3, #0xFC; mx_resp_len|252-35
5372|code|BLX             sg_ll_request_sense|255-247-140-236
5376|code|MOV             R5, R0|5-70
5378|code|CMP             R0, #0|0-40
5380|code|BEQ.W           loc_174C|0-240-34-129
5384|code|CMP             R0, #9|9-40
5386|code|BEQ.W           loc_1952|0-240-34-130
5390|code|CMP             R0, #5|5-40
5392|code|BNE.W           loc_191C|64-240-4-130
5396|code|LDR.W           R3, =(stderr_ptr - 0x12F18)|223-248-156-52
5400|code|MOV             R1, R4; size|33-70
5402|code|LDR             R0, [SP,#0x37C+ptr]; ptr|10-152
5404|code|MOVS            R2, #0x1F; n|31-34
5406|code|LDR.W           R4, [R10,R3]; stderr|90-248-3-64
5410|code|LDR             R3, [R4]; s|35-104
5412|code|BLX             fwrite|255-247-36-236
5416|code|CMP.W           R9, #0|185-241-0-15
5420|code|BNE.W           loc_18C2|64-240-201-129
5424|code|LDR             R3, [SP,#0x37C+dxferp]|7-155
5426|code|CBZ             R3, loc_153A|19-177
5428|code|LDR             R0, [SP,#0x37C+dxferp]; ptr|7-152
5430|code|BLX             free|255-247-248-235
5434|code|LDR             R0, [SP,#0x37C+device_fd]; device_fd|6-152
5436|code|BLX             sg_cmds_close_device|255-247-0-236
5440|code|CMP             R0, #0|0-40
5442|code|BGE.W           loc_1234|191-246-119-174
5446|code|LDR.W           R3, =(stderr_ptr - 0x12F18)|223-248-108-52
5450|code|NEGS            R0, R0; errnum|64-66
5452|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
5456|code|LDR             R4, [R3]|28-104
5458|code|BLX             safe_strerror|255-247-116-236
5462|code|LDR.W           R2, =(aCloseErrorS - 0x1560); "close error: %s\n"|223-248-200-36
5466|code|MOVS            R1, #1|1-33
5468|code|ADD             R2, PC; "close error: %s\n"|122-68
5470|code|MOV             R3, R0|3-70
5472|code|MOV             R0, R4|32-70
5474|code|BLX             __fprintf_chk|255-247-84-236
5478|code|CMP             R5, #0|0-45
5480|code|BNE.W           loc_1234|127-244-100-174
5484|code|MOVS            R0, #0xF|15-32
5486|code|B               loc_104E|110-229
5488|code|LDR             R3, [SP,#0x37C+var_358]|9-155
5490|code|MOVS.W          R9, R3|19-241-0-9
5494|code|IT NE|24-191
5496|code|MOVNE.W         R9, #1|79-240-1-9
5500|code|B               loc_1376|251-230
5502|code|MOVS            R5, #0|0-37
5504|code|B               loc_1530|214-231
5506|code|LDR.W           R3, [R11,#0x314+var_310]|219-248-4-48
5510|code|CMP             R3, #0|0-43
5512|code|BEQ             loc_1676|117-208
5514|code|MOVS            R3, #2|2-35
5516|code|STRB            R3, [R7,#1]|123-112
5518|code|B               loc_1394|1-231
5520|code|LDR.W           R4, [R11,#0x314+var_2F8]|219-248-28-64
5524|code|MOVS            R1, #1; size|1-33
5526|code|ADDS            R3, R4, #4|35-29
5528|code|STR             R3, [SP,#0x37C+dxfer_len]|8-147
5530|code|MOV             R0, R3; nmemb|24-70
5532|code|BLX             calloc|255-247-160-235
5536|code|STR             R0, [SP,#0x37C+dxferp]|7-144
5538|code|CMP             R0, #0|0-40
5540|code|BEQ.W           loc_1968|0-240-224-129
5544|code|CMP             R7, #0|0-47
5546|code|BEQ.W           loc_17A4|0-240-251-128
5550|code|MOV             R0, R9|72-70
5552|code|BLX             sg_set_binary_mode|255-247-162-235
5556|code|CMP             R0, #0|0-40
5558|code|BLT.W           loc_1912|192-242-172-129
5562|code|LDR             R3, [SP,#0x37C+dxferp]|7-155
5564|code|MOVS            R0, #0; fd|0-32
5566|code|MOV             R2, R4; nbytes|34-70
5568|code|ADDS            R1, R3, #4; buf|25-29
5570|code|BLX             read|255-247-172-235
5574|code|CMP             R0, #0|0-40
5576|code|BLT.W           loc_18EE|192-242-145-129
5580|code|CMP             R4, R0|132-66
5582|code|BLE             loc_15FE|22-221
5584|code|LDR             R5, =(stderr_ptr - 0x12F18)|248-77
5586|code|MOVS            R1, #1|1-33
5588|code|LDR.W           R7, [R11,#0x314+var_2E0]|219-248-52-112
5592|code|MOV             R3, R4|35-70
5594|code|LDR.W           R2, =(aTriedToReadDBy - 0x15E6); "tried to read %d bytes from %s, got %d "...|223-248-72-36
5598|code|LDR.W           R5, [R10,R5]; stderr|90-248-5-80
5602|code|ADD             R2, PC; "tried to read %d bytes from %s, got %d "...|122-68
5604|code|STR             R0, [SP,#0x37C+var_378]|1-144
5606|code|STR             R7, [SP,#0x37C+longind]|0-151
5608|code|LDR             R0, [R5]|40-104
5610|code|BLX             __fprintf_chk|255-247-16-236
5614|code|LDR.W           R0, =(aSoPadWith0x0By - 0x15FA); "  so pad with 0x0 bytes and continue\n"|223-248-56-4
5618|code|LDR             R3, [R5]; s|43-104
5620|code|MOVS            R1, #1; size|1-33
5622|code|ADD             R0, PC; "  so pad with 0x0 bytes and continue\n"|120-68
5624|code|MOVS            R2, #0x25 ; '%'; n|37-34
5626|code|BLX             fwrite|255-247-186-235
5630|code|LDR             R1, [SP,#0x37C+dxferp]|7-153
5632|code|LDR.W           R2, [R11,#0x314+var_2F0]|219-248-36-32
5636|code|LDR.W           R3, [R11,#0x314+var_30C]|219-248-8-48
5640|code|AND.W           R3, R3, #0x1F|3-240-31-3
5644|code|STRB            R3, [R1]|11-112
5646|code|CBZ             R2, loc_161A|34-177
5648|code|AND.W           R2, R2, #3|2-240-3-2
5652|code|ORR.W           R3, R3, R2,LSL#5|67-234-66-19
5656|code|STRB            R3, [R1]|11-112
5658|code|LDR.W           R3, [R11,#0x314+var_2FC]|219-248-24-48
5662|code|CBZ             R3, loc_162A|35-177
5664|code|LDR             R2, [SP,#0x37C+dxferp]|7-154
5666|code|LDRB            R3, [R2]|19-120
5668|code|ORN.W           R3, R3, #0x7F|99-240-127-3
5672|code|STRB            R3, [R2]|19-112
5674|code|LDR             R2, [SP,#0x37C+dxferp]|7-154
5676|code|STRB            R4, [R2,#3]|212-112
5678|code|ASRS            R4, R4, #8|36-18
5680|code|STRB            R4, [R2,#2]|148-112
5682|code|B               loc_134C|139-230
5684|code|MOV             R0, R4; scsi_pt_obj|32-70
5686|code|BLX             destruct_scsi_pt_obj|255-247-216-235
5690|code|ADD             R4, SP, #0x37C+var_254|74-172
5692|code|MOV             R3, R6|51-70
5694|code|MOV             R0, R5|40-70
5696|code|MOVS            R1, #0x50 ; 'P'|80-33
5698|code|MOV             R2, R4|34-70
5700|code|BLX             sg_get_category_sense_str|255-247-12-236
5704|code|LDR             R0, =(stderr_ptr - 0x12F18)|218-72
5706|code|LDR             R2, =(aSanitizeFailed - 0x1658); "Sanitize failed: %s\n"|248-74
5708|code|MOV             R3, R4|35-70
5710|code|MOVS            R1, #1|1-33
5712|code|LDR.W           R0, [R10,R0]; stderr|90-248-0-0
5716|code|ADD             R2, PC; "Sanitize failed: %s\n"|122-68
5718|code|LDR             R0, [R0]|0-104
5720|code|BLX             __fprintf_chk|255-247-216-235
5724|code|B               loc_1530|104-231
5726|code|LDR             R3, =(stderr_ptr - 0x12F18)|213-75
5728|code|MOVS            R1, #1; size|1-33
5730|code|LDR             R0, =(aOverwriteRequi - 0x166E); "'--overwrite' requires '--ipl=LEN' opti"...|243-72
5732|code|MOVS            R2, #0x41 ; 'A'; n|65-34
5734|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
5738|code|ADD             R0, PC; "'--overwrite' requires '--ipl=LEN' opti"...|120-68
5740|code|LDR             R3, [R3]; s|27-104
5742|code|BLX             fwrite|255-247-128-235
5746|code|MOVS            R0, #1|1-32
5748|code|B               loc_104E|235-228
5750|code|LDR.W           R3, [R11,#0x314+var_308]|219-248-12-48
5754|code|CMP             R3, #0|0-43
5756|code|BEQ.W           loc_1802|0-240-193-128
5760|code|MOVS            R3, #3|3-35
5762|code|STRB            R3, [R7,#1]|123-112
5764|code|B               loc_1394|134-230
5766|code|LDR             R3, =(stderr_ptr - 0x12F18)|203-75
5768|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
5772|code|LDR             R4, [R3]|28-104
5774|code|BLX             __errno_location|255-247-166-235
5778|code|LDR             R0, [R0]; errnum|0-104
5780|code|BLX             safe_strerror|255-247-210-235
5784|code|LDR             R2, =(aPatternFileUna - 0x16A2); "pattern file: unable to stat(%s): %s\n"|230-74
5786|code|MOV             R3, R9|75-70
5788|code|MOVS            R1, #1|1-33
5790|code|ADD             R2, PC; "pattern file: unable to stat(%s): %s\n"|122-68
5792|code|STR             R0, [SP,#0x37C+longind]|0-144
5794|code|MOV             R0, R4|32-70
5796|code|BLX             __fprintf_chk|255-247-178-235
5800|code|MOVS            R0, #0xF|15-32
5802|code|B               loc_104E|208-228
5804|code|LDR             R3, [SP,#0x37C+dxfer_len]|8-155
5806|code|LDR             R5, [R3]|29-104
5808|code|CMP             R5, #3|3-45
5810|code|BEQ.W           loc_1834|0-240-191-128
5814|code|BLT             loc_16C2|4-219
5816|code|SUB.W           R3, R5, #0x14|165-241-20-3
5820|code|CMP             R3, #1|1-43
5822|code|BLS.W           loc_14A2|127-246-240-174
5826|code|MOV             R0, R4; scsi_pt_obj|32-70
5828|code|BLX             destruct_scsi_pt_obj|255-247-144-235
5832|code|CMP             R5, #0|0-45
5834|code|BEQ.W           loc_14A8|63-244-237-174
5838|code|B               loc_163A|180-231
5840|code|LDR             R5, =(aAllDataOnSWill - 0x16DA); "    ALL data on %s will be DESTROYED\n"|217-77
5842|code|LDR             R4, =(aPressControlCT - 0x16DC); "        Press control-C to abort"|218-76
5844|code|LDR             R0, =(aASanitizeWillC - 0x16DE); "\nA SANITIZE will commence in 15 second"...|218-72
5846|code|ADD             R5, PC; "    ALL data on %s will be DESTROYED\n"|125-68
5848|code|ADD             R4, PC; "        Press control-C to abort"|124-68
5850|code|ADD             R0, PC; "\nA SANITIZE will commence in 15 second"...|120-68
5852|code|BLX             puts|255-247-90-235
5856|code|MOV             R1, R5|41-70
5858|code|MOV             R2, R8|66-70
5860|code|MOVS            R0, #1|1-32
5862|code|BLX             __printf_chk|255-247-140-235
5866|code|MOV             R0, R4; s|32-70
5868|code|BLX             puts|255-247-82-235
5872|code|MOVS            R0, #5; seconds|5-32
5874|code|BLX             sleep|255-247-44-235
5878|code|LDR             R0, =(aASanitizeWillC_0 - 0x16FC); "\nA SANITIZE will commence in 10 second"...|211-72
5880|code|ADD             R0, PC; "\nA SANITIZE will commence in 10 second"...|120-68
5882|code|BLX             puts|255-247-76-235
5886|code|MOV             R1, R5|41-70
5888|code|MOV             R2, R8|66-70
5890|code|MOVS            R0, #1|1-32
5892|code|BLX             __printf_chk|255-247-124-235
5896|code|MOV             R0, R4; s|32-70
5898|code|BLX             puts|255-247-68-235
5902|code|MOVS            R0, #5; seconds|5-32
5904|code|BLX             sleep|255-247-28-235
5908|code|LDR             R0, =(aASanitizeWillC_1 - 0x171A); "\nA SANITIZE will commence in 5 seconds"|204-72
5910|code|ADD             R0, PC; "\nA SANITIZE will commence in 5 seconds"|120-68
5912|code|BLX             puts|255-247-60-235
5916|code|MOV             R1, R5|41-70
5918|code|MOV             R2, R8|66-70
5920|code|MOVS            R0, #1|1-32
5922|code|BLX             __printf_chk|255-247-110-235
5926|code|MOV             R0, R4; s|32-70
5928|code|BLX             puts|255-247-52-235
5932|code|MOVS            R0, #5; seconds|5-32
5934|code|BLX             sleep|255-247-14-235
5938|code|B               loc_135C|19-230
5940|code|LDR             R3, =(stderr_ptr - 0x12F18)|159-75
5942|code|MOV             R1, R7; size|57-70
5944|code|LDR             R0, =(aOverwriteRequi_0 - 0x1744); "'--overwrite' requires '--pattern=PF' o"...|196-72
5946|code|MOVS            R2, #0x2D ; '-'; n|45-34
5948|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
5952|code|ADD             R0, PC; "'--overwrite' requires '--pattern=PF' o"...|120-68
5954|code|LDR             R3, [R3]; s|27-104
5956|code|BLX             fwrite|255-247-20-235
5960|code|MOV             R0, R7|56-70
5962|code|B               loc_104E|128-228
5964|code|LDRB.W          R8, [R7,#7]|151-248-7-128
5968|code|CMP             R6, #2|2-46
5970|code|ADD.W           R8, R8, #8|8-241-8-8
5974|code|BLE             loc_1774|13-221
5976|code|LDR             R3, =(stderr_ptr - 0x12F18)|150-75
5978|code|MOV             R1, R4; size|33-70
5980|code|MOVS            R2, #0x16; n|22-34
5982|code|LDR             R0, [SP,#0x37C+var_358]; ptr|9-152
5984|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
5988|code|LDR             R3, [R3]; s|27-104
5990|code|BLX             fwrite|255-247-4-235
5994|code|MOV             R0, R7|56-70
5996|code|MOV             R1, R8|65-70
5998|code|MOV             R2, R4|34-70
6000|code|BLX             dStrHexErr|255-247-4-235
6004|code|ADD             R4, SP, #0x37C+progress_outp|14-172
6006|code|MOV             R1, R8; sb_len|65-70
6008|code|MOV             R0, R7; sensep|56-70
6010|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
6014|code|MOV             R2, R4; progress_outp|34-70
6016|code|STR             R3, [SP,#0x37C+progress_outp]|14-147
6018|code|BLX             sg_get_sense_progress_fld|255-247-32-235
6022|code|LDR             R2, [R4]|34-104
6024|code|CMP             R2, #0|0-42
6026|code|BLT.W           loc_1980|192-242-249-128
6030|code|MOVS            R3, #0x64 ; 'd'|100-35
6032|code|MOVS            R0, #1|1-32
6034|code|MUL.W           R2, R3, R2|3-251-2-242
6038|code|LDR             R1, [SP,#0x37C+dxfer_len]|8-153
6040|code|ASRS            R2, R2, #0x10|18-20
6042|code|BLX             __printf_chk|255-247-50-235
6046|code|ADD.W           R11, R11, #1|11-241-1-11
6050|code|B               loc_14DE|156-230
6052|code|LDR.W           R5, [R11,#0x314+var_2E0]|219-248-52-80
6056|code|MOV             R1, R7|57-70
6058|code|MOV             R0, R5|40-70
6060|code|BLX             open64|255-247-236-234
6064|code|SUBS            R7, R0, #0|7-30
6066|code|BLT             loc_180E|44-219
6068|code|BLX             sg_set_binary_mode|255-247-160-234
6072|code|CMP             R0, #0|0-40
6074|code|BLT             loc_185A|78-219
6076|code|LDR             R3, [SP,#0x37C+dxferp]|7-155
6078|code|MOV             R0, R7; fd|56-70
6080|code|MOV             R2, R4; nbytes|34-70
6082|code|ADDS            R1, R3, #4; buf|25-29
6084|code|BLX             read|255-247-170-234
6088|code|CMP             R0, #0|0-40
6090|code|BLT             loc_1864|75-219
6092|code|CMP             R4, R0|132-66
6094|code|BLE             loc_17FA|20-221
6096|code|LDR             R5, =(stderr_ptr - 0x12F18)|120-77
6098|code|MOVS            R1, #1|1-33
6100|code|LDR             R2, =(aTriedToReadDBy - 0x17E0); "tried to read %d bytes from %s, got %d "...|158-74
6102|code|MOV             R3, R4|35-70
6104|code|LDR.W           R5, [R10,R5]; stderr|90-248-5-80
6108|code|ADD             R2, PC; "tried to read %d bytes from %s, got %d "...|122-68
6110|code|STR             R0, [SP,#0x37C+var_378]|1-144
6112|code|LDR.W           R0, [R11,#0x314+var_2E0]|219-248-52-0
6116|code|STR             R0, [SP,#0x37C+longind]|0-144
6118|code|LDR             R0, [R5]|40-104
6120|code|BLX             __fprintf_chk|255-247-16-235
6124|code|LDR             R0, =(aSoPadWith0x0By - 0x17F6); "  so pad with 0x0 bytes and continue\n"|153-72
6126|code|LDR             R3, [R5]; s|43-104
6128|code|MOVS            R1, #1; size|1-33
6130|code|ADD             R0, PC; "  so pad with 0x0 bytes and continue\n"|120-68
6132|code|MOVS            R2, #0x25 ; '%'; n|37-34
6134|code|BLX             fwrite|255-247-188-234
6138|code|MOV             R0, R7; fd|56-70
6140|code|BLX             close|255-247-84-235
6144|code|B               loc_15FE|253-230
6146|code|LDR.W           R3, [R11,#0x314+var_300]|219-248-20-48
6150|code|CBZ             R3, loc_1830|155-177
6152|code|MOVS            R3, #0x1F|31-35
6154|code|STRB            R3, [R7,#1]|123-112
6156|code|B               loc_1394|194-229
6158|code|ADD             R4, SP, #0x37C+var_108|157-172
6160|code|LDR             R2, =(aSgSanitizeCoul - 0x181C); "sg_sanitize: could not open %s for read"...|145-74
6162|code|MOV.W           R1, #0x100|79-244-128-113
6166|code|STR             R5, [SP,#0x37C+var_378]|1-149
6168|code|ADD             R2, PC; "sg_sanitize: could not open %s for read"...|122-68
6170|code|MOV             R0, R4|32-70
6172|code|STR             R2, [SP,#0x37C+longind]|0-146
6174|code|MOV             R3, R1|11-70
6176|code|MOVS            R2, #1|1-34
6178|code|BLX             __snprintf_chk|255-247-72-235
6182|code|MOV             R0, R4; s|32-70
6184|code|BLX             perror|255-247-156-234
6188|code|MOVS            R5, #0xF|15-37
6190|code|B               loc_1534|129-230
6192|code|MOVS            R5, #1|1-37
6194|code|B               loc_163A|2-231
6196|code|ADD             R5, SP, #0x37C+var_4|222-173
6198|code|MOV             R0, R4; scsi_pt_obj|32-70
6200|code|MOVS            R2, #0|0-34
6202|code|MOVS            R3, #0|0-35
6204|code|STRD.W          R2, R3, [R5,#-0x340]!|101-233-208-35
6208|code|BLX             get_scsi_pt_sense_len|255-247-2-235
6212|code|MOV             R2, R5; info_outp|42-70
6214|code|MOV             R1, R0; sb_len|1-70
6216|code|MOV             R0, R8; sensep|64-70
6218|code|BLX             sg_get_sense_info_fld|255-247-58-235
6222|code|CBNZ            R0, loc_18A2|64-187
6224|code|LDR             R3, [SP,#0x37C+dxfer_len]|8-155
6226|code|LDR             R5, [R3]|29-104
6228|code|B               loc_16C2|53-231
6230|code|BLX             __stack_chk_fail|255-247-128-234
6234|code|LDR             R0, =(aSgSetBinaryMod_0 - 0x1860); "sg_set_binary_mode"|128-72
6236|code|ADD             R0, PC; "sg_set_binary_mode"|120-68
6238|code|BLX             perror|255-247-130-234
6242|code|B               loc_17BC|171-231
6244|code|ADD             R4, SP, #0x37C+var_108|157-172
6246|code|LDR             R2, =(aSgSanitizeCoul_0 - 0x1874); "sg_sanitize: couldn't read from %s"|126-74
6248|code|MOV.W           R1, #0x100|79-244-128-113
6252|code|STR             R5, [SP,#0x37C+var_378]|1-149
6254|code|MOV             R3, R1|11-70
6256|code|ADD             R2, PC; "sg_sanitize: couldn't read from %s"|122-68
6258|code|MOV             R0, R4|32-70
6260|code|STR             R2, [SP,#0x37C+longind]|0-146
6262|code|MOVS            R2, #1|1-34
6264|code|BLX             __snprintf_chk|255-247-28-235
6268|code|MOV             R0, R4; s|32-70
6270|code|BLX             perror|255-247-114-234
6274|code|MOV             R0, R7; fd|56-70
6276|code|BLX             close|255-247-16-235
6280|code|B               loc_182C|208-231
6282|code|NEGS            R0, R0; errnum|64-66
6284|code|LDR             R4, [R4]|36-104
6286|code|BLX             safe_strerror|255-247-214-234
6290|code|LDR             R2, =(aCloseErrorS - 0x189A); "close error: %s\n"|116-74
6292|code|MOVS            R1, #1|1-33
6294|code|ADD             R2, PC; "close error: %s\n"|122-68
6296|code|MOV             R3, R0|3-70
6298|code|MOV             R0, R4|32-70
6300|code|BLX             __fprintf_chk|255-247-182-234
6304|code|B               loc_1234|200-228
6306|code|LDR             R3, =(stderr_ptr - 0x12F18)|68-75
6308|code|MOVS            R1, #1|1-33
6310|code|LDRD.W          R8, R9, [R5]|213-233-0-137
6314|code|LDR             R2, =(aMediumOrHardwa - 0x18B4); "Medium or hardware error starting at lb"...|111-74
6316|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
6320|code|ADD             R2, PC; "Medium or hardware error starting at lb"...|122-68
6322|code|STRD.W          R8, R9, [SP,#0x37C+longind]|205-233-0-137
6326|code|STRD.W          R8, R9, [SP,#0x37C+var_374]|205-233-2-137
6330|code|LDR             R0, [R3]|24-104
6332|code|BLX             __fprintf_chk|255-247-166-234
6336|code|B               loc_1850|198-231
6338|code|MOV             R1, R9; size|73-70
6340|code|LDR             R3, [R4]; s|35-104
6342|code|LDR             R0, [SP,#0x37C+var_350]; ptr|11-152
6344|code|MOVS            R2, #0x46 ; 'F'; n|70-34
6346|code|BLX             fwrite|255-247-82-234
6350|code|MOV.W           R9, #0|79-240-0-9
6354|code|B               loc_179E|100-231
6356|code|LDR             R3, =(sg_warnings_strm_ptr - 0x12F18)|101-75
6358|code|MOVS            R1, #1; size|1-33
6360|code|LDR             R0, =(aSanitizeOutOfM - 0x18E8); "Sanitize: out of memory\n"|101-72
6362|code|MOVS            R2, #0x18; n|24-34
6364|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
6368|code|LDR.W           R3, [R10,R3]; sg_warnings_strm|90-248-3-48
6372|code|ADD             R0, PC; "Sanitize: out of memory\n"|120-68
6374|code|LDR             R3, [R3]; s|27-104
6376|code|BLX             fwrite|255-247-66-234
6380|code|B               loc_163A|165-230
6382|code|LDR.W           R2, [R11,#0x314+var_2E0]|219-248-52-32
6386|code|ADD             R4, SP, #0x37C+var_108|157-172
6388|code|LDR             R5, =(aSgSanitizeCoul_0 - 0x1904); "sg_sanitize: couldn't read from %s"|95-77
6390|code|MOV.W           R1, #0x100|79-244-128-113
6394|code|MOV             R0, R4|32-70
6396|code|MOV             R3, R1|11-70
6398|code|STR             R2, [SP,#0x37C+var_378]|1-146
6400|code|ADD             R5, PC; "sg_sanitize: couldn't read from %s"|125-68
6402|code|MOVS            R2, #1|1-34
6404|code|STR             R5, [SP,#0x37C+longind]|0-149
6406|code|BLX             __snprintf_chk|255-247-214-234
6410|code|MOV             R0, R4; s|32-70
6412|code|BLX             perror|255-247-42-234
6416|code|B               loc_182C|140-231
6418|code|LDR             R0, =(aSgSetBinaryMod_0 - 0x1918); "sg_set_binary_mode"|89-72
6420|code|ADD             R0, PC; "sg_set_binary_mode"|120-68
6422|code|BLX             perror|255-247-38-234
6426|code|B               loc_15BA|78-230
6428|code|ADD             R7, SP, #0x37C+var_254|74-175
6430|code|MOVS            R1, #0x50 ; 'P'|80-33
6432|code|MOV             R3, R6|51-70
6434|code|MOV             R2, R7|58-70
6436|code|BLX             sg_get_category_sense_str|255-247-156-234
6440|code|LDR             R0, =(stderr_ptr - 0x12F18)|34-72
6442|code|MOV             R3, R7|59-70
6444|code|LDR             R2, =(aRequestSenseS - 0x1938); "Request Sense: %s\n"|83-74
6446|code|MOV             R1, R4|33-70
6448|code|LDR.W           R7, [R10,R0]; stderr|90-248-0-112
6452|code|ADD             R2, PC; "Request Sense: %s\n"|122-68
6454|code|LDR             R0, [R7]|56-104
6456|code|BLX             __fprintf_chk|255-247-104-234
6460|code|CMP             R6, #0|0-46
6462|code|BNE.W           loc_1530|127-244-247-173
6466|code|LDR             R0, =(aTryTheVOptionF - 0x194E); "    try the '-v' option for more inform"...|79-72
6468|code|MOV             R1, R4; size|33-70
6470|code|LDR             R3, [R7]; s|59-104
6472|code|MOVS            R2, #0x2D ; '-'; n|45-34
6474|code|ADD             R0, PC; "    try the '-v' option for more inform"...|120-68
6476|code|BLX             fwrite|255-247-16-234
6480|code|B               loc_1530|238-229
6482|code|LDR             R3, =(stderr_ptr - 0x12F18)|24-75
6484|code|MOV             R1, R4; size|33-70
6486|code|LDR             R0, =(aRequestSenseCo - 0x1962); "Request Sense command not supported\n"|75-72
6488|code|MOVS            R2, #0x24 ; '$'; n|36-34
6490|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
6494|code|ADD             R0, PC; "Request Sense command not supported\n"|120-68
6496|code|LDR             R3, [R3]; s|27-104
6498|code|BLX             fwrite|255-247-6-234
6502|code|B               loc_1530|227-229
6504|code|LDR             R0, =(stderr_ptr - 0x12F18)|18-72
6506|code|MOVS            R1, #1|1-33
6508|code|LDR             R2, =(aUnableToAlloca - 0x197A); "unable to allocate %d bytes of memory w"...|70-74
6510|code|MOV             R5, R1|13-70
6512|code|LDR             R3, [SP,#0x37C+dxfer_len]|8-155
6514|code|LDR.W           R4, [R10,R0]; stderr|90-248-0-64
6518|code|ADD             R2, PC; "unable to allocate %d bytes of memory w"...|122-68
6520|code|LDR             R0, [R4]|32-104
6522|code|BLX             __fprintf_chk|255-247-72-234
6526|code|B               loc_1228|83-228
6528|code|CMP             R6, #1|1-46
6530|code|BLE.W           loc_157E|127-247-252-173
6534|code|LDR             R0, =(stderr_ptr - 0x12F18)|11-72
6536|code|ADD.W           R3, R11, #1|11-241-1-3
6540|code|LDR             R2, =(aNoProgressIndi - 0x1998); "No progress indication found, iteration"...|63-74
6542|code|MOVS            R1, #1|1-33
6544|code|LDR.W           R0, [R10,R0]; stderr|90-248-0-0
6548|code|ADD             R2, PC; "No progress indication found, iteration"...|122-68
6550|code|LDR             R0, [R0]|0-104
6552|code|BLX             __fprintf_chk|255-247-56-234
6556|code|B               loc_1530|200-229
6558|data|ALIGN 0x10|0-191
6560|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xEF0|40-32-1-0
6564|data|DCD __stack_chk_guard_ptr - 0x12F18|192-0-0-0
6568|data|DCD aAbcCefhiIopQtV - 0xF02; "ABc:CeFhi:IOp:QT:vVw"|26-13-0-0
6572|data|DCD off_13008 - 0xF04; "ause"|4-33-1-0
6576|data|DCD optarg_ptr - 0x12F18|228-0-0-0
6580|data|DCD stderr_ptr - 0x12F18|200-0-0-0
6584|data|DCD aBadArgumentToI - 0xFE8; "bad argument to '--ipl', expect 1 to 65"...|100-19-0-0
6588|data|DCD aBadArgumentToC - 0x1028; "bad argument to '--count', expect 1 to "...|12-12-0-0
6592|data|DCD aSgSanitizeVers - 0x1046; "sg_sanitize: version: %s\n"|94-19-0-0
6596|data|DCD a09420140516 - 0x1048; "0.94 20140516"|120-19-0-0
6600|data|DCD aBadArgumentToT - 0x108E; "bad argument to '--test', expect 0 to 3"...|234-18-0-0
6604|data|DCD aUsageSgSanitiz - 0x1100; "Usage: sg_sanitize [--ause] [--block] ["...|96-11-0-0
6608|data|DCD aUnrecognisedOp - 0x111C; "unrecognised option code 0x%x ??\n"|180-18-0-0
6612|data|DCD aUsageSgSanitiz - 0x112C; "Usage: sg_sanitize [--ause] [--block] ["...|52-11-0-0
6616|data|DCD optind_ptr - 0x12F18|196-0-0-0
6620|data|DCD aMissingDeviceN - 0x1158; "missing device name!\n"|156-18-0-0
6624|data|DCD aUsageSgSanitiz - 0x1168; "Usage: sg_sanitize [--ause] [--block] ["...|248-10-0-0
6628|data|DCD aSDoesnTRespond - 0x1224; "%s doesn't respond to a SCSI INQUIRY\n"|92-19-0-0
6632|data|DCD aUnexpectedExtr - 0x1250; "Unexpected extra argument: %s\n"|188-17-0-0
6636|data|DCD aUsageSgSanitiz - 0x127E; "Usage: sg_sanitize [--ause] [--block] ["...|226-9-0-0
6640|data|DCD aOneAndOnlyOneO - 0x1298; "one and only one of '--block', '--crypt"...|148-17-0-0
6644|data|DCD aSgSanitizeOpen - 0x12BC; "sg_sanitize: open error: %s: %s\n"|160-18-0-0
6648|data|DCD aPatternFileLen - 0x130E; "pattern file length exceeds 65535 bytes"...|198-17-0-0
6652|data|DCD a8s16s4sPeriphe - 0x1336; "    %.8s  %.16s  %.4s   peripheral_type"...|114-18-0-0
6656|data|DCD a02x - 0x13E2; "%02x "|74-19-0-0
6660|data|DCD aSanitizeCmd - 0x13E4; "    Sanitize cmd: "|52-19-0-0
6664|data|DCD aParameterListC - 0x1424; "    Parameter list contents:\n"|16-19-0-0
6668|data|DCD aSanitize - 0x1484; "Sanitize"|236-18-0-0
6672|data|DCD aProgressIndica - 0x14C6; "Progress indication: %d%% done\n"|30-20-0-0
6676|data|DCD aParameterDataI - 0x14CE; "Parameter data in hex\n"|210-19-0-0
6680|data|DCD aBadFieldInRequ - 0x14D6; "bad field in Request Sense cdb\n"|30-19-0-0
6684|data|DCD aDescriptorType - 0x14DE; "Descriptor type sense may not be suppor"...|54-19-0-0
6688|data|DCD aCloseErrorS - 0x1560; "close error: %s\n"|164-19-0-0
6692|data|DCD aTriedToReadDBy - 0x15E6; "tried to read %d bytes from %s, got %d "...|86-19-0-0
6696|data|DCD aSoPadWith0x0By - 0x15FA; "  so pad with 0x0 bytes and continue\n"|114-19-0-0
6700|data|DCD aSanitizeFailed - 0x1658; "Sanitize failed: %s\n"|92-17-0-0
6704|data|DCD aOverwriteRequi - 0x166E; "'--overwrite' requires '--ipl=LEN' opti"...|170-14-0-0
6708|data|DCD aPatternFileUna - 0x16A2; "pattern file: unable to stat(%s): %s\n"|10-14-0-0
6712|data|DCD aAllDataOnSWill - 0x16DA; "    ALL data on %s will be DESTROYED\n"|162-15-0-0
6716|data|DCD aPressControlCT - 0x16DC; "        Press control-C to abort"|200-15-0-0
6720|data|DCD aASanitizeWillC - 0x16DE; "\nA SANITIZE will commence in 15 second"...|118-15-0-0
6724|data|DCD aASanitizeWillC_0 - 0x16FC; "\nA SANITIZE will commence in 10 second"...|204-15-0-0
6728|data|DCD aASanitizeWillC_1 - 0x171A; "\nA SANITIZE will commence in 5 seconds"|214-15-0-0
6732|data|DCD aOverwriteRequi_0 - 0x1744; "'--overwrite' requires '--pattern=PF' o"...|56-13-0-0
6736|data|DCD aTriedToReadDBy - 0x17E0; "tried to read %d bytes from %s, got %d "...|92-17-0-0
6740|data|DCD aSoPadWith0x0By - 0x17F6; "  so pad with 0x0 bytes and continue\n"|118-17-0-0
6744|data|DCD aSgSanitizeCoul - 0x181C; "sg_sanitize: could not open %s for read"...|12-14-0-0
6748|data|DCD aSgSetBinaryMod_0 - 0x1860; "sg_set_binary_mode"|180-13-0-0
6752|data|DCD aSgSanitizeCoul_0 - 0x1874; "sg_sanitize: couldn't read from %s"|164-16-0-0
6756|data|DCD aCloseErrorS - 0x189A; "close error: %s\n"|106-16-0-0
6760|data|DCD aMediumOrHardwa - 0x18B4; "Medium or hardware error starting at lb"...|200-14-0-0
6764|data|DCD sg_warnings_strm_ptr - 0x12F18|212-0-0-0
6768|data|DCD aSanitizeOutOfM - 0x18E8; "Sanitize: out of memory\n"|108-14-0-0
6772|data|DCD aSgSanitizeCoul_0 - 0x1904; "sg_sanitize: couldn't read from %s"|20-16-0-0
6776|data|DCD aSgSetBinaryMod_0 - 0x1918; "sg_set_binary_mode"|252-12-0-0
6780|data|DCD aRequestSenseS - 0x1938; "Request Sense: %s\n"|36-15-0-0
6784|data|DCD aTryTheVOptionF - 0x194E; "    try the '-v' option for more inform"...|34-15-0-0
6788|data|DCD aRequestSenseCo - 0x1962; "Request Sense command not supported\n"|106-14-0-0
6792|data|DCD aUnableToAlloca - 0x197A; "unable to allocate %d bytes of memory w"...|98-12-0-0
6796|data|DCD aNoProgressIndi - 0x1998; "No progress indication found, iteration"...|32-15-0-0
6800|code|MOV.W           R11, #0|79-240-0-11
6804|code|MOV.W           LR, #0|79-240-0-14
6808|code|POP             {R1}; argc|2-188
6810|code|MOV             R2, SP; ubp_av|106-70
6812|code|PUSH            {R2}; stack_end|4-180
6814|code|PUSH            {R0}; rtld_fini|1-180
6816|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1AC8)|223-248-36-160
6820|code|ADR             R3, off_1AC8|8-163
6822|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
6824|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x12F18)|223-248-32-192
6828|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
6832|code|PUSH.W          {R12}; fini|77-248-4-205
6836|code|LDR             R3, =(__libc_csu_init_ptr - 0x12F18)|6-75
6838|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
6842|code|LDR             R0, =(main_ptr - 0x12F18)|6-72
6844|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
6848|code|BLX             __libc_start_main|255-247-110-233
6852|code|BLX             abort|255-247-234-233
6856|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1AC8|80-20-1-0
6860|data|DCD __libc_csu_fini_ptr - 0x12F18|180-0-0-0
6864|data|DCD __libc_csu_init_ptr - 0x12F18|208-0-0-0
6868|data|DCD main_ptr - 0x12F18|216-0-0-0
6872|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1AE8)|20-48-159-229
6876|code|LDR             R2, =(__gmon_start___ptr_0 - 0x12F18)|20-32-159-229
6880|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
6884|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
6888|code|CMP             R2, #0|0-0-82-227
6892|code|BXEQ            LR|30-255-47-1
6896|code|B               __gmon_start__|173-252-255-234
6900|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1AE8|48-20-1-0
6904|data|DCD __gmon_start___ptr_0 - 0x12F18|204-0-0-0
6908|code|LDR             R3, =(__bss_start__ - 0x1B04)|7-75
6910|code|LDR             R0, =(__bss_start__ - 0x1B08)|8-72
6912|code|ADD             R3, PC; __bss_start__|123-68
6914|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1B0E)|8-74
6916|code|ADD             R0, PC; __bss_start__|120-68
6918|code|ADDS            R3, #3|3-51
6920|code|SUBS            R3, R3, R0|27-26
6922|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
6924|code|CMP             R3, #6|6-43
6926|code|BLS             locret_1B18|3-217
6928|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x12F18)|5-75
6930|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
6932|code|CBZ             R3, locret_1B18|3-177
6934|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
6936|code|BX              LR|112-71
6938|data|ALIGN 4|0-191
6940|data|DCD __bss_start__ - 0x1B04|20-22-1-0
6944|data|DCD __bss_start__ - 0x1B08|16-22-1-0
6948|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1B0E|10-20-1-0
6952|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x12F18|188-0-0-0
6956|code|LDR             R1, =(__bss_start__ - 0x1B34)|8-73
6958|code|LDR             R0, =(__bss_start__ - 0x1B38)|9-72
6960|code|ADD             R1, PC; __bss_start__|121-68
6962|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1B3C)|9-75
6964|code|ADD             R0, PC; __bss_start__|120-68
6966|code|SUBS            R1, R1, R0|9-26
6968|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
6970|code|ASRS            R1, R1, #2|137-16
6972|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
6976|code|ASRS            R1, R1, #1|73-16
6978|code|BEQ             locret_1B4C|3-208
6980|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x12F18)|5-74
6982|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
6984|code|CBZ             R3, locret_1B4C|3-177
6986|code|BX              R3; _ITM_registerTMCloneTable|24-71
6988|code|BX              LR|112-71
6990|data|ALIGN 0x10|0-191
6992|data|DCD __bss_start__ - 0x1B34|228-21-1-0
6996|data|DCD __bss_start__ - 0x1B38|224-21-1-0
7000|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1B3C|220-19-1-0
7004|data|DCD _ITM_registerTMCloneTable_ptr - 0x12F18|224-0-0-0
7008|code|PUSH            {R3,LR}|8-181
7010|code|LDR             R3, =(__bss_start__ - 0x1B6A)|10-75
7012|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1B6C)|10-74
7014|code|ADD             R3, PC; __bss_start__|123-68
7016|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
7018|code|LDRB            R3, [R3]|27-120
7020|code|CBNZ            R3, locret_1B8A|107-185
7022|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x12F18)|9-75
7024|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
7026|code|CBZ             R3, loc_1B7E|35-177
7028|code|LDR             R3, =(off_13004 - 0x1B7A)|8-75
7030|code|ADD             R3, PC; off_13004|123-68
7032|code|LDR             R0, [R3]; off_13004 ; void *|24-104
7034|code|BLX             __cxa_finalize|255-247-196-232
7038|code|BL              sub_1AFC|255-247-189-255
7042|code|LDR             R3, =(__bss_start__ - 0x1B8A)|6-75
7044|code|MOVS            R2, #1|1-34
7046|code|ADD             R3, PC; __bss_start__|123-68
7048|code|STRB            R2, [R3]|26-112
7050|code|POP             {R3,PC}|8-189
7052|data|DCD __bss_start__ - 0x1B6A|174-21-1-0
7056|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1B6C|172-19-1-0
7060|data|DCD __cxa_finalize_ptr_0 - 0x12F18|184-0-0-0
7064|data|DCD off_13004 - 0x1B7A|138-20-1-0
7068|data|DCD __bss_start__ - 0x1B8A|142-21-1-0
7072|code|LDR             R0, =(dword_12E0C - 0x1BA8)|7-72
7074|code|PUSH            {R3,LR}|8-181
7076|code|ADD             R0, PC; dword_12E0C|120-68
7078|code|LDR             R2, [R0]|2-104
7080|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1BAE)|6-75
7082|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
7084|code|CBNZ            R2, loc_1BB4|18-185
7086|code|POP.W           {R3,LR}|189-232-8-64
7090|code|B               sub_1B2C|187-231
7092|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x12F18)|4-74
7094|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
7096|code|CMP             R3, #0|0-43
7098|code|BEQ             loc_1BAE|248-208
7100|code|BLX             R3; _Jv_RegisterClasses|152-71
7102|code|B               loc_1BAE|246-231
7104|data|DCD dword_12E0C - 0x1BA8|100-18-1-0
7108|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1BAE|106-19-1-0
7112|data|DCD _Jv_RegisterClasses_ptr - 0x12F18|220-0-0-0
7116|code|PUSH.W          {R3-R9,LR}|45-233-248-67
7120|code|MOV             R7, R0|7-70
7122|code|LDR             R6, =(off_12E08 - 0x1BDE)|12-78
7124|code|MOV             R8, R1|136-70
7126|code|LDR             R5, =(off_12E04 - 0x1BE4)|12-77
7128|code|MOV             R9, R2|145-70
7130|code|ADD             R6, PC; off_12E08|126-68
7132|code|BLX             .init_proc|255-247-112-232
7136|code|ADD             R5, PC; off_12E04|125-68
7138|code|SUBS            R6, R6, R5|118-27
7140|code|ASRS            R6, R6, #2|182-16
7142|code|BEQ             locret_1BFE|10-208
7144|code|SUBS            R5, #4|4-61
7146|code|MOVS            R4, #0|0-36
7148|code|ADDS            R4, #1|1-52
7150|code|LDR.W           R3, [R5,#4]!|85-248-4-63
7154|code|MOV             R0, R7|56-70
7156|code|MOV             R1, R8|65-70
7158|code|MOV             R2, R9|74-70
7160|code|BLX             R3|152-71
7162|code|CMP             R4, R6|180-66
7164|code|BNE             loc_1BEC|246-209
7166|code|POP.W           {R3-R9,PC}|189-232-248-131
7170|data|ALIGN 4|0-191
7172|data|DCD off_12E08 - 0x1BDE|42-18-1-0
7176|data|DCD off_12E04 - 0x1BE4|32-18-1-0
7180|code|BX              LR|112-71
7182|data|ALIGN 0x10|0-191
7184|code|PUSH            {R3,LR}; _fini|8-64-45-233
7188|code|POP             {R3,PC}|8-128-189-232
10780|data|ALIGN 0x10|0-0-0-0
77316|data|DCD sub_1BA0+1|161-27-0-0
77320|data|DCD sub_1B60+1|97-27-0-0
77324|data|DCD 0|0-0-0-0
77328|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsgutils2.so.2|1-0-0-0-1-0-0-0
77336|data|Elf32_Dyn <1, <0x1F3>>; DT_NEEDED libc.so.6|1-0-0-0-243-1-0-0
77344|data|Elf32_Dyn <1, <0x2DF>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-223-2-0-0
77352|data|Elf32_Dyn <0xC, <0xCC0>>; DT_INIT|12-0-0-0-192-12-0-0
77360|data|Elf32_Dyn <0xD, <0x1C10>>; DT_FINI|13-0-0-0-16-28-0-0
77368|data|Elf32_Dyn <0x19, <0x12E04>>; DT_INIT_ARRAY|25-0-0-0-4-46-1-0
77376|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
77384|data|Elf32_Dyn <0x1A, <0x12E08>>; DT_FINI_ARRAY|26-0-0-0-8-46-1-0
77392|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
77400|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
77408|data|Elf32_Dyn <5, <0x634>>; DT_STRTAB|5-0-0-0-52-6-0-0
77416|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
77424|data|Elf32_Dyn <0xA, <0x376>>; DT_STRSZ|10-0-0-0-118-3-0-0
77432|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
77440|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
77448|data|Elf32_Dyn <3, <0x12F18>>; DT_PLTGOT|3-0-0-0-24-47-1-0
77456|data|Elf32_Dyn <2, <0x150>>; DT_PLTRELSZ|2-0-0-0-80-1-0-0
77464|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
77472|data|Elf32_Dyn <0x17, <0xB70>>; DT_JMPREL|23-0-0-0-112-11-0-0
77480|data|Elf32_Dyn <0x11, <0xA70>>; DT_REL|17-0-0-0-112-10-0-0
77488|data|Elf32_Dyn <0x12, <0x100>>; DT_RELSZ|18-0-0-0-0-1-0-0
77496|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
77504|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
77512|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
77520|data|Elf32_Dyn <0x6FFFFFFE, <0xA30>>; DT_VERNEED|254-255-255-111-48-10-0-0
77528|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
77536|data|Elf32_Dyn <0x6FFFFFF0, <0x9AA>>; DT_VERSYM|240-255-255-111-170-9-0-0
77544|data|Elf32_Dyn <0x6FFFFFFA, <0x16>>; DT_RELCOUNT|250-255-255-111-22-0-0-0
77552|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
77592|data|DCD stru_12E10|16-46-1-0
77596|data|DCD 0|0-0-0-0
77600|data|DCD dword_0|0-0-0-0
77604|data|DCD __imp_calloc|32-49-1-0
77608|data|DCD __imp_sg_simple_inquiry|36-49-1-0
77612|data|DCD __imp_sg_set_binary_mode|40-49-1-0
77616|data|DCD __imp___cxa_finalize|44-49-1-0
77620|data|DCD __imp_set_scsi_pt_data_out|48-49-1-0
77624|data|DCD __imp_read|52-49-1-0
77628|data|DCD __imp_free|56-49-1-0
77632|data|DCD __imp_construct_scsi_pt_obj|60-49-1-0
77636|data|DCD __imp_sg_cmds_close_device|68-49-1-0
77640|data|DCD __imp_sleep|72-49-1-0
77644|data|DCD __imp___stack_chk_fail|80-49-1-0
77648|data|DCD __imp_perror|84-49-1-0
77652|data|DCD __imp_fwrite|92-49-1-0
77656|data|DCD __imp_dStrHexErr|96-49-1-0
77660|data|DCD __imp_open64|100-49-1-0
77664|data|DCD __imp_puts|104-49-1-0
77668|data|DCD __imp___libc_start_main|108-49-1-0
77672|data|DCD __imp___gmon_start__|220-49-1-0
77676|data|DCD __imp_getopt_long|112-49-1-0
77680|data|DCD __imp_sg_get_sense_progress_fld|116-49-1-0
77684|data|DCD __imp_do_scsi_pt|120-49-1-0
77688|data|DCD __imp___errno_location|124-49-1-0
77692|data|DCD __imp_destruct_scsi_pt_obj|128-49-1-0
77696|data|DCD __imp_memset|132-49-1-0
77700|data|DCD __imp___printf_chk|136-49-1-0
77704|data|DCD __imp___fprintf_chk|144-49-1-0
77708|data|DCD __imp_sg_ll_request_sense|148-49-1-0
77712|data|DCD __imp_set_scsi_pt_sense|152-49-1-0
77716|data|DCD __imp_fputc|156-49-1-0
77720|data|DCD __imp_safe_strerror|160-49-1-0
77724|data|DCD __imp_get_scsi_pt_sense_len|164-49-1-0
77728|data|DCD __imp_sg_cmds_process_resp|168-49-1-0
77732|data|DCD __imp_sg_get_category_sense_str|172-49-1-0
77736|data|DCD __imp_sg_get_num|176-49-1-0
77740|data|DCD __imp_sg_get_pdt_str|180-49-1-0
77744|data|DCD __imp_sg_cmds_open_device|184-49-1-0
77748|data|DCD __imp___xstat64|192-49-1-0
77752|data|DCD __imp_abort|196-49-1-0
77756|data|DCD __imp_close|200-49-1-0
77760|data|DCD __imp___snprintf_chk|204-49-1-0
77764|data|DCD __imp_sg_get_sense_info_fld|208-49-1-0
77768|data|DCD __imp_set_scsi_pt_cdb|212-49-1-0
77772|data|DCD __libc_csu_fini+1|13-28-0-0
77776|data|DCD __imp___cxa_finalize|44-49-1-0
77780|data|DCD _ITM_deregisterTMCloneTable|216-49-1-0
77784|data|DCD __stack_chk_guard|64-49-1-0
77788|data|DCD optind|76-49-1-0
77792|data|DCD stderr|88-49-1-0
77796|data|DCD __imp___gmon_start__|220-49-1-0
77800|data|DCD __libc_csu_init+1|205-27-0-0
77804|data|DCD sg_warnings_strm|140-49-1-0
77808|data|DCD main+1|217-14-0-0
77812|data|DCD _Jv_RegisterClasses|224-49-1-0
77816|data|DCD _ITM_registerTMCloneTable|228-49-1-0
77820|data|DCD optarg|188-49-1-0
78104|data|% 1; Alternative name is '__bss_start'|255
